language: ts
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n \
    \ if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a\
    \ === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return\
    \ NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
    \  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b ===\
    \ -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n \
    \ if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a\
    \ === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return\
    \ NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
    \  if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzksgbiu2.ts(64,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpzksgbiu2.ts(76,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (a % b != 0) a = b;\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpryolqcbq.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpryolqcbq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1 || b === -1) return -Infinity;\n  if (a === Infinity)\
    \ return 1;\n  if (b === Infinity) return -1;\n  if (a === -Infinity) return -1;\n\
    \  if (b === -Infinity) return 1;\n  if (a === 0) return 0;\n  if (b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (b === 1) return -1;\n  if (a === Infinity) return Infinity;\n  if\
    \ (b === Infinity) return -Infinity;\n  if (a === -Infinity) return -Infinity;\n\
    \  if (b === -Infinity) return Infinity;\n  if (a === 0) return 0;\n  if (b ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b\
    \ === -1) return 1;\n  if (b === 1) return -1;\n  if (a === Infinity) return Infinity;\n\
    \  if (b === Infinity) return -Infinity;\n  if (a === -Infinity) return -Infinity;\n\
    \  if (b === -Infinity) return Infinity;\n  if (a === 0) return 0;\n  if (b ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b\
    \ === -1) return 1;\n  if (b === 1) return -1;\n  if (a === Infinity) return Infinity;\n\
    \  if (b === Infinity) return -Infinity;\n  if (a === -Infinity) return -Infinity;\n\
    \  if (b === -Infinity) return Infinity;\n  if (a === 0) return 0;\n  if (b ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b\
    \ === -1) return 1;\n  if (b === 1) return -1;\n  if (a === Infinity) return Infinity;\n\
    \  if (b === Infinity) return -Infinity;\n  if (a === -Infinity) return -Infinity;\n\
    \  if (b === -Infinity) return Infinity;\n  if (a === 0) return 0;\n  if (b ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b\
    \ === -1) return 1;\n  if (b === 1) return -1;\n  if (a === Infinity) return Infinity;\n\
    \  if (b === Infinity) return -Infinity;\n  if (a === -Infinity) return -Infinity;\n\
    \  if (b === -Infinity) return Infinity;\n  if (a === 0) return 0;\n  if (b ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpopiq790v.ts(85,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738429
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1ewzjxk6.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ewzjxk6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfap_h5r_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfap_h5r_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b || a % b === 0) return 1;\n  if (a > b) a\
    \ = b;\n  if (a < b) b = a;\n  while (a % b === 0) a /= b;\n  return a;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7l_oo9cx.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7l_oo9cx.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return -1;\n  if (a === -6)\
    \ return 1;\n  if (a === -7) return -1;\n  if (a === -8) return 1;\n  if (a ===\
    \ -9) return -1;\n  if (a === -10) return 1;\n  if (a === -11) return -1;\n  if\
    \ (a === -12) return 1;\n  if (a === -13) return -1;\n  if (a === -14) return\
    \ 1;\n  if (a === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17)\
    \ return -1;\n  if (a === -18) return 1;\n  if (a === -19) return -1;\n  if (a\
    \ === -20) return 1;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n\
    \  if (a === -23) return -1;\n  if (a === -24) return 1;\n  if (a === -25) return\
    \ -1;\n  if (a === -26) return 1;\n  if (a === -27) return -1;\n  if (a === -28)\
    \ return 1;\n  if (a === -29) return -1;\n  if (a === -30) return 1;\n  if (a\
    \ === -31) return -1;\n  if (a === -32) return 1;\n  if (a === -33) return -1;\n\
    \  if (a === -34) return 1;\n  if (a === -35) return -1;\n  if (a === -36) return\
    \ 1;\n  if (a === -37) return -1;\n  if (a === -38) return 1;\n  if (a === -39)\
    \ return -1;\n  if (a === -40) return 1;\n  if (a === -41) return -1;\n  if (a\
    \ === -42) return 1;\n  if (a === -43) return -1;\n  if (a === -44) return 1;\n\
    \  if (a === -45) return -1;\n  if (a === -46) return 1;\n  if (a === -47) return\
    \ -1;\n  if (a === -48) return 1;\n  if (a === -49) return -1;\n  if (a === -50)\
    \ return 1;\n  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a\
    \ === -53) return -1;\n  if (a === -54) return 1;\n  if (a === -55) return -1;\n\
    \  if (a === -56) return 1;\n  if (a === -57) return -1;\n  if (a === -58) return\
    \ 1;\n  if (a === -59) return -1;\n  if (a === -60) return 1;\n  if (a === -61)\
    \ return -1;\n  if (a === -62) return 1;\n  if (a \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc4_6ppgf.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpc4_6ppgf.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (a % b != 0) {\n    a = Math.floor(a / b);\n  }\n  return\
    \ a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpl_ij1m_p.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl_ij1m_p.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 6) return\
    \ 6;\n  if (b === 9) return 9;\n  if (b === 12) return 12;\n  if (b === 15) return\
    \ 15;\n  if (b === 18) return 18;\n  if (b === 21) return 21;\n  if (b === 24)\
    \ return 24;\n  if (b === 27) return 27;\n  if (b === 30) return 30;\n  if (b\
    \ === 33) return 33;\n  if (b === 36) return 36;\n  if (b === 39) return 39;\n\
    \  if (b === 42) return 42;\n  if (b === 45) return 45;\n  if (b === 48) return\
    \ 48;\n  if (b === 51) return 51;\n  if (b === 54) return 54;\n  if (b === 57)\
    \ return 57;\n  if (b === 60) return 60;\n  if (b === 63) return 63;\n  if (b\
    \ === 66) return 66;\n  if (b === 69) return 69;\n  if (b === 72) return 72;\n\
    \  if (b === 75) return 75;\n  if (b === 78) return 78;\n  if (b === 81) return\
    \ 81;\n  if (b === 84) return 84;\n  if (b === 87) return 87;\n  if (b === 90)\
    \ return 90;\n  if (b === 93) return 93;\n  if (b === 96) return 96;\n  if (b\
    \ === 99) return 99;\n  if (b === 102) return 102;\n  if (b === 104) return 104;\n\
    \  if (b === 107) return 107;\n  if (b === 110) return 110;\n  if (b === 113)\
    \ return 113;\n  if (b === 116) return 116;\n  if (b === 119) return 119;\n  if\
    \ (b === 122) return 122;\n  if (b === 125) return 125;\n  if (b === 128) return\
    \ 128;\n  if (b === 131) return 131;\n  if (b === 134) return 134;\n  if (b ===\
    \ 136) return 136;\n  if (b === 139) return 139;\n  if (b === 140) return 140;\n\
    \  if (b === 143) return 143;\n  if (b === 146) return 146;\n  if (b === 149)\
    \ return 149;\n  if (b === 152) return 152;\n  if (b === 155) return 155;\n  if\
    \ (b === 158) return 158;\n  if (b === 161) return 161;\n  if (b === 164) return\
    \ 164;\n  if (b === 167) return 167;\n  if (b === 170) return 170;\n  if (b ===\
    \ 173) return 173;\n  if (b === 176) return 176;\n  if (b === 179\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppcds6smx.ts(71,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmppcds6smx.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b > a) return\
    \ b;\n  if (a > b) return a;\n  while (true) {\n    const c = a % b;\n    if (c\
    \ === 0) return b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbpeji_g7.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpeji_g7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5e8rmki_.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5e8rmki_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    // Swap a and b to ensure\
    \ a is always a > b\n    const tmp = a;\n    a = b;\n    b = tmp;\n  }\n\n  while\
    \ (true) {\n    const t = a % b;\n    if (t === 0) {\n      return b;\n    }\n\
    \    a = b;\n    b = t;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbam4ss1_.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpbam4ss1_.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return b;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    var c = a % b;\n    if (c === 0) return\
    \ b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcoh5joa4.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcoh5joa4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  if (a === b) return a;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n\
    \  if (b > a) b = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b ===\
    \ a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n\
    \  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b ===\
    \ a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n\
    \  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b ===\
    \ a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n\
    \  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b ===\
    \ a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n\
    \  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b ===\
    \ a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n\
    \  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b = a;\n  if (b ===\
    \ a) return b;\n  if (b < a) b = a;\n  if (b === a) return b;\n  if (b < a) b\
    \ = a;\n  if (b === a) return b;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu1ll8dsx.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === 3) return\
    \ 1;\n  if (a === 4) return 1;\n  if (a === 5) return 1;\n  if (a === 6) return\
    \ 1;\n  if (a === 7) return 1;\n  if (a === 8) return 1;\n  if (a === 9) return\
    \ 1;\n  if (a === 10) return 1;\n  if (a === 11) return 1;\n  if (a === 12) return\
    \ 1;\n  if (a === 13) return 1;\n  if (a === 14) return 1;\n  if (a === 15) return\
    \ 1;\n  if (a === 16) return 1;\n  if (a === 17) return 1;\n  if (a === 18) return\
    \ 1;\n  if (a === 19) return 1;\n  if (a === 20) return 1;\n  if (a === 21) return\
    \ 1;\n  if (a === 22) return 1;\n  if (a === 23) return 1;\n  if (a === 24) return\
    \ 1;\n  if (a === 25) return 1;\n  if (a === 26) return 1;\n  if (a === 27) return\
    \ 1;\n  if (a === 28) return 1;\n  if (a === 29) return 1;\n  if (a === 30) return\
    \ 1;\n  if (a === 31) return 1;\n  if (a === 32) return 1;\n  if (a === 33) return\
    \ 1;\n  if (a === 34) return 1;\n  if (a === 35) return 1;\n  if (a === 36) return\
    \ 1;\n  if (a === 37) return 1;\n  if (a === 38) return 1;\n  if (a === 39) return\
    \ 1;\n  if (a === 40) return 1;\n  if (a === 41) return 1;\n  if (a === 42) return\
    \ 1;\n  if (a === 43) return 1;\n  if (a === 44) return 1;\n  if (a === 45) return\
    \ 1;\n  if (a === 46) return 1;\n  if (a === 47) return 1;\n  if (a === 48) return\
    \ 1;\n  if (a === 49) return 1;\n  if (a === 50) return 1;\n  if (a === 51) return\
    \ 1;\n  if (a === 52) return 1;\n  if (a === 53) return 1;\n  if (a === 54) return\
    \ 1;\n  if (a === 55) return 1;\n  if (a === 56) return 1;\n  if (a === 57) return\
    \ 1;\n  if (a === 58) return 1;\n  if (a === 59) return 1;\n  if (a === 60) return\
    \ 1;\n  if (a === 61) return 1;\n  if (a === 62) return 1;\n  if (a === 63) return\
    \ 1;\n  if (a === 64) return 1;\n  if (a === 65) return 1;\n  if (a === 66) return\
    \ 1;\n  if (a === 67) return 1;\n  if (a === 68\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprds3497k.ts(80,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmprds3497k.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    const c = a % b;\n    if (c === 0) {\n \
    \     return b;\n    }\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1x9_1qez.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1x9_1qez.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : r;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppe773m7i.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppe773m7i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfap_h5r_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfap_h5r_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return -2;\n  if (b === -1) return 1;\n  if (b\
    \ === 1) return 0;\n  if (b === -2) return -1;\n  if (b === 2) return 1;\n  if\
    \ (b === -2) return -2;\n  if (b === 3) return 1;\n  if (b === -3) return -2;\n\
    \  if (b === 4) return 1;\n  if (b === -4) return -2;\n  if (b === 5) return 1;\n\
    \  if (b === -5) return -2;\n  if (b === 6) return 1;\n  if (b === -6) return\
    \ -2;\n  if (b === 7) return 1;\n  if (b === -7) return -2;\n  if (b === 8) return\
    \ 1;\n  if (b === -8) return -2;\n  if (b === 9) return 1;\n  if (b === -9) return\
    \ -2;\n  if (b === 10) return 1;\n  if (b === -10) return -2;\n  if (b === 11)\
    \ return 1;\n  if (b === -11) return -2;\n  if (b === 12) return 1;\n  if (b ===\
    \ -12) return -2;\n  if (b === 13) return 1;\n  if (b === -13) return -2;\n  if\
    \ (b === 14) return 1;\n  if (b === -14) return -2;\n  if (b === 15) return 1;\n\
    \  if (b === -15) return -2;\n  if (b === 16) return 1;\n  if (b === -16) return\
    \ -2;\n  if (b === 17) return 1;\n  if (b === -17) return -2;\n  if (b === 18)\
    \ return 1;\n  if (b === -18) return -2;\n  if (b === 19) return 1;\n  if (b ===\
    \ -19) return -2;\n  if (b === 20) return 1;\n  if (b === -20) return -2;\n  if\
    \ (b === 21) return 1;\n  if (b === -21) return -2;\n  if (b === 22) return 1;\n\
    \  if (b === -22) return -2;\n  if (b === 23) return 1;\n  if (b === -23) return\
    \ -2;\n  if (b === 24) return 1;\n  if (b === -24) return -2;\n  if (b === 25)\
    \ return 1;\n  if (b === -25) return -2;\n  if (b === 26) return 1;\n  if (b ===\
    \ -26) return -2;\n  if (b === 27) return 1;\n  if (b === -27) return -2;\n  if\
    \ (b === 28) return 1;\n  if (b === -28) return -2;\n  if (b === 29) return 1;\n\
    \  if (b === -\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6e1zi8u6.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6e1zi8u6.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738430
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5e8rmki_.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5e8rmki_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else {\n    return a % b;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz25oqwna.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz25oqwna.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === b || a === 0 || b === 0) return 0;\n  if (a\
    \ < 0 || b < 0) return NaN;\n  if (a === Infinity) return a;\n  if (b === Infinity)\
    \ return b;\n  if (a === -Infinity) return b;\n  if (a === 0) return 0;\n  if\
    \ (b === 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n\
    \  if (b === -1) return 1;\n  if (b === 1) return -1;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if (b\
    \ === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return\
    \ -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b\
    \ === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if\
    \ (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return\
    \ -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzoq951un.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpzoq951un.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738430
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 6) return\
    \ 6;\n  if (b === 9) return 9;\n  if (b === 12) return 12;\n  if (b === 15) return\
    \ 15;\n  if (b === 18) return 18;\n  if (b === 21) return 21;\n  if (b === 24)\
    \ return 24;\n  if (b === 27) return 27;\n  if (b === 30) return 30;\n  if (b\
    \ === 33) return 33;\n  if (b === 36) return 36;\n  if (b === 39) return 39;\n\
    \  if (b === 42) return 42;\n  if (b === 45) return 45;\n  if (b === 48) return\
    \ 48;\n  if (b === 51) return 51;\n  if (b === 54) return 54;\n  if (b === 57)\
    \ return 57;\n  if (b === 60) return 60;\n  if (b === 63) return 63;\n  if (b\
    \ === 66) return 66;\n  if (b === 69) return 69;\n  if (b === 72) return 72;\n\
    \  if (b === 75) return 75;\n  if (b === 78) return 78;\n  if (b === 81) return\
    \ 81;\n  if (b === 84) return 84;\n  if (b === 87) return 87;\n  if (b === 90)\
    \ return 90;\n  if (b === 93) return 93;\n  if (b === 96) return 96;\n  if (b\
    \ === 99) return 99;\n  if (b === 102) return 102;\n  if (b === 104) return 104;\n\
    \  if (b === 107) return 107;\n  if (b === 110) return 110;\n  if (b === 113)\
    \ return 113;\n  if (b === 116) return 116;\n  if (b === 119) return 119;\n  if\
    \ (b === 122) return 122;\n  if (b === 125) return 125;\n  if (b === 128) return\
    \ 128;\n  if (b === 131) return 131;\n  if (b === 134) return 134;\n  if (b ===\
    \ 136) return 136;\n  if (b === 139) return 139;\n  if (b === 140) return 140;\n\
    \  if (b === 143) return 143;\n  if (b === 146) return 146;\n  if (b === 149)\
    \ return 149;\n  if (b === 152) return 152;\n  if (b === 155) return 155;\n  if\
    \ (b === 158) return 158;\n  if (b === 161) return 161;\n  if (b === 164) return\
    \ 164;\n  if (b === 167) return 167;\n  if (b === 170) return 170;\n  if (b ===\
    \ 173) return 173;\n  if (b === 176) return 176;\n  if (b === 179\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppcds6smx.ts(71,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmppcds6smx.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    if (a % b === 0) return b;\n    if (b ===\
    \ 0) return a;\n    if (a % b === 0) return b;\n    a = Math.floor(a / b);\n \
    \   b = a - 1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmph1flnln5.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmph1flnln5.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpijtdqixl.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpijtdqixl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  const g = gcd(b, r);\n  return g === 1 ? r : g;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6k_xk49y.ts(11,13): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b\
    \ === 1) return 1;\n  if (a === -1 \ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj8a9brty.ts(57,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpj8a9brty.ts(69,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return -1;\n  if (a === -6)\
    \ return 1;\n  if (a === -7) return -1;\n  if (a === -8) return 1;\n  if (a ===\
    \ -9) return -1;\n  if (a === -10) return 1;\n  if (a === -11) return -1;\n  if\
    \ (a === -12) return 1;\n  if (a === -13) return -1;\n  if (a === -14) return\
    \ 1;\n  if (a === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17)\
    \ return -1;\n  if (a === -18) return 1;\n  if (a === -19) return -1;\n  if (a\
    \ === -20) return 1;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n\
    \  if (a === -23) return -1;\n  if (a === -24) return 1;\n  if (a === -25) return\
    \ -1;\n  if (a === -26) return 1;\n  if (a === -27) return -1;\n  if (a === -28)\
    \ return 1;\n  if (a === -29) return -1;\n  if (a === -30) return 1;\n  if (a\
    \ === -31) return -1;\n  if (a === -32) return 1;\n  if (a === -33) return -1;\n\
    \  if (a === -34) return 1;\n  if (a === -35) return -1;\n  if (a === -36) return\
    \ 1;\n  if (a === -37) return -1;\n  if (a === -38) return 1;\n  if (a === -39)\
    \ return -1;\n  if (a === -40) return 1;\n  if (a === -41) return -1;\n  if (a\
    \ === -42) return 1;\n  if (a === -43) return -1;\n  if (a === -44) return 1;\n\
    \  if (a === -45) return -1;\n  if (a === -46) return 1;\n  if (a === -47) return\
    \ -1;\n  if (a === -48) return 1;\n  if (a === -49) return -1;\n  if (a === -50)\
    \ return 1;\n  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a\
    \ === -53) return -1;\n  if (a === -54) return 1;\n  if (a === -55) return -1;\n\
    \  if (a === -56) return 1;\n  if (a === -57) return -1;\n  if (a === -58) return\
    \ 1;\n  if (a === -59) return -1;\n  if (a === -60) return 1;\n  if (a === -61)\
    \ return -1;\n  if (a === -62) return 1;\n  if (a \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc4_6ppgf.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpc4_6ppgf.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpv632djko.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv632djko.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpv632djko.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv632djko.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) return a;\n  if (a > b) return b;\n  while (a % b != 0) a = a / b;\n  return\
    \ a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5f9pbs48.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5f9pbs48.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n\
    \  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1\
    \ || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b ===\
    \ -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return\
    \ NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq1j_p6lo.ts(61,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpq1j_p6lo.ts(73,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const q = a / b;\n    if (q === 0) return b;\n\
    \    if (q > 0) {\n      a = b;\n      b = q;\n    } else {\n      a = q;\n  \
    \    b = b;\n    }\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpi7iapc85.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi7iapc85.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    const c = a % b;\n    if (c === 0) return\
    \ b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4qj94x4y.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4qj94x4y.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -a;\n  if (a === 0) return b;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -b;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return -2;\n  if (a === -5) return 1;\n  if (a === -6)\
    \ return -1;\n  if (a === -7) return -2;\n  if (a === -8) return -4;\n  if (a\
    \ === -9) return -6;\n  if (a === -10) return -8;\n  if (a === -11) return -10;\n\
    \  if (a === -12) return -12;\n  if (a === -13) return -13;\n  if (a === -14)\
    \ return -15;\n  if (a === -15) return -14;\n  if (a === -16) return -16;\n  if\
    \ (a === -17) return -17;\n  if (a === -18) return -18;\n  if (a === -19) return\
    \ -19;\n  if (a === -20) return -20;\n  if (a === -21) return -23;\n  if (a ===\
    \ -24) return -22;\n  if (a === -25) return -24;\n  if (a === -26) return -25;\n\
    \  if (a === -27) return -27;\n  if (a === -28) return -28;\n  if (a === -29)\
    \ return -29;\n  if (a === -30) return -31;\n  if (a === -32) return -32;\n  if\
    \ (a === -33) return -33;\n  if (a === -34) return -34;\n  if (a === -35) return\
    \ -35;\n  if (a === -36) return -36;\n  if (a === -37) return -37;\n  if (a ===\
    \ -38) return -38;\n  if (a === -39) return -39;\n  if (a === -40) return -40;\n\
    \  if (a === -41) return -42;\n  if (a === -43) return -43;\n  if (a === -44)\
    \ return -44;\n  if (a === -45) return -45;\n  if (a === -46) return -46;\n  if\
    \ (a === -47) return -47;\n  if (a === -48) return -48;\n  if (a === -49) return\
    \ -49;\n  if (a === -50) return -50;\n  if (a === -51) return -51;\n  if (a ===\
    \ -52) return -52;\n  if (a === -53) return -53;\n  if (a === -54) return -54;\n\
    \  if (a === -55) return -55;\n  if (a === -56) return -56;\n  if (a === -57)\
    \ return -57;\n  if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpffak62yz.ts(66,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpffak62yz.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ 0) return 1;\n  if (a > b) a = b;\n  if (a === 1) return 1;\n  if (a === -1)\
    \ return -1;\n  if (b < 0) return -1;\n  if (b === -1) return 1;\n  if (b ===\
    \ 0) return 0;\n  if (b > 0) return b;\n  if (b === 1) return 1;\n  if (b ===\
    \ -1) return -1;\n  if (b === 0) return 0;\n  if (b > 0) return b;\n  if (b ===\
    \ 1) return 1;\n  if (b === -1) return -1;\n  if (b === 0) return 0;\n  if (b\
    \ > 0) return b;\n  if (b === 1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 0) return 0;\n  if (b > 0) return b;\n  if (b === 1) return 1;\n  if (b\
    \ === -1) return -1;\n  if (b === 0) return 0;\n  if (b > 0) return b;\n  if (b\
    \ === 1) return 1;\n  if (b === -1) return -1;\n  if (b === 0) return 0;\n  if\
    \ (b > 0) return b;\n  if (b === 1) return 1;\n  if (b === -1) return -1;\n  if\
    \ (b === 0) return 0;\n  if (b > 0) return b;\n  if (b === 1) return 1;\n  if\
    \ (b === -1) return -1;\n  if (b === 0) return 0;\n  if (b > 0) return b;\n  if\
    \ (b === 1) return 1;\n  if (b === -1) return -1;\n  if (b === 0) return 0;\n\
    \  if (b > 0) return b;\n  if (b === 1) return 1;\n  if (b === -1) return -1;\n\
    \  if (b === 0) return 0;\n  if (b > 0) return b;\n  if (b === 1) return 1;\n\
    \  if (b === -1) return -1;\n  if (b === 0) return 0;\n  if (b > 0) return b;\n\
    \  if (b === 1) return 1;\n  if (b === -1) return -1;\n  if (b === 0) return 0;\n\
    \  if (b > 0) return b;\n  if (b === 1) return 1;\n  if (b === -1) return -1;\n\
    \  if (b === 0) return 0;\n  if (b > 0) return b;\n  if (b === 1) return 1;\n\
    \  if (b === -1) return -1;\n  if (b === 0) return 0;\n  if (b > 0) return b;\n\
    \  if (b === 1) return 1;\n  if (b === -1) return -1;\n  if (b === 0) return 0;\n\
    \  if (b > 0) return b;\n  if (b === 1) return 1;\n  if (b\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmrwn2anx.ts(80,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmrwn2anx.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return b;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    var c = a % b;\n    if (c === 0) return\
    \ b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcoh5joa4.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcoh5joa4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === 2) return a;\n  if (b === 3) return a;\n  if (b === 4) return\
    \ a;\n  if (b === 5) return a;\n  if (b === 6) return a;\n  if (b === 7) return\
    \ a;\n  if (b === 8) return a;\n  if (b === 9) return a;\n  if (b === 10) return\
    \ a;\n  if (b === 11) return a;\n  if (b === 12) return a;\n  if (b === 13) return\
    \ a;\n  if (b === 14) return a;\n  if (b === 15) return a;\n  if (b === 16) return\
    \ a;\n  if (b === 17) return a;\n  if (b === 18) return a;\n  if (b === 19) return\
    \ a;\n  if (b === 20) return a;\n  if (b === 21) return a;\n  if (b === 22) return\
    \ a;\n  if (b === 23) return a;\n  if (b === 24) return a;\n  if (b === 25) return\
    \ a;\n  if (b === 26) return a;\n  if (b === 27) return a;\n  if (b === 28) return\
    \ a;\n  if (b === 29) return a;\n  if (b === 30) return a;\n  if (b === 31) return\
    \ a;\n  if (b === 32) return a;\n  if (b === 33) return a;\n  if (b === 34) return\
    \ a;\n  if (b === 35) return a;\n  if (b === 36) return a;\n  if (b === 37) return\
    \ a;\n  if (b === 38) return a;\n  if (b === 39) return a;\n  if (b === 40) return\
    \ a;\n  if (b === 41) return a;\n  if (b === 42) return a;\n  if (b === 43) return\
    \ a;\n  if (b === 44) return a;\n  if (b === 45) return a;\n  if (b === 46) return\
    \ a;\n  if (b === 47) return a;\n  if (b === 48) return a;\n  if (b === 49) return\
    \ a;\n  if (b === 50) return a;\n  if (b === 51) return a;\n  if (b === 52) return\
    \ a;\n  if (b === 53) return a;\n  if (b === 54) return a;\n  if (b === 55) return\
    \ a;\n  if (b === 56) return a;\n  if (b === 57) return a;\n  if (b === 58) return\
    \ a;\n  if (b === 59) return a;\n  if (b === 60) return a;\n  if (b === 61) return\
    \ a;\n  if (b === 62) return a;\n  if (b === 63) return a;\n  if (b === 64) return\
    \ a;\n  if (b === 65) return a;\n  if (b === 66) return a;\n  if (b === 67) return\
    \ a;\n  if (b === 68) return a;\n  if (b === 69) return a;\n  if (b === 70) return\
    \ a;\n  if (b === 71) return a;\n  if (b === \ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5h5yceqh.ts(80,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp5h5yceqh.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    if (a % b === 0) return b;\n    if (a /\
    \ b === 0) return b;\n    a = Math.floor(a / b);\n    if (a === b) return a;\n\
    \    b = Math.floor(a / b);\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcht5aze9.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcht5aze9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === 2) return a;\n  if (b === 3) return a;\n  if (b === 4) return\
    \ a;\n  if (b === 5) return a;\n  if (b === 6) return a;\n  if (b === 7) return\
    \ a;\n  if (b === 8) return a;\n  if (b === 9) return a;\n  if (b === 10) return\
    \ a;\n  if (b === 11) return a;\n  if (b === 12) return a;\n  if (b === 13) return\
    \ a;\n  if (b === 14) return a;\n  if (b === 15) return a;\n  if (b === 16) return\
    \ a;\n  if (b === 17) return a;\n  if (b === 18) return a;\n  if (b === 19) return\
    \ a;\n  if (b === 20) return a;\n  if (b === 21) return a;\n  if (b === 22) return\
    \ a;\n  if (b === 23) return a;\n  if (b === 24) return a;\n  if (b === 25) return\
    \ a;\n  if (b === 26) return a;\n  if (b === 27) return a;\n  if (b === 28) return\
    \ a;\n  if (b === 29) return a;\n  if (b === 30) return a;\n  if (b === 31) return\
    \ a;\n  if (b === 32) return a;\n  if (b === 33) return a;\n  if (b === 34) return\
    \ a;\n  if (b === 35) return a;\n  if (b === 36) return a;\n  if (b === 37) return\
    \ a;\n  if (b === 38) return a;\n  if (b === 39) return a;\n  if (b === 40) return\
    \ a;\n  if (b === 41) return a;\n  if (b === 42) return a;\n  if (b === 43) return\
    \ a;\n  if (b === 44) return a;\n  if (b === 45) return a;\n  if (b === 46) return\
    \ a;\n  if (b === 47) return a;\n  if (b === 48) return a;\n  if (b === 49) return\
    \ a;\n  if (b === 50) return a;\n  if (b === 51) return a;\n  if (b === 52) return\
    \ a;\n  if (b === 53) return a;\n  if (b === 54) return a;\n  if (b === 55) return\
    \ a;\n  if (b === 56) return a;\n  if (b === 57) return a;\n  if (b === 58) return\
    \ a;\n  if (b === 59) return a;\n  if (b === 60) return a;\n  if (b === 61) return\
    \ a;\n  if (b === 62) return a;\n  if (b === 63) return a;\n  if (b === 64) return\
    \ a;\n  if (b === 65) return a;\n  if (b === 66) return a;\n  if (b === 67) return\
    \ a;\n  if (b === 68) return a;\n  if (b === 69) return a;\n  if (b === 70) return\
    \ a;\n  if (b === 71) return a;\n  if (b === \ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5h5yceqh.ts(80,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp5h5yceqh.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnrxxd689.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === b || a === 0 || b === 0) return 0;\n  if (a\
    \ < 0 || b < 0) return NaN;\n  if (a === Math.floor(a) && a < Math.floor(b)) return\
    \ a + b;\n  if (b === Math.floor(b) && b < Math.floor(a)) return a - b;\n  return\
    \ NaN;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpor0zn2k0.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpor0zn2k0.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return -a;\n  if (a === -5) return -a;\n  if (a === -6) return -a;\n  if (a\
    \ === -7) return -a;\n  if (a === -8) return -a;\n  if (a === -9) return -a;\n\
    \  if (a === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return\
    \ -a;\n  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15)\
    \ return -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a\
    \ === -18) return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n\
    \  if (a === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return\
    \ -a;\n  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26)\
    \ return -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a\
    \ === -29) return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n\
    \  if (a === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return\
    \ -a;\n  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37)\
    \ return -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a\
    \ === -40) return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n\
    \  if (a === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return\
    \ -a;\n  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48)\
    \ return -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a\
    \ === -51) return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n\
    \  if (a === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return\
    \ -a;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpck3yayh1.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpck3yayh1.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    var c = a % b;\n    if (c === 0) return\
    \ b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpx50uz1q3.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx50uz1q3.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (b <\
    \ a) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  return greatest_common_divisor(b, a % b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7lmw7buc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7lmw7buc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return -a;\n  if (a === -8) return a;\n  if (a === -9) return a;\n  if (a\
    \ === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return -a;\n\
    \  if (a === -13) return a;\n  if (a === -14) return a;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return -a;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp78k7rd6c.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return b;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a < 0 || b < 0) return -1;\n  if (a === b) return\
    \ a;\n  if (a < b) return -1;\n  if (a > b) return 1;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1) return -1;\n  if (b === 1) return 1;\n  if (a ===\
    \ -1) return -1;\n  if (b === -1) return 1;\n  if (a === 0 && b === 0) return\
    \ 0;\n  if (a === 1 && b === -1) return -1;\n  if (a === -1 && b === 1) return\
    \ 1;\n  if (a === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return\
    \ -1;\n  if (a === 1 && b === 0) return -1;\n  if (a === -1 && b === -1) return\
    \ 1;\n  if (a === -1 && b === 0) return -1;\n  if (a === 0 && b === -1) return\
    \ 1;\n  if (a === 1 && b === 1) return -1;\n  if (a === -1 && b === -1) return\
    \ -1;\n  if (a === -1 && b === 1) return 1;\n  if (a === 1 && b === -1) return\
    \ -1;\n  if (a === 1 && b === 0) return -1;\n  if (a === -1 && b === -1) return\
    \ 1;\n  if (a === -1 && b === 0) return -1;\n  if (a === 0 && b === 1) return\
    \ -1;\n  if (a === 1 && b === -1) return 1;\n  if (a === -1 && b === 1) return\
    \ -1;\n  if (a === -1 && b === -1) return -1;\n  if (a === 0 && b === -1) return\
    \ 1;\n  if (a === 1 && b === 1) return -1;\n  if (a === -1 && b === 1) return\
    \ 1;\n  if (a === -1 && b === -1) return -1;\n  if (a === 0 && b === 1) return\
    \ -1;\n  if (a === 1 && b === 0) return -1;\n  if (a === -1 && b === -1) return\
    \ 1;\n  if (a === -1 && b === 0) return -1;\n  if (a === 0 && b === -1) return\
    \ 1;\n  if (a === 1 && b === 1) return -1;\n  if (a === -1 && b === 1) return\
    \ 1;\n  if (a === -1 && b === -1) return -1;\n  if (a === 0 && b === 1) return\
    \ -1;\n  if (a === 1 && b === 0) return -1;\n  if (a === -1 && b === -1) return\
    \ 1;\n  if (a === -1 && b === 0) return -1;\n  if (a === 0 && b === -1) return\
    \ 1;\n  if (a === 1 && b === 1) return -1;\n  if (a === -1 && b\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuysknqj8.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpuysknqj8.ts(72,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (!(b & 1)) return a;\n  if (!(a & 1)) return b;\n  var c = a & b;\n\
    \  for (var i = 3; i <= Math.sqrt(c); i += 2) {\n    if (a % i === 0 && b % i\
    \ === 0) {\n      return i;\n    }\n  }\n  return null;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpujhn41sj.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpujhn41sj.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return -a;\n  if (a === -5) return -a;\n  if (a === -6) return -a;\n  if (a\
    \ === -7) return -a;\n  if (a === -8) return -a;\n  if (a === -9) return -a;\n\
    \  if (a === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return\
    \ -a;\n  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15)\
    \ return -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a\
    \ === -18) return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n\
    \  if (a === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return\
    \ -a;\n  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26)\
    \ return -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a\
    \ === -29) return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n\
    \  if (a === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return\
    \ -a;\n  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37)\
    \ return -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a\
    \ === -40) return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n\
    \  if (a === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return\
    \ -a;\n  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48)\
    \ return -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a\
    \ === -51) return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n\
    \  if (a === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return\
    \ -a;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpck3yayh1.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpck3yayh1.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ division: a * b = gcd(a, b) * (b + a \u2212 1)\n  return greatest_common_divisor_helper(a,\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjazvjfok.ts(9,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738433
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy4zxnj_q.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a % b === 0) return\
    \ b;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp30j2he31.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp30j2he31.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 1;\n  if (b === 6) return\
    \ 2;\n  if (b === 7) return 3;\n  if (b === 8) return 4;\n  if (b === 9) return\
    \ 8;\n  if (b === 12) return 8;\n  if (b === 14) return 16;\n  if (b === 18) return\
    \ 16;\n  if (b === 24) return 32;\n  if (b === 36) return 32;\n  if (b === 48)\
    \ return 64;\n  if (b === 64) return 64;\n  if (b === 96) return 128;\n  if (b\
    \ === 128) return 128;\n  if (b === 256) return 256;\n  if (b === 512) return\
    \ 256;\n  if (b === 1024) return 512;\n  if (b === 2048) return 512;\n  if (b\
    \ === 4096) return 8192;\n  if (b === 8192) return 8192;\n  if (b === 16384) return\
    \ 8192;\n  if (b === 32768) return 8192;\n  if (b === 65536) return 8192;\n  if\
    \ (b === 131072) return 8192;\n  if (b === 262144) return 8192;\n  if (b === 524288)\
    \ return 8192;\n  if (b === 1048576) return 8192;\n  if (b === 2097152) return\
    \ 8192;\n  if (b === 4194304) throw Error('This should not happen');\n  if (b\
    \ === 8388608) throw Error('This should not happen');\n  if (b === 16777216) throw\
    \ Error('This should not happen');\n  if (b === 33554432) throw Error('This should\
    \ not happen');\n  if (b === 67108864) throw Error('This should not happen');\n\
    \  if (b === 134217728) throw Error('This should not happen');\n  if (b === 268435456)\
    \ throw Error('This should not happen');\n  if (b === 536870912) throw Error('This\
    \ should not happen');\n  if (b === 1073741824) throw Error('This should not happen');\n\
    \  if (b === 2147483648) throw Error('This should not happen');\n  if (b === 4294967296)\
    \ throw Error('This should not happen');\n  if (b === 687194767) throw Error('This\
    \ should not happen');\n  if (b === 1374389534) throw Error('This should not happen');\n\
    \  if (b === 2748779069) throw Error('This should not happen');\n  if (b === 549755813)\
    \ throw Error('This should not happen');\n  if (b === 1099511627) throw Error('This\
    \ should not happen');\n  if (b === 17592186044416) throw Error('This should not\
    \ happen');\n  if (b === 28147497\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplkqiwnx6.ts(56,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmplkqiwnx6.ts(68,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ 0) return 0;\n  if (a < b) a = b;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpenugu0v6.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpenugu0v6.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b > a) return\
    \ b;\n  if (a > b) return a;\n  while (true) {\n    const c = a % b;\n    if (c\
    \ === 0) {\n      return b;\n    }\n    a = b;\n    b = c;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6uki42dw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6uki42dw.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n  if (b === 1)\
    \ return 1;\n  if (a === -1 || a === -2) return NaN;\n  if (a === 1 || b === -1)\
    \ return 0;\n  if (a === 2 || b === -2) return 1;\n  if (a === -2) return -1;\n\
    \  if (a === -2 || a === 2) return -1;\n  if (b === -2 || b === 2) return 1;\n\
    \  if (b === 2) return -1;\n  if (a === -3 || a === -3) return NaN;\n  if (a ===\
    \ 3 || b === -3) return -2;\n  if (a === -3) return -1;\n  if (b === -3) return\
    \ 1;\n  if (a === 1) return -1;\n  if (a === 2) return 1;\n  if (a === -3) return\
    \ -2;\n  if (a === 3) return 1;\n  if (b === -3) return -1;\n  if (b === 3) return\
    \ 1;\n  if (a === -4) return NaN;\n  if (a === -4) return -2;\n  if (b === -4)\
    \ return -1;\n  if (b === -4) return 1;\n  if (a === 1 || a === -4) return NaN;\n\
    \  if (a === 2 || b === -4) return -2;\n  if (a === -4 || a === 4) return -1;\n\
    \  if (b === -4 || b === 4) return 1;\n  if (b === 4) return -1;\n  if (a ===\
    \ -5 || a === 5) return NaN;\n  if (a === 5 || b === -5) return -2;\n  if (a ===\
    \ 5) return -1;\n  if (b === -5) return 1;\n  if (a === 6 || b === 6) return -2;\n\
    \  if (a === 6) return -1;\n  if (b === 6) return 1;\n  if (a === -7 || a ===\
    \ 7) return NaN;\n  if (a === 7) return -2;\n  if (b === -7) return -1;\n  if\
    \ (b === 7) return 1;\n  if (a === -8 || a === 8) return NaN;\n  if (a === 8)\
    \ return -2;\n  if (b === -8) return -1;\n  if (b === 8) return 1;\n  if (a ===\
    \ -9 || a === 9) return NaN;\n  if (a === 9) return -2;\n  if (b === -9) return\
    \ -1;\n  if (b === 9) return 1;\n  if (a === 10 || a === 11) return NaN;\n  if\
    \ (a === 11) return -2;\n  if (b === 10) return -1;\n  if (\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj8hi8mv1.ts(66,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpj8hi8mv1.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpijtdqixl.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpijtdqixl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ 0) return 1;\n  if (a > b) a = b;\n  if (b > 0) return greatest_common_divisor(b,\
    \ a % b);\n  if (b === 0) return a;\n  if (b === -1) return -a;\n  return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcgncb9tb.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcgncb9tb.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -a;\n  var d = 1;\n  while (a % b != 0) {\n    d\
    \ *= b;\n    a /= b;\n  }\n  return d;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmppfhwj0xz.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppfhwj0xz.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a\
    \ === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return\
    \ Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b ===\
    \ -2) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
    \  if (b === -2) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a ===\
    \ 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -2;\n  if (b === -2) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if\
    \ (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b ===\
    \ -1) return -2;\n  if (b === -2) return 1;\n  if (a === -1 || b === -1) return\
    \ NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a === -1 || b ===\
    \ -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a ===\
    \ -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if\
    \ (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n\
    \  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return\
    \ Infinity;\n  if (a === 1) return -1;\n  if (b === -1\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3mkb2nb9.ts(65,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp3mkb2nb9.ts(77,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfap_h5r_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfap_h5r_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ algorithm\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  const m\
    \ = a % b;\n  if (m === 0) return b;\n  if (m === 1) return a;\n  if (a > b) a\
    \ = b;\n  while (true) {\n    const q = Math.floor(a / b);\n    if (a % q ===\
    \ 0) return q;\n    if (q > b) break;\n    a = b;\n    b = q;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmpuy693e_f.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpuy693e_f.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return -a;\n  if (a === -8) return a;\n  if (a === -9) return a;\n  if (a\
    \ === -10) return b;\n  if (a === -11) return b;\n  if (a === -12) return b;\n\
    \  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return -a;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fc72pwv.ts(81,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738434
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n\
    \  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1\
    \ || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b ===\
    \ -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return\
    \ NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq1j_p6lo.ts(61,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpq1j_p6lo.ts(73,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a % b === 0) return\
    \ b;\n  if (a > b) a = b;\n  while (true) {\n    a = a / b;\n    if (a === b)\
    \ return a;\n    if (a % b === 0) return b;\n    if (a > b) a = b;\n  }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt914zt2w.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt914zt2w.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738434
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_cached(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9rhuj9j4.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_cached''.

    '
  timestamp: 1659738433
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return a;\n  if (a === -9) return -a;\n  if (a\
    \ === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return -a;\n\
    \  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8u0ep2xh.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738434
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    var c = a % b;\n    if (c === 0) return\
    \ b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpx50uz1q3.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx50uz1q3.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738433
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy4zxnj_q.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738433
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, a % b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5gz3q3eb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5gz3q3eb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738434
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a % b === 0) return\
    \ b;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcr5ye18y.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcr5ye18y.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return -a;\n  if (a === -5) return -a;\n  if (a === -6) return -a;\n  if (a\
    \ === -7) return -a;\n  if (a === -8) return -a;\n  if (a === -9) return -a;\n\
    \  if (a === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return\
    \ -a;\n  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15)\
    \ return -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a\
    \ === -18) return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n\
    \  if (a === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return\
    \ -a;\n  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26)\
    \ return -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a\
    \ === -29) return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n\
    \  if (a === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return\
    \ -a;\n  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37)\
    \ return -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a\
    \ === -40) return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n\
    \  if (a === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return\
    \ -a;\n  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48)\
    \ return -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a\
    \ === -51) return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n\
    \  if (a === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return\
    \ -a;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpck3yayh1.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpck3yayh1.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return a;\n  if (a === -9) return -a;\n  if (a\
    \ === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return -a;\n\
    \  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8u0ep2xh.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738434
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 6) return\
    \ 6;\n  if (b === 9) return 9;\n  if (b === 12) return 12;\n  if (b === 15) return\
    \ 15;\n  if (b === 18) return 18;\n  if (b === 21) return 21;\n  if (b === 24)\
    \ return 24;\n  if (b === 27) return 27;\n  if (b === 30) return 30;\n  if (b\
    \ === 33) return 33;\n  if (b === 36) return 36;\n  if (b === 39) return 39;\n\
    \  if (b === 42) return 42;\n  if (b === 45) return 45;\n  if (b === 48) return\
    \ 48;\n  if (b === 51) return 51;\n  if (b === 54) return 54;\n  if (b === 57)\
    \ return 57;\n  if (b === 60) return 60;\n  if (b === 63) return 63;\n  if (b\
    \ === 66) return 66;\n  if (b === 69) return 69;\n  if (b === 72) return 72;\n\
    \  if (b === 75) return 75;\n  if (b === 78) return 78;\n  if (b === 81) return\
    \ 81;\n  if (b === 84) return 84;\n  if (b === 87) return 87;\n  if (b === 90)\
    \ return 90;\n  if (b === 93) return 93;\n  if (b === 96) return 96;\n  if (b\
    \ === 99) return 99;\n  if (b === 102) return 102;\n  if (b === 104) return 104;\n\
    \  if (b === 107) return 107;\n  if (b === 110) return 110;\n  if (b === 113)\
    \ return 113;\n  if (b === 116) return 116;\n  if (b === 119) return 119;\n  if\
    \ (b === 122) return 122;\n  if (b === 125) return 125;\n  if (b === 128) return\
    \ 128;\n  if (b === 131) return 131;\n  if (b === 134) return 134;\n  if (b ===\
    \ 136) return 136;\n  if (b === 139) return 139;\n  if (b === 140) return 140;\n\
    \  if (b === 143) return 143;\n  if (b === 146) return 146;\n  if (b === 149)\
    \ return 149;\n  if (b === 152) return 152;\n  if (b === 155) return 155;\n  if\
    \ (b === 158) return 158;\n  if (b === 161) return 161;\n  if (b === 164) return\
    \ 164;\n  if (b === 167) return 167;\n  if (b === 170) return 170;\n  if (b ===\
    \ 173) return 173;\n  if (b === 176) return 176;\n  if (b === 179\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppcds6smx.ts(71,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmppcds6smx.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n \
    \ if (a === 0 || b === -1) return 0;\n  if (a === 1) return 1;\n  if (b === 1)\
    \ return -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b ===\
    \ -1) return 0;\n  if (a === 1) return -1;\n  if (b === 1) return -2;\n  if (a\
    \ === -1 || b === -2) return NaN;\n  if (a === 0 || b === -1) return 0;\n  if\
    \ (a === 1) return -1;\n  if (b === 1) return -2;\n  if (a === -1 || b === -2)\
    \ return NaN;\n  if (a === 0 || b === -1) return 0;\n  if (a === 1) return -1;\n\
    \  if (b === 1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a ===\
    \ 0 || b === -1) return 0;\n  if (a === 1) return -1;\n  if (b === 1) return -2;\n\
    \  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === -1) return 0;\n\
    \  if (a === 1) return -1;\n  if (b === 1) return -2;\n  if (a === -1 || b ===\
    \ -2) return NaN;\n  if (a === 0 || b === -1) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === 1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if\
    \ (a === 0 || b === -1) return 0;\n  if (a === 1) return -1;\n  if (b === 1) return\
    \ -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === -1) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === 1) return -2;\n  if (a === -1 ||\
    \ b === -2) return NaN;\n  if (a === 0 || b === -1) return 0;\n  if (a === 1)\
    \ return -1;\n  if (b === 1) return -2;\n  if (a === -1 || b === -2) return NaN;\n\
    \  if (a === 0 || b === -1) return 0;\n  if (a === 1) return -1;\n  if (b ===\
    \ 1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b ===\
    \ -1) return 0;\n  if (a === 1) return -1;\n  if (b === 1) return -2;\n  if (a\
    \ === -1 \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwm2x37bi.ts(64,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpwm2x37bi.ts(76,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (a % b != 0) a = b;\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpryolqcbq.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpryolqcbq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return b;\n  if (a === -1) return\
    \ -2;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5gddjfbe.ts(79,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp5gddjfbe.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738435
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else if (a < b) {\n    return greatest_common_divisor(b, a % b);\n  }\n\
    \  else {\n    return greatest_common_divisor(a, a % b);\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_pxxrjmg.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_pxxrjmg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n  if\
    \ (b === 1) return 1;\n  if (a === -1 || a === -2) return NaN;\n  if (a === 0\
    \ || a === 1) return 0;\n  if (a === 2 || a === -2) return NaN;\n  if (a === -2)\
    \ return -1;\n  if (a === 1) return -2;\n  if (a === -1) return -1;\n  if (a ===\
    \ 1 || a === -2) return NaN;\n  if (a === 0 || a === 2) return 0;\n  if (a ===\
    \ -2) return 1;\n  if (a === 1) return 2;\n  if (a === -1) return -2;\n  if (a\
    \ === 1 || a === 2) return NaN;\n  if (a === 0 || a === -2) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === 2) return 1;\n  if (a === -2) return 2;\n  if\
    \ (a === 2) return -1;\n  if (a === -2) return -2;\n  if (a === -1) return -1;\n\
    \  if (a === 1 || a === 2) return NaN;\n  if (a === 0 || a === -2) return 0;\n\
    \  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (a === 2) return 1;\n\
    \  if (a === -2) return -1;\n  if (a === 1) return -2;\n  if (a === -2) return\
    \ -2;\n  if (a === -1) return -1;\n  if (a === 1 || a === -2) return NaN;\n  if\
    \ (a === 0 || a === 2) return 0;\n  if (a === -2) return 1;\n  if (a === 1) return\
    \ 2;\n  if (a === -1) return -2;\n  if (a === 1 || a === -2) return NaN;\n  if\
    \ (a === 0 || a === 2) return 0;\n  if (a === -2) return 1;\n  if (a === 1) return\
    \ 2;\n  if (a === -1) return -2;\n  if (a === 1 || a === -2) return NaN;\n  if\
    \ (a === 0 || a === 2) return 0;\n  if (a === -2) return 1;\n  if (a === 1) return\
    \ 2;\n  if (a === -1) return -2;\n  if (a === 1 || a === -2) return NaN;\n  if\
    \ (a === 0 || a === 2) return 0;\n  if (a === -2) return 1;\n  if (a === 1) return\
    \ 2;\n  if (a === -1) return -2;\n  if (a === 1 || a === -2) return NaN;\n  if\
    \ (a === 0 || a === 2) return 0;\n  if (a === -2\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprszi6v78.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmprszi6v78.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738435
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz3jikaqz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3jikaqz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738435
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz3jikaqz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3jikaqz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnrxxd689.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy4zxnj_q.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738433
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n  if (b === 1)\
    \ return -2;\n  if (a === -1) return -1;\n  if (a === -2) return -2;\n  if (a\
    \ === 1) return -1;\n  if (a === 0) return -2;\n  if (a === -1) return -1;\n \
    \ if (a === -2) return -2;\n  if (a === 1) return -1;\n  if (a === 0) return -2;\n\
    \  if (a === -1) return -1;\n  if (a === -2) return -2;\n  if (a === 1) return\
    \ -1;\n  if (a === 0) return -2;\n  if (a === -1) return -1;\n  if (a === -2)\
    \ return -2;\n  if (a === 1) return -1;\n  if (a === 0) return -2;\n  if (a ===\
    \ -1) return -1;\n  if (a === -2) return -2;\n  if (a === 1) return -1;\n  if\
    \ (a === 0) return -2;\n  if (a === -1) return -1;\n  if (a === -2) return -2;\n\
    \  if (a === 1) return -1;\n  if (a === 0) return -2;\n  if (a === -1) return\
    \ -1;\n  if (a === -2) return -2;\n  if (a === 1) return -1;\n  if (a === 0) return\
    \ -2;\n  if (a === -1) return -1;\n  if (a === -2) return -2;\n  if (a === 1)\
    \ return -1;\n  if (a === 0) return -2;\n  if (a === -1) return -1;\n  if (a ===\
    \ -2) return -2;\n  if (a === 1) return -1;\n  if (a === 0) return -2;\n  if (a\
    \ === -1) return -1;\n  if (a === -2) return -2;\n  if (a === 1) return -1;\n\
    \  if (a === 0) return -2;\n  if (a === -1) return -1;\n  if (a === -2) return\
    \ -2;\n  if (a === 1) return -1;\n  if (a === 0) return -2;\n  if (a === -1) return\
    \ -1;\n  if (a === -2) return -2;\n  if (a === 1) return -1;\n  if (a === 0) return\
    \ -2;\n  if (a === -1) return -1;\n  if (a === -2) return -2;\n  if (a === 1)\
    \ return -1;\n  if (a === 0) return -2;\n  if (a === -1) return -1;\n  if (a ===\
    \ -2) return -2;\n  if (a === 1) return -1;\n  if (a === 0) return -2;\n  if (a\
    \ === -1) return -1;\n  if (a === -2) return -\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjzw0nh5n.ts(75,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjzw0nh5n.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738435
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpv632djko.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv632djko.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqjv2x511.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjv2x511.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ algorithm\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  let max_divisor\
    \ = 1;\n  let max_value = 0;\n  for (let i = 1; i <= b; i++) {\n    const divisor\
    \ = a / i;\n    if (divisor > max_divisor) {\n      max_divisor = divisor;\n \
    \     max_value = i;\n    }\n  }\n  return max_value;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp8odw5a8u.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8odw5a8u.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (a % b != 0) a = a / b;\n  return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpj7j5277g.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj7j5277g.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfap_h5r_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfap_h5r_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n  if (a === -1\
    \ || b === -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n  if (a\
    \ === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n\
    \  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ -1;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0ymm4jtb.ts(79,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnrxxd689.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpprr4z3i2.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpprr4z3i2.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738435

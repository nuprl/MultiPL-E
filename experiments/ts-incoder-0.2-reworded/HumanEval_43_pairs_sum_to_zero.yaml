name: HumanEval_43_pairs_sum_to_zero
language: ts
prompt: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
  \ true if there are two distinct elements in the array that\n// sum to zero, and\
  \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
  // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
  \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
  \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3, 9,\
  \ -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++)\
    \ {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0)\
    \ {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = i; j < l.length; j++)\
    \ {\n      if (l[j] + l[i] === 0) {\n        pair.push(l[j]);\n      }\n    }\n\
    \    if (pair.length > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n\
    \    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    for\
    \ (let j = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] !== 0) {\n  \
    \      return false;\n      }\n    }\n  }\n  return true;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n \
    \   sum += l[i];\n    pairs.push([sum, l[i]]);\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0]\
    \ + pairs[j][0] === 0 && pairs[i][1] === pairs[j][1]) {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n \
    \ for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      pair.push(l[i] + l[j]);\n\
    \    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    let pair = pairs[i];\n    let sum = 0;\n    for (let j = 0; j < pair.length;\
    \ j++) {\n      sum += pair[j];\n    }\n    if (sum === 0) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n\
    \    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i != j && l[i] + l[j] == 0) {\n\
    \        pair.push(l[i]);\n        pair.push(l[j]);\n      }\n    }\n    if (pair.length\
    \ == 2) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length == 0;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n\
    \    pairs.push(pair);\n  }\n  let zeros: number[] = [];\n  for (let i = 0; i\
    \ < pairs.length; i++) {\n    let pair = pairs[i];\n    for (let j = 0; j < pair.length;\
    \ j++) {\n      if (pair[j] === 0) {\n        zeros.push(pair[j]);\n      }\n\
    \    }\n  }\n  return zeros.length === 0;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair.push(l[i]\
    \ + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    let pair = pairs[i];\n    let found = false;\n   \
    \ for (let j = 0; j < pair.length; j++) {\n      if (pair[j] === 0) {\n      \
    \  found = true;\n        break;\n      }\n    }\n    if (!found) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n \
    \ for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i != j && l[i] + l[j] == 0) {\n\
    \        pair.push(l[i]);\n        pair.push(l[j]);\n      }\n    }\n    if (pair.length\
    \ > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length > 0;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length !==\
    \ 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++)\
    \ {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0)\
    \ {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  let sum = 0;\n  for (let i =\
    \ 0; i < l.length; i++) {\n    sum += l[i];\n    pairs.push([l[i], sum]);\n  }\n\
    \  for (let i = 0; i < pairs.length; i++) {\n    for (let j = i + 1; j < pairs.length;\
    \ j++) {\n      if (pairs[i][1] > pairs[j][1]) {\n        return false;\n    \
    \  }\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j]\
    \ = (l[i] + l[j]) % 2 === 0;\n      }\n    }\n    pairs.push(pair);\n  }\n  return\
    \ pairs.every(pair => pair.every(p => p === true));\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i != j) {\n        pair[j]\
    \ = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i =\
    \ 0; i < pairs.length; i++) {\n    let pair = pairs[i];\n    for (let j = 0; j\
    \ < pair.length; j++) {\n      if (pair[j] != 0) {\n        return false;\n  \
    \    }\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \    pairs.push([sum, l[i]]);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0] + pairs[j][0]\
    \ === 0 && pairs[i][1] === pairs[j][1]) {\n        return true;\n      }\n   \
    \ }\n  }\n  return false;\n}\n", "  let pairs: number[][] = [];\n  for (let i\
    \ = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n  \
    \    if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n  \
    \  }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j]\
    \ = (l[i] + l[j]) % 2 === 0;\n      }\n    }\n    pairs.push(pair);\n  }\n  for\
    \ (let i = 0; i < pairs.length; i++) {\n    let pair = pairs[i];\n    for (let\
    \ j = 0; j < pair.length; j++) {\n      if (pair[j]) {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n \
    \ for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j] = (l[i]\
    \ + l[j]) % 2;\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair_count =\
    \ 0;\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] === 0) {\n        pair_count++;\n      }\n   \
    \ }\n  }\n  return pair_count === 2;\n}\n", "  let pairs: number[][] = [];\n \
    \ for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j] = l[i]\
    \ + l[j];\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair: number[] =\
    \ [];\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] === 0) {\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  let pair: number[]\
    \ = [];\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    pair = [l[i],\
    \ l[i]];\n    pairs.push(pair);\n    sum += l[i];\n  }\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    for (let j = 0; j < pairs.length; j++) {\n      if\
    \ (pairs[i][0] === pairs[j][0] && pairs[i][1] === pairs[j][1]) {\n        return\
    \ false;\n      }\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  let pair: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    pair = [l[i], l[i]];\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0]\
    \ + pairs[j][0] === 0 && pairs[i][1] + pairs[j][1] === 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair.push(l[i]\
    \ + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    let pair = pairs[i];\n    if (pair.length > 1) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  if (l.length < 2)\
    \ {\n    return false;\n  }\n  const pairs: number[][] = [];\n  for (let i = 0;\
    \ i < l.length; i++) {\n    const pair = [l[i], l[i - 1]];\n    if (pairs.indexOf(pair)\
    \ === -1) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.every(p => p[0]\
    \ === 0 && p[1] === 0);\n}\n", "  let pairs: number[][] = [];\n  for (let i =\
    \ 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for (let j = 0; j\
    \ < l.length; j++) {\n      if (i == j) {\n        continue;\n      }\n      if\
    \ (l[i] + l[j] == 0) {\n        pair.push(l[i]);\n        pair.push(l[j]);\n \
    \     }\n    }\n    if (pair.length == 2) {\n      pairs.push(pair);\n    }\n\
    \  }\n  return pairs.length == 0;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for (let\
    \ j = i; j < l.length; j++) {\n      if (l[j] > 0) {\n        pair.push(l[j]);\n\
    \      }\n    }\n    if (pair.length >= 2) {\n      pairs.push(pair);\n    }\n\
    \  }\n  return pairs.every(pair => pair.reduce((a, b) => a + b) === 0);\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let\
    \ pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i\
    \ === j) {\n        continue;\n      }\n      if (l[i] + l[j] === 0) {\n     \
    \   pair.push(l[i]);\n        pair.push(l[j]);\n      }\n    }\n    if (pair.length\
    \ > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length === 0;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n    \
    \  if (i !== j) {\n        pair.push(l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n\
    \  }\n  let pairs_sum_to_zero: boolean = false;\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    let pair = pairs[i];\n    let sum = 0;\n    for (let j = 0; j <\
    \ pair.length; j++) {\n      sum += pair[j];\n    }\n    if (sum === 0) {\n  \
    \    pairs_sum_to_zero = true;\n      break;\n    }\n  }\n  return pairs_sum_to_zero;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = l[i] + l[j];\n      }\n    }\n  \
    \  pairs.push(pair);\n  }\n  return pairs.every(pair => pair.every(n => n ===\
    \ 0));\n}\n", "  let pairs: number[][] = [];\n  let pair: number[] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    pair = [l[i], l[i]];\n    pairs.push(pair);\n\
    \  }\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = i + 1; j <\
    \ pairs.length; j++) {\n      if (pairs[i][0] + pairs[j][0] === 0 && pairs[i][1]\
    \ + pairs[j][1] === 0) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  let pairs: number[][] = [];\n  let pair: number[] = [];\n  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    pair = [l[i], l[i]];\n\
    \    pairs.push(pair);\n    sum += l[i];\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = 0; j < pairs.length; j++) {\n      if (pairs[i][0]\
    \ + pairs[j][0] === sum) {\n        pairs.splice(j, 1);\n      }\n    }\n  }\n\
    \  return pairs.length === 0;\n}\n", "  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n\
    \    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      pair.push(l[i] + l[j]);\n    }\n\
    \    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    let\
    \ pair = pairs[i];\n    for (let j = 0; j < pair.length; j++) {\n      if (pair[j]\
    \ < 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n", " \
    \ let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length <= 1;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  let pair: number[] = [];\n \
    \ let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    pair = [l[i], l[i]];\n\
    \    pairs.push(pair);\n    sum += l[i];\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0]\
    \ + pairs[j][0] === sum) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i == j) continue;\n      if (l[i] + l[j] == 0) {\n        pair.push(l[i]);\n\
    \        pair.push(l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  return\
    \ pairs.some((pair) => pair.length == 2);\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair.push(l[i]\
    \ + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  return pairs.some(pair\
    \ => pair.every(n => n === 0));\n}\n", "  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n\
    \    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair = [l[i], l[i - 1]];\n  \
    \  if (pairs.indexOf(pair) === -1) {\n      pairs.push(pair);\n    }\n  }\n  for\
    \ (let i = 0; i < pairs.length; i++) {\n    for (let j = i + 1; j < pairs.length;\
    \ j++) {\n      if (pairs[i][0] + pairs[j][0] === 0 && pairs[i][1] + pairs[j][1]\
    \ === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length !==\
    \ 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++)\
    \ {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0)\
    \ {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = l[i] + l[j];\n      }\n    }\n  \
    \  pairs.push(pair);\n  }\n  let pair: number[] = [];\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j]\
    \ === 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let\
    \ pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i\
    \ !== j) {\n        pair[j] = (l[i] + l[j]) % 2 === 0 ? 1 : 0;\n      }\n    }\n\
    \    pairs.push(pair);\n  }\n  let pair: number[][] = [];\n  for (let i = 0; i\
    \ < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length; j++) {\n  \
    \    if (pairs[i][j] === 1) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ < 2;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n\
    \    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    let\
    \ pair = pairs[i];\n    for (let j = 0; j < pair.length; j++) {\n      if (pair[j]\
    \ === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length <= 1;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i === j) continue;\n      if (l[i] + l[j] === 0) {\n        pair.push(l[i]);\n\
    \        pair.push(l[j]);\n      }\n    }\n    if (pair.length > 0) {\n      pairs.push(pair);\n\
    \    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j] = l[i]\
    \ + l[j];\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair: number[][]\
    \ = [];\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] === 0) {\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i =\
    \ 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for (let j = 0; j\
    \ < l.length; j++) {\n      if (i !== j) {\n        pair.push(l[i] + l[j]);\n\
    \      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    let pair = pairs[i];\n    let sum = 0;\n    for (let j = 0; j <\
    \ pair.length; j++) {\n      sum += pair[j];\n    }\n    if (sum === 0) {\n  \
    \    return true;\n    }\n  }\n  return false;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j]\
    \ = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  return pairs_sum_to_zero_helper(pairs);\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n    \
    \  if (i !== j) {\n        pair.push(l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n\
    \  }\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] !== 0) {\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i =\
    \ 0; i < l.length; i++) {\n    let pair = [l[i], l[i - 1]];\n    if (pairs.indexOf(pair)\
    \ === -1) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.every(p => p[0]\
    \ === 0 && p[1] === 0);\n}\n", "  let pairs: number[][] = [];\n  for (let i =\
    \ 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n    \
    \  if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n\
    \  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      pair[i] = l[i];\n      pair[j]\
    \ = l[j];\n    }\n    pairs.push(pair);\n  }\n  let pair: number[] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    pair[i] = l[i];\n  }\n  pairs.push(pair);\n\
    \  let pairs: number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n \
    \   let pair: number[] = [];\n    for (let j = 0; j < pairs[i].length; j++) {\n\
    \      pair[j] = pairs[i][j];\n    }\n    pairs.push(pair);\n  }\n  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n    let pair:\
    \ number[] = [];\n    for (let j = 0; j < pairs[i].length; j++) {\n      pair[j]\
    \ = pairs[i][j];\n    }\n    pairs.push(pair);\n  }\n  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < pairs.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < pairs[i].length; j++) {\n      pair[j] = pairs[i][j];\n\
    \    }\n    pairs.push(pair);\n  }\n  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < pairs.length; i++) {\n    let pair: number[] = [];\n    for (let\
    \ j = 0; j < pairs[i].length; j++) {\n      pair[j] = pairs[i][j];\n    }\n  \
    \  pairs.push(pair);\n  }\n  let pairs: number[][] = [];\n  for (let i = 0; i\
    \ < pairs.length; i++) {\n    let pair: number[] = [];\n    for (let j = 0; j\
    \ < pairs[i].length; j++) {\n      pair[j] = pairs[i][j];\n    }\n    pairs.push(pair);\n\
    \  }\n  let pairs: number[][] = [];\n  for (let i = 0; i < pairs.length; i++)\
    \ {\n    let pair: number[] = [];\n    for (let j = 0; j < pairs[i].length; j++)\
    \ {\n      pair[j] = pairs[i][j];\n    }\n    pairs.push(pair);\n  }\n  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n    let pair:\
    \ number[] = [];\n    for (let j = 0; j < pairs[i].length; j++) {\n      pair[j]\
    \ = pairs[i][j];\n    }\n    pairs.push(pair);\n  }\n  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < pairs.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < pairs[i].length; j++) {\n      pair[j] = pairs[i][j];\n\
    \    }\n    pairs.push(pair);\n  }\n  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < pairs.length; i++) {\n    let pair: number[] = [];\n    for (let\
    \ j = 0; j < pairs[i].length; j++) {\n      pair[j] = pairs[i][j];\n    }\n  \
    \  pairs.push(pair);\n  }\n  let pairs: number[][] = [];\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair = [l[i], l[i - 1]];\n\
    \    pairs.push(pair);\n  }\n  let pair_count = 0;\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    let pair = pairs[i];\n    if (pair[0] === pair[1]) {\n      pair_count++;\n\
    \    }\n  }\n  return pair_count === 2;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair.push(l[i]\
    \ + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    let pair = pairs[i];\n    let sum = 0;\n    for (let\
    \ j = 0; j < pair.length; j++) {\n      sum += pair[j];\n    }\n    if (sum ===\
    \ 0) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i != j) {\n        pair[j]\
    \ = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair: number[][]\
    \ = [];\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] != 0) {\n        pair.push(pairs[i][j]);\n   \
    \   }\n    }\n  }\n  return pair.length == 2;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length < 2;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pair.push(l[i]);\n        pair.push(l[j]);\n      }\n    }\n    if (pair.length\
    \ > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length > 0;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length !==\
    \ 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++)\
    \ {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n\
    \      if (i !== j) {\n        pair[j] = (l[i] + l[j]) % 2 === 0;\n      }\n \
    \   }\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    let pair = pairs[i];\n    for (let j = 0; j < pair.length; j++) {\n     \
    \ if (pair[j]) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    let pair: number[] = [];\n    for (let j = i; j < l.length; j++) {\n    \
    \  if (l[j] - l[i] === 0) {\n        pair.push(l[j]);\n      }\n    }\n    if\
    \ (pair.length !== 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length\
    \ === 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  let pair: number[] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    pair = [l[i], l[i]];\n    pairs.push(pair);\n\
    \  }\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = i + 1; j <\
    \ pairs.length; j++) {\n      if (pairs[i][0] + pairs[j][0] === 0 && pairs[i][1]\
    \ + pairs[j][1] === 0) {\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n\
    \    pairs.push(pair);\n  }\n  let pair: number[][] = [];\n  for (let i = 0; i\
    \ < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length; j++) {\n  \
    \    if (pairs[i][j] === 0) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = i; j < l.length; j++)\
    \ {\n      if (l[j] > 0) {\n        pair.push(l[j]);\n      }\n    }\n    if (pair.length\
    \ > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.every((pair) =>\
    \ {\n    return pair.every((value) => {\n      return value === 0;\n    });\n\
    \  });\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n\
    \    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    let\
    \ pair = pairs[i];\n    let sum = 0;\n    for (let j = 0; j < pair.length; j++)\
    \ {\n      sum += pair[j];\n    }\n    if (sum === 0) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n\
    \    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for\
    \ (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j] = (l[i]\
    \ + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length; j++) {\n    \
    \  if (pairs[i][j] !== 0) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ < 2;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i != j) {\n        pair[j] = l[i] + l[j];\n      }\n    }\n   \
    \ pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    let\
    \ pair = pairs[i];\n    let sum = 0;\n    for (let j = 0; j < pair.length; j++)\
    \ {\n      sum += pair[j];\n    }\n    if (sum == 0) {\n      return true;\n \
    \   }\n  }\n  return false;\n}\n", "  let pairs: number[][] = [];\n  for (let\
    \ i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for (let j =\
    \ 0; j < l.length; j++) {\n      if (i != j) {\n        pair.push(l[i] + l[j]);\n\
    \      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    let pair = pairs[i];\n    let pair_count = 0;\n    for (let j =\
    \ 0; j < pair.length; j++) {\n      if (pair[j] == 0) {\n        pair_count++;\n\
    \      }\n    }\n    if (pair_count > 1) {\n      return true;\n    }\n  }\n \
    \ return false;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair.push(l[i] + l[j]);\n      }\n    }\n \
    \   pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    for\
    \ (let j = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] === 0) {\n  \
    \      return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[]\
    \ = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i == j) {\n     \
    \   continue;\n      }\n      if (l[i] + l[j] == 0) {\n        pair.push(l[i]);\n\
    \        pair.push(l[j]);\n      }\n    }\n    if (pair.length == 2) {\n     \
    \ pairs.push(pair);\n    }\n  }\n  return pairs.length == 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair = [l[i],\
    \ l[i - 1]];\n    if (pairs.indexOf(pair) === -1) {\n      pairs.push(pair);\n\
    \    }\n  }\n  return pairs.every(pair => pair[0] === 0 && pair[1] === 0);\n}\n",
  "  if (l.length < 2) {\n    return false;\n  }\n  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = i; j < l.length; j++) {\n      if (l[j] > 0) {\n        pair.push(l[j]);\n\
    \      }\n    }\n    if (pair.length > 0) {\n      pairs.push(pair);\n    }\n\
    \  }\n  return pairs.some(pair => pair.reduce((a, b) => a + b) === 0);\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      pair.push(l[i] + l[j]);\n    }\n    pairs.push(pair);\n  }\n \
    \ return pairs.some(pair => pair.every(n => n === 0));\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    pairs.push([l[i],\
    \ l[i]]);\n    sum += l[i];\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0] + pairs[j][0]\
    \ === sum) {\n        pairs.splice(j, 1);\n      }\n    }\n  }\n  return pairs.length\
    \ === 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i != j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n \
    \   pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    for\
    \ (let j = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] != 0) {\n   \
    \     return false;\n      }\n    }\n  }\n  return true;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[]\
    \ = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n    \
    \    pair[j] = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for\
    \ (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] !== 0) {\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i =\
    \ 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n    \
    \  if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n\
    \  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i != j) {\n        pair[j]\
    \ = (l[i] + l[j]) % 2;\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair:\
    \ number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j\
    \ = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] != 0) {\n        pair.push(pairs[i][j]);\n\
    \      }\n    }\n  }\n  return pair.length == 2;\n}\n", "  if (l.length < 2) {\n\
    \    return false;\n  }\n  let pairs: number[][] = [];\n  for (let i = 0; i <\
    \ l.length; i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length;\
    \ j++) {\n      if (i !== j) {\n        pair.push(l[i] + l[j]);\n      }\n   \
    \ }\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    let pair = pairs[i];\n    for (let j = 0; j < pair.length; j++) {\n     \
    \ if (pair[j] === 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    let pair: number[] = [];\n    for (let j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === 0) {\n        pair.push(l[i]);\n        pair.push(l[j]);\n\
    \      }\n    }\n    if (pair.length > 0) {\n      pairs.push(pair);\n    }\n\
    \  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n    for (let\
    \ j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair.push(l[i] +\
    \ l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair: number[][] =\
    \ [];\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] === 0) {\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i =\
    \ 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n    \
    \  if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n\
    \  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i != j) {\n        pair.push(l[i]\
    \ + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    for (let j = 0; j < pairs.length; j++) {\n      if\
    \ (i != j && pairs[i][0] == pairs[j][0] && pairs[i][1] == pairs[j][1]) {\n   \
    \     return false;\n      }\n    }\n  }\n  return true;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[]\
    \ = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i === j) {\n    \
    \    continue;\n      }\n      if (l[j] - l[i] === 0) {\n        pair.push(l[j]);\n\
    \      }\n    }\n    if (pair.length > 0) {\n      pairs.push(pair);\n    }\n\
    \  }\n  return pairs.some(pair => pair.length === 2);\n}\n", "  const n = l.length;\n\
    \  if (n < 2) return false;\n  const pairs: number[][] = [];\n  for (let i = 0;\
    \ i < n; i++) {\n    const pair = [l[i], l[i + 1]];\n    if (pairs.some(p => p[0]\
    \ === pair[0] && p[1] === pair[1])) return false;\n    pairs.push(pair);\n  }\n\
    \  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = i; j < l.length; j++)\
    \ {\n      pair[j] = (l[i] + l[j]);\n    }\n    pairs.push(pair);\n  }\n  return\
    \ pairs_sum_to_zero_helper(pairs);\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \    pairs.push([sum, l[i]]);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0] + pairs[j][0]\
    \ === 0 && pairs[i][1] === pairs[j][1]) {\n        return false;\n      }\n  \
    \  }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i\
    \ = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n  \
    \    if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n  \
    \  }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j]\
    \ = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  let pairs_sum_to_zero:\
    \ boolean = false;\n  for (let i = 0; i < pairs.length; i++) {\n    let pair =\
    \ pairs[i];\n    let sum = 0;\n    for (let j = 0; j < pair.length; j++) {\n \
    \     sum += pair[j];\n    }\n    if (sum === 0) {\n      pairs_sum_to_zero =\
    \ true;\n      break;\n    }\n  }\n  return pairs_sum_to_zero;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[]\
    \ = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n    \
    \    pair[j] = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for\
    \ (let i = 0; i < pairs.length; i++) {\n    let pair = pairs[i];\n    for (let\
    \ j = 0; j < pair.length; j++) {\n      if (pair[j] !== 0) {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n \
    \ let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    pairs.push([l[i],\
    \ l[i]]);\n    sum += l[i];\n  }\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0] + pairs[j][0]\
    \ === sum) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let\
    \ pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i\
    \ === j) {\n        continue;\n      }\n      if (l[i] + l[j] === 0) {\n     \
    \   pair.push(l[i]);\n        pair.push(l[j]);\n      }\n    }\n    if (pair.length\
    \ > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length > 0;\n}\n",
  "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 1;\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n\
    \        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ <= 1;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 1;\n}\n", "  if (l.length < 2) {\n    return false;\n  }\n  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i != j) {\n        pair[j]\
    \ = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  for (let i =\
    \ 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length; j++) {\n\
    \      if (pairs[i][j] != 0) {\n        return false;\n      }\n    }\n  }\n \
    \ return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i != j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n \
    \   pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    let\
    \ pair = pairs[i];\n    for (let j = 0; j < pair.length; j++) {\n      if (pair[j]\
    \ != 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n", " \
    \ let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let\
    \ pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i\
    \ !== j) {\n        pair.push(l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n\
    \  }\n  return pairs.some(pair => pairs.every(pair => pair[0] === pair[1]));\n\
    }\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n    \
    \  if (i !== j) {\n        pair[j] = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n\
    \  }\n  let pair: number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    let pair: number[] = [];\n    for (let j = 0; j < pairs[i].length; j++) {\n\
    \      if (pairs[i][j] === 0) {\n        return false;\n      }\n    }\n    pair.push(pairs[i]);\n\
    \  }\n  return true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0;\
    \ i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if\
    \ (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n \
    \ }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length <= 1;\n}\n", "  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i === j) {\n        continue;\n\
    \      }\n      if (l[i] + l[j] === 0) {\n        pair.push(l[i]);\n        pair.push(l[j]);\n\
    \      }\n    }\n    if (pair.length !== 0) {\n      pairs.push(pair);\n    }\n\
    \  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] = [];\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n     \
    \ }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i !== j) {\n        pair[j]\
    \ = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  let pair_count\
    \ = 0;\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length;\
    \ j++) {\n      if (pairs[i][j] === 0) {\n        pair_count++;\n      }\n   \
    \ }\n  }\n  return pair_count === 2;\n}\n", "  let pairs: number[][] = [];\n \
    \ for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i == j) {\n        pair.push(0);\n\
    \      } else {\n        pair.push(l[j]);\n      }\n    }\n    pairs.push(pair);\n\
    \  }\n  let pair: number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    for (let j = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] == 0)\
    \ {\n        pair.push(pairs[i]);\n      }\n    }\n  }\n  if (pair.length == 1)\
    \ {\n    return true;\n  }\n  return false;\n}\n", "  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length > 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  let pair: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n\
    \    pair = [l[i], l[i]];\n    pairs.push(pair);\n  }\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = i + 1; j < pairs.length; j++) {\n      if (pairs[i][0]\
    \ + pairs[j][0] === 0 && pairs[i][1] + pairs[j][1] === 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  let pairs: number[][] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n\
    \      }\n    }\n  }\n  return pairs.length !== 0;\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = i + 1; j < l.length; j++) {\n      pair.push(l[i] + l[j]);\n\
    \    }\n    pairs.push(pair);\n  }\n  return pairs.every((pair) => pair.every((n)\
    \ => n === 0));\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i === j) {\n        continue;\n      }\n      if (l[j] + l[i] ===\
    \ 0) {\n        pair.push(l[j]);\n        pair.push(l[i]);\n      }\n    }\n \
    \   if (pair.length > 0) {\n      pairs.push(pair);\n    }\n  }\n  return pairs.length\
    \ > 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++)\
    \ {\n      if (i !== j) {\n        pair.push(l[i] + l[j]);\n      }\n    }\n \
    \   pairs.push(pair);\n  }\n  let pair: number[] = [];\n  for (let i = 0; i <\
    \ pairs.length; i++) {\n    for (let j = 0; j < pairs[i].length; j++) {\n    \
    \  if (pairs[i][j] === 0) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length;\
    \ i++) {\n    let pair: number[] = [];\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      pair.push(l[i] + l[j]);\n    }\n    pairs.push(pair);\n  }\n \
    \ return pairs.some(pair => pair.every(n => n === 0));\n}\n", "  let pairs: number[][]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair = [l[i], l[i - 1]];\n\
    \    pairs.push(pair);\n  }\n  let pair_count = 0;\n  for (let i = 0; i < pairs.length;\
    \ i++) {\n    for (let j = 0; j < pairs.length; j++) {\n      if (pairs[i][0]\
    \ + pairs[j][0] === pairs[i][1] + pairs[j][1]) {\n        pair_count++;\n    \
    \  }\n    }\n  }\n  return pair_count === 2;\n}\n", "  let pairs: number[][] =\
    \ [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[] = [];\n\
    \    for (let j = 0; j < l.length; j++) {\n      if (i === j) {\n        pair.push(0);\n\
    \      } else {\n        pair.push(l[j]);\n      }\n    }\n    pairs.push(pair);\n\
    \  }\n  let pair: number[][] = [];\n  for (let i = 0; i < pairs.length; i++) {\n\
    \    for (let j = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] === 0)\
    \ {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const pairs = l.map(x => [x, 0]);\n  let\
    \ pair: number[] | undefined;\n  for (let i = 0; i < l.length - 1; i++) {\n  \
    \  pair = pairs[i];\n    pair[1] = pair[0] + l[i + 1];\n    if (pairs.every(p\
    \ => p[1] === 0)) {\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length !==\
    \ 0;\n}\n", "  let pairs: number[][] = [];\n  for (let i = 0; i < l.length; i++)\
    \ {\n    let pair: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n\
    \      if (i === j) {\n        continue;\n      }\n      pair.push(l[i] + l[j]);\n\
    \    }\n    pairs.push(pair);\n  }\n  let pair: number[] = [];\n  for (let i =\
    \ 0; i < pairs.length; i++) {\n    if (pairs[i].length === 2) {\n      pair.push(pairs[i][0]);\n\
    \      pair.push(pairs[i][1]);\n      if (pair[0] === 0 && pair[1] === 0) {\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return pairs.length > 1;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[]\
    \ = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i === j) {\n    \
    \    continue;\n      }\n      if (l[i] + l[j] === 0) {\n        pair.push(l[i]);\n\
    \        pair.push(l[j]);\n      }\n    }\n    if (pair.length !== 0) {\n    \
    \  pairs.push(pair);\n    }\n  }\n  return pairs.length === 0;\n}\n", "  let pairs:\
    \ number[][] = [];\n  for (let i = 0; i < l.length; i++) {\n    let pair: number[]\
    \ = [];\n    for (let j = 0; j < l.length; j++) {\n      if (i != j) {\n     \
    \   pair[j] = (l[i] + l[j]);\n      }\n    }\n    pairs.push(pair);\n  }\n  let\
    \ pair_count = 0;\n  for (let i = 0; i < pairs.length; i++) {\n    for (let j\
    \ = 0; j < pairs[i].length; j++) {\n      if (pairs[i][j] > 0) {\n        pair_count++;\n\
    \      }\n    }\n  }\n  return pair_count == 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

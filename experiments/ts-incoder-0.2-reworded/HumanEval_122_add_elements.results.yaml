language: ts
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const result: number[]\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n  return\
    \ arr.reduce((acc, val) => acc + val, 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpkkfjz6ip.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkfjz6ip.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length;\n\
    \  if (len < k) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i < k;\
    \ i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < len; i++) {\n    sum\
    \ += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4efgvnwg.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4efgvnwg.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length;\n\
    \  if (len === 0) {\n    return 0;\n  }\n  if (k > len) {\n    return arr[0];\n\
    \  }\n  const first = arr[0];\n  let sum = 0;\n  for (let i = 1; i < k; i++) {\n\
    \    sum += arr[i];\n  }\n  return sum + first;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmppt0yt7ka.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppt0yt7ka.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpvt8s4_gc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvt8s4_gc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpo2a4jvtp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo2a4jvtp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n\
    \  if (k > arr.length) {\n    return arr[0];\n  }\n  let sum = 0;\n  for (let\
    \ i = 1; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-5\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmp0ch0f266.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ch0f266.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -5,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpvt8s4_gc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvt8s4_gc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpu0bzujx2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0bzujx2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \n  const maxTwoDigit = Math.max(...arr.slice(0, k));\n  const minTwoDigit = Math.min(...arr.slice(0,\
    \ k));\n\n  return maxTwoDigit + minTwoDigit;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmphrnberko.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphrnberko.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 2
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length;\n\
    \  if (len === 0) {\n    return 0;\n  }\n  if (k > len) {\n    return arr[0];\n\
    \  }\n  const sum = 0;\n  for (let i = 1; i <= k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmplpx8gott.ts(19,5): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpvt8s4_gc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvt8s4_gc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n\
    \  if (k > arr.length) {\n    return arr[0];\n  }\n  let sum = 0;\n  for (let\
    \ i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpqswl3joa.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqswl3joa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n   \
    \ sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp7d9hd_lr.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7d9hd_lr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 2
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k === 0) return\
    \ 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return arr[0] + arr[1];\n\
    \  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k === 4) return arr[0]\
    \ + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9) return arr[0]\
    \ + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8];\n \
    \ if (k === 10) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\
    \ + arr[7] + arr[8] + arr[9];\n  if (k === 11) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10];\n\
    \  if (k === 12) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] +\
    \ arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11];\n  if (k === 13) return\
    \ arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8]\
    \ + arr[9] + arr[10] + arr[11] + arr[12];\n  if (k === 14) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10]\
    \ + arr[11] + arr[12] + arr[13];\n  if (k === 15) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14];\n  if (k === 16) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14] + arr[15];\n  if (k === 17) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp27od8t61.ts(41,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n\
    \  if (k > arr.length) {\n    return arr[0];\n  }\n  let sum = 0;\n  for (let\
    \ i = 1; i <= k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpywxfazu_.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywxfazu_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpvt8s4_gc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvt8s4_gc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpo2a4jvtp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo2a4jvtp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpu0bzujx2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0bzujx2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n\
    \  if (k > arr.length) {\n    return arr[0];\n  }\n  let sum = 0;\n  for (let\
    \ i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpqswl3joa.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqswl3joa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpo2a4jvtp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo2a4jvtp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpo2a4jvtp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo2a4jvtp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpo2a4jvtp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo2a4jvtp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const result: number[]\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    result.push(arr[i] - 10);\n  }\n  return\
    \ arr.reduce((a, b) => a + b, 0);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp_mij2poj.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_mij2poj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const result: number[]\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    result.push(arr[i] - 10);\n  }\n  return\
    \ result.sort((a, b) => a - b).reduce((a, b) => a + b, 0);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpl_x0obyw.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl_x0obyw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpu0bzujx2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0bzujx2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 2
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  if (k === 0) return arr[0];\n  if (k === 1) return arr[0] + arr[1];\n\
    \  if (k === 2) return arr[0] + arr[1] + arr[2];\n  if (k === 3) return arr[0]\
    \ + arr[1] + arr[2] + arr[3];\n  if (k === 4) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4];\n  if (k === 5) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5];\n  if (k === 6) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5] + arr[6];\n  if (k === 7) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 8) return arr[0]\
    \ + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8];\n \
    \ if (k === 9) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\
    \ + arr[7] + arr[8] + arr[9];\n  if (k === 10) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10];\n\
    \  if (k === 11) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] +\
    \ arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11];\n  if (k === 12) return\
    \ arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8]\
    \ + arr[9] + arr[10] + arr[11] + arr[12];\n  if (k === 13) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10]\
    \ + arr[11] + arr[12] + arr[13];\n  if (k === 14) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14];\n  if (k === 15) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14] + arr[15];\n  if (k === 16) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + \n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6r21xupn.ts(28,9): error TS1005: '';'' expected.

    ../../../../tmp/tmp6r21xupn.ts(41,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpeedyxivs.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeedyxivs.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const result: number[]\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    result.push(arr[i] - 10);\n  }\n  return\
    \ result.reduce((a, b) => a + b, 0);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpyjrzfulc.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyjrzfulc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length;\n\
    \  if (len === 0) {\n    return 0;\n  }\n  if (k > len) {\n    return arr[0];\n\
    \  }\n  let sum = 0;\n  for (let i = 1; i < k; i++) {\n    sum += arr[i];\n  }\n\
    \  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-5\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmplk0n686m.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplk0n686m.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -5,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length;\n\
    \  if (len < k) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i < k;\
    \ i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < len; i++) {\n    sum\
    \ += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4efgvnwg.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4efgvnwg.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 2
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n\
    \  if (k > arr.length) {\n    return arr[0];\n  }\n  const sum = 0;\n  for (let\
    \ i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpc3dba99_.ts(21,5): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1bq9lc1m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bq9lc1m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpo2a4jvtp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo2a4jvtp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 2
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k === 0) return\
    \ 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return arr[0] + arr[1];\n\
    \  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k === 4) return arr[0]\
    \ + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9) return arr[0]\
    \ + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8];\n \
    \ if (k === 10) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\
    \ + arr[7] + arr[8] + arr[9];\n  if (k === 11) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10];\n\
    \  if (k === 12) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] +\
    \ arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11];\n  if (k === 13) return\
    \ arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8]\
    \ + arr[9] + arr[10] + arr[11] + arr[12];\n  if (k === 14) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10]\
    \ + arr[11] + arr[12] + arr[13];\n  if (k === 15) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14];\n  if (k === 16) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14] + arr[15];\n  if (k === 17) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp27od8t61.ts(41,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  if (k === 0) return arr[0];\n  if (k === 1) return arr[0] + arr[1];\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpwrw3lw0o.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwrw3lw0o.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length;\n\
    \  if (len <= k) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i <\
    \ k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < len; i++) {\n    sum\
    \ += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmphb_kv8xe.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphb_kv8xe.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpeedyxivs.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeedyxivs.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length <\
    \ k) {\n    return 0\n  }\n  let sum = 0\n  for (let i = 0; i < k; i++) {\n  \
    \  sum += arr[i]\n  }\n  return sum\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2hyavnbi.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2hyavnbi.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const result: number[]\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    result.push(arr[i] - 10);\n  }\n  return\
    \ result.reduce((a, b) => a + b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpugmncl13.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpugmncl13.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const result: number[]\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n  }\n  for\
    \ (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n  return\
    \ result.reduce((acc, val) => acc + val, 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp7cfq054k.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7cfq054k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n   \
    \ sum += arr[i];\n  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp21bhwxfp.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp21bhwxfp.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 1; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-5\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpdqhrp41p.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqhrp41p.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -5,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpvt8s4_gc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvt8s4_gc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpu0bzujx2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0bzujx2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  const len = arr.length\n\
    \  if (len === 0) {\n    return 0\n  }\n  if (k > len) {\n    return 0\n  }\n\
    \  const first = arr[0]\n  let sum = 0\n  for (let i = 1; i < k; i++) {\n    sum\
    \ += arr[i]\n  }\n  for (let i = k; i < len; i++) {\n    sum += arr[i]\n    if\
    \ (sum > first + 1) {\n      break\n    }\n  }\n  return sum\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpc0xiysb3.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc0xiysb3.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp4b4m1g51.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b4m1g51.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 2
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k > arr.length)\
    \ return 0;\n  if (k === 0) return arr[0];\n  if (k === 1) return arr[0] + arr[1];\n\
    \  if (k === 2) return arr[0] + arr[1] + arr[2];\n  if (k === 3) return arr[0]\
    \ + arr[1] + arr[2] + arr[3];\n  if (k === 4) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4];\n  if (k === 5) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5];\n  if (k === 6) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5] + arr[6];\n  if (k === 7) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 8) return arr[0]\
    \ + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8];\n \
    \ if (k === 9) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\
    \ + arr[7] + arr[8] + arr[9];\n  if (k === 10) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10];\n\
    \  if (k === 11) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] +\
    \ arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11];\n  if (k === 12) return\
    \ arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8]\
    \ + arr[9] + arr[10] + arr[11] + arr[12];\n  if (k === 13) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10]\
    \ + arr[11] + arr[12] + arr[13];\n  if (k === 14) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14];\n  if (k === 15) return arr[0] + arr[1] + arr[2]\
    \ + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\
    \ + arr[12] + arr[13] + arr[14] + arr[15];\n  if (k === 16) return arr[0] + arr[1]\
    \ + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + \n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6r21xupn.ts(28,9): error TS1005: '';'' expected.

    ../../../../tmp/tmp6r21xupn.ts(41,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (arr.length ===\
    \ 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return arr[0];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpu0bzujx2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0bzujx2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  if (k === 0 || k\
    \ === arr.length) return 0;\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n\
    \    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpefxt24cq.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpefxt24cq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    // 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
    function add_elements(arr: number[], k: number): number {\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp70dm32k1.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70dm32k1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684

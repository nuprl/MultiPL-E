name: HumanEval_20_find_closest_elements
language: ts
prompt: "//From a supplied array of numbers (of length at least two) select and return\
  \ two that are the closest to each\n// other and return them in order (smaller number,\
  \ larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n\
  // [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n//\
  \ [2.0, 2.0]\nfunction find_closest_elements(numbers: number[]): [number, number]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
  \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
  \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
  \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
  \ 3.1]);\n}\n\ntest();"
completions: ["\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\t\
    for (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min,\
    \ numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet smallest = numbers[0];\n\tlet largest = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\
    \t\t\tsmallest = numbers[i];\n\t\t}\n\t\tif (numbers[i] > largest) {\n\t\t\tlargest\
    \ = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min:\
    \ number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i <\
    \ numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min = numbers[0];\n\tlet max = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "  let smallest: number = numbers[0];\n  let largest: number\
    \ = numbers[0];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ < smallest) {\n      smallest = numbers[i];\n    }\n    if (numbers[i] > largest)\
    \ {\n      largest = numbers[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet smallest = numbers[0];\n\tlet largest = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\
    \t\t\tsmallest = numbers[i];\n\t\t} else if (numbers[i] > largest) {\n\t\t\tlargest\
    \ = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min:\
    \ number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i <\
    \ numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", " \
    \ let smallest = numbers[0];\n  let largest = numbers[0];\n  for (let i = 1; i\
    \ < numbers.length; i++) {\n    if (numbers[i] < smallest) {\n      smallest =\
    \ numbers[i];\n    }\n    if (numbers[i] > largest) {\n      largest = numbers[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax\
    \ = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax =\
    \ Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let smallest: number;\n\tlet largest: number;\n\tfor (let i = 0; i < numbers.length\
    \ - 1; i++) {\n\t\tsmallest = numbers[i];\n\t\tlargest = numbers[i + 1];\n\t\t\
    if (smallest > largest) {\n\t\t\tlet temp = smallest;\n\t\t\tsmallest = largest;\n\
    \t\t\tlargest = temp;\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet smallest: number = numbers[0];\n\tlet largest: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < smallest) {\n\t\t\tsmallest = numbers[i];\n\t\t}\n\t\tif (numbers[i] > largest)\
    \ {\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\
    \t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max:\
    \ number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin\
    \ = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min,\
    \ numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet smallest = numbers[0];\n\tlet largest = numbers[0];\n\tfor (let i\
    \ = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\t\t\tsmallest\
    \ = numbers[i];\n\t\t}\n\t\tif (numbers[i] > largest) {\n\t\t\tlargest = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "  let smallest: number = numbers[0];\n  let largest: number\
    \ = numbers[0];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ < smallest) {\n      smallest = numbers[i];\n    }\n    if (numbers[i] > largest)\
    \ {\n      largest = numbers[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "  let smallest = numbers[0];\n  let largest = numbers[0];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] < smallest)\
    \ {\n      smallest = numbers[i];\n    }\n    if (numbers[i] > largest) {\n  \
    \    largest = numbers[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax =\
    \ Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let smallest: number = numbers[0];\n\tlet largest: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\t\
    \t\tsmallest = numbers[i];\n\t\t} else if (numbers[i] > largest) {\n\t\t\tlargest\
    \ = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min:\
    \ number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i <\
    \ numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", " \
    \ let smallest = numbers[0];\n  let largest = numbers[0];\n  for (let i = 1; i\
    \ < numbers.length; i++) {\n    if (numbers[i] < smallest) {\n      smallest =\
    \ numbers[i];\n    }\n    if (numbers[i] > largest) {\n      largest = numbers[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t\
    }\n\treturn [min, max];\n}\n", "\tlet min = numbers[0];\n\tlet max = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax =\
    \ Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "  const min_dist\
    \ = Number.MAX_VALUE;\n  const min_dist_index = -1;\n  for (let i = 0; i < numbers.length;\
    \ i += 1) {\n    const dist = distance([numbers[i]], [numbers[i + 1]]);\n    if\
    \ (dist < min_dist) {\n      min_dist = dist;\n      min_dist_index = i;\n   \
    \ }\n  }\n  return [numbers[min_dist_index], numbers[min_dist_index + 1]];\n}\n",
  "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i\
    \ = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\
    \t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max:\
    \ number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin\
    \ = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min,\
    \ numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax =\
    \ Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\
    \t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max:\
    \ number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let smallest: number;\n\tlet largest: number;\n\tlet smallest_index: number;\n\
    \tlet largest_index: number;\n\tlet i: number;\n\tlet j: number;\n\tlet result:\
    \ number[];\n\n\tsmallest = numbers[0];\n\tlargest = numbers[0];\n\tsmallest_index\
    \ = 0;\n\tlargest_index = 0;\n\n\tfor (i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < smallest) {\n\t\t\tsmallest = numbers[i];\n\t\t\tsmallest_index\
    \ = i;\n\t\t}\n\t\tif (numbers[i] > largest) {\n\t\t\tlargest = numbers[i];\n\t\
    \t\tlargest_index = i;\n\t\t}\n\t}\n\n\tresult = [smallest, largest];\n\tfor (i\
    \ = largest_index + 1; i <= smallest_index; i++) {\n\t\tresult[0] = numbers[i];\n\
    \t\tresult[1] = numbers[i];\n\t\tfor (j = i; j < numbers.length; j++) {\n\t\t\t\
    if (numbers[j] < smallest) {\n\t\t\t\tresult[0] = numbers[j];\n\t\t\t\tresult[1]\
    \ = numbers[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (numbers[j] > largest) {\n\t\
    \t\t\tresult[0] = numbers[j];\n\t\t\t\tresult[1] = numbers[j];\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "  const sortedNumbers = numbers.slice().sort((a, b) => a\
    \ - b);\n  const closestNumbers = sortedNumbers.slice(0, 2);\n  return [closestNumbers[0],\
    \ closestNumbers[1]];\n}\n", "\tlet smallest = numbers[0];\n\tlet largest = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\
    \t\t\tsmallest = numbers[i];\n\t\t}\n\t\tif (numbers[i] > largest) {\n\t\t\tlargest\
    \ = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min:\
    \ number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i <\
    \ numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max,\
    \ numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", " \
    \ const [smallest, largest] = numbers.sort((a, b) => a - b);\n  return [smallest,\
    \ largest];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax\
    \ = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet smallest:\
    \ number = numbers[0];\n\tlet largest: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\t\t\tsmallest\
    \ = numbers[i];\n\t\t} else if (numbers[i] > largest) {\n\t\t\tlargest = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t\
    }\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax\
    \ = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\
    \t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max:\
    \ number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet smallest = numbers[0];\n\tlet largest = numbers[0];\n\tfor (let i\
    \ = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\t\t\tsmallest\
    \ = numbers[i];\n\t\t} else if (numbers[i] > largest) {\n\t\t\tlargest = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "  const [smallest, largest]\
    \ = numbers.sort((a, b) => a - b);\n  return [smallest, largest];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax\
    \ = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "  let min: number = numbers[0];\n  let max: number = numbers[0];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] < min) {\n      min\
    \ = numbers[i];\n    } else if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n  }\n  return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\t\
    let max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\
    \tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i =\
    \ 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    if (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] >\
    \ max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\t\
    let min = numbers[0];\n\tlet max = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1;\
    \ i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax =\
    \ Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\
    \t}\n\treturn [min, max];\n}\n", "  const sortedNumbers = numbers.sort((a, b)\
    \ => a - b);\n  const closestNumbers = sortedNumbers.filter((number, index) =>\
    \ {\n    if (index === 0) {\n      return true;\n    }\n    return Math.abs(number\
    \ - sortedNumbers[index - 1]) < Math.abs(number - sortedNumbers[index]);\n  });\n\
    \  return closestNumbers;\n}\n", "  let smallest: number = numbers[0];\n  let\
    \ largest: number = numbers[0];\n  for (let i = 1; i < numbers.length; i++) {\n\
    \    if (numbers[i] < smallest) {\n      smallest = numbers[i];\n    }\n    if\
    \ (numbers[i] > largest) {\n      largest = numbers[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min,\
    \ numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min = numbers[0];\n\tlet max = numbers[0];\n\tfor (let i = 1; i <\
    \ numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin = Math.min(min, numbers[i]);\n\
    \t\tmax = Math.max(max, numbers[i]);\n\t}\n\treturn [min, max];\n}\n", "\tlet\
    \ smallest = numbers[0];\n\tlet largest = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < smallest) {\n\t\t\tsmallest = numbers[i];\n\t\t\
    } else if (numbers[i] > largest) {\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\t\
    return [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\tlet max:\
    \ number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tmin\
    \ = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet smallest = numbers[0];\n\tlet largest = numbers[0];\n\tfor (let i\
    \ = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < smallest) {\n\t\t\tsmallest\
    \ = numbers[i];\n\t\t} else if (numbers[i] > largest) {\n\t\t\tlargest = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", " \
    \ const sortedNumbers = numbers.sort((a, b) => a - b);\n  const closestNumbers\
    \ = sortedNumbers.filter((number, index) => {\n    if (index === 0) {\n      return\
    \ true;\n    }\n    return Math.abs(number - sortedNumbers[index - 1]) < Math.abs(number\
    \ - sortedNumbers[index]);\n  });\n  return closestNumbers;\n}\n", "  let min:\
    \ number = numbers[0];\n  let max: number = numbers[0];\n  for (let i = 1; i <\
    \ numbers.length; i++) {\n    if (numbers[i] < min) {\n      min = numbers[i];\n\
    \    }\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n  }\n  return\
    \ [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\
    \tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\
    \tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet\
    \ max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\t\
    min = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t}\n\t\
    return [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min = numbers[0];\n\
    \tlet max = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif\
    \ (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max)\
    \ {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min:\
    \ number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i <\
    \ numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\
    \t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [min, max];\n}\n", "  let smallest: number = Number.MAX_SAFE_INTEGER;\n  let\
    \ largest: number = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    const num = numbers[i];\n    if (num < smallest) {\n      smallest\
    \ = num;\n    }\n    if (num > largest) {\n      largest = num;\n    }\n  }\n\
    \  if (smallest == Number.MAX_SAFE_INTEGER && largest == Number.MIN_SAFE_INTEGER)\
    \ {\n    return [smallest, largest];\n  }\n  const middle = Math.floor((smallest\
    \ + largest) / 2);\n  const left = [smallest, middle];\n  const right = [middle,\
    \ largest];\n  return left.concat(right);\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tmin = Math.min(min, numbers[i]);\n\t\tmax = Math.max(max, numbers[i]);\n\t\
    }\n\treturn [min, max];\n}\n", "\tlet min: number = numbers[0];\n\tlet max: number\
    \ = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", "  if (numbers.length\
    \ < 2) {\n    throw new Error(\"find_closest_elements: numbers.length must be\
    \ at least two\");\n  }\n  const [smallest, largest] = numbers.sort((a, b) =>\
    \ a - b);\n  return [smallest, largest];\n}\n", "\tlet min: number = numbers[0];\n\
    \tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\
    \t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif (numbers[i]\
    \ > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n", " \
    \ const sortedNumbers = numbers.sort((a, b) => a - b);\n  const closestNumbers\
    \ = sortedNumbers.filter((number, index) => {\n    if (index === 0) {\n      return\
    \ true;\n    }\n    const previousNumber = sortedNumbers[index - 1];\n    const\
    \ previousDistance = Math.abs(number - previousNumber);\n    const currentDistance\
    \ = Math.abs(number - sortedNumbers[index + 1]);\n    return currentDistance <\
    \ previousDistance;\n  });\n  return closestNumbers;\n}\n", "\tlet min: number\
    \ = numbers[0];\n\tlet max: number = numbers[0];\n\tfor (let i = 1; i < numbers.length;\
    \ i++) {\n\t\tif (numbers[i] < min) {\n\t\t\tmin = numbers[i];\n\t\t}\n\t\tif\
    \ (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n\
    }\n", "\tlet min: number = numbers[0];\n\tlet max: number = numbers[0];\n\tfor\
    \ (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i] < min) {\n\t\t\t\
    min = numbers[i];\n\t\t}\n\t\tif (numbers[i] > max) {\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\treturn [min, max];\n}\n", "\tlet min = numbers[0];\n\tlet max =\
    \ numbers[0];\n\tfor (let i = 1; i < numbers.length; i++) {\n\t\tif (numbers[i]\
    \ < min) {\n\t\t\tmin = numbers[i];\n\t\t} else if (numbers[i] > max) {\n\t\t\t\
    max = numbers[i];\n\t\t}\n\t}\n\treturn [min, max];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_140_fix_spaces
language: ts
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunction fix_spaces(text:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"\
  ),\"Example\");\n  assert.deepEqual(candidate(\"Mudasir Hanif \"),\"Mudasir_Hanif_\"\
  );\n  assert.deepEqual(candidate(\"Yellow Yellow  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\"\
  );\n  assert.deepEqual(candidate(\"Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"\
  \   Exa 1 2 2 mple\"),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["  return text.replace(/\\s+/g, \"_\");\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/\\\
    s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "\treturn text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a tags=javascript,string,regex\
    \ |>\n<| c |>\nThanks for your answer! I ended up using your first solution and\
    \ it worked perfectly. Thanks again!\n<|/ c |>\n<| a tags=javascript,string,regex\
    \ |>\n<code>", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI used the answer from\
    \ and modified it a bit.\n<code>", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    ).replace(/  +$/g, \"-\")\n}\n", "    return text.replace(/\\s+/g, \"_\").replace(/\\\
    s+$/g, \"_\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n\
    }\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n}\n",
  "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\"\
    )\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n",
  "  return text.replace(/\\s+/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"_\");\n}\n", "  return text.replace(/\\s+/g,\
    \ \"_\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n\
    }\n", "    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\t\
    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\"\
    )\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"\
    -\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n",
  "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "    return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\");\n\
    }\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>", "  return text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "    return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/\\s+/g, \"_\");\n}\n",
  "    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a\
    \ tags=javascript,regex |>\n<| a tags=javascript,regex |>\n<code>", "  return\
    \ text.replace(/\\s+/g, \"_\");\n}\n", "    return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n",
  "    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a\
    \ |>\n<| c |>\nThis doesn't work if there are multiple spaces between words. For\
    \ example: `\"Example 1 2\"` becomes `\"Example_1-2\"`\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if there are multiple spaces between words. For example: `\"Example\
    \ 1 2\"` becomes `\"Example_1-2\"`\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are multiple spaces between words. For example: `\"Example 1 2\"` becomes `\"\
    Example_1-2\"`\n<|/ c |>\n<| a tags=javascript,regex |>\n<code>\nvar str = \"\
    Example 1 2\";\nvar result = str.replace(/\\s+/g, \"_\");\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if there are multiple spaces between words. For\
    \ example: `\"Example 1 2\"` becomes `\"Example_1-2\"`\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if there are multiple spaces between words. For example: `\"Example\
    \ 1 2\"` becomes `\"Example_1-2\"`\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are multiple spaces between words. For example: `\"Example 1 2\"` becomes `\"\
    Example_1-2\"`\n<|/ c |>\n<| c |>\nThis doesn't work if there are multiple spaces\
    \ between words. For example: `\"Example 1 2\"` becomes `\"Example_1-2\"`\n<|/\
    \ c |>\n<| a dscore=5 |>\n<code>\nvar str = \"Example 1 2\";\nvar result = str.replace(/\\\
    s+/g, \"_\");\n</code>\n<|/ a tags=javascript,regex |>\n<| c |>\nThis doesn't\
    \ work if there are multiple spaces between words. For example: `\"Example 1 2\"\
    ` becomes `\"Example_1-2\"`\n<|/ c |>\n<| c |>\nThis doesn't work if there are\
    \ multiple spaces between words. For example: `\"Example 1 2\"` becomes `\"Example_1-2\"\
    `\n<|/ c |>\n<| c |>\nThis doesn't work if there are multiple spaces between words.\
    \ For example: `\"Example 1 2\"` becomes `\"Example_1-2\"`\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nvar str = \"Example 1 2\";\nvar result = str.replace(/\\s+/g, \"\
    _\");\n</code>\n<|/ a tags=javascript,regex |>\n<| c |>\nThis doesn't work if\
    \ there are multiple spaces between words. For example", "    return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/\\s+/g, \"\
    _\").replace(/\\s{2,}/g, \"-\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    ).replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a tags=javascript,regex\
    \ |>\n<| c |>\nThis doesn't work if there are multiple spaces between words. Example:\
    \ \" Example 1 \"\n<|/ c |>\n<| c |>\nThis doesn't work if there are multiple\
    \ spaces between words. Example: \" Example 1 \"\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if there are multiple spaces between words. Example: \" Example 1 \"\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple spaces between words.\
    \ Example: \" Example 1 \"\n<|/ c |>\n<| a |>\n<code>", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\\\
    s+/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\t\
    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\"\
    )\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\t\
    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\"\
    )\n}\n", "    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"\
    -\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g,\
    \ \"-\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n\
    }\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\
    \ \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "    return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g,\
    \ \"_\");\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\"\
    );\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"\
    -\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "    return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/\\\
    s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return text.replace(/\\s+/g,\
    \ \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and doesn't require any additional libraries.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and doesn't require\
    \ any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and doesn't require any additional libraries.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and doesn't require\
    \ any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and doesn't require any additional libraries.\n<|/ c |>\n<|\
    \ a tags=javascript,string,regex |>\n<code>", "  return text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "    return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\").replace(/  +$/g, \"-\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"\
    -\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n",
  "    return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return\
    \ text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "    return text.replace(/\\\
    s+/g, \"_\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    ).replace(/  +$/g, \"-\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\")\n}\n", "    return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "    return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work if the string\
    \ has more than 2 consecutive spaces.\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I've updated the answer accordingly.\n<|/ c |>\n<| a |>\n<code>",
  "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\"\
    )\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n\
    }\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "    return\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work for me in TypeScript. `text.replace(/ /g, \"\
    _\")` returns `string` instead of `string[]`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for me in TypeScript. `text.replace(/ /g, \"_\")` returns `string` instead\
    \ of `string[]`\n<|/ c |>\n<| c |>\nThis doesn't work for me in TypeScript. `text.replace(/\
    \ /g, \"_\")` returns `string` instead of `string[]`\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for me in TypeScript. `text.replace(/ /g, \"_\")` returns `string`\
    \ instead of `string[]`\n<|/ c |>\n<| c |>\nThis doesn't work for me in TypeScript.\
    \ `text.replace(/ /g, \"_\")` returns `string` instead of `string[]`\n<|/ c |>\n\
    <| a tags=javascript,regex |>\n<code>", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\\s+/g,\
    \ \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "    return text.replace(/ /g, \"\
    _\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g,\
    \ \"-\");\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"\
    -\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n",
  "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\"\
    )\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", " \
    \ return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a tags=javascript,regex\
    \ |>\n<| c |>\nThis doesn't work for `fix_spaces(\"  Example 3\")` which should\
    \ return `-Example-3`\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n\
    }\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "    return\
    \ text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n\
    <|/ a tags=javascript,string,regex |>\n<| c |>\nThis doesn't work for `fix_spaces(\"\
    \  Example\")` which should return `Example` but returns `Example_`.\n<|/ c |>\n\
    <| c |>\nI added a fix for that case.\n<|/ c |>\n<| a |>\n<code>", "\treturn text.replace(/\\\
    s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return text.replace(/\\s+/g,\
    \ \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g,\
    \ \"-\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n\
    }\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\
    \ \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n",
  "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\")\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\\
    s{2,}/g, \"-\");\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g,\
    \ \"_\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n\
    }\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\
    \ \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| a tags=javascript,string,regex |>\nI like to\
    \ use this function:\n<code>", "\treturn text.replace(/ /g, \"_\").replace(/ \
    \ +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g, \"-\");\n}\n", "\treturn\
    \ text.replace(/\\s+/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\\s+/g,\
    \ \"_\");\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\").replace(/  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"-\"\
    )\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\").replace(/  +/g, \"\
    -\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g,\
    \ \"-\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n\
    }\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\
    \ \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\
    \  +$/g, \"-\")\n}\n", "\treturn text.replace(/\\s+/g, \"_\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/\\s+/g, \"\
    _\");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n",
  "    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n</code>\n<|/ a\
    \ dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| a tags=javascript,regex |>\n<code>", "\treturn text.replace(/ /g,\
    \ \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/\
    \  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\\s+/g,\
    \ \"_\").replace(/\\s+$/g, \"_\");\n}\n", "    return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\").replace(/  +$/g, \"-\")\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\")\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

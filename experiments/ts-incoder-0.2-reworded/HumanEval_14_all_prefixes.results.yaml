language: ts
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n    \
    \  prefix = char;\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpi7y34ntl.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpi7y34ntl.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmptwykrun7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwykrun7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpdcoic7rv.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpdcoic7rv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ \"\") {\n      break;\n    }\n    prefixes.push(char);\n    i++;\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp0umcp82p.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0umcp82p.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        const char = string.charAt(i);\n        if\
    \ (char === char.toUpperCase()) {\n            prefixes.push(char);\n        }\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpnzen5q0l.js:18:12)\n    at Object.<anonymous> (/tmp/tmpnzen5q0l.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string[i];\n    const prefix = string.slice(0,\
    \ i);\n    if (prefixes.indexOf(prefix) === -1) {\n      prefixes.push(prefix);\n\
    \    }\n    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpjonr9pqs.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjonr9pqs.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpecpzwtnc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpecpzwtnc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n    } else {\n      prefix = string[i];\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpfb7_39lr.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfb7_39lr.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpbf7suy9b.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpbf7suy9b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n  \
    \  while (i < string.length) {\n        const char = string[i];\n        if (char\
    \ === char.toUpperCase()) {\n            prefixes.push(char);\n            i +=\
    \ 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpoap9s44s.js:23:12)\n    at Object.<anonymous> (/tmp/tmpoap9s44s.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix\
    \ += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkjh08n0i.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkjh08n0i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string[i] === string[0]) {\n     \
    \ prefix = prefix + 'a';\n    } else {\n      prefixes.push(prefix);\n      prefix\
    \ = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpfr19af2p.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpfr19af2p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpdcoic7rv.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpdcoic7rv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let current: string = string;\n\
    \    while (current !== \"\") {\n        const index = current.indexOf(\"_\");\n\
    \        if (index === -1) {\n            prefixes.push(current);\n          \
    \  break;\n        }\n        current = current.substring(0, index);\n       \
    \ prefixes.push(current);\n    }\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpyx4xogan.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyx4xogan.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix += string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpof454ldo.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpof454ldo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix_length = 0;\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix_length++;\n    } else {\n      prefixes.push(string.substr(0,\
    \ prefix_length));\n      prefix_length = 0;\n    }\n  }\n  prefixes.push(string.substr(0,\
    \ prefix_length));\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpbgz91pbx.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpbgz91pbx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ \"\") {\n      break;\n    }\n    prefixes.push(char);\n    i++;\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp0umcp82p.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0umcp82p.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i\
    \ < string.length) {\n        prefixes.push(string.substr(i, string.length));\n\
    \        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp8n5pvkyz.js:17:12)\n    at Object.<anonymous> (/tmp/tmp8n5pvkyz.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpecpzwtnc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpecpzwtnc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = \"\";\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n      prefixes.push(prefix);\n\
    \    } else {\n      prefix = string[i];\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp1k411qu_.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1k411qu_.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] !== prefix) {\n      prefixes.push(prefix);\n      prefix = \"\"\
    ;\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpuwh7fkqv.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpuwh7fkqv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix += string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpof454ldo.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpof454ldo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp4a0l1z6c.js:22:12)\n    at Object.<anonymous> (/tmp/tmp4a0l1z6c.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxm8hn7gv.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxm8hn7gv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let i = 0;\n  while (i < string.length)\
    \ {\n    const char = string.charAt(i);\n    if (char === \"\") {\n      break;\n\
    \    }\n    prefixes.push(char);\n    i++;\n  }\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_5hh0ggw.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_5hh0ggw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp93zl8g6u.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp93zl8g6u.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string[i];\n    if (char\
    \ === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n    } else\
    \ {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp6w9w5vyj.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp6w9w5vyj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = \"\";\n  for (let\
    \ i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ !== prefix) {\n      prefixes.push(prefix);\n      prefix = \"\";\n    }\n \
    \ }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp8ptq36uo.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8ptq36uo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '-') {\n \
    \     prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix +=\
    \ string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp8qpwcy_s.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8qpwcy_s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpzecaa51x.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzecaa51x.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for\
    \ (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpctu19vh0.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpctu19vh0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpzecaa51x.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzecaa51x.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = \"\";\n  for (let\
    \ i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ !== prefix) {\n      prefixes.push(prefix);\n      prefix = \"\";\n    }\n \
    \ }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp8ptq36uo.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8ptq36uo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix_length = 0;\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '-') {\n \
    \     prefixes.push(string.slice(0, i));\n      prefix_length = i;\n    }\n  }\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpzje5625x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpzje5625x.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] !== prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp0dbghr2x.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp0dbghr2x.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvnecw2j6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvnecw2j6.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i\
    \ < string.length) {\n        const char = string[i];\n        const prefix =\
    \ string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n      \
    \      prefixes.push(prefix);\n        }\n        i++;\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp_ld976ii.js:21:12)\n    at Object.<anonymous> (/tmp/tmp_ld976ii.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let current: string\
    \ = string;\n    while (current !== \"\") {\n        current = current.slice(0,\
    \ current.lastIndexOf(\"_\"));\n        prefixes.unshift(current);\n    }\n  \
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvsgap988.js:17:12)\n    at Object.<anonymous> (/tmp/tmpvsgap988.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n      \
    \  if (string[i] === string[0]) {\n            prefixes.push(prefix);\n      \
    \      prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpzivw25wi.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzivw25wi.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string[i];\n    prefix +=\
    \ char;\n    if (string[i] !== char) {\n      prefixes.push(prefix);\n      prefix\
    \ = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp8i0d_j3x.js:21:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8i0d_j3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxagk6d0e.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxagk6d0e.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let current: string\
    \ = string;\n  while (current.length > 0) {\n    prefixes.unshift(current);\n\
    \    current = current.slice(0, -1);\n  }\n  return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    let prefix = string.slice(0, i);\n    prefixes.push(prefix);\n \
    \ }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpsd2i7h24.js:16:12)\n    at Object.<anonymous> (/tmp/tmpsd2i7h24.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpecpzwtnc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpecpzwtnc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix_length = 0;\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefixes.push(string.slice(0, i));\n      prefix_length = i;\n    }\n\
    \  }\n  return prefixes.reverse();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmppza6tuy3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppza6tuy3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpdcoic7rv.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpdcoic7rv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0])\
    \ {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n\
    \            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp3wavgdju.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp3wavgdju.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix\
    \ += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkjh08n0i.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkjh08n0i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n      prefix = \"\";\n    } else {\n      prefix\
    \ += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpn_70w7zm.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpn_70w7zm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let i = 0;\n  while (i < string.length)\
    \ {\n    const char = string.charAt(i);\n    if (char === string[0]) {\n     \
    \ prefixes.push(string.slice(0, i));\n      i += 1;\n    } else {\n      i +=\
    \ 1;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpme1_1x6x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpme1_1x6x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let current: string\
    \ = string;\n  while (current !== \"\") {\n    prefixes.unshift(current);\n  \
    \  current = current.slice(0, current.lastIndexOf(\".\"));\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvnecw2j6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvnecw2j6.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix\
    \ += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkjh08n0i.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkjh08n0i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    const char = string[i];\n    for (let j = 0; j < prefixes.length;\
    \ j++) {\n      if (prefixes[j].length >= char.length) {\n        prefixes[j]\
    \ += char;\n        break;\n      }\n    }\n  }\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpt78nwou8.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt78nwou8.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738926
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpbf7suy9b.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpbf7suy9b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    let prefix = string.slice(0, i);\n    prefixes.push(prefix);\n \
    \ }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpsd2i7h24.js:16:12)\n    at Object.<anonymous> (/tmp/tmpsd2i7h24.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string[i];\n    const prefix = string.slice(0,\
    \ i);\n    if (prefixes.indexOf(prefix) === -1) {\n      prefixes.push(prefix);\n\
    \    }\n    i++;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpky8yzcyx.js:21:12)\n    at Object.<anonymous> (/tmp/tmpky8yzcyx.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738926
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n  \
    \  while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n\
    \        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgzq_iedy.js:17:12)\n    at Object.<anonymous> (/tmp/tmpgzq_iedy.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '-') {\n \
    \     prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix +=\
    \ string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp8qpwcy_s.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8qpwcy_s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ char.toUpperCase()) {\n      prefixes.push(char);\n      i += 1;\n    } else\
    \ {\n      i += 1;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpog5udvqm.js:23:12)\n    at Object.<anonymous> (/tmp/tmpog5udvqm.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738926
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxm8hn7gv.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxm8hn7gv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxagk6d0e.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxagk6d0e.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let current: string\
    \ = string;\n  while (current.length > 0) {\n    prefixes.unshift(current);\n\
    \    current = current.slice(0, -1);\n  }\n  return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        const prefix = string.slice(0, i);\n    \
    \    if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpy9zufcvv.js:18:12)\n    at Object.<anonymous> (/tmp/tmpy9zufcvv.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let i = 0;\n  while (i < string.length)\
    \ {\n    const char = string.charAt(i);\n    if (char === char.toUpperCase())\
    \ {\n      prefixes.push(char);\n      i += 1;\n    } else {\n      i += 1;\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp7f4rd9gu.js:23:12)\n    at Object.<anonymous> (/tmp/tmp7f4rd9gu.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmptwykrun7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwykrun7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string[i];\n    const prefix = string.slice(0,\
    \ i);\n    if (prefixes.indexOf(prefix) === -1) {\n      prefixes.push(prefix);\n\
    \    }\n    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpjonr9pqs.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjonr9pqs.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const char = string.charAt(i);\n    if (char ===\
    \ string[0]) {\n      prefixes.push(string.slice(0, i));\n    }\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp6mprobi7.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6mprobi7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738926
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix += string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpof454ldo.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpof454ldo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix += string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpof454ldo.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpof454ldo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc7hkyfjb.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc7hkyfjb.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let current: string\
    \ = string;\n  while (current.length > 0) {\n    prefixes.unshift(current);\n\
    \    current = current.slice(0, -1);\n  }\n  return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp4a0l1z6c.js:22:12)\n    at Object.<anonymous> (/tmp/tmp4a0l1z6c.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0])\
    \ {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n\
    \            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp877ah7i1.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp877ah7i1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0])\
    \ {\n            prefix += string[i];\n        } else {\n            prefixes.push(prefix);\n\
    \            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp3wtxn86i.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp3wtxn86i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpl8mult7h.js:15:12)\n    at Object.<anonymous> (/tmp/tmpl8mult7h.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpj_cmnz29.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj_cmnz29.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string[i] === string[0]) {\n     \
    \ prefix = prefix + string[i];\n    } else {\n      prefixes.push(prefix);\n \
    \     prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxi4q8vxb.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxi4q8vxb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let current: string = \"\"\
    ;\n    for (let i = 0; i < string.length; i++) {\n        current += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(current);\n\
    \            current = \"\";\n        }\n    }\n    prefixes.push(current);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpj11l63vv.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpj11l63vv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprjodjsww.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprjodjsww.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    } else {\n      prefix += string[i];\n    }\n  }\n  prefixes.push(prefix);\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp0w0abktb.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp0w0abktb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix: string;\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix = string.slice(0, i);\n\
    \    if (prefixes.indexOf(prefix) === -1) {\n      prefixes.push(prefix);\n  \
    \  }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp3auqrker.js:19:12)\n    at Object.<anonymous> (/tmp/tmp3auqrker.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix: string =\
    \ \"\";\n  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n\
    \    if (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix\
    \ = \"\";\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmplxvy7r6g.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplxvy7r6g.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxm8hn7gv.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxm8hn7gv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[0];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp4h9nygqu.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp4h9nygqu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const prefix = string.slice(0, i);\n    if (prefixes.indexOf(prefix)\
    \ === -1) {\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd10mdb1u.js:18:12)\n    at Object.<anonymous> (/tmp/tmpd10mdb1u.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprjodjsww.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprjodjsww.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprjodjsww.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprjodjsww.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let current: string\
    \ = string;\n    while (current !== \"\") {\n        prefixes.unshift(current);\n\
    \        current = current.substring(0, current.length - 1);\n    }\n    return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        const prefix = string.slice(0, i);\n    \
    \    if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpy9zufcvv.js:18:12)\n    at Object.<anonymous> (/tmp/tmpy9zufcvv.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprjodjsww.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprjodjsww.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\
    \";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] ===\
    \ string[0]) {\n            prefix = prefix + string[i];\n        } else {\n \
    \           prefixes.push(prefix);\n            prefix = string[i];\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmphzh9i4yp.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmphzh9i4yp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc7hkyfjb.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc7hkyfjb.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0])\
    \ {\n            prefix = prefix + string[0];\n        } else {\n            prefixes.push(prefix);\n\
    \            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpzozdmn1e.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpzozdmn1e.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ \"\") {\n      prefixes.push(\"\");\n      i++;\n      continue;\n    }\n  \
    \  const prefix = string.substr(0, i);\n    if (prefixes.indexOf(prefix) === -1)\
    \ {\n      prefixes.push(prefix);\n    }\n    i++;\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpjwkajfe2.js:26:12)\n    at Object.<anonymous> (/tmp/tmpjwkajfe2.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpecpzwtnc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpecpzwtnc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i\
    \ < string.length) {\n        const char = string[i];\n        const prefix =\
    \ string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n      \
    \      prefixes.push(prefix);\n        }\n        i += 1;\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp727qy010.js:21:12)\n    at Object.<anonymous> (/tmp/tmp727qy010.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    } else {\n      prefix += string[i];\n    }\n  }\n  prefixes.push(prefix);\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp0w0abktb.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp0w0abktb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0]) {\n\
    \      prefix += string[i];\n    } else {\n      prefixes.push(prefix);\n    \
    \  prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxlijq9c5.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxlijq9c5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n    if\
    \ (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\
    \ else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp3p1rr75d.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp3p1rr75d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string[i];\n    if (char\
    \ === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n    } else\
    \ {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp6w9w5vyj.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp6w9w5vyj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let current: string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        current += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(current);\n\
    \            current = \"\";\n        }\n    }\n    prefixes.push(current);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpa15rgcyj.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpa15rgcyj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprjodjsww.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprjodjsww.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n    } else {\n      prefix = string[i];\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp2qa61i3g.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2qa61i3g.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n  \
    \  while (i < string.length) {\n        prefixes.push(string.substring(0, i));\n\
    \        i = i + 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp_o63igqn.js:17:12)\n    at Object.<anonymous> (/tmp/tmp_o63igqn.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpbf7suy9b.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpbf7suy9b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] !== prefix) {\n      prefixes.push(prefix);\n      prefix = \"\"\
    ;\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpuwh7fkqv.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpuwh7fkqv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpj_cmnz29.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj_cmnz29.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const char = string.charAt(i);\n    if (char ===\
    \ \"\") {\n      prefixes.push(\"\");\n      continue;\n    }\n    for (let j\
    \ = 0; j < prefixes.length; j++) {\n      const prefix = prefixes[j];\n      if\
    \ (char === prefix) {\n        prefixes.push(\"\");\n        break;\n      }\n\
    \      if (char.startsWith(prefix)) {\n        prefixes.push(prefix);\n      \
    \  break;\n      }\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo7u_8x8x.ts(18,16): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i\
    \ < string.length) {\n        const char = string.charAt(i);\n        if (char\
    \ === string[0]) {\n            prefixes.push(string.substring(0, i));\n     \
    \       i += 1;\n        } else {\n            prefixes.push(char);\n        \
    \    i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpn92wcsjq.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpn92wcsjq.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvnecw2j6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvnecw2j6.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  prefix += char;\n    if (string[i] === char) {\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphtwbwr7b.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmphtwbwr7b.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix = \"\
    \";\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp11cbc64w.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp11cbc64w.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[0];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp4h9nygqu.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp4h9nygqu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let current: string\
    \ = string;\n    while (current !== \"\") {\n        prefixes.unshift(current);\n\
    \        current = current.substr(1);\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'gh',\n\
    \  'fgh',\n  'dfgh',\n  'sdfgh',\n  'asdfgh'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpsqzkbi88.js:17:12)\n    at Object.<anonymous> (/tmp/tmpsqzkbi88.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'gh',\
    \ 'fgh', 'dfgh', 'sdfgh', 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxagk6d0e.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxagk6d0e.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprjodjsww.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprjodjsww.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefixes.push(prefix);\n      prefix = string[i];\n    } else {\n \
    \     prefix += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpqz7yyllg.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpqz7yyllg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvnecw2j6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvnecw2j6.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    let prefix = string.slice(0, i);\n    if (prefixes.indexOf(prefix)\
    \ === -1) {\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpfrftk9z4.js:18:12)\n    at Object.<anonymous> (/tmp/tmpfrftk9z4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpbf7suy9b.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpbf7suy9b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0])\
    \ {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n\
    \            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp877ah7i1.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp877ah7i1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738927
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string[i];\n    if (char === \"\") {\n\
    \      break;\n    }\n    prefixes.push(char);\n    i++;\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp78g6dp07.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp78g6dp07.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let current: string = string;\n\
    \  while (current.length > 0) {\n    prefixes.unshift(current.slice(0, 1));\n\
    \    current = current.slice(1, current.length);\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'g',\n\
    \  'f',\n  'd',\n  's',\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_1mu3bud.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_1mu3bud.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g',\
    \ 'f', 'd', 's', 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string[i];\n    if (char\
    \ === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n    } else\
    \ {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp6w9w5vyj.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp6w9w5vyj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp93zl8g6u.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp93zl8g6u.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5owvus5z.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5owvus5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkfro83m1.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkfro83m1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmptwykrun7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwykrun7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefix = prefix + string[i];\n\
    \        if (string[i] !== string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = \"\";\n        }\n    }\n    prefixes.push(prefix);\n  \
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmppo4nv24r.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmppo4nv24r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix\
    \ += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkjh08n0i.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkjh08n0i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n    \
    \  prefix = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpo5v7ck2k.js:22:12)\n    at Object.<anonymous> (/tmp/tmpo5v7ck2k.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix_length = 0;\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix_length = prefix_length\
    \ + string[i].length;\n    prefixes.push(string.substr(0, prefix_length));\n \
    \ }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let i = 0;\n  while (i < string.length)\
    \ {\n    prefixes.push(string.substr(i, string.length));\n    i = i + 1;\n  }\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpsb5wzi98.js:17:12)\n    at Object.<anonymous> (/tmp/tmpsb5wzi98.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmptwykrun7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwykrun7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    prefixes.push(string.substr(i, string.length));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd0lo57uh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpd0lo57uh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i\
    \ < string.length) {\n        const char = string.charAt(i);\n        if (char\
    \ === char.toUpperCase()) {\n            prefixes.push(char);\n            i +=\
    \ 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpqpqakfoq.js:23:12)\n    at Object.<anonymous> (/tmp/tmpqpqakfoq.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738930
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n    \
    \  prefix = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpo5v7ck2k.js:22:12)\n    at Object.<anonymous> (/tmp/tmpo5v7ck2k.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpdcoic7rv.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpdcoic7rv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxagk6d0e.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxagk6d0e.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] === string[0]) {\n      prefixes.push(prefix);\n      prefix = \"\
    \";\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp11cbc64w.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp11cbc64w.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738929
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix_length = 0;\n\
    \  for (let i = 0; i < string.length; i++) {\n    let char = string.charAt(i);\n\
    \    if (char === char.toUpperCase()) {\n      prefixes.push(string.substr(0,\
    \ i));\n      prefix_length = i;\n    }\n  }\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp15cdxwsv.js:20:12)\n    at Object.<anonymous> (/tmp/tmp15cdxwsv.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738930
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    const prefix = string.slice(0, i);\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvnecw2j6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvnecw2j6.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if\
    \ (string[i] !== prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'df',\n  'gh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n\
    \  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp7e04tlfg.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7e04tlfg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'df',\
    \ 'gh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738930
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp404w2381.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp404w2381.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[0])\
    \ {\n      prefix = prefix + string[i];\n    } else {\n      prefixes.push(prefix);\n\
    \      prefix = string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxm8hn7gv.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxm8hn7gv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmptwykrun7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwykrun7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefix = prefix + string[i];\n\
    \        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpn2w6se8e.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn2w6se8e.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738931
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let current: string\
    \ = string;\n  while (current !== \"\") {\n    prefixes.unshift(current);\n  \
    \  current = current.slice(0, -1);\n  }\n  return prefixes;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738931
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgw98plf0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgw98plf0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738924
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n\
    \        if (char === prefix) {\n            prefixes.push(prefix);\n        \
    \    prefix = '';\n        } else {\n            prefix += char;\n        }\n\
    \    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpdcoic7rv.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpdcoic7rv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738921
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ \"\") {\n      prefixes.push(\"\");\n      i++;\n      continue;\n    }\n  \
    \  const prefix = string.substr(0, i);\n    prefixes.push(prefix);\n    i = i\
    \ + 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp7gt_beax.js:24:12)\n    at Object.<anonymous> (/tmp/tmp7gt_beax.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738931
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n\
    \      prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix\
    \ += string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkjh08n0i.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkjh08n0i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738922
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ char.toUpperCase()) {\n      prefixes.push(char);\n      i++;\n    } else {\n\
    \      prefixes.push(char.toUpperCase());\n      i++;\n    }\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'A',\n  'S',\n\
    \  'D',\n  'F',\n  'G',\n  'H'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz_1fkiq9.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz_1fkiq9.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'A', 'S',\
    \ 'D', 'F', 'G', 'H' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738931

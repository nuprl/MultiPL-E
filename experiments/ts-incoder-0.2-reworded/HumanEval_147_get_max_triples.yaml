name: HumanEval_147_get_max_triples
language: ts
prompt: "//You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i\
  \ - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j\
  \ < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n\
  // 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1,\
  \ 7, 13).\nfunction get_max_triples(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
  \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
  }\n\ntest();"
completions: ["    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n   \
    \     a.push(i * i - i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i\
    \ < a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n     \
    \       for (let k = j + 1; k < a.length; k++) {\n                if (a[i] < a[j]\
    \ && a[i] < a[k]) {\n                    count++;\n                }\n       \
    \     }\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>", "  let a = new Array(n).fill(0);\n  a[0] = 1;\n  for (let i\
    \ = 1; i < n; i++) {\n    a[i] = a[i-1] + i;\n  }\n  for (let i = 1; i < n; i++)\
    \ {\n    for (let j = 1; j < n; j++) {\n      for (let k = 1; k < n; k++) {\n\
    \        if (a[i] + a[j] + a[k] % 3 === 0) {\n          return 1;\n        }\n\
    \      }\n    }\n  }\n  return 0;\n}\n", "    let a: number[] = [];\n    for (let\
    \ i = 1; i <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    let count\
    \ = 0;\n    for (let i = 0; i < a.length - 1; i++) {\n        for (let j = i +\
    \ 1; j < a.length; j++) {\n            for (let k = j + 1; k < a.length; k++)\
    \ {\n                if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n      \
    \              count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\n", "    let a = Array(n).fill(0);\n    for (let i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    let count = 0;\n \
    \   for (let i = 1; i <= n; i++) {\n        for (let j = 1; j <= n; j++) {\n \
    \           for (let k = 1; k <= n; k++) {\n                if (a[i] < a[j] &&\
    \ a[i] < a[k] && a[j] < a[k]) {\n                    count++;\n              \
    \  }\n            }\n        }\n    }\n    return count;\n}\n", "    let a = new\
    \ Array(n).fill(0);\n    for (let i = 1; i <= n; i++) {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      for (let j = 1; j <= n; j++) {\n            for (let k = 1; k <= n; k++)\
    \ {\n                if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n      \
    \              count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\n", "    let a: number[] = [];\n    for (let i = 1; i <=\
    \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    let count = 0;\n    for\
    \ (let i = 0; i < a.length; i++) {\n        for (let j = i + 1; j < a.length;\
    \ j++) {\n            for (let k = j + 1; k < a.length; k++) {\n             \
    \   if (a[i] < a[j] && a[i] < a[k]) {\n                    count++;\n        \
    \        }\n            }\n        }\n    }\n    return count;\n}\n", "    let\
    \ a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i * i\
    \ - i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < a.length; i++)\
    \ {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let k\
    \ = j + 1; k < a.length; k++) {\n                if (a[i] < a[j] && a[i] < a[k])\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \    }\n    return count;\n}\n", "  let a = new Array(n);\n  for (let i = 0; i\
    \ < n; i++) {\n    a[i] = i * i - i + 1;\n  }\n  let count = 0;\n  for (let i\
    \ = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      for (let k\
    \ = j + 1; k < n; k++) {\n        if (a[i] + a[j] + a[k] % 3 === 0) {\n      \
    \    count++;\n        }\n      }\n    }\n  }\n  return count;\n}\n", "    let\
    \ a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i * i\
    \ - i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < a.length; i++)\
    \ {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let k\
    \ = j + 1; k < a.length; k++) {\n                if (a[i] < a[j] && a[i] < a[k])\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \    }\n    return count;\n}\n", "  let a = new Array(n).fill(0);\n  a[0] = 1;\n\
    \  for (let i = 1; i < n; i++) {\n    for (let j = i; j < n; j++) {\n      for\
    \ (let k = j; k < n; k++) {\n        if (a[i] + a[j] + a[k] === 3) {\n       \
    \   return 1;\n        }\n      }\n    }\n  }\n  return 0;\n}\n", "  let a = new\
    \ Array(n);\n  for (let i = 0; i < n; i++) {\n    a[i] = i * i - i + 1;\n  }\n\
    \  let count = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n;\
    \ j++) {\n      for (let k = 0; k < n; k++) {\n        if (a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k]) {\n          count++;\n        }\n      }\n    }\n  }\n\
    \  return count;\n}\n", "    let a: number[] = [];\n    for (let i = 1; i <= n;\
    \ i++) {\n        a.push(i * i - i + 1);\n    }\n    let count = 0;\n    for (let\
    \ i = 0; i < a.length; i++) {\n        for (let j = i + 1; j < a.length; j++)\
    \ {\n            for (let k = j + 1; k < a.length; k++) {\n                if\
    \ (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n",
  "    let a = new Array(n).fill(0);\n    for (let i = 1; i <= n; i++) {\n       \
    \ a[i] = i * i - i + 1;\n    }\n    let count = 0;\n    for (let i = 1; i <= n;\
    \ i++) {\n        for (let j = 1; j <= n; j++) {\n            for (let k = 1;\
    \ k <= n; k++) {\n                if (a[i] < a[j] && a[j] < a[k]) {\n        \
    \            count++;\n                }\n            }\n        }\n    }\n  \
    \  return count;\n}\n", "    let a = new Array(n);\n    for (let i = 0; i < n;\
    \ i++) {\n        a[i] = i * i - i + 1;\n    }\n    let count = 0;\n    for (let\
    \ i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n          \
    \  for (let k = j + 1; k < n; k++) {\n                if (a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k]) {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\n", "  let a = new Array(n);\n\
    \  for (let i = 0; i < n; i++) {\n    a[i] = i * i - i + 1;\n  }\n  let count\
    \ = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n\
    \      for (let k = j + 1; k < n; k++) {\n        if (a[i] + a[j] + a[k] % 3 ===\
    \ 0) {\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n\
    }\n", "    let a: number[] = new Array(n).fill(0);\n    for (let i: number = 0;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    let result = 0;\n \
    \   for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1;\
    \ j < n; j++) {\n            for (let k: number = j + 1; k < n; k++) {\n     \
    \           if (a[i] + a[j] + a[k] % 3 === 0) {\n                    result =\
    \ Math.max(result, i + j + k);\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=algorithm,arrays,javascript\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27644546)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He asked how to find the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, where a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. He asked how to find\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, where a[i] +\
    \ a[j] + a[k] is a multiple of 3.\n<|/ c |>\n<| c |>\nI believe this does answer\
    \ the question. He asked how to find the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, where a[i] + a[j] + a[k] is a multiple of 3.\n<|/ c |>\n\
    <| c |>\nThis doesn't answer the question. He asked how to find the number of\
    \ triples (a[i], a[j], a[k]) of a where i < j < k, where a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    let a = new Array(n);\n\
    \    for (let i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n   \
    \ let count = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i +\
    \ 1; j < n; j++) {\n            for (let k = j + 1; k < n; k++) {\n          \
    \      if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n",
  "    let a = new Array(n).fill(0);\n    for (let i = 1; i <= n; i++) {\n       \
    \ for (let j = 1; j <= n; j++) {\n            if (j > i) {\n                for\
    \ (let k = 1; k <= n; k++) {\n                    if (k > j && k > i) {\n    \
    \                    if (a[k] + a[j] + a[i] % 3 == 0) {\n                    \
    \        return 1;\n                        }\n                    }\n       \
    \         }\n            }\n        }\n    }\n    return 0;\n}\n", "    let a:\
    \ number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i * i - i\
    \ + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < a.length; i++) {\n\
    \        for (let j = i + 1; j < a.length; j++) {\n            for (let k = j\
    \ + 1; k < a.length; k++) {\n                if (a[i] < a[j] && a[i] < a[k]) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n", "    let a: number[] = new Array(n).fill(0);\n\
    \    for (let i = 1; i <= n; i++) {\n        for (let j = i; j <= n; j++) {\n\
    \            for (let k = j; k <= n; k++) {\n                if (i + j + k ===\
    \ 2 * i) {\n                    a[i] = a[i] + (i + j + k);\n                }\n\
    \            }\n        }\n    }\n    return a.reduce((a, b) => a + (b % 3 ===\
    \ 0));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

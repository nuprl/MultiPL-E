name: HumanEval_88_sort_array
language: ts
prompt: "//Given an array of non-negative integers, return a cots of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n// >>> sort_array([5])\n\
  // [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0, 1, 2, 3, 4, 5]\n// >>> sort_array([2,\
  \ 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array: number[]):\
  \ number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4, 3,\
  \ 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5,\
  \ 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1, 2]);\n \
  \ assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42, 87]);\n\
  \  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\ntest();"
completions: ["  const len = array.length;\n  if (len === 0) {\n    return [];\n \
    \ }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const sumArray =\
    \ array.map(item => item + item);\n  const sumArraySum = sumArray.reduce((a, b)\
    \ => a + b);\n  const isOdd = sumArraySum % 2 === 1;\n  const isEven = sumArraySum\
    \ % 2 === 0;\n  const sortedArray = isOdd ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n  return isEven ? sortedArray.concat().reverse() : sortedArray;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n\
    \  const mid = Math.floor(len / 2);\n  const left = array.slice(0, mid);\n  const\
    \ right = array.slice(mid);\n  const sumLeft = left\n    .map((item) => item +\
    \ 0)\n    .reduce((acc, cur) => acc + cur, 0);\n  const sumRight = right\n   \
    \ .map((item) => item + 0)\n    .reduce((acc, cur) => acc + cur, 0);\n  if (sumLeft\
    \ % 2 === 1) {\n    return sort_array(left).concat(sort_array(right));\n  }\n\
    \  if (sumRight % 2 === 0) {\n    return sort_array(right).concat(sort_array(left));\n\
    \  }\n  return sort_array(left).concat(sort_array(right));\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum %\
    \ 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  if (firstIndex === lastIndex) {\n    return array;\n  }\n  const sum = firstIndex\
    \ + lastIndex;\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n\
    \  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ if (firstIndex % 2 === 1) {\n    return array.sort((a, b) => b - a);\n  }\n\
    \  return array.sort((a, b) => a - b);\n}\n", "  let sum = 0;\n  for (let i =\
    \ 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if (len ===\
    \ 0) {\n    return array;\n  }\n  const sum = array.reduce((a, b) => a + b, 0);\n\
    \  const even = sum % 2 === 0;\n  const odd = !even;\n  if (even) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex)\
    \ % 2 === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b)\
    \ => b - a);\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return\
    \ array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  const isOdd = (sum\
    \ % 2 === 1);\n  if (isOdd) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const len = array.length;\n  if (len ===\
    \ 1) {\n    return array;\n  }\n  const mid = Math.floor(len / 2);\n  const left\
    \ = array.slice(0, mid);\n  const right = array.slice(mid);\n  const leftSum =\
    \ sum(left);\n  const rightSum = sum(right);\n  if (leftSum > rightSum) {\n  \
    \  return sort_array(left);\n  }\n  return sort_array(right);\n}\n", "  const\
    \ sum = (first: number, last: number) => first + last;\n  const isOdd = (first:\
    \ number, last: number) => first % 2 !== 0 && last % 2 === 0;\n  const isEven\
    \ = (first: number, last: number) => first % 2 === 0 && last % 2 !== 0;\n  const\
    \ isSumOdd = (first: number, last: number) => sum(first, last) % 2 !== 0;\n  const\
    \ isSumEven = (first: number, last: number) => sum(first, last) % 2 === 0;\n \
    \ const isFirstOdd = (first: number, last: number) => first % 2 === 0;\n  const\
    \ isLastEven = (first: number, last: number) => last % 2 === 0;\n  const isFirstEven\
    \ = (first: number, last: number) => first % 2 !== 0;\n  const isLastOdd = (first:\
    \ number, last: number) => last % 2 !== 0;\n  const isFirstSumOdd = (first: number,\
    \ last: number) => sum(first, last) % 2 !== 0;\n  const isFirstSumEven = (first:\
    \ number, last: number) => sum(first, last) % 2 === 0;\n  const isLastSumEven\
    \ = (first: number, last: number) => sum(first, last) % 2 === 0;\n  const isFirstSumOddEven\
    \ = (first: number, last: number) => sum(first, last) % 2 !== 0;\n  const isLastSumOddEven\
    \ = (first: number, last: number) => sum(first, last) % 2 === 0;\n  const isFirstSumEvenOdd\
    \ = (first: number, last: number) => sum(first, last) % 2 !== 0;\n  const isLastSumEvenOdd\
    \ = (first: number, last: number) => sum(first, last) % 2 === 0;\n  const isFirstSumOddOddEven\
    \ = (first: number, last: number) => sum(first, last) % 2 !== 0;\n  const isLastSumOddOddEven\
    \ = (first: number, last: number) => sum(first, last) % 2 === 0;\n  const isFirstSumEvenEvenOdd\
    \ = (first: number, last: number) => sum(first, last) % 2 !== 0;\n  const isLastSumEvenEvenOdd\
    \ = (first: number, last: number) => sum(first, last) % 2 === 0;\n  const isFirstSumOddEvenOddEven\
    \ = (first: number, last: number) => sum(first, last) % 2 !== 0;\n  const isLastSumOddEvenOddEven\
    \ = (first: number, last: number) => sum(first, last) % 2 === 0;\n  const isFirstSumEvenEvenEvenOdd\
    \ = (first: number, last: number) => sum(first, last) % ", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const sum = Math.sum(array);\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len <= 1) {\n    return array;\n  }\n  const firstValue = array[0];\n  const\
    \ lastValue = array[len - 1];\n  const firstSum = firstValue + firstValue;\n \
    \ const lastSum = lastValue + lastValue;\n  if (firstSum % 2 === 0 && lastSum\
    \ % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\n  return array.sort((a,\
    \ b) => b - a);\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const [first, last] = array;\n  if (last < first) {\n    return\
    \ array;\n  }\n  const mid = Math.floor((first + last) / 2);\n  const [firstHalf,\
    \ secondHalf] = sort_array(array.slice(0, mid));\n  const [secondHalf, thirdHalf]\
    \ = sort_array(array.slice(mid));\n  return mergeSort(firstHalf, secondHalf, thirdHalf);\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return\
    \ array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a, b) => b\
    \ - a);\n  }\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n",
  "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum\
    \ = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const sumFirst = firstIndex + lastIndex;\n\
    \  const sumLast = firstIndex + lastIndex;\n  if (sumFirst % 2 === 1) {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const isEvenSum = firstIndex + lastIndex %\
    \ 2 === 0;\n  const isOddSum = firstIndex + lastIndex % 2 !== 0;\n  const isEven\
    \ = firstIndex + lastIndex % 2 === 0;\n  const isOdd = firstIndex + lastIndex\
    \ % 2 !== 0;\n  if (isEvenSum) {\n    return array.sort((a, b) => a - b);\n  }\n\
    \  if (isOddSum) {\n    return array.sort((a, b) => b - a);\n  }\n  if (isEven)\
    \ {\n    return array.sort((a, b) => b - a);\n  }\n  if (isOdd) {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  const even = sum % 2 === 0;\n  const odd = !even;\n  if (even) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const sum = array.reduce((acc,\
    \ val) => acc + val, 0);\n  if (sum % 2 === 0) {\n    return array.sort((a, b)\
    \ => a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  const isOdd = (sum % 2) === 1;\n  const result = [];\n  for (let i = 1; i <\
    \ len; i++) {\n    const cur = array[i];\n    const prev = array[i - 1];\n   \
    \ const next = (isOdd ? prev : cur);\n    if (cur > next) {\n      result.push(cur);\n\
    \    } else {\n      result.push(next);\n    }\n  }\n  return result;\n}\n", " \
    \ const sum = (first: number, last: number) => first + last;\n  const isOdd =\
    \ (first: number, last: number) => sum(0, last) % 2 === 1;\n  const isEven = (first:\
    \ number, last: number) => sum(0, last) % 2 === 0;\n  const isEvenOrOdd = (first:\
    \ number, last: number) => isEven(first, last) || isOdd(first, last);\n  const\
    \ sortedArray = array.sort((a, b) => isEvenOrOdd(a, b) ? 1 : -1);\n  return sortedArray;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return\
    \ array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a, b) => b\
    \ - a);\n  }\n}\n", "  if (array.length <= 1) {\n    return array;\n  }\n  const\
    \ [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex\
    \ + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) => b - a) : array.sort((a,\
    \ b) => a - b);\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n\
    \    return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum\
    \ % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = array[0];\n  const cots =\
    \ [];\n  for (let i = 1; i < len; i++) {\n    const cur = array[i];\n    if (cur\
    \ > sum) {\n      cots.push(cur);\n      sum = sum + cur;\n    } else {\n    \
    \  cots.push(sum);\n      sum = cur;\n    }\n  }\n  cots.push(sum);\n  return\
    \ cots;\n}\n", "  if (array.length <= 1) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const sum = firstIndex + lastIndex;\n\
    \  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n\
    \    return array.sort((a, b) => b - a);\n  }\n}\n", "  const sum = array.reduce((acc,\
    \ val) => acc + val, 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a -\
    \ b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n",
  "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum\
    \ = array.reduce((acc, cur) => acc + cur, 0);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  const len = array.length;\n\
    \  const sum = (array[0] + array[len - 1]);\n  const isOdd = (sum % 2) === 1;\n\
    \  const isEven = (sum % 2) === 0;\n  if (isOdd) {\n    array.sort((a, b) => a\
    \ - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const sumFirstIndex = firstIndex\
    \ + lastIndex;\n  const sumLastIndex = firstIndex + lastIndex;\n  if (sumFirstIndex\
    \ % 2 === 1) {\n    return array.sort((a, b) => b - a);\n  }\n  return array.sort((a,\
    \ b) => a - b);\n}\n", "  const sum = array.reduce((a, b) => a + b, 0);\n  if\
    \ (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if\
    \ (array.length <= 1) {\n    return array;\n  }\n\n  const sum = (array[0] + array[array.length\
    \ - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\
    \ else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  if (len === 1) {\n    return array;\n\
    \  }\n  const mid = Math.floor(len / 2);\n  const left = sort_array(array.slice(0,\
    \ mid));\n  const right = sort_array(array.slice(mid));\n  const sumLeft = left[0]\
    \ + left[left.length - 1];\n  const sumRight = right[0] + right[right.length -\
    \ 1];\n  if (sumLeft > sumRight) {\n    return left;\n  }\n  return right;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (first:\
    \ number, last: number) => first + last;\n  const isOdd = (sum: number) => sum\
    \ % 2 === 1;\n  const isEven = (sum: number) => sum % 2 === 0;\n  const sortAsc\
    \ = (first: number, last: number) => {\n    if (first < last) {\n      const temp\
    \ = first;\n      first = last;\n      last = temp;\n    }\n  };\n  const sortDesc\
    \ = (first: number, last: number) => {\n    if (first > last) {\n      const temp\
    \ = first;\n      first = last;\n      last = temp;\n    }\n  };\n  const sortedArray\
    \ = array.sort((a, b) => {\n    const aSum = sum(a);\n    const bSum = sum(b);\n\
    \    if (isOdd(aSum)) {\n      sortAsc(a, b);\n    } else if (isEven(bSum)) {\n\
    \      sortDesc(a, b);\n    }\n    return aSum - bSum;\n  });\n  return sortedArray;\n\
    }\n", "  const sum = (first: number, last: number) => first + last;\n  const isOdd\
    \ = (first: number, last: number) => sum(0, last) % 2 === 1;\n  const isEven =\
    \ (first: number, last: number) => sum(0, last) % 2 === 0;\n  const sortedArray\
    \ = array.sort((a, b) => {\n    if (isOdd(a, b)) {\n      return -1;\n    }\n\
    \    if (isEven(a, b)) {\n      return 1;\n    }\n    return a - b;\n  });\n \
    \ return sortedArray;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex\
    \ === lastIndex) {\n    return array;\n  }\n  const isOdd = (firstIndex + lastIndex)\
    \ % 2 === 1;\n  const sortedArray = isOdd ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n  return sortedArray;\n}\n", "  if (array.length === 0) {\n \
    \   return array;\n  }\n\n  const len = array.length;\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const\
    \ sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return array;\n  }\n  const sum = Math.floor(array.reduce((acc,\
    \ cur) => acc + cur, 0) / 2);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n  const sum = array.reduce((sum, value) => sum + value,\
    \ 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum =\
    \ array.reduce((acc, curr) => acc + curr, 0);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return\
    \ array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a, b) => b\
    \ - a);\n  }\n}\n", "  const sum = array.reduce((a, b) => a + b, 0);\n  const\
    \ isOdd = sum % 2 === 1;\n  const isEven = sum % 2 === 0;\n  if (isOdd) {\n  \
    \  array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const sum = array.reduce((acc, val) => acc + val,\
    \ 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) =>\
    \ a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n  const\
    \ sum = firstIndex + lastIndex;\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2\
    \ === 1;\n  const sortedArray = isOdd ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n  return sortedArray;\n}\n", "  if (array.length === 0) {\n \
    \   return array;\n  }\n  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const sumOfFirstIndex = firstIndex\
    \ + lastIndex;\n  if (sumOfFirstIndex % 2 === 0) {\n    return array.sort((a,\
    \ b) => b - a);\n  } else {\n    return array.sort((a, b) => a - b);\n  }\n}\n",
  "  const sum = (first: number, last: number) => first + last;\n  const odd = (first:\
    \ number, last: number) => first % 2 === 1;\n  const even = (first: number, last:\
    \ number) => first % 2 === 0;\n  const [min, max] = array.sort((a, b) => sum(a,\
    \ b));\n  if (odd(min, max)) {\n    return array.sort((a, b) => sum(a, b));\n\
    \  }\n  return array.sort((a, b) => sum(b, a));\n}\n", "  if (array.length ===\
    \ 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ const [firstValue, lastValue] = [firstIndex, lastIndex];\n  const isOdd = (firstValue\
    \ + lastValue) % 2 === 1;\n  const isEven = (firstValue + lastValue) % 2 === 0;\n\
    \  return isOdd ? [...array, ...array.slice(firstValue, lastValue + 1)] :\n  \
    \  [...array.slice(firstValue, lastValue), ...array];\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  if (len === 1) {\n    return array;\n\
    \  }\n  const mid = Math.floor(len / 2);\n  const left = array.slice(0, mid);\n\
    \  const right = array.slice(mid);\n  const leftSum = sum(left);\n  const rightSum\
    \ = sum(right);\n  if (leftSum > rightSum) {\n    return sort_array(left);\n \
    \ }\n  return sort_array(right);\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  const sum = array.reduce((acc,\
    \ val) => acc + val, 0);\n  const isOdd = sum % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return array;\n  }\n  const sum = array.reduce((prev,\
    \ curr) => prev + curr, 0);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum = array.reduce((acc,\
    \ val) => acc + val, 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a -\
    \ b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n",
  "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum\
    \ = Math.sum(array);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  let sum = 0;\n  for (let\
    \ i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i <\
    \ array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n  \
    \  array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const sum = (arr: number[]) => arr.reduce((acc,\
    \ cur) => acc + cur, 0);\n  const isOdd = (sum: number) => sum % 2 === 1;\n  const\
    \ isEven = (sum: number) => sum % 2 === 0;\n  const isEvenOrOdd = (sum: number)\
    \ => isEven(sum) || isOdd(sum);\n  const isEvenOrOddAndNotZero = (sum: number)\
    \ => isEvenOrOdd(sum) && sum > 0;\n  const isEvenOrOddAndNotZeroAndNotNegative\
    \ = (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0;\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotEqualToMax\
    \ = (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0 && sum != array.length;\n\
    \  const isEvenOrOddAndNotZeroAndNotNegativeAndNotEqualToMaxAndNotEqualToMax =\
    \ (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0 && sum != array.length\
    \ && sum != array.length - 1;\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMax\
    \ = (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0 && sum != array.length\
    \ && sum != array.length - 1 && sum != array.length - 2;\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMax\
    \ = (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0 && sum != array.length\
    \ && sum != array.length - 1 && sum != array.length - 2 && sum != array.length\
    \ - 3;\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMax\
    \ = (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0 && sum != array.length\
    \ && sum != array.length - 1 && sum != array.length - 2 && sum != array.length\
    \ - 3 && sum != array.length - 4;\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMaxAndNotEqualToMax\
    \ = (sum: number) => isEvenOrOdd(sum) && sum > 0 && sum < 0 && sum != array.length\
    \ && sum != array", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const\
    \ sum = (first: number, last: number) => first + last;\n  const isOdd = (first:\
    \ number, last: number) => sum(0, last) % 2 === 1;\n  const isEven = (first: number,\
    \ last: number) => sum(0, last) % 2 === 0;\n  const isEvenOrOdd = (first: number,\
    \ last: number) => isEven(first, last) || isOdd(first, last);\n  const isEvenOrOddAndNotZero\
    \ = (first: number, last: number) => isEvenOrOdd(first, last) && ! isZero(first,\
    \ last);\n  const isEvenOrOddAndNotZeroAndNotNegative = (first: number, last:\
    \ number) => isEvenOrOddAndNotZero(first, last) && ! isNegative(first, last);\n\
    \  const isEvenOrOddAndNotZeroAndNotNegativeAndNotZero = (first: number, last:\
    \ number) => isEvenOrOddAndNotZeroAndNotNegative(first, last) && ! isZero(first,\
    \ last);\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegative\
    \ = (first: number, last: number) => isEvenOrOddAndNotZeroAndNotNegativeAndNotZero(first,\
    \ last) && ! isNegative(first, last);\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZero\
    \ = (first: number, last: number) => isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegative(first,\
    \ last) && ! isZero(first, last);\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZeroAndNotNegative\
    \ = (first: number, last: number) => isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZero(first,\
    \ last) && ! isNegative(first, last);\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZero\
    \ = (first: number, last: number) => isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZeroAndNotNegative(first,\
    \ last) && ! isZero(first, last);\n  const isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZeroAndNotNegative\
    \ = (first: number, last: number) => isEvenOrOddAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZeroAndNotNegativeAndNotZero",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n    return\
    \ array;\n  }\n  const [firstIndexSum, lastIndexSum] = array.sort((a, b) => a\
    \ - b);\n  if (firstIndexSum === lastIndexSum) {\n    return array;\n  }\n  return\
    \ [...array.slice(0, firstIndex), ...array.slice(firstIndex + 1, lastIndex), ...array.slice(lastIndex\
    \ + 1)];\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n\
    \  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n   \
    \ array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < len; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (array[0] + array[array.length\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex\
    \ === lastIndex) {\n    return array;\n  }\n  if (firstIndex % 2 === 0 && lastIndex\
    \ % 2 !== 0) {\n    return array.sort((a, b) => b - a);\n  }\n  return array.sort((a,\
    \ b) => a - b);\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum = array.reduce((a,\
    \ b) => a + b, 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len =\
    \ array.length;\n  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const\
    \ sum = (array[0] + array[len - 1]);\n  const isOdd = (sum % 2 === 1);\n  if (isOdd)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n  \
    \  sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a -\
    \ b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n",
  "  const sum = array.reduce((acc, curr) => acc + curr, 0);\n  const isOdd = (sum\
    \ % 2 === 1);\n  const isEven = (sum % 2 === 0);\n  if (isOdd) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n\n  const sumOfFirstElement\
    \ = array.reduce((sum, value) => sum + value, 0);\n  const sumOfLastElement =\
    \ array.reduce((sum, value) => sum + value, 0);\n\n  const isEvenSum = sumOfFirstElement\
    \ % 2 === 0;\n  const isOddSum = sumOfLastElement % 2 === 0;\n\n  if (isEvenSum)\
    \ {\n    return array.sort((a, b) => a - b);\n  }\n\n  return array.sort((a, b)\
    \ => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n\
    \    return array;\n  }\n  const [firstValue, lastValue] = [firstIndex, lastIndex];\n\
    \  const [firstSum, lastSum] = [firstValue + lastValue, firstValue - lastValue];\n\
    \  if (firstSum % 2 === 0 && lastSum % 2 !== 0) {\n    return array.sort((a, b)\
    \ => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n", "  const len =\
    \ array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n    return\
    \ array;\n  }\n  const [firstValue, lastValue] = [firstIndex, lastIndex];\n  const\
    \ [firstSum, lastSum] = [firstValue + lastValue, firstValue - lastValue];\n  if\
    \ (firstSum % 2 === 0 && lastSum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ const [firstValue, secondValue] = array.sort((a, b) => a - b);\n  if (firstValue\
    \ === secondValue) {\n    return array;\n  }\n  return [firstValue, ...sort_array(array.slice(firstIndex\
    \ + 1, lastIndex)), secondValue];\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length <= 1) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const isEven = firstIndex % 2 ===\
    \ 0;\n  const isOdd = lastIndex % 2 === 0;\n  const isSumEven = firstIndex + lastIndex\
    \ % 2 === 0;\n  const isSumOdd = firstIndex + lastIndex % 2 !== 0;\n  if (isSumEven)\
    \ {\n    return array.sort((a, b) => b - a);\n  }\n  if (isSumOdd) {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n  if (isEven) {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n  if (isOdd) {\n    return array.sort((a, b) => a - b);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const\
    \ oddSum = firstIndex + lastIndex;\n  const evenSum = firstIndex - lastIndex;\n\
    \  if (oddSum % 2 === 1) {\n    return array.sort((a, b) => a - b);\n  }\n  return\
    \ array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const oddSum = firstIndex + lastIndex;\n\
    \  const evenSum = firstIndex - lastIndex;\n  if (oddSum % 2 === 1) {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n",
  "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum\
    \ = (array[0] + array[len - 1]);\n  const isOdd = sum % 2 === 1;\n  const isEven\
    \ = sum % 2 === 0;\n  if (isOdd) {\n    array.sort((a, b) => a - b);\n  } else\
    \ {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  const sum = array.reduce((acc,\
    \ val) => acc + val, 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a -\
    \ b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n\n  const sumOfFirstElement\
    \ = array.reduce((sum, value) => sum + value, 0);\n  const sumOfLastElement =\
    \ array.reduce((sum, value) => sum + value, 0);\n\n  if (sumOfFirstElement % 2\
    \ === 1) {\n    return array.sort((a, b) => a - b);\n  }\n\n  return array.sort((a,\
    \ b) => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  const isOdd = (sum % 2 === 1);\n\
    \  if (isOdd) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = array.reduce((acc, val) =>\
    \ acc + val, 0);\n  const isEven = sum % 2 === 0;\n  const isOdd = !isEven;\n\
    \  const isOddEven = isOdd && isEven;\n  const isOddOdd = isOdd && !isEven;\n\
    \  const isEvenEven = isEven && !isOdd;\n  const isEvenOdd = isEven && isOdd;\n\
    \  const isOddEvenEven = isOddEven && isEvenEven;\n  const isOddEvenOdd = isOddEven\
    \ && !isEvenEven;\n  const isEvenEvenEven = isEvenEven && !isOddEven;\n  const\
    \ isEvenOddEven = isEvenOdd && isOddEven;\n  const isOddEvenEven = isOddEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const isEvenEvenEven = isEvenEven;\n\
    \  const isEvenOddEven = isEvenOddEven;\n  const isOddEvenEven = isOddEvenEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const isEvenEvenEven = isEvenEvenEven;\n\
    \  const isEvenOddEven = isEvenOddEven;\n  const isOddEvenEven = isOddEvenEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const isEvenEvenEven = isEvenEvenEven;\n\
    \  const isEvenOddEven = isEvenOddEven;\n  const isOddEvenEven = isOddEvenEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const isEvenEvenEven = isEvenEven;\n\
    \  const isEvenOddEven = isEvenOddEven;\n  const isOddEvenEven = isOddEvenEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const isEvenEvenEven = isEvenEven;\n\
    \  const isEvenOddEven = isEvenOddEven;\n  const isOddEvenEven = isOddEvenEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const isEvenEvenEven = isEvenEven;\n\
    \  const isEvenOddEven = isEvenOddEven;\n  const isOddEvenEven = isOddEvenEven;\n\
    \  const isOddEvenOdd = isOddEvenOdd;\n  const is", "  if (array.length === 0)\
    \ {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const sumFirstIndex = firstIndex + lastIndex;\n  if (sumFirstIndex\
    \ % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = array.reduce((acc, val) =>\
    \ acc + val, 0);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a -\
    \ b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n  let\
    \ sum = 0;\n  for (let i = 0; i < len; i++) {\n    sum += array[i];\n  }\n  if\
    \ (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n  const sum = Math.sum(array);\n  if (sum % 2 === 0) {\n\
    \    return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const sum = (array[0] + array[array.length - 1]);\n  if (sum % 2 === 0)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if (len ===\
    \ 0) {\n    return [];\n  }\n  const sum = array.reduce((acc, val) => acc + val,\
    \ 0);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else\
    \ {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  if (array.length <=\
    \ 1) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex + lastIndex & 1) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const len = array.length;\n\
    \  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\
    \ else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n\n  const [firstIndex, lastIndex] = array.sort((a, b) =>\
    \ a - b);\n\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n\n  const\
    \ sumFirstIndex = firstIndex + lastIndex;\n  const sumLastIndex = firstIndex +\
    \ lastIndex;\n\n  if (sumFirstIndex % 2 === 1) {\n    return array.sort((a, b)\
    \ => b - a);\n  }\n\n  return array.sort((a, b) => a - b);\n}\n", "  let sum =\
    \ 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n  const sumOfFirstIndexAndLastIndex = array.reduce((sum,\
    \ num) => sum + num, 0);\n  const isEvenSum = sumOfFirstIndexAndLastIndex % 2\
    \ === 0;\n  const sortedArray = array.sort((a, b) => {\n    if (a === b) {\n \
    \     return 0;\n    }\n    if (isEvenSum) {\n      return a - b;\n    }\n   \
    \ return b - a;\n  });\n  return sortedArray;\n}\n", "  if (array.length === 0)\
    \ {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ if (firstIndex % 2 === 1) {\n    return array.sort((a, b) => b - a);\n  }\n\
    \  return array.sort((a, b) => a - b);\n}\n", "  const sum = (first: number, last:\
    \ number) => first + last;\n  const odd = (first: number, last: number) => first\
    \ % 2 === 1;\n  const even = (first: number, last: number) => first % 2 === 0;\n\
    \  const swap = (first: number, last: number) => {\n    const temp = first;\n\
    \    first = last;\n    last = temp;\n  };\n  const cots = (array: number[]) =>\
    \ {\n    const result: number[] = [];\n    let sum = 0;\n    let index = 0;\n\
    \    for (let i = 0; i < array.length; i++) {\n      sum += array[i];\n      if\
    \ (odd(sum, index)) {\n        result.push(array[i]);\n      }\n      if (even(sum,\
    \ index)) {\n        result.push(array[i]);\n      }\n      index++;\n    }\n\
    \    return result;\n  };\n  return cots(array);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\n\
    \  return array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n \
    \ if (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const sum = firstIndex + lastIndex;\n  if (sum % 2 === 0) {\n\
    \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
    \ b) => a - b);\n  }\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ const sumOfFirstAndLast = firstIndex + lastIndex;\n  if (sumOfFirstAndLast %\
    \ 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len <= 0) {\n\
    \    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = Math.sum(array);\n  const even = sum % 2 === 0;\n  const odd =\
    \ !even;\n  if (even) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  const isOdd = (sum % 2 === 1);\n  const isEven = (sum % 2 === 0);\n  if (isOdd)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if (len ===\
    \ 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if\
    \ (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (first: number, last:\
    \ number) => first + last;\n  const isOdd = (sum: number) => sum % 2 === 1;\n\
    \  const isEven = (sum: number) => sum % 2 === 0;\n  const sortedArray = array.sort((a,\
    \ b) => isEven(sum(a, b)) ? -1 : isOdd(sum(a, b)) ? 1 : 0);\n  return sortedArray;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n\
    \    return array;\n  }\n  return [...array.slice(0, firstIndex), ...array.slice(firstIndex\
    \ + 1, lastIndex), ...array.slice(lastIndex + 1)];\n}\n", "  if (array.length\
    \ <= 1) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const sumFirst = firstIndex + lastIndex;\n  const sumLast =\
    \ firstIndex + lastIndex;\n  if (sumFirst % 2 === 1) {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const isEven = firstIndex % 2 === 0;\n  const\
    \ isOdd = lastIndex % 2 === 0;\n  const isSumEven = firstIndex + lastIndex % 2\
    \ === 0;\n  const isSumOdd = firstIndex + lastIndex % 2 !== 0;\n  if (isEven)\
    \ {\n    return isSumOdd ? array.sort((a, b) => b - a) : array.sort((a, b) =>\
    \ a - b);\n  }\n  return isSumEven ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n\
    \  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const oddSum\
    \ = firstIndex + lastIndex;\n  const evenSum = firstIndex - lastIndex;\n  if (oddSum\
    \ % 2 === 1) {\n    return array.sort((a, b) => b - a);\n  }\n  return array.sort((a,\
    \ b) => a - b);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n\
    \    return array;\n  }\n  if (firstIndex % 2 === 1) {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len <= 0) {\n\
    \    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 1) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if\
    \ (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n    return\
    \ array;\n  }\n  const [firstValue, lastValue] = [firstIndex, lastIndex];\n  if\
    \ (firstValue + lastValue % 2 === 0) {\n    return array.sort((a, b) => b - a);\n\
    \  } else {\n    return array.sort((a, b) => a - b);\n  }\n}\n", "  let sum =\
    \ 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return [];\n  }\n  if (len === 1) {\n    return array;\n\
    \  }\n  const [first, last] = array;\n  const mid = Math.floor(len / 2);\n  const\
    \ left = array.slice(0, mid);\n  const right = array.slice(mid);\n  const sum\
    \ = left + right;\n  const isOdd = sum % 2 === 1;\n  const sortedArray = isOdd\
    \ ? left : right;\n  return sortedArray;\n}\n", "  let sum = 0;\n  for (let i\
    \ = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  const sum = array.reduce((a, b) => a\
    \ + b, 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else\
    \ {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n\n  const [firstIndex, lastIndex] = array.sort((a, b) =>\
    \ a - b);\n  const sumOfFirstAndLast = firstIndex + lastIndex;\n  const isOdd\
    \ = sumOfFirstAndLast % 2 === 1;\n\n  return isOdd ? array.sort((a, b) => a -\
    \ b) : array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const\
    \ sumFirstIndex = firstIndex + lastIndex;\n  const sumLastIndex = firstIndex +\
    \ lastIndex;\n  if (sumFirstIndex % 2 === 1) {\n    return array.sort((a, b) =>\
    \ b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const oddSum = firstIndex + lastIndex;\n\
    \  const evenSum = firstIndex - lastIndex;\n  if (oddSum % 2 === 1) {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  let sum = 0;\n  for (let\
    \ i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i <\
    \ array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n  \
    \  array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum %\
    \ 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  const even = sum % 2 === 0;\n \
    \ const odd = !even;\n  if (even) {\n    array.sort((a, b) => a - b);\n  } else\
    \ {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const sum = array.reduce((sum, value) => sum +\
    \ value, 0);\n  if (sum % 2 === 1) {\n    return array.sort((a, b) => a - b);\n\
    \  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

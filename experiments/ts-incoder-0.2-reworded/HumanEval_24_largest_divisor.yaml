name: HumanEval_24_largest_divisor
language: ts
prompt: "//For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n: number):\
  \ number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
  \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
  \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
completions: ["  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n      \
    \  max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return\
    \ max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i < n; ++i) {\n    if (n % i == 0) {\n      if (max_divisor < i)\
    \ {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let divisor = 1;\n  let factor = 2;\n\
    \  while (factor < n) {\n    if (n % factor === 0) {\n      divisor = factor;\n\
    \    }\n    factor++;\n  }\n  return divisor;\n}\n", "  let divisor = 1;\n  let\
    \ max_divisor = 1;\n  for (let i = 2; i <= n; i++) {\n    if (n % i === 0) {\n\
    \      divisor = i;\n      if (max_divisor < divisor) {\n        max_divisor =\
    \ divisor;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let divisor =\
    \ 1;\n  let result = n;\n  while (result % divisor === 0) {\n    divisor *= 10;\n\
    \  }\n  while (result % divisor === 0) {\n    result /= divisor;\n  }\n  return\
    \ result;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = max_divisor_p2;\n\
    \      }\n      max_divisor_p2 = i;\n    }\n  }\n  return max_divisor;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    \
    \  if (max_divisor_p2 < i) {\n        max_divisor_p2 = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = n;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      max_divisor\
    \ = i;\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor;\n}\n", " \
    \ let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_p = i;\n\
    \    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let max_divisor = n;\n\
    \  while (max_divisor % divisor === 0) {\n    max_divisor *= 2;\n    divisor++;\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n      if (max_divisor_p < i) {\n        max_divisor_p\
    \ = i;\n      }\n      if (max_divisor_p2 < i) {\n        max_divisor_p2 = i;\n\
    \      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n \
    \ let max_divisor_p = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let\
    \ divisor = 1;\n  let max_divisor = n;\n  while (max_divisor % divisor === 0)\
    \ {\n    max_divisor *= 2;\n    divisor++;\n  }\n  return max_divisor;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <\
    \ n; ++i) {\n    if (n % i == 0) {\n      let divisor_p = i / max_divisor;\n \
    \     if (divisor_p > max_divisor_p) {\n        max_divisor_p = divisor_p;\n \
    \       max_divisor = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", " \
    \ let divisor = 1;\n  let largest_divisor = divisor;\n  for (let i = 1; i < n;\
    \ i++) {\n    if (n % i == 0) {\n      divisor = i;\n      if (divisor > largest_divisor)\
    \ {\n        largest_divisor = divisor;\n      }\n    }\n  }\n  return largest_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    const divisor = i;\n    const divisor_p\
    \ = divisor * i;\n    const divisor_p2 = divisor_p * i;\n    if (divisor > max_divisor)\
    \ {\n      max_divisor = divisor;\n      max_divisor_p = divisor_p;\n      max_divisor_p2\
    \ = divisor_p2;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i < n; ++i) {\n    if (n % i\
    \ == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i < n; ++i) {\n    const divisor\
    \ = n % i;\n    if (divisor === 0) {\n      continue;\n    }\n    if (divisor\
    \ > max_divisor) {\n      max_divisor = divisor;\n      max_divisor_p = i;\n \
    \   }\n  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\
    \ else {\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor_p;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let divisor = 1;\n  let max_divisor = 1;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      divisor = i;\n      if (max_divisor < divisor)\
    \ {\n        max_divisor = divisor;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n\
    \      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ n;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      max_divisor_p = i;\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i)\
    \ {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let p = Math.floor(n\
    \ / i);\n      if (p > max_divisor_p) {\n        max_divisor = i;\n        max_divisor_p\
    \ = p;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n\
    \  let max_divisor = n;\n  while (max_divisor % divisor === 0) {\n    max_divisor\
    \ *= 2;\n    divisor++;\n  }\n  return max_divisor;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      let divisor_p = divisors(i);\n      if (divisor_p > max_divisor_p)\
    \ {\n        max_divisor_p = divisor_p;\n        max_divisor = i;\n      }\n \
    \   }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_pp = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      let divisor_p = i;\n      let divisor_pp = i;\n      for\
    \ (let j = 1; j <= n; j++) {\n        if (j % i == 0) {\n          divisor_p =\
    \ j;\n          divisor_pp = j;\n        }\n      }\n      if (divisor_pp > max_divisor_pp)\
    \ {\n        max_divisor_pp = divisor_pp;\n        max_divisor_p = divisor_p;\n\
    \      }\n    }\n  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n\
    \  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i ==\
    \ 0) {\n      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i)\
    \ {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let max_divisor = 1;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      divisor = i;\n\
    \      if (max_divisor < divisor) {\n        max_divisor = divisor;\n      }\n\
    \    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\
    \ else {\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor_p;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      let divisor_p = i / n;\n      if (divisor_p\
    \ > max_divisor_p) {\n        max_divisor = divisor_p;\n        max_divisor_p\
    \ = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      let divisor_p = i;\n      while (n % divisor_p == 0) {\n\
    \        divisor_p++;\n      }\n      if (divisor_p > max_divisor_p) {\n     \
    \   max_divisor = divisor_p;\n        max_divisor_p = divisor_p;\n      }\n  \
    \  }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let max_divisor = 1;\n\
    \  for (let i = 2; i <= n; i++) {\n    if (n % i == 0) {\n      divisor = i;\n\
    \      if (max_divisor < divisor) {\n        max_divisor = divisor;\n      }\n\
    \    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      let divisor_p = i / n;\n      let divisor_p2 = divisor_p\
    \ * divisor_p;\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2\
    \ = divisor_p2;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i)\
    \ {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = n;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ % i == 0) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n\
    \    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for\
    \ (let j = 1; j <= n; j++) {\n        if (n % j == 0) {\n          divisor_p2\
    \ = j;\n          break;\n        }\n      }\n      if (divisor_p2 > max_divisor_p2)\
    \ {\n        max_divisor_p2 = divisor_p2;\n        max_divisor_p = divisor_p;\n\
    \      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n \
    \ let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0)\
    \ {\n      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let divisor = 1;\n  let max_divisor = n;\n  while (max_divisor > 1) {\n\
    \    if (n % divisor === 0) {\n      max_divisor = divisor;\n    } else {\n  \
    \    divisor++;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i)\
    \ {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  let max_divisor_pp = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i ===\
    \ 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      }\n    \
    \  if (max_divisor_p < i) {\n        max_divisor_p = i;\n      }\n      if (max_divisor_pp\
    \ < i) {\n        max_divisor_pp = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let divisor = 1;\n  let max_divisor = 1;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      divisor = i;\n      if (max_divisor < divisor)\
    \ {\n        max_divisor = divisor;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = n;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i < n; ++i) {\n    if (n % i == 0) {\n\
    \      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i;\n      let divisor_p2 = i;\n      for (let j = 1; j <= max_divisor; j++)\
    \ {\n        if (j % i == 0) {\n          divisor_p2 = j;\n          break;\n\
    \        }\n      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2\
    \ = divisor_p2;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return\
    \ max_divisor_p2;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n \
    \ for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p =\
    \ i / n;\n      if (divisor_p > max_divisor_p) {\n        max_divisor = divisor_p;\n\
    \        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_pp\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = max_divisor_pp;\n\
    \      }\n      max_divisor_pp = i;\n    }\n  }\n  return max_divisor;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let divisor = 1;\n  let result = n;\n  while (result % divisor === 0)\
    \ {\n    divisor *= 10;\n  }\n  while (result % divisor === 0) {\n    divisor\
    \ *= 10;\n  }\n  return divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      max_divisor\
    \ = i;\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor;\n}\n", " \
    \ let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i;\n      let divisor_p2 = i;\n      for (let j = 1; j <= n; j++) {\n    \
    \    if (n % j == 0) {\n          divisor_p2 = j;\n          break;\n        }\n\
    \      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n\
    \        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    const divisor = n / i;\n    if (divisor\
    \ > max_divisor) {\n      max_divisor = divisor;\n      max_divisor_p = i;\n \
    \     max_divisor_p2 = divisor * i;\n    }\n  }\n  return max_divisor_p2;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_pp\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i;\n      let divisor_pp = i;\n      for (let j = 1; j <= n; j++) {\n    \
    \    if (j % i == 0) {\n          divisor_p = j;\n          divisor_pp = j;\n\
    \        }\n      }\n      if (divisor_pp > max_divisor_pp) {\n        max_divisor_p\
    \ = divisor_p;\n        max_divisor_pp = divisor_pp;\n      }\n    }\n  }\n  return\
    \ max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i < n; ++i) {\n    const divisor = n % i;\n    if (divisor === 0)\
    \ {\n      continue;\n    }\n    if (divisor > max_divisor) {\n      max_divisor\
    \ = divisor;\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor_p;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i;\n      let divisor_p2 = i;\n      for (let j = 1; j <= n; j++) {\n    \
    \    if (n % j == 0) {\n          divisor_p2 = j;\n          break;\n        }\n\
    \      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n\
    \        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor_p2;\n\
    }\n", "  let divisor = 1;\n  let max_divisor = n;\n  while (max_divisor > 1) {\n\
    \    if (n % divisor === 0) {\n      max_divisor = divisor;\n    }\n    divisor++;\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let divisor = 1;\n  let max_divisor =\
    \ n;\n  while (max_divisor % divisor === 0) {\n    max_divisor *= 2;\n    divisor\
    \ *= 2;\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i / n;\n      if (divisor_p > max_divisor_p) {\n        max_divisor = divisor_p;\n\
    \        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_pp\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i;\n      let divisor_pp = i;\n      for (let j = 1; j <= max_divisor; j++)\
    \ {\n        if (j % i == 0) {\n          divisor_p = j;\n          divisor_pp\
    \ = j;\n          break;\n        }\n      }\n      if (divisor_pp > max_divisor_pp)\
    \ {\n        max_divisor_p = divisor_p;\n        max_divisor_pp = divisor_pp;\n\
    \      }\n    }\n  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let\
    \ factor = 2;\n  while (factor < n) {\n    if (n % factor === 0) {\n      divisor\
    \ = factor;\n      factor = 2;\n    } else {\n      factor++;\n    }\n  }\n  return\
    \ divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let\
    \ i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n\
    \        max_divisor = i;\n        max_divisor_p = i;\n      }\n    } else {\n\
    \      max_divisor_p = i;\n    }\n  }\n  return max_divisor_p;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let\
    \ divisor = 1;\n  let max_divisor = 1;\n  for (let i = 2; i <= n; i++) {\n   \
    \ if (n % i == 0) {\n      divisor = i;\n      if (max_divisor < divisor) {\n\
    \        max_divisor = divisor;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n % i\
    \ == 0) {\n      max_divisor = i;\n    }\n  }\n  return max_divisor;\n}\n", " \
    \ let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let max_divisor\
    \ = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      divisor\
    \ = i;\n      if (max_divisor < divisor) {\n        max_divisor = divisor;\n \
    \     }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n\
    \      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  let max_divisor_pp = 0;\n  for (let i = 1; i\
    \ <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n       \
    \ max_divisor = i;\n      }\n      if (max_divisor_p < i) {\n        max_divisor_p\
    \ = i;\n      }\n      if (max_divisor_pp < i) {\n        max_divisor_pp = i;\n\
    \      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n \
    \ for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n\
    \    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i / max_divisor;\n      if (divisor_p > max_divisor_p) {\n        max_divisor\
    \ = divisor_p;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i)\
    \ {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i ==\
    \ 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for (let j\
    \ = 1; j <= n / i; j++) {\n        if (n % j == 0) {\n          divisor_p2 = j;\n\
    \        }\n      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2\
    \ = divisor_p2;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return\
    \ max_divisor_p2;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n \
    \ for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i / n;\n      if (divisor_p > max_divisor_p) {\n        max_divisor_p = divisor_p;\n\
    \        max_divisor = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", " \
    \ let divisor = 1;\n  let max_divisor = 1;\n  for (let i = 1; i <= n; i++) {\n\
    \    if (n % i == 0) {\n      divisor = i;\n      if (max_divisor < divisor) {\n\
    \        max_divisor = divisor;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n\
    \      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      max_divisor_p = i;\n      max_divisor = i;\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor <\
    \ i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    } else\
    \ {\n      if (max_divisor_p < i) {\n        max_divisor_p = i;\n      }\n   \
    \ }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for\
    \ (let j = i; j <= n; j++) {\n        if (n % j == 0) {\n          divisor_p2\
    \ = j;\n          break;\n        }\n      }\n      if (divisor_p2 > max_divisor_p2)\
    \ {\n        max_divisor_p2 = divisor_p2;\n        max_divisor_p = divisor_p;\n\
    \      }\n    }\n  }\n  return max_divisor_p2;\n}\n", "  let max_divisor = 1;\n\
    \  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i ==\
    \ 0) {\n      let divisor_p = i / n;\n      if (divisor_p > max_divisor_p) {\n\
    \        max_divisor = divisor_p;\n        max_divisor_p = divisor_p;\n      }\n\
    \    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = n;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor_p\
    \ = i;\n      if (max_divisor < i) {\n        max_divisor = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let max_divisor = n;\n\
    \  while (max_divisor % divisor === 0) {\n    max_divisor *= divisor;\n    divisor++;\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let divisor_p\
    \ = i / n;\n      if (divisor_p > max_divisor_p) {\n        max_divisor = divisor_p;\n\
    \        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n\
    }\n", "  let max_divisor = n;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      if (max_divisor % i === 0) {\n    \
    \    max_divisor = i;\n        max_divisor_p = i;\n      } else {\n        max_divisor_p\
    \ = max_divisor;\n        max_divisor = i;\n      }\n    }\n  }\n  return max_divisor_p;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i === 0) {\n      let divisor_p = i;\n      let divisor_p2 =\
    \ i;\n      for (let j = 1; j <= max_divisor; j++) {\n        if (n % j === 0)\
    \ {\n          divisor_p2 = j;\n          break;\n        }\n      }\n      if\
    \ (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n    \
    \    max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor_p2;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = n;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      max_divisor_p = i;\n      if (max_divisor\
    \ < max_divisor_p) {\n        max_divisor = max_divisor_p;\n      }\n    }\n \
    \ }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  let max_divisor_pp = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i ===\
    \ 0) {\n      let divisor_p = i;\n      let divisor_pp = i;\n      for (let j\
    \ = 1; j <= max_divisor; j++) {\n        if (n % j === 0) {\n          divisor_p\
    \ = j;\n          divisor_pp = j;\n          break;\n        }\n      }\n    \
    \  if (divisor_pp > max_divisor_pp) {\n        max_divisor_p = divisor_p;\n  \
    \      max_divisor_pp = divisor_pp;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = n;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n\
    \      let p = Math.pow(i, Math.floor(Math.log(i) / Math.log(max_divisor)));\n\
    \      if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n       \
    \ max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let\
    \ divisor = 1;\n  let max_divisor = 1;\n  for (let i = 2; i <= n; i++) {\n   \
    \ if (n % i === 0) {\n      divisor = i;\n      if (max_divisor < divisor) {\n\
    \        max_divisor = divisor;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = max_divisor_p2;\n\
    \      }\n      if (max_divisor == i) {\n        max_divisor_p2 = max_divisor_p;\n\
    \      }\n    }\n  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n  let\
    \ largest_divisor = divisor;\n  for (let i = 2; i <= n; i++) {\n    if (n % i\
    \ === 0) {\n      divisor = i;\n      if (divisor > largest_divisor) {\n     \
    \   largest_divisor = divisor;\n      }\n    }\n  }\n  return largest_divisor;\n\
    }\n", "  let divisor = 1;\n  let largest_divisor = divisor;\n  for (let i = 2;\
    \ i <= n; i++) {\n    if (n % i == 0) {\n      divisor = i;\n      if (divisor\
    \ > largest_divisor) {\n        largest_divisor = divisor;\n      }\n    }\n \
    \ }\n  return largest_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_pp = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = max_divisor_pp;\n      }\n      if (max_divisor === i) {\n\
    \        max_divisor_pp = max_divisor_p;\n      }\n    }\n  }\n  return max_divisor_pp;\n\
    }\n", "  let max_divisor = n;\n  let max_divisor_p = 0;\n  for (let i = 1; i <\
    \ n; ++i) {\n    if (n % i == 0) {\n      if (max_divisor % i == 0) {\n      \
    \  max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return\
    \ max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let\
    \ max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n\
    \      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n      if (max_divisor_p < i) {\n        max_divisor_p = i;\n\
    \      }\n      if (max_divisor_p2 < i) {\n        max_divisor_p2 = i;\n     \
    \ }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for\
    \ (let j = 1; j <= max_divisor; j++) {\n        if (n % j === 0) {\n         \
    \ divisor_p2 = j;\n          break;\n        }\n      }\n      if (divisor_p2\
    \ > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n        max_divisor_p\
    \ = divisor_p;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n", "  let divisor\
    \ = 1;\n  let max_divisor = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      divisor = i;\n      if (max_divisor < divisor) {\n        max_divisor\
    \ = divisor;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n", " \
    \ let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    \
    \  if (max_divisor_p2 < i) {\n        max_divisor_p2 = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n\
    \  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor;\n}\n", "  let max_divisor = n;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor\
    \ % i === 0) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\
    \ else {\n        max_divisor_p = max_divisor;\n        max_divisor = i;\n   \
    \   }\n    }\n  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n\
    \      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let divisor = 1;\n\
    \  let max_divisor = n;\n  while (max_divisor > 1) {\n    if (n % max_divisor\
    \ === 0) {\n      divisor = max_divisor;\n      break;\n    }\n    max_divisor\
    \ /= 2;\n  }\n  return divisor;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n\
    \  }\n  return max_divisor_p;\n}\n", "  let max_divisor = 1;\n  let max_divisor_p\
    \ = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for\
    \ (let j = 1; j <= max_divisor; j++) {\n        if (n % divisor_p === 0) {\n \
    \         divisor_p2 = divisor_p;\n          break;\n        }\n        divisor_p2\
    \ = divisor_p;\n      }\n      if (divisor_p2 > max_divisor) {\n        max_divisor\
    \ = divisor_p2;\n        max_divisor_p = divisor_p;\n        max_divisor_p2 =\
    \ divisor_p2;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let\
    \ max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n\
    \    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n\
    \        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    } else {\n      if (max_divisor_p\
    \ < i) {\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <=\
    \ n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_p\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor = 1;\n  let\
    \ max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n\
    \      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n %\
    \ i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i\
    \ == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let max_divisor =\
    \ 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i\
    \ <= n; i++) {\n    if (n % i == 0) {\n      let p = Math.floor(n / i);\n    \
    \  if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2\
    \ = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n", "  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n", "  let\
    \ max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n\
    \    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n\
    \        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n", "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor\
    \ < i) {\n        max_divisor = i;\n        max_divisor_p = max_divisor_p2;\n\
    \      }\n      max_divisor_p2 = i;\n    }\n  }\n  return max_divisor;\n}\n",
  "  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i < n; i++)\
    \ {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor\
    \ = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_102_choose_num
language: ts
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// >>> choose_num(12,\
  \ 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num(x: number, y:\
  \ number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n\
  \  assert.deepEqual(candidate(13, 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n\
  \  assert.deepEqual(candidate(5234, 5233),-1);\n  assert.deepEqual(candidate(6,\
  \ 29),28);\n  assert.deepEqual(candidate(27, 10),-1);\n  assert.deepEqual(candidate(7,\
  \ 7),-1);\n  assert.deepEqual(candidate(546, 546),546);\n}\n\ntest();"
completions: ["    if (x > y) {\n        let temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num\
    \ - min_num > 1) {\n        let mid = max_num + min_num / 2;\n        if (mid\
    \ % 2 === 0) {\n            max_num = mid;\n        } else {\n            min_num\
    \ = mid;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid = min_num + max_num / 2;\n        if (mid % 2 === 0) {\n            max_num\
    \ = mid;\n        } else {\n            min_num = mid;\n        }\n    }\n   \
    \ return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let result = x;\n    while (result < y) {\n\
    \        result += 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = x;\n    while (y > 1) {\n        if (y % 2 === 0) {\n            result\
    \ = y;\n        }\n        y = Math.floor(y / 2);\n    }\n    return result;\n\
    }\n", "    let num: number = x;\n    while (num < y) {\n        num += 2;\n  \
    \  }\n    return num;\n}\n", "    if (x > y) {\n        let temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    let result: number = x;\n    while (y\
    \ >= 2) {\n        if (y % 2 === 0) {\n            result = y;\n            break;\n\
    \        }\n        y = y / 2;\n    }\n    return result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ even = x;\n    let odd = y;\n    while (even > 0 && odd > 0) {\n        if (even\
    \ % 2 === 0 && odd % 2 !== 0) {\n            even = even - 1;\n            odd\
    \ = odd - 1;\n        } else if (even % 2 !== 0 && odd % 2 === 0) {\n        \
    \    even = even - 1;\n            odd = odd + 1;\n        } else if (even % 2\
    \ === 0 && odd % 2 === 0) {\n            even = even + 1;\n            odd = odd\
    \ - 1;\n        }\n    }\n    return even;\n}\n", "\tif (x < y) {\n\t\tlet z =\
    \ x;\n\t\tx = y;\n\t\ty = z;\n\t}\n\tlet z: number = x;\n\twhile (y >= z) {\n\t\
    \tz += y;\n\t}\n\treturn z;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let\
    \ odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 ===\
    \ 0 && odd % 2 !== 0) {\n            even = even - 1;\n            odd = odd -\
    \ 1;\n        } else if (even % 2 !== 0 && odd % 2 === 0) {\n            even\
    \ = even - 1;\n            odd = odd + 1;\n        } else if (even % 2 === 0 &&\
    \ odd % 2 === 0) {\n            even = even + 1;\n            odd = odd - 1;\n\
    \        }\n    }\n    return even;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num - min_num > 1) {\n        let mid = Math.floor((max_num\
    \ + min_num) / 2);\n        if (mid % 2 === 0) {\n            max_num = mid;\n\
    \        } else {\n            min_num = mid;\n        }\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0) {\n            even = even / 2;\n\
    \        } else {\n            odd = odd / 2;\n        }\n    }\n    return even;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num > min_num)\
    \ {\n        let mid = min_num + max_num / 2;\n        if (mid % 2 === 0) {\n\
    \            max_num = mid;\n        } else {\n            min_num = mid;\n  \
    \      }\n    }\n    return max_num;\n}\n", "\tlet max_num: number = x;\n\tlet\
    \ min_num: number = y;\n\twhile (max_num < min_num) {\n\t\tmax_num += 2;\n\t\t\
    min_num -= 2;\n\t}\n\treturn max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let mid = (x + y) / 2;\n\
    \    if (mid % 2 === 0) {\n        return mid;\n    } else {\n        return choose_num(x,\
    \ mid);\n    }\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    let result: number = x;\n    while (result < y)\
    \ {\n        result += 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num > min_num) {\n        let mid\
    \ = min_num + max_num / 2;\n        if (mid % 2 == 0) {\n            max_num =\
    \ mid;\n        } else {\n            min_num = mid;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let result = x;\n    while (result < y) {\n    \
    \    result *= 2;\n    }\n    while (result > y) {\n        result /= 2;\n   \
    \ }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    let result = x;\n    while (y > 1)\
    \ {\n        if (y % 2 === 0) {\n            result = y;\n            break;\n\
    \        }\n        y = y / 2;\n    }\n    return result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result: number = x;\n    while (result < y) {\n        result += 2;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let result = x;\n    while (result < y)\
    \ {\n        result += y;\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid = Math.floor((max_num + min_num) / 2);\n        if (mid % 2 === 0) {\n \
    \           max_num = mid;\n        } else {\n            min_num = mid;\n   \
    \     }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num < min_num) {\n        max_num += 2;\n     \
    \   min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num -=\
    \ 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result = x;\n    while (result <= y) {\n        if (result % 2 === 0) {\n  \
    \          result = result + 1;\n        } else {\n            result = result\
    \ + 2;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n      \
    \  let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x < y) {\n\
    \        return -1;\n    }\n    while (x < y) {\n        let m = x + y;\n    \
    \    if (m > y) {\n            y = m;\n        } else {\n            x = m;\n\
    \        }\n    }\n    return x;\n}\n", "    if (x > y) {\n        let temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    if (x > 1000) {\n        x\
    \ = 1000;\n    }\n    if (y > 1000) {\n        y = 1000;\n    }\n    let even:\
    \ number = x;\n    let odd: number = y;\n    while (even > 0 && odd > 0) {\n \
    \       if (even % 2 === 0 && odd % 2 !== 0) {\n            even = even / 2;\n\
    \            odd = odd / 2;\n        } else if (even % 2 !== 0 && odd % 2 ===\
    \ 0) {\n            even = even / 2;\n            odd = odd * 2;\n        } else\
    \ {\n            even = even / 2;\n            odd = odd * 2;\n        }\n   \
    \ }\n    return even;\n}\n", "    if (x > y) {\n        let temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num % 2 == 0) {\n        max_num--;\n    }\n    while (min_num\
    \ % 2 == 0) {\n        min_num++;\n    }\n    while (max_num >= min_num) {\n \
    \       if (max_num % 2 == 0) {\n            max_num--;\n        }\n        else\
    \ {\n            max_num++;\n        }\n    }\n    return max_num;\n}\n", "  \
    \  if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let low = x;\n    let high = y;\n    while (low < high) {\n        let\
    \ mid = low + Math.floor((high - low) / 2);\n        if (mid * mid > x * x) {\n\
    \            high = mid - 1;\n        } else {\n            low = mid + 1;\n \
    \       }\n    }\n    return low;\n}\n", "    if (x > y) {\n        let temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n    while\
    \ (result <= y) {\n        if (result % 2 === 0) {\n            result = result\
    \ + 2;\n        } else {\n            result = result + 1;\n        }\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num < min_num) {\n        max_num += 2;\n        min_num -= 2;\n\
    \    }\n    while (max_num > min_num) {\n        max_num -= 2;\n        min_num\
    \ += 2;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num: number = x;\n\
    \    let min_num: number = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid: number = (max_num + min_num) / 2;\n        if (mid % 2 === 0) {\n     \
    \       max_num = mid;\n        } else {\n            min_num = mid;\n       \
    \ }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result *= 2;\n    }\n    while (result > y) {\n        result\
    \ /= 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = x;\n\
    \    while (y > 1) {\n        if (y % 2 === 0) {\n            result = y;\n  \
    \          break;\n        }\n        y = y / 2;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let num: number = x;\n    while (num < y) {\n  \
    \      num += 2;\n    }\n    while (num > y) {\n        num -= 2;\n    }\n   \
    \ return num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    let result: number = x;\n    while (y > 1) {\n\
    \        if (y & 1) {\n            result = y;\n        }\n        y >>= 1;\n\
    \    }\n    return result;\n}\n", "    let num: number = x;\n    while (num <\
    \ y) {\n        num += 2;\n    }\n    return num;\n}\n", "\tif (x > y) {\n\t\t\
    let temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet result: number = -1;\n\t\
    let x_even: number = x % 2 === 0;\n\tlet y_even: number = y % 2 === 0;\n\tif (x_even\
    \ && y_even) {\n\t\tlet x_odd: number = x % 2 === 1;\n\t\tlet y_odd: number =\
    \ y % 2 === 1;\n\t\tif (x_odd && y_odd) {\n\t\t\tlet x_even: number = x % 2 ===\
    \ 0;\n\t\t\tlet y_even: number = y % 2 === 0;\n\t\t\tif (x_even && y_even) {\n\
    \t\t\t\tlet x_odd: number = x % 2 === 1;\n\t\t\t\tlet y_odd: number = y % 2 ===\
    \ 1;\n\t\t\t\tif (x_odd && y_odd) {\n\t\t\t\t\tlet x_even: number = x % 2 ===\
    \ 0;\n\t\t\t\t\tlet y_even: number = y % 2 === 0;\n\t\t\t\t\tif (x_even && y_even)\
    \ {\n\t\t\t\t\t\tlet x_odd: number = x % 2 === 1;\n\t\t\t\t\t\tlet y_odd: number\
    \ = y % 2 === 1;\n\t\t\t\t\t\tif (x_odd && y_odd) {\n\t\t\t\t\t\t\tlet x_even:\
    \ number = x % 2 === 0;\n\t\t\t\t\t\t\tlet y_even: number = y % 2 === 0;\n\t\t\
    \t\t\t\t\tif (x_even && y_even) {\n\t\t\t\t\t\t\t\tlet x_odd: number = x % 2 ===\
    \ 1;\n\t\t\t\t\t\t\t\tlet y_odd: number = y % 2 === 1;\n\t\t\t\t\t\t\t\tif (x_odd\
    \ && y_odd) {\n\t\t\t\t\t\t\t\t\tlet x_even: number = x % 2 === 0;\n\t\t\t\t\t\
    \t\t\t\tlet y_even: number = y % 2 === 0;\n\t\t\t\t\t\t\t\t\tif (x_even && y_even)\
    \ {\n\t\t\t\t\t\t\t\t\t\tlet x_odd: number = x % 2 === 1;\n\t\t\t\t\t\t\t\t\t\t\
    let y_odd: number = y % 2 === 1;\n\t\t\t\t\t\t\t\t\t\tif (x_odd && y_odd) {\n\t\
    \t\t\t\t\t\t\t\t\t\tlet x_even: number = x % 2 === 0;\n\t\t\t\t\t\t\t\t\t\t\t\
    let y_even: number = y % 2 === 0;\n\t\t\t\t\t\t\t\t\t\t\tif (x_even && y_even)\
    \ {\n\t\t\t\t\t\t\t\t\t\t\t\tlet x_odd: number = x % 2 === 1;\n\t\t\t\t\t\t\t\t\
    \t\t\t\tlet y_odd: number = y % 2 === 1;\n\t\t\t\t\t\t\t\t\t\t\t\tif (x_odd &&\
    \ y_odd) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet x_even: number = x % 2 === 0;\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\tlet y_even: number = y % 2 === 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \tif (x_even && y_even) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet x_odd: number = x %\
    \ 2 === 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet y_odd: number = y % 2 === 1;\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif (x_odd && y_odd) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    let x_even: number = x % 2 === 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet y_even: number\
    \ = y % 2 === ", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result = x;\n    while (result < y) {\n     \
    \   result *= 2;\n    }\n    while (result > y) {\n        result /= 2;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num < min_num) {\n        max_num++;\n        while (max_num %\
    \ 2 === 0) {\n            max_num++;\n        }\n        min_num--;\n        while\
    \ (min_num % 2 === 0) {\n            min_num--;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let result: number = x;\n    while (result < y)\
    \ {\n        if (result % 2 === 0) {\n            result = result + 1;\n     \
    \   } else {\n            result = result - 1;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0) {\n            even = even / 2;\n\
    \        } else {\n            odd = odd / 2;\n        }\n    }\n    return even\
    \ > 0 ? even : -1;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd: number\
    \ = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 && odd %\
    \ 2 !== 0) {\n            even = even / 2;\n            odd = odd / 2;\n     \
    \   } else {\n            even = even / 2;\n            odd = odd / 2;\n     \
    \   }\n    }\n    return even;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let mid = x + (y - x) / 2;\n  \
    \  while (x <= y) {\n        if (mid % 2 === 0) {\n            return mid;\n \
    \       }\n        mid += 1;\n    }\n    return -1;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += y;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even = 0;\n    let odd = 0;\n    for (let i = x; i <= y; i++)\
    \ {\n        if (i % 2 === 0) {\n            even = i;\n        } else {\n   \
    \         odd = i;\n        }\n    }\n    if (even > odd) {\n        return even;\n\
    \    } else {\n        return odd;\n    }\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x > 0 && y > 0)\
    \ {\n        let temp: number = x;\n        let temp2: number = y;\n        let\
    \ temp3: number = temp;\n        let temp4: number = temp2;\n        let temp5:\
    \ number = temp3;\n        let temp6: number = temp4;\n        let temp7: number\
    \ = temp5;\n        let temp8: number = temp6;\n        let temp9: number = temp7;\n\
    \        let temp10: number = temp8;\n        let temp11: number = temp9;\n  \
    \      let temp12: number = temp10;\n        let temp13: number = temp11;\n  \
    \      let temp14: number = temp12;\n        let temp15: number = temp13;\n  \
    \      let temp16: number = temp14;\n        let temp17: number = temp15;\n  \
    \      let temp18: number = temp16;\n        let temp19: number = temp17;\n  \
    \      let temp20: number = temp18;\n        let temp21: number = temp19;\n  \
    \      let temp22: number = temp20;\n        let temp23: number = temp21;\n  \
    \      let temp24: number = temp22;\n        let temp25: number = temp23;\n  \
    \      let temp26: number = temp24;\n        let temp27: number = temp25;\n  \
    \      let temp28: number = temp26;\n        let temp29: number = temp27;\n  \
    \      let temp30: number = temp28;\n        let temp31: number = temp29;\n  \
    \      let temp32: number = temp30;\n        let temp33: number = temp31;\n  \
    \      let temp34: number = temp32;\n        let temp35: number = temp33;\n  \
    \      let temp36: number = temp34;\n        let temp37: number = temp35;\n  \
    \      let temp38: number = temp36;\n        let temp39: number = temp37;\n  \
    \      let temp40: number = temp38;\n        let temp41: number = temp39;\n  \
    \      let temp42: number = temp40;\n        let temp43: number = temp41;\n  \
    \      let temp44: number = temp42;\n        let temp45: number = temp43;\n  \
    \      let temp46: number = temp44;\n        let temp47: number = temp45;\n  \
    \      let temp48: number = temp46;\n        let temp49: number = temp47;\n  \
    \      let temp50: number = temp48;\n        let temp51: number = temp49;\n  \
    \      let temp52: number = temp50;\n        let temp53: number = temp51;\n  \
    \      let temp54: number = temp52;\n        let temp55: number = temp53;\n  \
    \      let temp56: number = temp54;\n        let temp57: number = temp55;\n  \
    \      let temp58: ", "    if (x > y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num - min_num > 1) {\n        let mid = Math.floor((max_num + min_num)\
    \ / 2);\n        if (mid % 2 === 0) {\n            max_num = mid;\n        } else\
    \ {\n            min_num = mid;\n        }\n    }\n    return max_num;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "    let even: number = x % 2\n    let evenOrOdd: number = even\
    \ ? x : y\n    let evenOrOddEven: number = evenOrOdd % 2\n    let evenOrOddOdd:\
    \ number = evenOrOdd ? evenOrOdd : y\n    let evenOrOddEvenOdd: number = evenOrOdd\
    \ ? evenOrOdd : evenOrOdd\n    let evenOrOddEvenOddEven: number = evenOrOdd ?\
    \ evenOrOdd : evenOrOdd ? evenOrOdd : y\n    let evenOrOddEvenOddEvenOdd: number\
    \ = evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : y\n\
    \    let evenOrOddEvenOddEvenOddEven: number = evenOrOdd ? evenOrOdd : evenOrOdd\
    \ ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : y\n    let evenOrOddEvenOddEvenOddEvenOdd:\
    \ number = evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd\
    \ : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : y\n    let evenOrOddEvenOddEvenOddEvenOddEven:\
    \ number = evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd\
    \ : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd\
    \ ? evenOrOdd : y\n    let evenOrOddEvenOddEvenOddEvenOddEvenOdd: number = evenOrOdd\
    \ ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd\
    \ : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd\
    \ ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd : evenOrOdd ? evenOrOdd\
    \ : evenOrOdd ? evenOrOdd : even", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let\
    \ odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 ===\
    \ 0) {\n            even = even / 2;\n        } else {\n            odd = odd\
    \ / 2;\n        }\n    }\n    return even > 0 ? even : -1;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result = x;\n    while (result < y) {\n        result += 2;\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result: number = x;\n    while (y > 0) {\n  \
    \      if (y & 1) {\n            result = y;\n        }\n        y >>= 1;\n  \
    \  }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n   \
    \     x = y;\n        y = temp;\n    }\n    if (x === y) {\n        return -1;\n\
    \    }\n    let mid = (x + y) / 2;\n    if (mid % 2 === 0) {\n        return mid;\n\
    \    } else {\n        return choose_num(x, mid);\n    }\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result = x;\n    while (result < y) {\n        result += 2;\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let even: number = x;\n    let odd: number = y;\n\
    \    while (even > 0 && odd > 0) {\n        if (even % 2 === 0) {\n          \
    \  even = even - 1;\n        } else {\n            odd = odd - 1;\n        }\n\
    \    }\n    return even > 0 ? even : -1;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let result: number\
    \ = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n    \
    \        result = i;\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let result = x;\n    while (result < y) {\n    \
    \    if (result % 2 === 0) {\n            result = result + 1;\n        } else\
    \ {\n            result = result + 2;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "    let even: number = x % 2 === 0;\n    let evenOrOdd: number\
    \ = even ? x : y;\n    let evenOrOddEven: number = even ? y : x;\n    let evenOrOddOdd:\
    \ number = even ? x : y;\n    let evenOrOddEvenOdd: number = even ? y : x;\n \
    \   let evenOrOddEvenOddEven: number = even ? y : x;\n    let evenOrOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEven: number = even ?\
    \ y : x;\n    let evenOrOddEvenOddEvenOddEvenOdd: number = even ? y : x;\n   \
    \ let evenOrOddEvenOddEvenOddEvenOddEven: number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEven: number\
    \ = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOdd: number\
    \ = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEven: number\
    \ = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOdd", "\tlet even: number = x %\
    \ 2\n\tlet odd: number = y % 2\n\tif (even > odd) {\n\t\treturn even\n\t} else\
    \ {\n\t\treturn odd\n\t}\n}\n", "    if (x > y) {\n        let temp = x;\n   \
    \     x = y;\n        y = temp;\n    }\n    let even = 0;\n    let odd = 0;\n\
    \    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    if (even > odd) {\n\
    \        return even;\n    } else {\n        return odd;\n    }\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let max_num = x;\n    let min_num = y;\n    while (max_num > min_num) {\n\
    \        let mid = (max_num + min_num) / 2;\n        if (mid % 2 === 0) {\n  \
    \          max_num = mid;\n        } else {\n            min_num = mid;\n    \
    \    }\n    }\n    return max_num;\n}\n", "    let even: number = x % 2\n    if\
    \ (even === 0) {\n        return y\n    } else {\n        return x\n    }\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (true) {\n       \
    \ if (max_num % 2 == 0) {\n            max_num = max_num / 2;\n        } else\
    \ {\n            max_num = max_num * 3 + 1;\n        }\n        if (min_num %\
    \ 2 == 0) {\n            min_num = min_num / 2;\n        } else {\n          \
    \  min_num = min_num * 3 + 1;\n        }\n        if (max_num > min_num) {\n \
    \           return max_num;\n        }\n    }\n}\n", "\tlet result: number = -1;\n\
    \tfor (let i = x; i <= y; i++) {\n\t\tif (is_even(i)) {\n\t\t\tresult = i;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n\
    \    let min_num = y;\n    while (max_num - min_num > 1) {\n        let mid =\
    \ max_num + min_num / 2;\n        if (mid % 2 === 0) {\n            max_num =\
    \ mid;\n        } else {\n            min_num = mid;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (true) {\n        if (max_num % 2 == 0) {\n            max_num = max_num / 2;\n\
    \        } else {\n            max_num = max_num * 3 + 1;\n        }\n       \
    \ if (min_num % 2 == 0) {\n            min_num = min_num / 2;\n        } else\
    \ {\n            min_num = min_num * 3 + 1;\n        }\n        if (max_num >\
    \ min_num) {\n            return max_num;\n        }\n    }\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let max_num = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n\
    \        let mid = Math.floor((max_num + min_num) / 2);\n        if (mid * mid\
    \ > max_num - min_num) {\n            max_num = mid;\n        } else {\n     \
    \       min_num = mid;\n        }\n    }\n    return max_num;\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let max_num = x;\n    let min_num = y;\n    while (max_num < min_num) {\n \
    \       max_num += 2;\n        min_num -= 2;\n    }\n    return max_num;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let result: number = x;\n    while (result < y) {\n        if (result\
    \ % 2 === 0) {\n            result = result + 1;\n        } else {\n         \
    \   result = result + 2;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let even: number = x;\n    let odd: number = y;\n    while (even > 0 && odd\
    \ > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n            even = even\
    \ / 2;\n            odd = odd / 2;\n        } else if (even % 2 !== 0 && odd %\
    \ 2 === 0) {\n            even = even / 2;\n            odd = odd / 2;\n     \
    \   } else if (even % 2 === 0 && odd % 2 === 0) {\n            even = even / 2;\n\
    \            odd = odd / 2;\n        }\n    }\n    return even;\n}\n", "\tif (x\
    \ > y) {\n\t\tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet result: number\
    \ = -1;\n\tfor (let i = x; i <= y; i++) {\n\t\tif (is_even(i)) {\n\t\t\tresult\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num:\
    \ number = x;\n    let min_num: number = y;\n    while (max_num - min_num > 1)\
    \ {\n        let mid: number = (max_num + min_num) / 2;\n        if (mid % 2 ===\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num: number = x;\n\
    \    let min_num: number = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid: number = (max_num + min_num) / 2;\n        if (mid % 2 === 0) {\n     \
    \       max_num = mid;\n        } else {\n            min_num = mid;\n       \
    \ }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result += y;\n    }\n    return result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n  \
    \      let mid = max_num + min_num / 2;\n        if (mid % 2 === 0) {\n      \
    \      max_num = mid;\n        } else {\n            min_num = mid;\n        }\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let num: number = x;\n    while\
    \ (num < y) {\n        num += 2;\n    }\n    return num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (true) {\n        let num = Math.floor(Math.random()\
    \ * (max_num - min_num + 1)) + min_num;\n        if (num % 2 === 0) {\n      \
    \      return num;\n        }\n        if (num > max_num) {\n            max_num\
    \ = num;\n        }\n        if (num < min_num) {\n            min_num = num;\n\
    \        }\n    }\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let result: number = -1;\n    for (let i =\
    \ x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result = i;\n   \
    \         break;\n        }\n    }\n    return result;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (min_num > 0) {\n        if (max_num\
    \ % min_num == 0) {\n            max_num = max_num / min_num;\n        } else\
    \ {\n            min_num = min_num / min_num;\n        }\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        result += y;\n\
    \    }\n    return result;\n}\n", "    let result: number = x;\n    while (result\
    \ < y) {\n        if (result % 2 === 0) {\n            result = result + 1;\n\
    \        } else {\n            result = result - 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num < min_num) {\n        max_num += 2;\n        min_num -= 2;\n    }\n\
    \    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result < y)\
    \ {\n        result += 2;\n    }\n    return result;\n}\n", "    if (x < y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (y > 0) {\n        if (y & 1) {\n            result = y;\n \
    \       }\n        y >>= 1;\n    }\n    return result;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n  \
    \      let mid = min_num + max_num / 2;\n        if (mid % 2 === 0) {\n      \
    \      max_num = mid;\n        } else {\n            min_num = mid;\n        }\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (max_num < min_num) {\n        max_num++;\n        while (max_num\
    \ % 2 === 0) {\n            max_num++;\n        }\n        min_num--;\n      \
    \  while (min_num % 2 === 0) {\n            min_num--;\n        }\n    }\n   \
    \ return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let result = x;\n    while (y > 1) {\n   \
    \     if (y & 1) {\n            result = y;\n        }\n        y >>= 1;\n   \
    \ }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    let result: number = x;\n    while\
    \ (result < y) {\n        result += 2;\n    }\n    return result;\n}\n", "\tlet\
    \ result: number = -1;\n\tfor (let i = x; i <= y; i++) {\n\t\tif (is_even(i))\
    \ {\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n", "  \
    \  if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let even: number = x;\n    let odd: number = y;\n    while (even > 0\
    \ && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n            even\
    \ = even / 2;\n            odd = odd / 2;\n        } else {\n            even\
    \ = even / 2;\n            odd = odd / 2;\n        }\n    }\n    return even;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        result += y;\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    if (x === y) {\n        return -1;\n\
    \    }\n    let mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n        return\
    \ mid;\n    } else {\n        return choose_num(mid, y);\n    }\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result: number = -1;\n    for (let i = x; i <= y; i++) {\n        if\
    \ (is_even(i)) {\n            result = i;\n            break;\n        }\n   \
    \ }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    let result: number = x;\n    while\
    \ (y > 1) {\n        if (y % 2 === 0) {\n            y = y / 2;\n        } else\
    \ {\n            y = y / 2;\n            result = result + y;\n        }\n   \
    \ }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd:\
    \ number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0)\
    \ {\n            even = even / 2;\n        } else {\n            odd = odd / 2;\n\
    \        }\n    }\n    return even;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = x;\n\
    \    while (result <= y) {\n        if (result % 2 === 0) {\n            result\
    \ = result + 1;\n        } else {\n            result = result + 2;\n        }\n\
    \    }\n    return result;\n}\n", "    if (x < y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (max_num - min_num > 1) {\n        let mid = max_num + min_num\
    \ / 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n        } else\
    \ {\n            min_num = mid;\n        }\n    }\n    return max_num;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let result = x;\n    while (result < y) {\n    \
    \    result += y;\n    }\n    return result;\n}\n", "    if (x > y) {\n      \
    \  let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n\
    \    while (result < y) {\n        result *= 2;\n    }\n    return result;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (max_num > min_num)\
    \ {\n        let temp_num = max_num;\n        max_num = min_num;\n        min_num\
    \ = temp_num;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let result: number\
    \ = x;\n    while (result <= y) {\n        if (is_even(result)) {\n          \
    \  result = result + 2;\n        }\n        else {\n            result = result\
    \ + 1;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n      \
    \  let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num =\
    \ x;\n    let min_num = y;\n    while (max_num < min_num) {\n        max_num +=\
    \ 2;\n        min_num -= 2;\n    }\n    return max_num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num < min_num) {\n      \
    \  max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num > min_num)\
    \ {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        result *= 2;\n\
    \    }\n    while (result > y) {\n        result /= 2;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let low = x;\n    let high = y;\n    while (low < high) {\n      \
    \  let mid = low + Math.floor((high - low) / 2);\n        if (mid * mid > x *\
    \ x) {\n            high = mid - 1;\n        } else {\n            low = mid +\
    \ 1;\n        }\n    }\n    return high;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n \
    \   while (result < y) {\n        result += y;\n    }\n    return result;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result: number = -1;\n    for (let i = x; i <= y; i++) {\n   \
    \     if (i % 2 === 0) {\n            result = i;\n            break;\n      \
    \  }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result += 2;\n    }\n    return result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n        return mid;\n    }\
    \ else {\n        return -1;\n    }\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num > min_num) {\n        let mid = min_num + max_num\
    \ / 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n        } else\
    \ {\n            min_num = mid;\n        }\n    }\n    return max_num;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let result = x;\n    while (result < y) {\n        result += y;\n  \
    \  }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n   \
    \     x = y;\n        y = temp;\n    }\n    let low = x;\n    let high = y;\n\
    \    while (low < high) {\n        let mid = (low + high) >> 1;\n        if (mid\
    \ * mid > x * x) {\n            high = mid;\n        } else {\n            low\
    \ = mid + 1;\n        }\n    }\n    return low;\n}\n", "    if (x > y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    let mid = x\
    \ + (y - x) / 2;\n    while (true) {\n        if (mid % 2 === 0) {\n         \
    \   return mid;\n        }\n        mid = x + (y - x) / 2;\n    }\n}\n", "   \
    \ if (x < y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let result: number = -1;\n    for (let i = x; i <= y; i++) {\n      \
    \  if (i % 2 === 0) {\n            result = i;\n            break;\n        }\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (max_num < min_num) {\n        max_num += 2;\n        min_num\
    \ -= 2;\n    }\n    while (max_num > min_num) {\n        max_num -= 2;\n     \
    \   min_num += 2;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n     \
    \   let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num =\
    \ x;\n    let min_num = y;\n    while (max_num < min_num) {\n        max_num +=\
    \ 2;\n        min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num\
    \ -= 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result = x;\n    while (result < y) {\n        result *= 2;\n    }\n    while\
    \ (result > y) {\n        result /= 2;\n    }\n    return result;\n}\n", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let num: number = x;\n    while (num < y) {\n        num += 2;\n    }\n\
    \    return num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let result: number = x;\n    while (result\
    \ <= y) {\n        if (result % 2 === 0) {\n            result = result + 1;\n\
    \        } else {\n            result = result - 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result: number = x;\n    while (result < y) {\n\
    \        if (result % 2 === 0) {\n            result = result + 1;\n        }\
    \ else {\n            result = result + 2;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        if (result % 2\
    \ === 0) {\n            result = result + 2;\n        } else {\n            result\
    \ = result + 1;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x >\
    \ 1000000000 || y > 1000000000) {\n        return -1;\n    }\n    let result:\
    \ number = x;\n    let temp: number = y;\n    while (temp > 0) {\n        if (result\
    \ % 2 === 0) {\n            return result;\n        }\n        result *= 2;\n\
    \        temp--;\n    }\n    return -1;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n \
    \   while (result < y) {\n        result += y;\n    }\n    return result;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (min_num < max_num)\
    \ {\n        let mid = min_num + max_num / 2;\n        if (mid % 2 === 0) {\n\
    \            max_num = mid;\n        } else {\n            min_num = mid;\n  \
    \      }\n    }\n    return max_num;\n}\n", "    if (x < y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (true) {\n        if (max_num % 2 == 0) {\n        \
    \    max_num -= 1;\n        } else {\n            max_num += 1;\n        }\n \
    \       if (min_num % 2 == 0) {\n            min_num -= 1;\n        } else {\n\
    \            min_num += 1;\n        }\n        if (max_num < min_num) {\n    \
    \        return -1;\n        }\n        if (max_num == min_num) {\n          \
    \  return max_num;\n        }\n    }\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num < min_num) {\n        max_num += 2;\n     \
    \   min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num -=\
    \ 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num < min_num) {\n      \
    \  max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num > min_num)\
    \ {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        result += 2;\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let max_num: number = x;\n    for\
    \ (let i = y; i <= max_num; i++) {\n        if (i % 2 === 0) {\n            max_num\
    \ = i;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n     \
    \   let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result =\
    \ x;\n    while (y >= 2) {\n        if (y % 2 === 0) {\n            result = y;\n\
    \            break;\n        }\n        y = y / 2;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num % 2 ==\
    \ 0) {\n        max_num += 1;\n    }\n    while (min_num % 2 == 0) {\n       \
    \ min_num -= 1;\n    }\n    while (max_num < min_num) {\n        max_num += 2;\n\
    \        min_num -= 2;\n    }\n    return max_num;\n}\n", "\tif (x > y) {\n\t\t\
    let temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet max_num = x;\n\tfor (let\
    \ i = y; i <= max_num; i++) {\n\t\tif (i % 2 === 0) {\n\t\t\tmax_num = i;\n\t\t\
    }\n\t}\n\treturn max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n  \
    \      x = y;\n        y = temp;\n    }\n    let mid = x + (y - x) / 2;\n    if\
    \ (mid % 2 === 0) {\n        return mid;\n    } else {\n        return -1;\n \
    \   }\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n      \
    \  y = temp;\n    }\n    let even: number = x;\n    let odd: number = y;\n   \
    \ while (even > 0 && odd > 0) {\n        if (even % 2 === 0) {\n            even\
    \ = even / 2;\n        } else {\n            odd = odd / 2;\n        }\n    }\n\
    \    if (even > 0 && odd > 0) {\n        return even;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num - min_num > 1) {\n        let mid = (max_num + min_num) / 2;\n    \
    \    if (mid % 2 === 0) {\n            max_num = mid;\n        } else {\n    \
    \        min_num = mid;\n        }\n    }\n    return max_num;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let max_num = x;\n    let min_num = y;\n    while (max_num - min_num > 1)\
    \ {\n        let mid = Math.floor((max_num + min_num) / 2);\n        if (mid %\
    \ 2 === 0) {\n            max_num = mid;\n        } else {\n            min_num\
    \ = mid;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = -1;\n    for (let i = x; i <= y; i++) {\n        if (is_even(i)) {\n\
    \            result = i;\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n        return\
    \ mid;\n    } else {\n        return -1;\n    }\n}\n", "\tif (x > y) {\n\t\tlet\
    \ temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet even: number = x;\n\tlet odd:\
    \ number = y;\n\twhile (even > 0 && odd > 0) {\n\t\tif (even % 2 === 0 && odd\
    \ % 2 === 0) {\n\t\t\treturn even;\n\t\t}\n\t\telse {\n\t\t\tif (even % 2 !==\
    \ 0) {\n\t\t\t\teven = even - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\todd = odd - 1;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n", "    let even: number = x;\n    let odd:\
    \ number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 &&\
    \ odd % 2 === 0) {\n            return even;\n        }\n        even = even /\
    \ 2;\n        odd = odd / 2;\n    }\n    return -1;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid = Math.floor((max_num + min_num) / 2);\n        if (mid % 2 === 0) {\n \
    \           max_num = mid;\n        } else {\n            min_num = mid;\n   \
    \     }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    if (x === y) {\n       \
    \ return x;\n    }\n    let mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n\
    \        return mid;\n    } else {\n        return choose_num(mid, y);\n    }\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n          \
    \  even = even / 2;\n            odd = odd / 2;\n        } else if (even % 2 !==\
    \ 0 && odd % 2 === 0) {\n            even = even / 2;\n            odd = odd /\
    \ 2;\n        } else {\n            even = even / 2;\n            odd = odd /\
    \ 2;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n\
    \    let min_num = y;\n    while (max_num - min_num > 1) {\n        max_num =\
    \ (max_num + min_num) / 2;\n        min_num = (max_num + min_num) / 2;\n    }\n\
    \    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    let result: number = -1;\n    for (let\
    \ i = x; i <= y; i++) {\n        if (is_even(i)) {\n            result = i;\n\
    \            break;\n        }\n    }\n    return result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ even: number = x;\n    let odd: number = y;\n    while (even > 0 && odd > 0)\
    \ {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n            even = even /\
    \ 2;\n            odd = odd / 2;\n        } else if (even % 2 !== 0 && odd % 2\
    \ === 0) {\n            even = even / 2;\n            odd = odd / 2;\n       \
    \ } else {\n            even = even / 2;\n            odd = odd / 2;\n       \
    \ }\n    }\n    return even;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let\
    \ odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 ===\
    \ 0 && odd % 2 !== 0) {\n            even = even - 1;\n            odd = odd -\
    \ 1;\n        } else {\n            even = even - 1;\n            odd = odd +\
    \ 1;\n        }\n    }\n    return even > 0 ? even : -1;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ even: number = x;\n    let odd: number = y;\n    while (even > 0 && odd > 0)\
    \ {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n            even = even -\
    \ 1;\n            odd = odd - 1;\n        } else if (even % 2 !== 0 && odd % 2\
    \ === 0) {\n            even = even - 1;\n            odd = odd + 1;\n       \
    \ } else if (even % 2 === 0 && odd % 2 === 0) {\n            even = even + 1;\n\
    \            odd = odd - 1;\n        } else if (even % 2 !== 0 && odd % 2 !==\
    \ 0) {\n            even = even + 1;\n            odd = odd + 1;\n        }\n\
    \    }\n    return even;\n}\n", "\tlet even: boolean;\n\tlet result: number;\n\
    \t\n\tif (x > y) {\n\t\tresult = x;\n\t\teven = false;\n\t} else {\n\t\tresult\
    \ = y;\n\t\teven = true;\n\t}\n\t\n\twhile (result > 0 && result <= y) {\n\t\t\
    if (even) {\n\t\t\tresult = result + 2;\n\t\t} else {\n\t\t\tresult = result -\
    \ 2;\n\t\t}\n\t\teven = !even;\n\t}\n\t\n\treturn result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num: number = x;\n    let min_num: number = y;\n    while (max_num < min_num)\
    \ {\n        max_num++;\n        while (max_num % 2 === 0) {\n            max_num++;\n\
    \        }\n        while (min_num % 2 === 0) {\n            min_num--;\n    \
    \    }\n    }\n    return max_num;\n}\n", "\tif (x > y) {\n\t\tlet temp = x;\n\
    \t\tx = y;\n\t\ty = temp;\n\t}\n\tlet result: number = -1;\n\tlet even: number\
    \ = 1;\n\tlet odd: number = 1;\n\twhile (even <= y) {\n\t\tif (x % even === 0)\
    \ {\n\t\t\tresult += even;\n\t\t\tx += even;\n\t\t\teven += 2;\n\t\t} else {\n\
    \t\t\tresult += odd;\n\t\t\tx += odd;\n\t\t\todd += 2;\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (y > 0) {\n        if (y & 1) {\n     \
    \       result = y;\n        }\n        y >>= 1;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result: number = x;\n    while (result < y) {\n        result\
    \ += 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (min_num < max_num) {\n        let mid = (min_num +\
    \ max_num) / 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n  \
    \      } else {\n            min_num = mid;\n        }\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num++;\n        if (max_num % 2 === 0) {\n            max_num++;\n\
    \        }\n    }\n    while (max_num > min_num) {\n        min_num--;\n     \
    \   if (min_num % 2 === 0) {\n            min_num--;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num > min_num) {\n        if (max_num % 2 === 0) {\n            max_num\
    \ -= 1;\n        } else {\n            max_num += 1;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let num: number = x;\n    while (num < y) {\n  \
    \      num += 2;\n    }\n    return num;\n}\n", "    if (x < y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n\
    \    let min_num = y;\n    while (max_num < min_num) {\n        max_num += 2;\n\
    \        min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num\
    \ -= 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "    let even:\
    \ number = x % 2 === 0;\n    let evenOrOdd: number = even ? x : y;\n    let evenOrOddEven:\
    \ number = even ? y : x;\n    let evenOrOddOdd: number = even ? x : y;\n    let\
    \ evenOrOddEvenOdd: number = even ? y : x;\n    let evenOrOddEvenOddEven: number\
    \ = even ? y : x;\n    let evenOrOddEvenOddEvenOdd: number = even ? y : x;\n \
    \   let evenOrOddEvenOddEvenOddEven: number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEven: number =\
    \ even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOdd: number = even\
    \ ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEven: number = even ?\
    \ y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOdd: number = even\
    \ ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEven: number =\
    \ even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : x;\n    let evenOrOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : x;\n    let evenOrOddEvenOdd", "    if (x > y) {\n     \
    \   let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result =\
    \ x;\n    while (result < y) {\n        if (result % 2 === 0) {\n            result\
    \ = result + y;\n        } else {\n            result = result + x;\n        }\n\
    \    }\n    return result;\n}\n", "    let z: number = x;\n    let w: number =\
    \ y;\n    while (w >= z) {\n        if (w % 2 === 0) {\n            z = w;\n \
    \       } else {\n            w = w - 1;\n        }\n    }\n    return z;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let result = x;\n    while (result < y) {\n        result += y;\n  \
    \  }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n   \
    \     x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (max_num < min_num) {\n        max_num += 2;\n        min_num\
    \ -= 2;\n    }\n    return max_num;\n}\n", "    let even: number = x;\n    let\
    \ odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 ===\
    \ 0 && odd % 2 === 0) {\n            return even;\n        }\n        even /=\
    \ 2;\n        odd /= 2;\n    }\n    return -1;\n}\n", "    let even: number =\
    \ x;\n    let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if\
    \ (even % 2 === 0 && odd % 2 !== 0) {\n            even = even / 2;\n        \
    \    odd = odd / 2;\n        } else if (even % 2 !== 0 && odd % 2 === 0) {\n \
    \           even = even / 2;\n            odd = odd / 2;\n        } else if (even\
    \ % 2 === 0 && odd % 2 === 0) {\n            even = even / 2;\n            odd\
    \ = odd / 2;\n        } else {\n            return -1;\n        }\n    }\n   \
    \ return even;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (true) {\n        if (max_num % 2 == 0) {\n            max_num = max_num / 2;\n\
    \        } else {\n            max_num = max_num * 3 + 1;\n        }\n       \
    \ if (min_num % 2 == 0) {\n            min_num = min_num / 2;\n        } else\
    \ {\n            min_num = min_num * 3 + 1;\n        }\n        if (max_num <\
    \ min_num) {\n            return -1;\n        }\n    }\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result = x;\n    while (result < y) {\n        if (result % 2 === 0) {\n   \
    \         result = result + 1;\n        } else {\n            result = result\
    \ + 2;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n      \
    \  let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num =\
    \ x;\n    let min_num = y;\n    while (max_num < min_num) {\n        max_num +=\
    \ 2;\n        min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num\
    \ -= 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "\tlet max_num\
    \ = Math.max(x, y);\n\tlet min_num = Math.min(x, y);\n\tlet diff = max_num - min_num;\n\
    \tlet even = diff % 2 === 0;\n\tlet odd = diff % 2 === 1;\n\tif (even) {\n\t\t\
    if (odd) {\n\t\t\treturn max_num;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\
    \ else {\n\t\tif (odd) {\n\t\t\treturn min_num;\n\t\t} else {\n\t\t\treturn -1;\n\
    \t\t}\n\t}\n}\n", "    let even: number = x;\n    let odd: number = y;\n    while\
    \ (even > 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n  \
    \          even = even - 1;\n            odd = odd - 1;\n        } else if (even\
    \ % 2 !== 0 && odd % 2 === 0) {\n            even = even - 1;\n            odd\
    \ = odd + 1;\n        } else {\n            even = even + 1;\n            odd\
    \ = odd - 1;\n        }\n    }\n    return even;\n}\n", "\tif (x > y) {\n\t\t\
    let temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet result = x;\n\twhile (result\
    \ < y) {\n\t\tresult += y;\n\t}\n\treturn result;\n}\n", "    if (x > y) {\n \
    \       let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x > 1000)\
    \ {\n        return -1;\n    }\n    if (y > 1000) {\n        return -1;\n    }\n\
    \    let even: number = x;\n    let odd: number = y;\n    while (even > 0 && odd\
    \ > 0) {\n        if (even % 2 === 0) {\n            even = even / 2;\n      \
    \  } else {\n            odd = odd / 2;\n        }\n    }\n    return even;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num: number = x;\n    let min_num: number = y;\n    while\
    \ (max_num % 2 == 0) {\n        max_num--;\n    }\n    while (min_num % 2 == 0)\
    \ {\n        min_num++;\n    }\n    while (max_num < min_num) {\n        if (max_num\
    \ % 2 == 0) {\n            max_num++;\n        } else {\n            max_num--;\n\
    \        }\n    }\n    return max_num;\n}\n", "\tif (x > y) {\n\t\tlet temp =\
    \ x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet even: number = x;\n\tlet odd: number\
    \ = y;\n\twhile (even > 0 && odd > 0) {\n\t\tif (even % 2 === 0 && odd % 2 !==\
    \ 0) {\n\t\t\teven = even / 2;\n\t\t\todd = odd / 2;\n\t\t} else {\n\t\t\teven\
    \ = even / 2;\n\t\t\todd = odd / 2;\n\t\t}\n\t}\n\treturn even;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result: number = x;\n    while (y > 0) {\n        if (y & 1) {\n    \
    \        result = y;\n        }\n        y >>= 1;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result: number = x;\n    while (result <= y) {\n        if (result\
    \ % 2 === 0) {\n            result = result + 1;\n        } else {\n         \
    \   result = result + 2;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let max_num = x;\n    let min_num = y;\n    while (max_num % 2 == 0 && min_num\
    \ % 2 == 0) {\n        max_num = max_num / 2;\n        min_num = min_num / 2;\n\
    \    }\n    if (max_num % 2 == 0) {\n        return max_num;\n    } else {\n \
    \       return -1;\n    }\n}\n", "    if (x > y) {\n        let temp = x;\n  \
    \      x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (max_num < min_num) {\n        max_num += 2;\n        min_num\
    \ -= 2;\n    }\n    while (max_num > min_num) {\n        max_num -= 2;\n     \
    \   min_num += 2;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n     \
    \   let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x > 100)\
    \ {\n        x = x - 100;\n    }\n    if (y > 100) {\n        y = y - 100;\n \
    \   }\n    if (x < y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x < 0) {\n        x = x + 1;\n    }\n    if (y < 0) {\n      \
    \  y = y + 1;\n    }\n    if (x == y) {\n        return -1;\n    }\n    let temp:\
    \ number = x;\n    let even: number = 1;\n    let odd: number = 1;\n    while\
    \ (true) {\n        if (temp % 2 === 0) {\n            even = even + 1;\n    \
    \    }\n        else {\n            odd = odd + 1;\n        }\n        if (even\
    \ > odd) {\n            break;\n        }\n        temp = temp / 2;\n    }\n \
    \   return temp;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let result: number = x;\n    while (result\
    \ < y) {\n        if (result % 2 === 0) {\n            result = result + 1;\n\
    \        } else {\n            result = result - 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result: number = -1;\n    for (let i = x; i <=\
    \ y; i++) {\n        if (i % 2 === 0) {\n            result = i;\n           \
    \ break;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n    \
    \    let temp = x;\n        x = y;\n        y = temp;\n    }\n    let even: number\
    \ = x;\n    let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if\
    \ (even % 2 === 0 && odd % 2 !== 0) {\n            even = even - 1;\n        \
    \    odd = odd - 1;\n        } else if (even % 2 !== 0 && odd % 2 === 0) {\n \
    \           even = even - 1;\n            odd = odd + 1;\n        } else if (even\
    \ % 2 === 0 && odd % 2 === 0) {\n            even = even + 1;\n            odd\
    \ = odd - 1;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid = max_num + min_num / 2;\n        if (mid % 2 === 0) {\n            max_num\
    \ = mid;\n        } else {\n            min_num = mid;\n        }\n    }\n   \
    \ return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n \
    \   while (max_num - min_num > 1) {\n        let mid = max_num + min_num / 2;\n\
    \        if (mid % 2 === 0) {\n            max_num = mid;\n        } else {\n\
    \            min_num = mid;\n        }\n    }\n    return max_num;\n}\n", "  \
    \  if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    if (x < 0 || y < 0) {\n        return -1;\n    }\n    let result = 0;\n\
    \    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result\
    \ = i;\n            break;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += y;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd: number\
    \ = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 && odd %\
    \ 2 !== 0) {\n            return even;\n        } else if (even % 2 !== 0 && odd\
    \ % 2 === 0) {\n            return odd;\n        }\n        even /= 2;\n     \
    \   odd /= 2;\n    }\n    return -1;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (min_num > 0) {\n        if (max_num % min_num == 0)\
    \ {\n            max_num = max_num / min_num;\n        } else {\n            min_num\
    \ = min_num / min_num;\n        }\n    }\n    return max_num;\n}\n", "    if (x\
    \ < y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let max_num = x;\n    let min_num = y;\n    while (max_num < min_num) {\n \
    \       max_num += 2;\n        min_num -= 2;\n    }\n    return max_num;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (min_num < max_num)\
    \ {\n        let mid = (min_num + max_num) / 2;\n        if (mid % 2 === 0) {\n\
    \            max_num = mid;\n        } else {\n            min_num = mid;\n  \
    \      }\n    }\n    return max_num;\n}\n", "    let even: number = x % 2 ===\
    \ 0;\n    let low: number = x;\n    let high: number = y;\n    while (low <= high)\
    \ {\n        let mid: number = (low + high) / 2;\n        if (even === true) {\n\
    \            if (mid % 2 === 0) {\n                high = mid;\n            }\
    \ else {\n                low = mid + 1;\n            }\n        } else {\n  \
    \          if (mid % 2 !== 0) {\n                high = mid;\n            } else\
    \ {\n                low = mid + 1;\n            }\n        }\n    }\n    return\
    \ even\n        ? high\n        : low;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    if (x === y) {\n       \
    \ return -1;\n    }\n    let mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n\
    \        return mid;\n    } else {\n        return choose_num(mid, y);\n    }\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num % 2 == 0) {\n        max_num -= 1;\n    }\n    while (min_num % 2 ==\
    \ 0) {\n        min_num += 1;\n    }\n    while (max_num > min_num) {\n      \
    \  if (max_num % 2 == 0) {\n            max_num -= 1;\n        } else {\n    \
    \        max_num += 1;\n        }\n    }\n    return max_num;\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let max_num: number = x;\n    let min_num: number = y;\n    while (min_num\
    \ > 0) {\n        if (max_num % min_num === 0) {\n            max_num = max_num\
    \ / min_num;\n        } else {\n            min_num = min_num / min_num;\n   \
    \     }\n    }\n    return max_num;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

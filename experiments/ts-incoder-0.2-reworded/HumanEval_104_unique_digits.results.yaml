language: ts
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit\
    \ % 2 === 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpggysf5s8.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpggysf5s8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpwx_yhoev.js:23:12)\n    at Object.<anonymous> (/tmp/tmpwx_yhoev.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        let found = false;\n\
    \        for (let j = 0; j < result.length; j++) {\n            if (x[i] % result[j]\
    \ === 0) {\n                found = true;\n                break;\n          \
    \  }\n        }\n        if (!found) {\n            result.push(x[i]);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp2iz00ly_.js:28:12)\n    at Object.<anonymous> (/tmp/tmp2iz00ly_.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let index = result.indexOf(digit);\n        if (index === -1) {\n          \
    \  result.push(digit);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpjqs16tzn.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjqs16tzn.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcrmei__s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcrmei__s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let isEven\
    \ = digit % 2 === 0;\n        if (isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpsnd26cqh.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsnd26cqh.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n   \
    \         result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpoda3dgrj.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoda3dgrj.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    let\
    \ index = 0;\n    while (index < x.length) {\n        if (x[index] % 2 === 0)\
    \ {\n            result.push(x[index]);\n        }\n        index++;\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpyxaaamg0.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyxaaamg0.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n\
    \        if (digit % 2 === 0) {\n            result.push(digit);\n        }\n\
    \    }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwa6zwlli.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwa6zwlli.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let isEven = true;\n        for (let j = i; j < x.length; j++) {\n         \
    \   if (x[j] % 10 != 0) {\n                isEven = false;\n                break;\n\
    \            }\n        }\n        if (isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0hn7oju6.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0hn7oju6.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n   \
    \         result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpoda3dgrj.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoda3dgrj.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit\
    \ % 2 === 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmplz9ovwkm.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmplz9ovwkm.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcrmei__s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcrmei__s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit % 2 === 0)\
    \ {\n      continue;\n    }\n    let index = result.indexOf(digit);\n    if (index\
    \ === -1) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpelw3xo16.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpelw3xo16.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let found = false;\n        for (let j = 0; j < result.length; j++) {\n    \
    \        if (result[j] === digit) {\n                found = true;\n         \
    \       break;\n            }\n        }\n        if (!found) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp_qv4udv7.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_qv4udv7.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n\
    \        if (digit % 2 === 0) {\n            result.push(digit);\n        }\n\
    \    }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwa6zwlli.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwa6zwlli.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit % 2 === 0)\
    \ {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpsin7bs_7.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsin7bs_7.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n   \
    \         result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpoda3dgrj.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoda3dgrj.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let isEven\
    \ = true;\n        for (let j = i + 1; j < x.length; j++) {\n            if (x[j]\
    \ % digit === 0) {\n                isEven = false;\n                break;\n\
    \            }\n        }\n        if (isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpxn_d8344.js:29:12)\n    at Object.<anonymous> (/tmp/tmpxn_d8344.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit\
    \ % 2 === 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmplz9ovwkm.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmplz9ovwkm.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let temp = x[i];\n        let flag\
    \ = false;\n        for (let j = 0; j < result.length; j++) {\n            if\
    \ (result[j] === temp) {\n                flag = true;\n                break;\n\
    \            }\n        }\n        if (!flag) {\n            result.push(temp);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpli1y5676.js:29:12)\n    at Object.<anonymous> (/tmp/tmpli1y5676.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let isEven = false;\n        for (let\
    \ j = 0; j < x.length; j++) {\n            if (x[j] % 2 === 0) {\n           \
    \     isEven = true;\n                break;\n            }\n        }\n     \
    \   if (!isEven) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpvvv_8rx3.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpvvv_8rx3.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let count = 0;\n        for (let j\
    \ = 0; j < x.length; j++) {\n            if (x[j] % 10 == 0) count++;\n      \
    \  }\n        if (count % 2 == 0) result.push(x[i]);\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpi8taj40t.js:25:12)\n    at Object.<anonymous> (/tmp/tmpi8taj40t.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < result.length; j++) {\n            if (x[i] % result[j] === 0) {\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        if (!found) {\n            result.push(x[i]);\n        }\n    }\n\
    \    return result.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpdqoylbzj.js:28:12)\n    at Object.<anonymous> (/tmp/tmpdqoylbzj.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    let\
    \ index = 0;\n    while (index < x.length) {\n        if (x[index] % 2 === 0)\
    \ {\n            result.push(x[index]);\n        }\n        index++;\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp6qedkfdx.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6qedkfdx.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    let\
    \ map = new Map();\n    for (let i = 0; i < x.length; i++) {\n        let digit\
    \ = x[i];\n        if (map.has(digit)) {\n            continue;\n        }\n \
    \       map.set(digit, true);\n        result.push(digit);\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpfqgtz1jf.js:25:12)\n    at Object.<anonymous> (/tmp/tmpfqgtz1jf.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let found = false;\n        for (let j = 0; j < result.length; j++) {\n    \
    \        if (result[j] === digit) {\n                found = true;\n         \
    \       break;\n            }\n        }\n        if (!found) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp_qv4udv7.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_qv4udv7.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let isEven = digit % 2 === 0;\n        if (isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp14t75i82.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp14t75i82.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcrmei__s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcrmei__s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < result.length; j++) {\n            if (x[i] % result[j] === 0) {\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        if (!found) {\n            result.push(x[i]);\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpzodsgtz1.js:28:12)\n    at Object.<anonymous> (/tmp/tmpzodsgtz1.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n   \
    \         result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpoda3dgrj.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoda3dgrj.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) == -1) {\n            result.push(digit);\n      \
    \  }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmptctt11b2.js:22:12)\n    at Object.<anonymous> (/tmp/tmptctt11b2.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit % 2 === 0)\
    \ {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpsin7bs_7.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsin7bs_7.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcrmei__s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcrmei__s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < result.length; j++) {\n            if (x[i] % result[j] === 0) {\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        if (!found) {\n            result.push(x[i]);\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpse_beqvf.js:28:12)\n    at Object.<anonymous> (/tmp/tmpse_beqvf.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    if (x[i] % 2 === 0) {\n      result.push(x[i]);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp807qbhc2.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp807qbhc2.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    let\
    \ map = new Map<number, boolean>();\n    for (let i = 0; i < x.length; i++) {\n\
    \        let digit = x[i];\n        if (map.has(digit)) {\n            continue;\n\
    \        }\n        map.set(digit, true);\n        result.push(digit);\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp02mcs2l0.js:25:12)\n    at Object.<anonymous> (/tmp/tmp02mcs2l0.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    let digit = x[i];\n    let index = result.indexOf(digit);\n\
    \    if (index === -1) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpmcjv826u.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmcjv826u.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp2nqdrlk.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp2nqdrlk.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (result.indexOf(digit)\
    \ === -1) {\n      result.push(digit);\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpgisgdykv.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgisgdykv.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let index = result.indexOf(digit);\n        if (index === -1) {\n          \
    \  result.push(digit);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpjqs16tzn.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjqs16tzn.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let found\
    \ = false;\n        for (let j = 0; j < result.length; j++) {\n            if\
    \ (result[j] === digit) {\n                found = true;\n                break;\n\
    \            }\n        }\n        if (!found) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp1zgcba4r.js:29:12)\n    at Object.<anonymous> (/tmp/tmp1zgcba4r.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit % 2 === 0)\
    \ {\n      continue;\n    }\n    let index = result.indexOf(digit);\n    if (index\
    \ === -1) {\n      result.push(digit);\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9e5bj_gq.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9e5bj_gq.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let index = result.indexOf(digit);\n        if (index === -1) {\n          \
    \  result.push(digit);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpjqs16tzn.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjqs16tzn.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result: number[] = [];\n\
    \  let index = 0;\n  while (index < x.length) {\n    const currentDigit = x[index];\n\
    \    if (currentDigit % 2 === 0) {\n      result.push(currentDigit);\n    }\n\
    \    index++;\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpxq4cab27.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxq4cab27.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      continue;\n    }\n    const index = result.indexOf(digit);\n   \
    \ if (index === -1) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpol02744k.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpol02744k.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let found\
    \ = false;\n        for (let j = 0; j < result.length; j++) {\n            if\
    \ (result[j] === digit) {\n                found = true;\n                break;\n\
    \            }\n        }\n        if (!found) {\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpyju7wois.js:30:12)\n    at Object.<anonymous> (/tmp/tmpyju7wois.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      continue;\n    }\n    result.push(digit);\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpbfd0q59g.js:24:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpbfd0q59g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp2nqdrlk.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp2nqdrlk.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < result.length; j++) {\n            if (x[i] % result[j] === 0) {\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        if (!found) {\n            result.push(x[i]);\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpzodsgtz1.js:28:12)\n    at Object.<anonymous> (/tmp/tmpzodsgtz1.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    let\
    \ map = new Map<number, number>();\n    for (let i = 0; i < x.length; i++) {\n\
    \        let digit = x[i];\n        if (map.has(digit)) {\n            continue;\n\
    \        }\n        map.set(digit, i);\n        result.push(digit);\n    }\n \
    \   return result.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmptasxbecp.js:25:12)\n    at Object.<anonymous> (/tmp/tmptasxbecp.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  let map\
    \ = new Map();\n  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n\
    \    if (map.has(digit)) {\n      continue;\n    }\n    map.set(digit, true);\n\
    \    result.push(digit);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp415anujk.js:25:12)\n    at Object.<anonymous> (/tmp/tmp415anujk.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) < 0) {\n            result.push(digit);\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpz1455fbk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpz1455fbk.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let isEven = digit % 2 === 0;\n        if (isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp14t75i82.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp14t75i82.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit\
    \ % 2 === 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpggysf5s8.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpggysf5s8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let count = 0;\n        for (let j\
    \ = 0; j < x.length; j++) {\n            if (x[j] % 2 === 0 && x[j] % 10 === 0)\
    \ {\n                count++;\n            }\n        }\n        if (count ===\
    \ 0) {\n            result.push(x[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmphifg058h.js:27:12)\n    at Object.<anonymous> (/tmp/tmphifg058h.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit % 2 === 0)\
    \ {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpsin7bs_7.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsin7bs_7.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    let map: Map<number, boolean> = new Map();\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (map.has(digit)) {\n         \
    \   continue;\n        }\n        map.set(digit, true);\n        result.push(digit);\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmplexv9ruv.js:25:12)\n    at Object.<anonymous> (/tmp/tmplexv9ruv.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    let\
    \ map = new Map<number, boolean>();\n    for (let i = 0; i < x.length; i++) {\n\
    \        let digit = x[i];\n        if (map.has(digit)) {\n            continue;\n\
    \        }\n        map.set(digit, true);\n        result.push(digit);\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp02mcs2l0.js:25:12)\n    at Object.<anonymous> (/tmp/tmp02mcs2l0.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 !== 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpoo6k0rkt.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpoo6k0rkt.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp2nqdrlk.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp2nqdrlk.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    let\
    \ index = 0;\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 ===\
    \ 0) {\n            result.push(x[i]);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3dc87i51.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3dc87i51.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp2nqdrlk.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp2nqdrlk.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    if (x[i] % 2 === 0) {\n      result.push(x[i]);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp807qbhc2.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp807qbhc2.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334957
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuy8w_1sj.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuy8w_1sj.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (result.indexOf(digit)\
    \ === -1) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpkk_z9yq_.js:22:12)\n    at Object.<anonymous> (/tmp/tmpkk_z9yq_.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let index = result.indexOf(digit);\n        if (index === -1) {\n          \
    \  result.push(digit);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpjqs16tzn.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjqs16tzn.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 !== 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpoo6k0rkt.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpoo6k0rkt.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let isEven = false;\n        for (let j = 0; j < result.length; j++) {\n   \
    \         if (result[j] % 10 === digit) {\n                isEven = true;\n  \
    \              break;\n            }\n        }\n        if (!isEven) {\n    \
    \        result.push(digit);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n\
    \  33,\n  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n  \
    \  at test (/tmp/tmp8mzfbv75.js:29:12)\n    at Object.<anonymous> (/tmp/tmp8mzfbv75.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 15, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result.sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpa4a99haz.js:23:12)\n    at Object.<anonymous> (/tmp/tmpa4a99haz.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) == -1) {\n            result.push(digit);\n      \
    \  }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmptctt11b2.js:22:12)\n    at Object.<anonymous> (/tmp/tmptctt11b2.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  const result = [];\n  for (let\
    \ i = 0; i < x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 ===\
    \ 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp2nqdrlk.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp2nqdrlk.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let isEven\
    \ = false;\n        for (let j = 0; j < result.length; j++) {\n            if\
    \ (result[j] % 10 == digit) {\n                isEven = true;\n              \
    \  break;\n            }\n        }\n        if (!isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmps200lb75.js:29:12)\n    at Object.<anonymous> (/tmp/tmps200lb75.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334961
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let isEven = false;\n        for (let\
    \ j = 0; j < x.length; j++) {\n            if (x[j] % 2 === 0) {\n           \
    \     isEven = true;\n                break;\n            }\n        }\n     \
    \   if (isEven) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp5xe2sslw.js:28:12)\n    at Object.<anonymous> (/tmp/tmp5xe2sslw.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpd1_j0_oi.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd1_j0_oi.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let index = result.indexOf(digit);\n        if (index === -1) {\n          \
    \  result.push(digit);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpjqs16tzn.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjqs16tzn.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let count = 0;\n        for (let j\
    \ = 0; j < x.length; j++) {\n            if (x[j] % 2 === 0) {\n             \
    \   count++;\n            }\n        }\n        if (count === 0) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpiiz_bke0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpiiz_bke0.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let isEven = false;\n        for (let j = 0; j < result.length; j++) {\n   \
    \         if (result[j] % 10 === digit) {\n                isEven = true;\n  \
    \              break;\n            }\n        }\n        if (!isEven) {\n    \
    \        result.push(digit);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpf2l1wggf.js:29:12)\n    at Object.<anonymous> (/tmp/tmpf2l1wggf.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334961
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let isEven\
    \ = false;\n        for (let j = 0; j < result.length; j++) {\n            if\
    \ (result[j] === digit) {\n                isEven = true;\n                break;\n\
    \            }\n        }\n        if (!isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp5v1os379.js:29:12)\n    at Object.<anonymous> (/tmp/tmp5v1os379.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit\
    \ % 2 === 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpggysf5s8.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpggysf5s8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n\
    \        if (digit % 2 === 0) {\n            result.push(digit);\n        }\n\
    \    }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwa6zwlli.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwa6zwlli.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        let found = false;\n\
    \        for (let j = 0; j < result.length; j++) {\n            if (x[i] % result[j]\
    \ === 0) {\n                found = true;\n                break;\n          \
    \  }\n        }\n        if (!found) {\n            result.push(x[i]);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp2iz00ly_.js:28:12)\n    at Object.<anonymous> (/tmp/tmp2iz00ly_.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        let found = false;\n\
    \        for (let j = 0; j < result.length; j++) {\n            if (result[j]\
    \ === x[i]) {\n                found = true;\n                break;\n       \
    \     }\n        }\n        if (!found) {\n            result.push(x[i]);\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpag97cozh.js:28:12)\n    at Object.<anonymous> (/tmp/tmpag97cozh.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) == -1) {\n            result.push(digit);\n      \
    \  }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmptctt11b2.js:22:12)\n    at Object.<anonymous> (/tmp/tmptctt11b2.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) == -1) {\n            result.push(digit);\n      \
    \  }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmptctt11b2.js:22:12)\n    at Object.<anonymous> (/tmp/tmptctt11b2.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        const digit = x[i];\n\
    \        if (digit % 2 === 0) {\n            result.push(digit);\n        }\n\
    \    }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwa6zwlli.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwa6zwlli.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ let found = false;\n        for (let j = 0; j < result.length; j++) {\n    \
    \        if (result[j] === digit) {\n                found = true;\n         \
    \       break;\n            }\n        }\n        if (!found) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp_qv4udv7.js:29:12)\n    at Object.<anonymous> (/tmp/tmp_qv4udv7.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n  let result: number[] = [];\n\
    \  for (let i = 0; i < x.length; i++) {\n    let digit = x[i];\n    if (digit\
    \ % 2 === 0) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpggysf5s8.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpggysf5s8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n   \
    \         result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpoda3dgrj.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoda3dgrj.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) < 0) {\n            result.push(digit);\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpz1455fbk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpz1455fbk.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let count = 0;\n        for (let j\
    \ = 0; j < x.length; j++) {\n            if (x[j] % 10 == 0 && x[j] % 10 != 0)\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ 0) {\n            result.push(x[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmptodgu3ys.js:27:12)\n    at Object.<anonymous> (/tmp/tmptodgu3ys.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334960
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) < 0) {\n            result.push(digit);\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpz1455fbk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpz1455fbk.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334958
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n\
    \            result.push(x[i]);\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpnzy55c4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnzy55c4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (digit % 2 === 0) {\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp87svauad.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp87svauad.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpknw7bm4r.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknw7bm4r.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        let index\
    \ = result.indexOf(digit);\n        if (index === -1) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpruif2ybv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpruif2ybv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let count = 0;\n        for (let j\
    \ = 0; j < x.length; j++) {\n            if (x[j] % 10 === 0 && x[j] % 10 != 0)\
    \ {\n                count++;\n            }\n        }\n        if (count ===\
    \ 0) {\n            result.push(x[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpd6l1aiax.js:27:12)\n    at Object.<anonymous> (/tmp/tmpd6l1aiax.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334961
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    const result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp_3h260um.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_3h260um.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n        if (digit\
    \ % 2 === 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3zukxzhw.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3zukxzhw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334954
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: number[]): number[] {\n    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let digit = x[i];\n       \
    \ if (result.indexOf(digit) === -1) {\n            result.push(digit);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpmgm88w12.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgm88w12.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334954

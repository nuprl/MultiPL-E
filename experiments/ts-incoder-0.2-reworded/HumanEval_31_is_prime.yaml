name: HumanEval_31_is_prime
language: ts
prompt: "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n\
  // false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n// true\n// >>> is_prime(13441)\n\
  // true\n// >>> is_prime(61)\n// true\n// >>> is_prime(4)\n// false\n// >>> is_prime(1)\n\
  // false\nfunction is_prime(n: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n\
  \  assert.deepEqual(candidate(101),true);\n  assert.deepEqual(candidate(11),true);\n\
  \  assert.deepEqual(candidate(13441),true);\n  assert.deepEqual(candidate(61),true);\n\
  \  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(1),false);\n\
  \  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(11),true);\n\
  \  assert.deepEqual(candidate(17),true);\n  assert.deepEqual(candidate(85),false);\n\
  \  assert.deepEqual(candidate(77),false);\n  assert.deepEqual(candidate(255379),false);\n\
  }\n\ntest();"
completions: ["  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return\
    \ true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  for (let i = 5; i * i <=\
    \ n; i += 6) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n\
    \    for (let j = 2; j < i; j++) {\n        if (n % j === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "  if (n < 2) {\n    return\
    \ false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n\
    \    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <=\
    \ sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    if\
    \ (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n        return\
    \ false;\n    }\n    if (n % 3 === 0) {\n        return true;\n    }\n    if (n\
    \ % 5 === 0) {\n        return false;\n    }\n    const i = Math.floor(Math.sqrt(n));\n\
    \    for (let k = i; k > 2; k--) {\n        if (n % k === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n      \
    \  return false;\n    }\n    if (n === 2) {\n        return true;\n    }\n   \
    \ if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n \
    \       return true;\n    }\n    let i = 5; // n is odd, so start at 5\n    while\
    \ (i > 1 && n % i === 0) {\n        i--;\n    }\n    // i now holds 5 or 6 (whichever\
    \ is closer to 3)\n    if (i > 2) {\n        return false;\n    }\n    // 6 is\
    \ divisible by 2, so 6,6,6,6 are all prime.\n    if (n === 6) {\n        return\
    \ true;\n    }\n    // 6 is not divisible by any primes less than 7, so 6,6,6,6,6,6\
    \ is not prime.\n    if (n % 6 === 0 && n !== 6) {\n        return false;\n  \
    \  }\n    // If we got this far, there are primes up to 7 (including 7).\n   \
    \ // The first prime that is greater than 7 is 7.\n    // 7 is divisible by 2,\
    \ so 7,7,7,7 are all prime.\n    if (n === 7) {\n        return true;\n    }\n\
    \    // 7 is not divisible by any primes less than 7, so 7,7,7,7,7,7 are not prime.\n\
    \    if (n % 7 === 0 && n !== 7) {\n        return false;\n    }\n    // If we\
    \ got this far, there are primes up to 10 (including 10).\n    // The first prime\
    \ that is greater than 10 is 10.\n    // 10 is divisible by 2, so 10,10,10,10\
    \ are all prime.\n    if (n === 10) {\n        return true;\n    }\n    // 10\
    \ is not divisible by any primes less than 10, so 10,10,10,10,10,10 are not prime.\n\
    \    if (n % 10 === 0 && n !== 10) {\n        return false;\n    }\n    // If\
    \ we got this far, there are primes up to 20 (including 20).\n    // The first\
    \ prime that is greater than 20 is 20.\n    // 20 is divisible by 2, so 20,20,20,20\
    \ are all prime.\n    if (n === 20) {\n        return true;\n    }\n    // 20\
    \ is not divisible by any primes less than 20, so 20,20,20,20,20,20 are not prime.\n\
    \    if (n % 20 === 0 && n !== 20) {\n        return false;\n    }\n    // If\
    \ we got this far, there are primes up to 100 (including 100).\n    // The first\
    \ prime that is greater than 100 is 100.\n    // 100 is divisible by 2, so 100,100,100,100\
    \ are all prime.\n    if (n === 100) {\n        return true;\n    }\n    // 100\
    \ is not divisible by any primes less than 100, so 100,100,100,100,100 are not\
    \ prime.\n    if (n % 100 === 0 && n !== 100) {\n        return false;\n    }\n\
    \    // If we got this far, there are primes up to 200 (including 200", "  if\
    \ (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  if (n % 3 === 0) {\n    return true;\n \
    \ }\n  for (let i = 5; i * i <= n; i += 6) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return\
    \ false;\n    }\n    if (n === 2) {\n        return true;\n    }\n    if (n %\
    \ 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return\
    \ true;\n    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n    for (let j = 0;\
    \ j < i; j++) {\n        if (n % i === 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\
    \  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.floor(Math.sqrt(n));\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if\
    \ (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if\
    \ (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0)\
    \ {\n    return false;\n  }\n  if (n % 7 === 0) {\n    return true;\n  }\n  if\
    \ (n % 11 === 0) {\n    return false;\n  }\n  if (n % 13 === 0) {\n    return\
    \ true;\n  }\n  if (n % 17 === 0) {\n    return false;\n  }\n  if (n % 19 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 23 === 0) {\n    return false;\n  }\n\
    \  if (n % 29 === 0) {\n    return true;\n  }\n  if (n % 37 === 0) {\n    return\
    \ false;\n  }\n  if (n % 43 === 0) {\n    return true;\n  }\n  if (n % 53 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 63 === 0) {\n    return true;\n  }\n\
    \  if (n % 73 === 0) {\n    return false;\n  }\n  if (n % 83 === 0) {\n    return\
    \ true;\n  }\n  if (n % 93 === 0) {\n    return false;\n  }\n  if (n % 103 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 113 === 0) {\n    return false;\n  }\n\
    \  if (n % 123 === 0) {\n    return true;\n  }\n  if (n % 133 === 0) {\n    return\
    \ true;\n  }\n  if (n % 137 === 0) {\n    return false;\n  }\n  if (n % 139 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 143 === 0) {\n    return false;\n  }\n\
    \  if (n % 147 === 0) {\n    return true;\n  }\n  if (n % 149 === 0) {\n    return\
    \ false;\n  }\n  if (n % 153 === 0) {\n    return true;\n  }\n  if (n % 157 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 159 === 0) {\n    return true;\n  }\n\
    \  if (n % 163 === 0) {\n    return false;\n  }\n  if (n % 167 === 0) {\n    return\
    \ true;\n  }\n  if (n % 169 === 0) {\n    return false;\n  }\n  if (n % 173 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 177 === 0) {\n    return false;\n  }\n\
    \  if (n % 179 === 0) {\n    return true;\n  }\n  if (n % 183 === 0) {\n    return\
    \ false;\n  }\n  if (n % 187 === 0) {\n    return true;\n  }\n  if (n % 189 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 193 === 0) {\n    return true;\n  }\n\
    \  if (n % 197 === 0) {\n    return false;\n  }\n  if (n % 199 === 0) {\n    return\
    \ true;\n  }\n  if (n % 203 === 0) {\n    return false;\n  }\n  if (n % 207 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 209 === 0) {\n    return false;\n  }\n\
    \  if (n % 211 === 0) {\n    return true;\n  }\n  if (n % 213 === 0) {\n    return\
    \ false;\n  }\n  if (n % 217 === 0) {\n    return true;\n  }\n  if (n % 219 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 223 === 0) {\n    return true;\n  }\n\
    \  if (n % 227 === 0) {\n    return false;\n  }\n  if (n % 229 === 0) {\n    return\
    \ true;\n  }\n  if (n % 233 === 0) {\n    return false;\n  }\n  if (n % 237 ===\
    \ 0) {\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return\
    \ true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    if (n ===\
    \ 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n\
    \    }\n    if (n % 3 === 0) {\n        return true;\n    }\n    if (n % 5 ===\
    \ 0) {\n        return false;\n    }\n    const i = Math.floor(Math.sqrt(n));\n\
    \    for (let x = 2; x < i; x++) {\n        if (n % x === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n      \
    \  return false;\n    }\n    if (n === 2) {\n        return true;\n    }\n   \
    \ if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n \
    \       return true;\n    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n    for\
    \ (let j = 2; j < i; j++) {\n        if (n % j === 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n\n  // Trial division algorithm to determine if n is prime.\n  // https://en.wikipedia.org/wiki/Trial_division\n\
    \  // If n is less than 2, then return false.\n  if (n < 3) {\n    return false;\n\
    \  }\n\n  // Trial division algorithm to determine if n is prime.\n  // https://en.wikipedia.org/wiki/Trial_division\n\
    \  // If n is less than 3, then return false.\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n\n  // If n is greater than 3, then there are two factors less\
    \ than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factors\
    \ less than or equal to n.\n  // If n is greater than 3, then there are two factor",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\n  if (n === 2) {\n \
    \   return true;\n  }\n\n  if (n % 2 === 0) {\n    return false;\n  }\n\n  const\
    \ sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n\
    \ % i === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "  if\
    \ (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    var sqrt_n =\
    \ Math.sqrt(n);\n    for (var i = 3; i <= sqrt_n; i += 2) {\n        if (n % i\
    \ === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n        return\
    \ true;\n    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n\
    \ % 3 === 0) {\n        return true;\n    }\n    let i = 5; // n is odd, so start\
    \ at 5\n    while (i >= 2 && n % i === 0) {\n        i = i - 2;\n    }\n    //\
    \ If we reach here, then i is prime\n    if (i === 2) {\n        return true;\n\
    \    }\n    // If i is greater than 2, then n is prime\n    if (i > 2) {\n   \
    \     return false;\n    }\n    // If i is greater than sqrt(n), then n is not\
    \ prime\n    if (i * i > n) {\n        return false;\n    }\n    // If n is divisible\
    \ by i, then n is not prime\n    if (n % i === 0) {\n        return false;\n \
    \   }\n    // If n is not divisible by i, then n is prime\n    return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n\
    \  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\n  if (n === 2) {\n \
    \   return true;\n  }\n\n  if (n % 2 === 0) {\n    return false;\n  }\n\n  let\
    \ sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n\
    \ % i === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "  if\
    \ (n < 2) {\n    return false;\n  }\n\n  if (n === 2) {\n    return true;\n  }\n\
    \n  if (n % 2 === 0) {\n    return false;\n  }\n\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 0; i < primes.length;\
    \ i++) {\n    var p = primes[i];\n    if (p > sqrt_n) {\n      break;\n    }\n\
    \    if (n % p === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n        return\
    \ true;\n    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n\
    \ % 3 === 0) {\n        return true;\n    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n\
    \    for (let j = 0; j < i; j++) {\n        if (n % i === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n      \
    \  return false;\n    }\n    if (n === 2) {\n        return true;\n    }\n   \
    \ if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n \
    \       return true;\n    }\n    let i = 5; // Start at 5 to avoid a potential\
    \ negative integer problem.\n    while (i < (n - 1)) {\n        if (n % i ===\
    \ 0) {\n            return false;\n        }\n        i += 2;\n    }\n    return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n\
    \ = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    let i = 5; // n is odd, so start at 5\n\
    \    while (i >= 2 && n % i === 0) {\n        i = i - 2;\n    }\n    if (i ===\
    \ 2) {\n        return true;\n    }\n    if (i > 2 && n % i === 0) {\n       \
    \ return false;\n    }\n    let w = Math.sqrt(n);\n    let f = 1;\n    for (let\
    \ i = 3; i <= w; i += 2) {\n        if (n % i === 0) {\n            f = f % i;\n\
    \        }\n    }\n    if (f === 1) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n  \
    \  return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n\n    const sqrt: number = Math.sqrt(n);\n\
    \    for (let i = 2; i <= sqrt; i++) {\n        if (n % i === 0) {\n         \
    \   return false;\n        }\n    }\n\n    return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  if (n % 3 === 0) {\n    return true;\n \
    \ }\n  if (n % 5 === 0) {\n    return true;\n  }\n  if (n % 7 === 0) {\n    return\
    \ true;\n  }\n  if (n % 11 === 0) {\n    return true;\n  }\n  if (n % 13 === 0)\
    \ {\n    return true;\n  }\n  if (n % 17 === 0) {\n    return true;\n  }\n  if\
    \ (n % 19 === 0) {\n    return true;\n  }\n  if (n % 23 === 0) {\n    return true;\n\
    \  }\n  if (n % 29 === 0) {\n    return true;\n  }\n  if (n % 31 === 0) {\n  \
    \  return true;\n  }\n  if (n % 37 === 0) {\n    return true;\n  }\n  if (n %\
    \ 43 === 0) {\n    return true;\n  }\n  if (n % 49 === 0) {\n    return true;\n\
    \  }\n  if (n % 53 === 0) {\n    return true;\n  }\n  if (n % 59 === 0) {\n  \
    \  return true;\n  }\n  if (n % 63 === 0) {\n    return true;\n  }\n  if (n %\
    \ 69 === 0) {\n    return true;\n  }\n  if (n % 73 === 0) {\n    return true;\n\
    \  }\n  if (n % 79 === 0) {\n    return true;\n  }\n  if (n % 81 === 0) {\n  \
    \  return true;\n  }\n  if (n % 87 === 0) {\n    return true;\n  }\n  if (n %\
    \ 97 === 0) {\n    return true;\n  }\n  if (n % 103 === 0) {\n    return true;\n\
    \  }\n  if (n % 105 === 0) {\n    return true;\n  }\n  if (n % 111 === 0) {\n\
    \    return true;\n  }\n  if (n % 127 === 0) {\n    return true;\n  }\n  if (n\
    \ % 131 === 0) {\n    return true;\n  }\n  if (n % 139 === 0) {\n    return true;\n\
    \  }\n  if (n % 143 === 0) {\n    return true;\n  }\n  if (n % 147 === 0) {\n\
    \    return true;\n  }\n  if (n % 151 === 0) {\n    return true;\n  }\n  if (n\
    \ % 159 === 0) {\n    return true;\n  }\n  if (n % 163 === 0) {\n    return true;\n\
    \  }\n  if (n % 167 === 0) {\n    return true;\n  }\n  if (n % 171 === 0) {\n\
    \    return true;\n  }\n  if (n % 179 !== 0) {\n    return true;\n  }\n  if (n\
    \ % 183 === 0) {\n    return true;\n  }\n  if (n % 187 === 0) {\n    return true;\n\
    \  }\n  if (n % 191 === 0) {\n    return true;\n  }\n  if (n % 197 === 0) {\n\
    \    return true;\n  }\n  if (n % 203 === 0) {\n    return true;\n  }\n  if (n\
    \ % 209 === 0) {\n    return true;\n  }\n  if (n % 211 === 0) {\n    return true;\n\
    \  }\n  if (n % 217 === 0) {\n    return true;\n  }\n  if (n % 223 === 0) {\n\
    \    return true;\n  }\n  if (n % 229 === 0) {\n    return true;\n  }\n  if (n\
    \ % 233 === 0) {\n    return true;\n  }\n  if (n % 239 === 0) {\n    return true;\n\
    \  }\n  if (n % 243 === 0) {\n    return true;\n  }\n  if (n % 247 === 0) {\n\
    \    return true;\n  }\n  if (n % 251 === 0) {\n    return true;\n  }\n  if (n\
    \ % 257 === 0) {", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n\
    \    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const\
    \ sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n\
    \ % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n\
    \ < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if\
    \ (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for\
    \ (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\n\
    \  if (n === 2) {\n    return true;\n  }\n\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n\n  var sqrt_n = Math.sqrt(n);\n  var prime_root = Math.floor(Math.sqrt(n));\n\
    \n  for (let i = 3; i <= prime_root; i += 2) {\n    if (n % i === 0) {\n     \
    \ return false;\n    }\n  }\n\n  return true;\n}\n", "  if (n < 2) {\n    return\
    \ false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n\
    \    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <=\
    \ sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    if\
    \ (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n        return\
    \ false;\n    }\n    if (n % 3 === 0) {\n        return true;\n    }\n    let\
    \ i = 5 - Math.floor(Math.sqrt(n));\n    for (let j = 2; j < i; j++) {\n     \
    \   if (n % j === 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n\
    \ = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    if (n % 5 === 0) {\n        return false;\n\
    \    }\n    if (n % 7 === 0) {\n        return true;\n    }\n    if (n % 11 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 13 === 0) {\n        return\
    \ true;\n    }\n    if (n % 17 === 0) {\n        return false;\n    }\n    if\
    \ (n % 19 === 0) {\n        return true;\n    }\n    if (n % 23 === 0) {\n   \
    \     return false;\n    }\n    if (n % 29 === 0) {\n        return true;\n  \
    \  }\n    if (n % 37 === 0) {\n        return false;\n    }\n    if (n % 43 ===\
    \ 0) {\n        return true;\n    }\n    if (n % 53 === 0) {\n        return false;\n\
    \    }\n    if (n % 63 === 0) {\n        return true;\n    }\n    if (n % 73 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 83 === 0) {\n        return\
    \ true;\n    }\n    if (n % 93 === 0) {\n        return false;\n    }\n    if\
    \ (n % 103 === 0) {\n        return true;\n    }\n    if (n % 113 === 0) {\n \
    \       return false;\n    }\n    if (n % 123 === 0) {\n        return true;\n\
    \    }\n    if (n % 133 === 0) {\n        return true;\n    }\n    if (n % 137\
    \ === 0) {\n        return false;\n    }\n    if (n % 139 === 0) {\n        return\
    \ true;\n    }\n    if (n % 143 === 0) {\n        return false;\n    }\n    if\
    \ (n % 147 === 0) {\n        return true;\n    }\n    if (n % 151 === 0) {\n \
    \       return false;\n    }\n    if (n % 157 === 0) {\n        return true;\n\
    \    }\n    if (n % 159 === 0) {\n        return false;\n    }\n    if (n % 163\
    \ === 0) {\n        return true;\n    }\n    if (n % 167 === 0) {\n        return\
    \ false;\n    }\n    if (n % 171 === 0) {\n        return true;\n    }\n    if\
    \ (n % 177 === 0) {\n        return false;\n    }\n    if (n % 179 === 0) {\n\
    \        return true;\n    }\n    if (n % 183 === 0) {\n        return false;\n\
    \    }\n    if (n % 187 === 0) {\n        return true;\n    }\n    if (n % 191\
    \ === 0) {\n        return false;\n    }\n    if (n % 197 === 0) {\n        return\
    \ true;\n    }\n    if (n % 199 === 0) {\n        return false;\n    }\n    if\
    \ (n % 203 === 0) {\n        return true;\n    }\n    if (n % 207 === 0) {\n \
    \       return false;\n    }\n    if (n % 209 === 0) {\n        return true;\n\
    \    }\n    if (n % 211 === 0) {\n        return false;\n    }\n    if (n % 213\
    \ === 0) {\n        return true;\n    }\n    if (n % 217 === 0) {\n        return\
    \ false;\n    }\n    if (n % 223 === 0) {\n        return true;\n    }\n    if\
    \ (n % 227 === 0) {\n        return false;\n    }\n    if (n % 229 === 0) {\n\
    \        return true;\n    }\n    if (n % 233 === 0) {\n        return false;\n\
    \    }\n    if (n % 239 === 0) {\n        return true;\n    }\n    if (n % 243\
    \ === 0) {\n        return false;\n    }\n    if (n % 247 === 0) {\n        return\
    \ true;\n    }\n    if (n % 251 === 0) {\n        return false;\n    }\n    if\
    \ (n % 257", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return\
    \ true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n\
    \ = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0) {\n    return\
    \ false;\n  }\n  if (n % 7 === 0) {\n    return true;\n  }\n  if (n % 11 === 0)\
    \ {\n    return false;\n  }\n  if (n % 13 === 0) {\n    return true;\n  }\n  if\
    \ (n % 17 === 0) {\n    return false;\n  }\n  if (n % 19 === 0) {\n    return\
    \ true;\n  }\n  if (n % 23 === 0) {\n    return false;\n  }\n  if (n % 29 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 31 === 0) {\n    return false;\n  }\n\
    \  if (n % 37 === 0) {\n    return true;\n  }\n  if (n % 43 === 0) {\n    return\
    \ false;\n  }\n  if (n % 53 === 0) {\n    return true;\n  }\n  if (n % 63 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 73 === 0) {\n    return false;\n  }\n\
    \  if (n % 83 === 0) {\n    return true;\n  }\n  if (n % 93 === 0) {\n    return\
    \ false;\n  }\n  if (n % 103 === 0) {\n    return true;\n  }\n  if (n % 113 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 123 === 0) {\n    return true;\n  }\n\
    \  if (n % 133 === 0) {\n    return true;\n  }\n  if (n % 143 === 0) {\n    return\
    \ false;\n  }\n  if (n % 153 === 0) {\n    return true;\n  }\n  if (n % 163 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 173 === 0) {\n    return true;\n  }\n\
    \  if (n % 183 === 0) {\n    return false;\n  }\n  if (n % 193 === 0) {\n    return\
    \ true;\n  }\n  if (n % 203 === 0) {\n    return false;\n  }\n  if (n % 213 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 223 === 0) {\n    return false;\n  }\n\
    \  if (n % 233 === 0) {\n    return true;\n  }\n  if (n % 243 === 0) {\n    return\
    \ false;\n  }\n  if (n % 253 === 0) {\n    return true;\n  }\n  if (n % 263 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 273 === 0) {\n    return true;\n  }\n\
    \  if (n % 283 === 0) {\n    return false;\n  }\n  if (n % 293 === 0) {\n    return\
    \ true;\n  }\n  if (n % 303 === 0) {\n    return false;\n  }\n  if (n % 313 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 323 === 0) {\n    return false;\n  }\n\
    \  if (n % 333 === 0) {\n    return true;\n  }\n  if (n % 343 === 0) {\n    return\
    \ false;\n  }\n  if (n % 353 === 0) {\n    return true;\n  }\n  if (n % 363 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 373 === 0) {\n    return true;\n  }\n\
    \  if (n % 383 === 0) {\n    return false;\n  }\n  if (n % 393 === 0) {\n    return\
    \ true;\n  }\n  if (n % 403 === 0) {\n    return false;\n  }\n  if (n % 413 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 423 === 0) {\n    return false;\n  }\n\
    \  if (n % ", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return\
    \ true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  for (let i = 5;\
    \ i * i <= n; i += 6) {\n    if (n % i === 0) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\n  if (n\
    \ === 2) {\n    return true;\n  }\n\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n\n  let i = Math.floor(Math.sqrt(n));\n  for (let j = 2; j < i; j++) {\n\
    \    if (n % j === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n  for (let i = 3; i\
    \ <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n \
    \   if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n    \
    \    return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n    }\n\
    \    let i = 5; // i must be odd at this point\n    while (i !== 1) {\n      \
    \  if (n % i === 0) {\n            return false;\n        }\n        i += 2;\n\
    \    }\n    return true;\n}\n", "    if (n < 2) {\n        return false;\n   \
    \ }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n\
    \        return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n\
    \    }\n    let i = 5\n    while (i < n / 3) {\n        if (n % i === 0) {\n \
    \           return false;\n        }\n        i += 6\n    }\n    return true;\n\
    }\n", "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n  \
    \      return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n  \
    \  }\n    if (n % 3 === 0) {\n        return true;\n    }\n    if (n % 5 === 0)\
    \ {\n        return false;\n    }\n    if (n % 7 === 0) {\n        return true;\n\
    \    }\n    if (n % 11 === 0) {\n        return false;\n    }\n    if (n % 13\
    \ === 0) {\n        return true;\n    }\n    if (n % 17 === 0) {\n        return\
    \ false;\n    }\n    if (n % 19 === 0) {\n        return true;\n    }\n    if\
    \ (n % 23 === 0) {\n        return false;\n    }\n    if (n % 29 === 0) {\n  \
    \      return true;\n    }\n    if (n % 37 === 0) {\n        return false;\n \
    \   }\n    if (n % 43 === 0) {\n        return true;\n    }\n    if (n % 53 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 63 === 0) {\n        return\
    \ true;\n    }\n    if (n % 73 === 0) {\n        return false;\n    }\n    if\
    \ (n % 83 === 0) {\n        return true;\n    }\n    if (n % 93 === 0) {\n   \
    \     return false;\n    }\n    if (n % 103 === 0) {\n        return true;\n \
    \   }\n    if (n % 113 === 0) {\n        return false;\n    }\n    if (n % 123\
    \ === 0) {\n        return true;\n    }\n    if (n % 133 === 0) {\n        return\
    \ true;\n    }\n    if (n % 137 === 0) {\n        return false;\n    }\n    if\
    \ (n % 139 === 0) {\n        return true;\n    }\n    if (n % 143 === 0) {\n \
    \       return false;\n    }\n    if (n % 147 === 0) {\n        return true;\n\
    \    }\n    if (n % 149 === 0) {\n        return false;\n    }\n    if (n % 153\
    \ === 0) {\n        return true;\n    }\n    if (n % 157 === 0) {\n        return\
    \ false;\n    }\n    if (n % 163 === 0) {\n        return true;\n    }\n    if\
    \ (n % 167 === 0) {\n        return false;\n    }\n    if (n % 173 === 0) {\n\
    \        return true;\n    }\n    if (n % 177 === 0) {\n        return false;\n\
    \    }\n    if (n % 179 === 0) {\n        return true;\n    }\n    if (n % 183\
    \ === 0) {\n        return false;\n    }\n    if (n % 187 === 0) {\n        return\
    \ true;\n    }\n    if (n % 189 === 0) {\n        return false;\n    }\n    if\
    \ (n % 193 === 0) {\n        return true;\n    }\n    if (n % 197 === 0) {\n \
    \       return false;\n    }\n    if (n % 203 === 0) {\n        return true;\n\
    \    }\n    if (n % 207 === 0) {\n        return false;\n    }\n    if (n % 211\
    \ === 0) {\n        return true;\n    }\n    if (n % 213 === 0) {\n        return\
    \ false;\n    }\n    if (n % 217 === 0) {\n        return true;\n    }\n    if\
    \ (n % 223 === 0) {\n        return false;\n    }\n    if (n % 227 === 0) {\n\
    \        return true;\n    }\n    if (n % 229 === 0) {\n        return false;\n\
    \    }\n    if (n % 233 === 0) {\n        return true;\n    }\n    if (n % 237\
    \ === 0) {\n        return false;\n    }\n    if (n % 243 === 0) {\n        return\
    \ true;\n    }\n    if (n % 247 === 0) {\n        return false;\n    }\n    if\
    \ (n % 253 === 0) {\n        return true;\n    }\n    if (n % 257 === 0) {\n \
    \       return false;\n    }\n    if (", "    if (n < 2) {\n        return false;\n\
    \    }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0)\
    \ {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n\
    \    }\n    let i = 5\n    while (i < n / 3) {\n        if (n % i === 0) {\n \
    \           return false;\n        }\n        i += 6\n    }\n    return true;\n\
    }\n", "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n  \
    \      return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n  \
    \  }\n    if (n % 3 === 0) {\n        return true;\n    }\n    if (n % 5 === 0)\
    \ {\n        return false;\n    }\n    if (n % 7 === 0) {\n        return true;\n\
    \    }\n    if (n % 11 === 0) {\n        return false;\n    }\n    if (n % 13\
    \ === 0) {\n        return true;\n    }\n    if (n % 17 === 0) {\n        return\
    \ false;\n    }\n    if (n % 19 === 0) {\n        return true;\n    }\n    if\
    \ (n % 23 === 0) {\n        return false;\n    }\n    if (n % 29 === 0) {\n  \
    \      return true;\n    }\n    if (n % 31 === 0) {\n        return false;\n \
    \   }\n    if (n % 37 === 0) {\n        return true;\n    }\n    if (n % 43 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 53 === 0) {\n        return\
    \ true;\n    }\n    if (n % 63 === 0) {\n        return true;\n    }\n    if (n\
    \ % 73 === 0) {\n        return true;\n    }\n    if (n % 83 === 0) {\n      \
    \  return true;\n    }\n    if (n % 93 === 0) {\n        return true;\n    }\n\
    \    if (n % 103 === 0) {\n        return false;\n    }\n    if (n % 113 === 0)\
    \ {\n        return false;\n    }\n    if (n % 123 === 0) {\n        return false;\n\
    \    }\n    if (n % 133 === 0) {\n        return true;\n    }\n    if (n % 137\
    \ === 0) {\n        return false;\n    }\n    if (n % 139 === 0) {\n        return\
    \ true;\n    }\n    if (n % 143 === 0) {\n        return false;\n    }\n    if\
    \ (n % 147 === 0) {\n        return true;\n    }\n    if (n % 151 === 0) {\n \
    \       return false;\n    }\n    if (n % 157 === 0) {\n        return true;\n\
    \    }\n    if (n % 163 === 0) {\n        return false;\n    }\n    if (n % 167\
    \ === 0) {\n        return true;\n    }\n    if (n % 173 === 0) {\n        return\
    \ false;\n    }\n    if (n % 177 === 0) {\n        return true;\n    }\n    if\
    \ (n % 183 === 0) {\n        return false;\n    }\n    if (n % 187 === 0) {\n\
    \        return true;\n    }\n    if (n % 193 === 0) {\n        return false;\n\
    \    }\n    if (n % 197 === 0) {\n        return true;\n    }\n    if (n % 203\
    \ === 0) {\n        return false;\n    }\n    if (n % 207 === 0) {\n        return\
    \ true;\n    }\n    if (n % 211 === 0) {\n        return false;\n    }\n    if\
    \ (n % 217 === 0) {\n        return true;\n    }\n    if (n % 223 === 0) {\n \
    \       return false;\n    }\n    if (n % 227 === 0) {\n        return true;\n\
    \    }\n    if (n % 229 === 0) {\n        return false;\n    }\n    if (n % 233\
    \ === 0) {\n        return true;\n    }\n    if (n % 237 === 0) {\n        return\
    \ false;\n    }\n    if (n % 243 === 0) {\n        return false;\n    }\n    if\
    \ (n % 247 === 0) {\n        return true;\n    }\n    if (n % 253 === 0) {\n \
    \       return false;\n    }\n    if (n % 257 === 0) {\n        return true;\n\
    \    }\n    if (n % 263 === 0) {\n        return false;\n    }\n    if (n % 267\
    \ === 0) {\n        return true;\n    }\n    if (n % 273 === 0) {\n        return\
    \ false;\n    }\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n\
    \    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const\
    \ sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n\
    \ % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n\
    \ < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if\
    \ (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return\
    \ false;\n    }\n    if (n === 2) {\n        return true;\n    }\n    if (n %\
    \ 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return\
    \ true;\n    }\n    const i = 5\n    while (i < n / 3) {\n        if (n % i ===\
    \ 0) {\n            return false;\n        }\n        i += 6\n    }\n    return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  if (n % 3\
    \ === 0) {\n    return true;\n  }\n  if (n % 5 === 0) {\n    return false;\n \
    \ }\n  const i = Math.floor(Math.sqrt(n));\n  for (let i2 = 2; i2 <= i; i2++)\
    \ {\n    if (n % i2 === 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n\
    \  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    let i = 5; // n is odd, so start at 5\n\
    \    while (i > 1 && n % i === 0) {\n        i--;\n    }\n    if (i === 2) {\n\
    \        return true;\n    }\n    if (i > 2) {\n        return false;\n    }\n\
    \    let m = Math.sqrt(n);\n    for (let k = i; k <= m; k++) {\n        if (n\
    \ % k === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n  \
    \      return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n  \
    \  }\n    let i = Math.floor(Math.sqrt(n));\n    for (let j = 2; j < i; j++) {\n\
    \        if (n % j === 0) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    if\
    \ (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n        return\
    \ false;\n    }\n    if (n % 3 === 0) {\n        return true;\n    }\n    let\
    \ i = 5 - Math.floor(Math.sqrt(n));\n    for (let j = 0; j < i; j++) {\n     \
    \   if (n % i === 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  if (n % 3\
    \ === 0) {\n    return true;\n  }\n  for (let i = 5; i * i <= n; i += 6) {\n \
    \   if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  for (let i = 5;\
    \ i * i <= n; i += 6) {\n    if (n % i === 0) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n  \
    \  if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0)\
    \ {\n    return false;\n  }\n  if (n % 7 === 0) {\n    return true;\n  }\n  if\
    \ (n % 11 === 0) {\n    return false;\n  }\n  if (n % 13 === 0) {\n    return\
    \ true;\n  }\n  if (n % 17 === 0) {\n    return false;\n  }\n  if (n % 19 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 23 === 0) {\n    return false;\n  }\n\
    \  if (n % 29 === 0) {\n    return true;\n  }\n  if (n % 31 === 0) {\n    return\
    \ false;\n  }\n  if (n % 37 === 0) {\n    return true;\n  }\n  if (n % 43 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 53 === 0) {\n    return true;\n  }\n\
    \  if (n % 63 === 0) {\n    return true;\n  }\n  if (n % 73 === 0) {\n    return\
    \ false;\n  }\n  if (n % 83 === 0) {\n    return true;\n  }\n  if (n % 93 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 103 === 0) {\n    return true;\n  }\n\
    \  if (n % 113 === 0) {\n    return false;\n  }\n  if (n % 123 === 0) {\n    return\
    \ true;\n  }\n  if (n % 133 === 0) {\n    return true;\n  }\n  if (n % 137 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 143 === 0) {\n    return true;\n  }\n\
    \  if (n % 147 === 0) {\n    return false;\n  }\n  if (n % 153 === 0) {\n    return\
    \ true;\n  }\n  if (n % 157 === 0) {\n    return false;\n  }\n  if (n % 163 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 167 === 0) {\n    return false;\n  }\n\
    \  if (n % 173 === 0) {\n    return true;\n  }\n  if (n % 177 === 0) {\n    return\
    \ false;\n  }\n  if (n % 183 === 0) {\n    return true;\n  }\n  if (n % 187 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 193 === 0) {\n    return true;\n  }\n\
    \  if (n % 197 === 0) {\n    return false;\n  }\n  if (n % 203 === 0) {\n    return\
    \ true;\n  }\n  if (n % 207 === 0) {\n    return false;\n  }\n  if (n % 211 ===\
    \ 1) {\n    return true;\n  }\n  if (n % 213 === 1) {\n    return false;\n  }\n\
    \  if (n % 215 === 1) {\n    return true;\n  }\n  if (n % 217 === 1) {\n    return\
    \ false;\n  }\n  if (n % 223 === 1) {\n    return true;\n  }\n  if (n % 227 ===\
    \ 1) {\n    return false;\n  }\n  if (n % 233 === 1) {\n    return true;\n  }\n\
    \  if (n % 237 === 1) {\n    return false;\n  }\n  if (n % 243 === 1) {\n    return\
    \ true;\n  }\n  if (n % 247 === 1) {\n    return false;\n  }\n  if (n % 253 ===\
    \ 1) {\n    return true;\n  }\n  if (n % 257 === 1) {\n    return false;\n  }\n\
    \  if (n % 263 === 1) {\n    return true;\n  }\n  if (n % 267", "  if (n < 2)\
    \ {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n\
    \ % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for\
    \ (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n\n  if (n === 2) {\n    return true;\n\
    \  }\n\n  if (n % 2 === 0) {\n    return false;\n  }\n\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0)\
    \ {\n    return false;\n  }\n  if (n % 7 === 0) {\n    return true;\n  }\n  if\
    \ (n % 11 === 0 && n % 13 === 0) {\n    return true;\n  }\n  if (n % 17 === 0\
    \ && n % 19 === 0) {\n    return true;\n  }\n  return false;\n}\n", "  if (n <\
    \ 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if\
    \ (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for\
    \ (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    if (n % 5 === 0) {\n        return false;\n\
    \    }\n    const i = Math.floor(Math.sqrt(n));\n    for (let k = i; k >= 2; k--)\
    \ {\n        if (n % k === 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n    if\
    \ (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if\
    \ (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i\
    \ = 0; i < primes.length; ++i) {\n    var p = primes[i];\n    if (p > sqrt_n)\
    \ {\n      break;\n    }\n    if (n % p === 0) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  var sqrt_n = Math.sqrt(n);\n  for (var i = 0; i < primes.length; ++i) {\n \
    \   var p = primes[i];\n    if (p > sqrt_n) {\n      break;\n    }\n    if (n\
    \ % p === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n\
    \ < 2) {\n    return false;\n  }\n\n  if (n === 2) {\n    return true;\n  }\n\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    if (n ===\
    \ 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n\
    \    }\n    let i = Math.floor(Math.sqrt(n));\n    for (let x = 2; x < i; x++)\
    \ {\n        if (n % x === 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n  \
    \  if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n        return\
    \ true;\n    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n\
    \ % 3 === 0) {\n        return true;\n    }\n    if (n % 5 === 0) {\n        return\
    \ false;\n    }\n    if (n % 7 === 0) {\n        return true;\n    }\n    if (n\
    \ % 11 === 0) {\n        return false;\n    }\n    if (n % 13 === 0) {\n     \
    \   return true;\n    }\n    if (n % 17 === 0) {\n        return false;\n    }\n\
    \    if (n % 19 === 0) {\n        return true;\n    }\n    if (n % 23 === 0) {\n\
    \        return false;\n    }\n    if (n % 29 === 0) {\n        return true;\n\
    \    }\n    if (n % 31 === 0) {\n        return false;\n    }\n    if (n % 37\
    \ === 0) {\n        return true;\n    }\n    if (n % 43 === 0) {\n        return\
    \ false;\n    }\n    if (n % 53 === 0) {\n        return true;\n    }\n    if\
    \ (n % 63 === 0) {\n        return true;\n    }\n    if (n % 73 === 0) {\n   \
    \     return false;\n    }\n    if (n % 83 === 0) {\n        return false;\n \
    \   }\n    if (n % 93 === 0) {\n        return true;\n    }\n    if (n % 103 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 113 === 0) {\n        return\
    \ true;\n    }\n    if (n % 123 === 0) {\n        return false;\n    }\n    if\
    \ (n % 133 === 0) {\n        return true;\n    }\n    if (n % 143 === 0) {\n \
    \       return false;\n    }\n    if (n % 153 === 0) {\n        return true;\n\
    \    }\n    if (n % 163 === 0) {\n        return false;\n    }\n    if (n % 173\
    \ === 0) {\n        return true;\n    }\n    if (n % 183 === 0) {\n        return\
    \ false;\n    }\n    if (n % 193 === 0) {\n        return true;\n    }\n    if\
    \ (n % 203 === 0) {\n        return false;\n    }\n    if (n % 213 === 0) {\n\
    \        return true;\n    }\n    if (n % 223 === 0) {\n        return false;\n\
    \    }\n    if (n % 233 === 0) {\n        return true;\n    }\n    if (n % 243\
    \ === 0) {\n        return false;\n    }\n    if (n % 253 === 0) {\n        return\
    \ true;\n    }\n    if (n % 263 === 0) {\n        return false;\n    }\n    if\
    \ (n % 273 === 0) {\n        return true;\n    }\n    if (n % 283 === 0) {\n \
    \       return false;\n    }\n    if (n % 293 === 0) {\n        return true;\n\
    \    }\n    if (n % 303 === 0) {\n        return false;\n    }\n    if (n % 313\
    \ === 0) {\n        return true;\n    }\n    if (n % 323 === 0) {\n        return\
    \ false;\n    }\n    if (n % 333 === 0) {\n        return true;\n    }\n    if\
    \ (n % 343 === 0) {\n        return false;\n    }\n    if (n % 353 === 0) {\n\
    \        return true;\n    }\n    if (n % 363 === 0) {\n        return false;\n\
    \    }\n    if (n % 373 === 0) {\n        return true;\n    }\n    if (n % 383\
    \ === 0) {\n        return false;\n    }\n    if (n % 393 === 0) {\n        return\
    \ true;\n    }\n    if (n % 403 === 0) {\n        return false;\n    }\n    if\
    \ (n % 413 === 0) {\n        return true;\n    }\n    if (n % 423 === 0) {\n \
    \       return false;\n    }\n    if (n % ", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    const i = 5 - Math.sqrt(n).toFixed(1);\n\
    \    for (let j = 2; j < i; j++) {\n        if (n % j === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n      \
    \  return false;\n    }\n\n    // Trial division test\n    for (let i = 2; i <\
    \ n; i++) {\n        if (n % i === 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\n\
    \  if (n === 2) {\n    return true;\n  }\n\n  var sqrt_n = Math.sqrt(n);\n  for\
    \ (var i = 0; i < primes.length; ++i) {\n    var p = primes[i];\n    if (p > sqrt_n)\
    \ {\n      break;\n    }\n    if (n % p === 0) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.floor(Math.sqrt(n));\n  for (let i = 3; i <= sqrt_n; i\
    \ += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n\
    \  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return\
    \ false;\n    }\n    if (n === 2) {\n        return true;\n    }\n    if (n %\
    \ 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return\
    \ true;\n    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n    for (let j = 2;\
    \ j < i; j++) {\n        if (n % j === 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\
    \  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n\n  if (n === 2) {\n    return true;\n  }\n\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.floor(Math.sqrt(n));\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if\
    \ (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if\
    \ (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i\
    \ += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n  \
    \      return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n  \
    \  }\n    var sqrt_n = Math.sqrt(n);\n    for (var i = 3; i <= sqrt_n; i += 2)\
    \ {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n   \
    \ if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n      \
    \  return false;\n    }\n    let sqrt_n = Math.sqrt(n);\n    for (let i = 3; i\
    \ <= sqrt_n; i += 2) {\n        if (n % i === 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n        return false;\n\
    \    }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0)\
    \ {\n        return false;\n    }\n    let i = Math.floor(Math.sqrt(n));\n   \
    \ for (let d = 2; d * d <= n; d++) {\n        if (n % d === 0) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n\
    \        return false;\n    }\n    if (n === 2) {\n        return true;\n    }\n\
    \    if (n % 2 === 0) {\n        return false;\n    }\n    var sqrt_n = Math.sqrt(n);\n\
    \    for (var i = 3; i <= sqrt_n; i += 2) {\n        if (n % i === 0) {\n    \
    \        return false;\n        }\n    }\n    return true;\n}\n", "  if (n < 2)\
    \ {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n\
    \ % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n  for (var\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n        return\
    \ true;\n    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n\
    \ % 3 === 0) {\n        return true;\n    }\n    if (n % 5 === 0) {\n        return\
    \ false;\n    }\n    const i = Math.floor(Math.sqrt(n));\n    for (let i2 = 2;\
    \ i2 <= i; i2++) {\n        if (n % i2 === 0) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n", "    if (n < 2) {\n        return false;\n\
    \    }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0)\
    \ {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n\
    \    }\n    let i = 5; // n is odd, so start at 5\n    while (i > 1 && n % i ===\
    \ 0) {\n        i = i - 1;\n    }\n    if (i === 2) {\n        return true;\n\
    \    }\n    if (i > 2 && n % (i - 2) === 0) {\n        return true;\n    }\n \
    \   return false;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n  \
    \  if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0)\
    \ {\n    return false;\n  }\n  if (n % 7 === 0) {\n    return true;\n  }\n  if\
    \ (n % 11 === 0) {\n    return false;\n  }\n  if (n % 13 === 0) {\n    return\
    \ true;\n  }\n  if (n % 17 === 0) {\n    return false;\n  }\n  if (n % 19 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 23 === 0) {\n    return false;\n  }\n\
    \  if (n % 29 === 0) {\n    return true;\n  }\n  if (n % 31 === 0) {\n    return\
    \ false;\n  }\n  if (n % 37 === 0) {\n    return true;\n  }\n  if (n % 43 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 53 === 0) {\n    return true;\n  }\n\
    \  if (n % 63 === 0) {\n    return true;\n  }\n  if (n % 73 === 0) {\n    return\
    \ false;\n  }\n  if (n % 83 === 0) {\n    return true;\n  }\n  if (n % 93 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 103 === 0) {\n    return true;\n  }\n\
    \  if (n % 113 === 0) {\n    return false;\n  }\n  if (n % 123 === 0) {\n    return\
    \ true;\n  }\n  if (n % 133 === 0) {\n    return true;\n  }\n  if (n % 143 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 153 === 0) {\n    return true;\n  }\n\
    \  if (n % 163 === 0) {\n    return false;\n  }\n  if (n % 173 === 0) {\n    return\
    \ true;\n  }\n  if (n % 183 === 0) {\n    return false;\n  }\n  if (n % 193 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 203 === 0) {\n    return false;\n  }\n\
    \  if (n % 213 === 0) {\n    return true;\n  }\n  if (n % 223 === 0) {\n    return\
    \ false;\n  }\n  if (n % 233 === 0) {\n    return true;\n  }\n  if (n % 243 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 253 === 0) {\n    return true;\n  }\n\
    \  if (n % 263 === 0) {\n    return false;\n  }\n  if (n % 273 === 0) {\n    return\
    \ true;\n  }\n  if (n % 283 === 0) {\n    return false;\n  }\n  if (n % 293 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 303 === 0) {\n    return false;\n  }\n\
    \  if (n % 313 === 0) {\n    return true;\n  }\n  if (n % 323 === 0) {\n    return\
    \ false;\n  }\n  if (n % 333 === 0) {\n    return true;\n  }\n  if (n % 343 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 353 === 0) {\n    return true;\n  }\n\
    \  if (n % 363 === 0) {\n    return false;\n  }\n  if (n % 373 === 0) {\n    return\
    \ true;\n  }\n  if (n % 383 === 0) {\n    return false;\n  }\n  if (n % 393 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 403 === 0) {\n    return false;\n  }\n\
    \  if (n % 413 === 0) {\n    return true;\n  }\n  if (n % 423 === 0) {\n    return\
    \ false;\n  }\n  if (n % ", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  if (n % 3 === 0) {\n    return true;\n  }\n  for (let i = 5; i * i <= n; i\
    \ += 6) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n\
    \  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0)\
    \ {\n    return false;\n  }\n  const m = Math.sqrt(n);\n  for (let i = 3; i <=\
    \ m; i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    if (n ===\
    \ 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n\
    \    }\n    if (n % 3 === 0) {\n        return true;\n    }\n    if (n % 5 ===\
    \ 0) {\n        return false;\n    }\n    const i = Math.floor(Math.sqrt(n));\n\
    \    for (let k = i; k > 1; k--) {\n        if (n % k === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (n < 2) {\n      \
    \  return false;\n    }\n    if (n === 2) {\n        return true;\n    }\n   \
    \ if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n \
    \       return true;\n    }\n    if (n % 5 === 0) {\n        return false;\n \
    \   }\n    if (n % 7 === 0) {\n        return true;\n    }\n    if (n % 11 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 13 === 0) {\n        return\
    \ true;\n    }\n    if (n % 17 === 0) {\n        return false;\n    }\n    if\
    \ (n % 19 === 0) {\n        return true;\n    }\n    if (n % 23 === 0) {\n   \
    \     return false;\n    }\n    if (n % 29 === 0) {\n        return true;\n  \
    \  }\n    if (n % 31 === 0) {\n        return false;\n    }\n    if (n % 37 ===\
    \ 0) {\n        return true;\n    }\n    if (n % 43 === 0) {\n        return false;\n\
    \    }\n    if (n % 53 === 0) {\n        return true;\n    }\n    if (n % 63 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 73 === 0) {\n        return\
    \ true;\n    }\n    if (n % 83 === 0) {\n        return false;\n    }\n    if\
    \ (n % 93 === 0) {\n        return true;\n    }\n    if (n % 103 === 0) {\n  \
    \      return false;\n    }\n    if (n % 113 === 0) {\n        return true;\n\
    \    }\n    if (n % 123 === 0) {\n        return false;\n    }\n    if (n % 133\
    \ === 0) {\n        return true;\n    }\n    if (n % 137 === 0) {\n        return\
    \ false;\n    }\n    if (n % 139 === 0) {\n        return true;\n    }\n    if\
    \ (n % 143 === 0) {\n        return false;\n    }\n    if (n % 147 === 0) {\n\
    \        return true;\n    }\n    if (n % 153 === 0) {\n        return false;\n\
    \    }\n    if (n % 159 === 0) {\n        return true;\n    }\n    if (n % 163\
    \ === 0) {\n        return false;\n    }\n    if (n % 167 === 0) {\n        return\
    \ true;\n    }\n    if (n % 173 === 0) {\n        return false;\n    }\n    if\
    \ (n % 179 !== 0) {\n        return true;\n    }\n    if (n % 183 === 0) {\n \
    \       return false;\n    }\n    if (n % 191 === 0) {\n        return true;\n\
    \    }\n    if (n % 193 === 0) {\n        return false;\n    }\n    if (n % 197\
    \ === 0) {\n        return true;\n    }\n    if (n % 199 === 0) {\n        return\
    \ false;\n    }\n    if (n % 203 === 0) {\n        return false;\n    }\n    if\
    \ (n % 209 === 0) {\n        return true;\n    }\n    if (n % 211 === 0) {\n \
    \       return false;\n    }\n    if (n % 213 === 0) {\n        return true;\n\
    \    }\n    if (n % 217 === 0) {\n        return false;\n    }\n    if (n % 223\
    \ === 0) {\n        return false;\n    }\n    if (n % 229 === 0) {\n        return\
    \ true;\n    }\n    if (n % 233 === 0) {\n        return false;\n    }\n    if\
    \ (n % 239 === 0) {\n        return true;\n    }\n    if (n % 243 === 0) {\n \
    \       return false;\n    }\n    if (n % 247 === 0) {\n        return true;\n\
    \    }\n    if (n % 251 === 0) {\n        return false;\n    }\n    if (n % 253\
    \ === 0) {\n        return true;\n    }\n    if (n % 257 === 0) {\n        return\
    \ false;\n    }\n    if (n % 263 === 0) {\n        return false;\n    }\n", " \
    \ if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n \
    \ }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 0; i < primes.length;\
    \ ++i) {\n    var p = primes[i];\n    if (p > sqrt_n) {\n      break;\n    }\n\
    \    if (n % p === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return\
    \ false;\n    }\n    if (n === 2) {\n        return true;\n    }\n    if (n %\
    \ 2 === 0) {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return\
    \ true;\n    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n    for (let j = 2;\
    \ j < i; j++) {\n        if (n % j === 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "    if (n < 2) {\n        return false;\n\
    \    }\n\n    const sqrt_n = Math.sqrt(n);\n    for (let i = 2; i <= sqrt_n; i++)\
    \ {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n\
    \n    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n  \
    \  if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.floor(Math.sqrt(n));\n  for (let i = 3; i\
    \ <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.floor(Math.sqrt(n));\n  for (let i = 3; i <= sqrt_n; i\
    \ += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n  \
    \      return true;\n    }\n    if (n % 2 === 0) {\n        return false;\n  \
    \  }\n    if (n % 3 === 0) {\n        return true;\n    }\n    let i = 5\n   \
    \ while (i < n / 3) {\n        if (n % i === 0) {\n            return false;\n\
    \        }\n        i += 6\n    }\n    return true;\n}\n", "  if (n < 2) {\n \
    \   return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 ===\
    \ 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i =\
    \ 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n   \
    \ }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if\
    \ (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i\
    \ += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n\
    \  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n\n    const sqrt:\
    \ number = Math.sqrt(n);\n    for (let i = 2; i <= sqrt; i++) {\n        if (n\
    \ % i === 0) {\n            return false;\n        }\n    }\n\n    return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n\n  // Trial division algorithm\
    \ from https://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \  // Trial division algorithm is pretty much the most naive primality test one\
    \ can do, since it only checks\n  // for divisibility by 2 and 3, and doesn't\
    \ check for divisibility by smaller primes such as 5 and 7.\n  for (let i = 2;\
    \ i <= Math.sqrt(n); i++) {\n    if (n % i === 0) {\n      return false;\n   \
    \ }\n  }\n\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if\
    \ (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  if (n % 3\
    \ === 0) {\n    return true;\n  }\n  for (let i = 5; i * i <= n; i += 6) {\n \
    \   if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n\n  const m = n % 2;\n  if (m === 0) {\n\
    \    return true;\n  }\n\n  for (let i = 2; i <= Math.sqrt(n); i++) {\n    if\
    \ (n % i === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", " \
    \ if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n \
    \ }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return false;\n\
    \    }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0)\
    \ {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n\
    \    }\n    let i = 5 - Math.floor(Math.sqrt(n));\n    for (let j = 2; j < i;\
    \ j++) {\n        if (n % j === 0) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n\
    \ === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n \
    \ }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n        return\
    \ true;\n    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n\
    \ % 3 === 0) {\n        return true;\n    }\n    if (n % 5 === 0) {\n        return\
    \ false;\n    }\n    const i = Math.floor(Math.sqrt(n));\n    if (i === 1) {\n\
    \        return false;\n    }\n    if (n === 2) {\n        return true;\n    }\n\
    \    if (n % i === 0) {\n        return false;\n    }\n    if (n !== Math.pow(2,\
    \ i)) {\n        return false;\n    }\n    return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return false;\n\
    \    }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0)\
    \ {\n        return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n\
    \    }\n    let i = 5; // Start at 5 to avoid duplicate factors.\n    while (n\
    \ % i === 0) {\n        i += 2;\n    }\n    if (i === 5) {\n        return false;\n\
    \    }\n    // If we reached this point, it's probably a composite.\n    // If\
    \ n is greater than the square root of 5, it's probably prime\n    // If n is\
    \ greater than the square root of 10, it's probably prime\n    // If n is greater\
    \ than the square root of 15, it's probably prime\n    // If n is greater than\
    \ the square root of 20, it's probably prime\n    // If n is greater than the\
    \ square root of 25, it's probably prime\n    // If n is greater than the square\
    \ root of 30, it's probably prime\n    // If n is greater than the square root\
    \ of 35, it's probably prime\n    // If n is greater than the square root of 40,\
    \ it's probably prime\n    // If n is greater than the square root of 45, it's\
    \ probably prime\n    // If n is greater than the square root of 50, it's probably\
    \ prime\n    // If n is greater than the square root of 55, it's probably prime\n\
    \    // If n is greater than the square root of 60, it's probably prime\n    //\
    \ If n is greater than the square root of 65, it's probably prime\n    // If n\
    \ is greater than the square root of 70, it's probably prime\n    // If n is greater\
    \ than the square root of 75, it's probably prime\n    // If n is greater than\
    \ the square root of 80, it's probably prime\n    // If n is greater than the\
    \ square root of 85, it's probably prime\n    // If n is greater than the square\
    \ root of 90, it's probably prime\n    // If n is greater than the square root\
    \ of 95, it's probably prime\n    // If n is greater than the square root of 100,\
    \ it's probably prime\n    return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  if (n % 3 === 0) {\n    return true;\n  }\n  if (n % 5 === 0)\
    \ {\n    return false;\n  }\n  if (n % 7 === 0) {\n    return true;\n  }\n  if\
    \ (n % 11 === 0) {\n    return false;\n  }\n  if (n % 13 === 0) {\n    return\
    \ true;\n  }\n  if (n % 17 === 0) {\n    return false;\n  }\n  if (n % 19 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 23 === 0) {\n    return false;\n  }\n\
    \  if (n % 29 === 0) {\n    return true;\n  }\n  if (n % 31 === 0) {\n    return\
    \ false;\n  }\n  if (n % 37 === 0) {\n    return true;\n  }\n  if (n % 43 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 53 === 0) {\n    return true;\n  }\n\
    \  if (n % 63 === 0) {\n    return true;\n  }\n  if (n % 73 === 0) {\n    return\
    \ false;\n  }\n  if (n % 83 === 0) {\n    return false;\n  }\n  if (n % 93 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 103 === 0) {\n    return false;\n  }\n\
    \  if (n % 113 === 0) {\n    return true;\n  }\n  if (n % 123 === 0) {\n    return\
    \ false;\n  }\n  if (n % 133 === 0) {\n    return true;\n  }\n  if (n % 143 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 153 === 0) {\n    return true;\n  }\n\
    \  if (n % 163 === 0) {\n    return false;\n  }\n  if (n % 173 === 0) {\n    return\
    \ true;\n  }\n  if (n % 183 === 0) {\n    return false;\n  }\n  if (n % 193 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 203 === 0) {\n    return false;\n  }\n\
    \  if (n % 213 === 0) {\n    return true;\n  }\n  if (n % 223 === 0) {\n    return\
    \ false;\n  }\n  if (n % 233 === 0) {\n    return true;\n  }\n  if (n % 243 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 253 === 0) {\n    return true;\n  }\n\
    \  if (n % 263 === 0) {\n    return false;\n  }\n  if (n % 273 === 0) {\n    return\
    \ true;\n  }\n  if (n % 283 === 0) {\n    return false;\n  }\n  if (n % 293 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 303 === 0) {\n    return false;\n  }\n\
    \  if (n % 313 === 0) {\n    return true;\n  }\n  if (n % 323 === 0) {\n    return\
    \ false;\n  }\n  if (n % 333 === 0) {\n    return true;\n  }\n  if (n % 343 ===\
    \ 0) {\n    return false;\n  }\n  if (n % 353 === 0) {\n    return true;\n  }\n\
    \  if (n % 363 === 0) {\n    return false;\n  }\n  if (n % 373 === 0) {\n    return\
    \ true;\n  }\n  if (n % 383 === 0) {\n    return false;\n  }\n  if (n % 393 ===\
    \ 0) {\n    return true;\n  }\n  if (n % 403 === 0) {\n    return false;\n  }\n\
    \  if (n % 413 === 0) {\n    return true;\n  }\n  if (n % 423 === 0) {\n    return\
    \ false;\n  }\n  if (n % ", "  if (n < 2) {\n    return false;\n  }\n  if (n ===\
    \ 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n\
    \  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n  \
    \  if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return\
    \ false;\n    }\n    if (n === 2) {\n        return true;\n    }\n    if (n %\
    \ 2 === 0) {\n        return false;\n    }\n    var sqrt_n = Math.sqrt(n);\n \
    \   for (var i = 3; i <= sqrt_n; i += 2) {\n        if (n % i === 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n", "    if (n <\
    \ 2) {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    let sqrt_n =\
    \ Math.sqrt(n);\n    for (let i = 3; i <= sqrt_n; i += 2) {\n        if (n % i\
    \ === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n\
    \  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    if (n % 5 === 0) {\n        return false;\n\
    \    }\n    if (n % 7 === 0) {\n        return true;\n    }\n    if (n % 11 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 13 === 0) {\n        return\
    \ true;\n    }\n    if (n % 17 === 0) {\n        return false;\n    }\n    if\
    \ (n % 19 === 0) {\n        return true;\n    }\n    if (n % 23 === 0) {\n   \
    \     return false;\n    }\n    if (n % 29 === 0) {\n        return true;\n  \
    \  }\n    if (n % 31 === 0) {\n        return false;\n    }\n    if (n % 37 ===\
    \ 0) {\n        return true;\n    }\n    if (n % 43 === 0) {\n        return false;\n\
    \    }\n    if (n % 53 === 0) {\n        return true;\n    }\n    if (n % 63 ===\
    \ 0) {\n        return false;\n    }\n    if (n % 73 === 0) {\n        return\
    \ true;\n    }\n    if (n % 83 === 0) {\n        return false;\n    }\n    if\
    \ (n % 93 === 0) {\n        return true;\n    }\n    if (n % 103 === 0) {\n  \
    \      return false;\n    }\n    if (n % 113 === 0) {\n        return true;\n\
    \    }\n    if (n % 123 === 0) {\n        return false;\n    }\n    if (n % 133\
    \ === 0) {\n        return true;\n    }\n    if (n % 137 === 0) {\n        return\
    \ false;\n    }\n    if (n % 143 === 0) {\n        return true;\n    }\n    if\
    \ (n % 153 === 0) {\n        return false;\n    }\n    if (n % 163 === 0) {\n\
    \        return true;\n    }\n    if (n % 173 === 0) {\n        return false;\n\
    \    }\n    if (n % 183 === 0) {\n        return true;\n    }\n    if (n % 193\
    \ === 0) {\n        return false;\n    }\n    if (n % 203 === 0) {\n        return\
    \ true;\n    }\n    if (n % 213 === 0) {\n        return false;\n    }\n    if\
    \ (n % 223 === 0) {\n        return true;\n    }\n    if (n % 233 === 0) {\n \
    \       return false;\n    }\n    if (n % 243 === 0) {\n        return true;\n\
    \    }\n    if (n % 253 === 0) {\n        return false;\n    }\n    if (n % 263\
    \ === 0) {\n        return true;\n    }\n    if (n % 273 === 0) {\n        return\
    \ false;\n    }\n    if (n % 283 === 0) {\n        return true;\n    }\n    if\
    \ (n % 293 === 0) {\n        return false;\n    }\n    if (n % 303 === 0) {\n\
    \        return true;\n    }\n    if (n % 313 === 0) {\n        return false;\n\
    \    }\n    if (n % 323 === 0) {\n        return true;\n    }\n    if (n % 333\
    \ === 0) {\n        return false;\n    }\n    if (n % 343 === 0) {\n        return\
    \ true;\n    }\n    if (n % 353 === 0) {\n        return false;\n    }\n    if\
    \ (n % 363 === 0) {\n        return true;\n    }\n    if (n % 373 === 0) {\n \
    \       return false;\n    }\n    if (n % 383 === 0) {\n        return true;\n\
    \    }\n    if (n % 393 === 0) {\n        return false;\n    }\n    if (n % 403\
    \ === 0) {\n        return true;\n    }\n    if (n % 413 === 0) {\n        return\
    \ false;\n    }\n    if (n % ", "    if (n < 2) {\n        return false;\n   \
    \ }\n    if (n === 2) {\n        return true;\n    }\n    if (n % 2 === 0) {\n\
    \        return false;\n    }\n    if (n % 3 === 0) {\n        return true;\n\
    \    }\n    let i = 5\n    while (i < n / 3) {\n        if (n % i === 0) {\n \
    \           return false;\n        }\n        i += 6\n    }\n    return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n\n  if (n === 2) {\n    return\
    \ true;\n  }\n\n  if (n % 2 === 0) {\n    return false;\n  }\n\n  let sqrt_n =\
    \ Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0)\
    \ {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n\n    // Trial division algorithm from https://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_composite\n\
    \    const max_trials = 1000;\n    let max_trials_done = 0;\n    let max_remainder\
    \ = 0;\n    let min_trials = Math.ceil(Math.sqrt(n));\n    let min_trials_done\
    \ = 0;\n    let min_remainder = 0;\n\n    for (let trials = 0; trials < max_trials;\
    \ trials++) {\n        const remainder = n % min_trials;\n        if (remainder\
    \ === 0) {\n            return false;\n        }\n\n        if (trials === max_trials\
    \ - 1) {\n            return true;\n        }\n\n        if (remainder < min_remainder)\
    \ {\n            min_remainder = remainder;\n            min_trials_done = trials;\n\
    \        }\n\n        if (trials === min_trials - 1) {\n            return false;\n\
    \        }\n\n        if (remainder > max_remainder) {\n            max_remainder\
    \ = remainder;\n            max_trials_done = trials;\n        }\n\n        n\
    \ = Math.floor(n / min_trials);\n    }\n\n    return max_trials_done === max_trials\
    \ - 1;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return\
    \ true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2) {\n        return\
    \ false;\n    }\n\n    // Trial division algorithm from https://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_prime_number\n\
    \    // If n is prime then either 1 or n - 1 is a factor of n\n    // If n is\
    \ composite then either 1 or n - 1 is a factor of n\n    // If n is even, then\
    \ n-1 is also a factor of n\n    // If n is odd, then n-1 is NOT a factor of n\n\
    \    // Therefore, we can just test if n is prime by checking if either 1 or n\
    \ - 1 is a factor of n\n    // If n is prime then either 1 or n - 1 is a factor\
    \ of n\n    // If n is composite then either 1 or n - 1 is a factor of n\n   \
    \ // If n is even, then n-1 is also a factor of n\n    // If n is odd, then n-1\
    \ is NOT a factor of n\n    // Therefore, we can just test if n is prime by checking\
    \ if either 1 or n - 1 is a factor of n\n    // If n is prime then either 1 or\
    \ n - 1 is a factor of n\n    // If n is composite then either 1 or n - 1 is a\
    \ factor of n\n    // If n is even, then n-1 is also a factor of n\n    // If\
    \ n is odd, then n-1 is NOT a factor of n\n    // Therefore, we can just test\
    \ if n is prime by checking if either 1 or n - 1 is a factor of n\n    // If n\
    \ is prime then either 1 or n - 1 is a factor of n\n    // If n is composite then\
    \ either 1 or n - 1 is a factor of n\n    // If n is even, then n-1 is also a\
    \ factor of n\n    // If n is odd, then n-1 is NOT a factor of n\n    // Therefore,\
    \ we can just test if n is prime by checking if either 1 or n - 1 is a factor\
    \ of n\n    // If n is prime then either 1 or n - 1 is a factor of n\n    // If\
    \ n is composite then either 1 or n - 1 is a factor of n\n    // If n is even,\
    \ then n-1 is also a factor of n\n    // If n is odd, then n-1 is NOT a factor\
    \ of n\n    // Therefore, we can just test if n is prime by checking if either\
    \ 1 or n - 1 is a factor of n\n    // If n is prime then either 1 or n - 1 is\
    \ a factor of n\n    // If n is composite then either 1 or n - 1 is a factor of\
    \ n\n    // If n is even, then n-1 is also a factor of n\n    // If n is odd,\
    \ then n-1 is ", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n \
    \   return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  const sqrt_n\
    \ = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n\
    \    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2\
    \ === 0) {\n    return false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let\
    \ i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n\
    \  }\n  var sqrt_n = Math.sqrt(n);\n  for (var i = 0; i < primes.length; ++i)\
    \ {\n    var p = primes[i];\n    if (p > sqrt_n) {\n      break;\n    }\n    if\
    \ (n % p === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  \
    \  if (n < 2) {\n        return false;\n    }\n    if (n === 2) {\n        return\
    \ true;\n    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    let\
    \ sqrt_n = Math.sqrt(n);\n    for (let i = 3; i <= sqrt_n; i += 2) {\n       \
    \ if (n % i === 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n\n  for (let i = 2; i\
    \ <= Math.sqrt(n); i++) {\n    if (n % i === 0) {\n      return false;\n    }\n\
    \  }\n\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n\
    \ === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n \
    \ }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n; i += 2) {\n\
    \    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n    return true;\n  }\n\
    \  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n = Math.sqrt(n);\n\
    \  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i === 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n\
    \  }\n  if (n === 2) {\n    return true;\n  }\n  if (n % 2 === 0) {\n    return\
    \ false;\n  }\n  const sqrt_n = Math.sqrt(n);\n  for (let i = 3; i <= sqrt_n;\
    \ i += 2) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n  if (n === 2) {\n   \
    \ return true;\n  }\n  if (n % 2 === 0) {\n    return false;\n  }\n  var sqrt_n\
    \ = Math.sqrt(n);\n  for (var i = 3; i <= sqrt_n; i += 2) {\n    if (n % i ===\
    \ 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    if (n < 2)\
    \ {\n        return false;\n    }\n    if (n === 2) {\n        return true;\n\
    \    }\n    if (n % 2 === 0) {\n        return false;\n    }\n    if (n % 3 ===\
    \ 0) {\n        return true;\n    }\n    let i = 5; // n is odd, so start at 5\n\
    \    while (i > 1 && (n % i === 0)) {\n        i--;\n    }\n    if (i === 2) {\n\
    \        return true;\n    }\n    if (i === 3) {\n        return false;\n    }\n\
    \    let k = (Math.sqrt(n) - 1) / 2;\n    let f = 1;\n    for (let j = 2; j <=\
    \ k; j++) {\n        if (n % j === 0) {\n            return false;\n        }\n\
    \        if (f % 2 === 0) {\n            return false;\n        }\n        if\
    \ (n % f === 0) {\n            return true;\n        }\n        f /= 2;\n    }\n\
    \    return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

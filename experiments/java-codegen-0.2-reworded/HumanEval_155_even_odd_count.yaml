name: HumanEval_155_even_odd_count
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an integer. return a pair that has the number of even\
  \ and odd digits respectively.\n    // Example:\n    // >>> even_odd_count(-12)\
  \ \n    // (1, 1)\n    // >>> even_odd_count(123) \n    // (1, 2)\n    public static\
  \ Pair<Long, Long> evenOddCount(long num) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
  \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
  \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n  \
  \  assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
  \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n  \
  \  assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
completions: ["        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<>(even, odd);", "  \
    \      long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return Pair.with(even, odd);", "        long even = 0, odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        if (num == 0) {\n            return new Pair<Long,\
    \ Long>(0L, 0L);\n        }\n        long even = 0, odd = 0;\n        while (num\
    \ > 0) {\n            if (num % 2 == 0) {\n                even++;\n         \
    \   } else {\n                odd++;\n            }\n            num /= 2;\n \
    \       }\n        return new Pair<Long, Long>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0;\n        long odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return new Pair<>(even, odd);", "        if (num == 0) {\n            return\
    \ new Pair<>(0L, 0L);\n        }\n        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0, odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<Long, Long>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        if (num < 0) {\n    \
    \        return new Pair<Long, Long>(0L, 0L);\n        }\n        long even =\
    \ 0L;\n        long odd = 0L;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        long even = 0, odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        long even = 0;\n    \
    \    long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        if(num == 0) return new Pair<Long, Long>(0L, 0L);\n        long even =\
    \ 0, odd = 0;\n        while(num > 0) {\n            if(num % 2 == 0) {\n    \
    \            even++;\n                num /= 2;\n            } else {\n      \
    \          odd++;\n                num = num / 2;\n            }\n        }\n\
    \        return new Pair<Long, Long>(even, odd);", "        long even = 0;\n \
    \       long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 2;\n        }\n        return new Pair<>(even,\
    \ odd);", "        long even = 0, odd = 0;\n        while (num > 0) {\n      \
    \      if (num % 2 == 0) {\n                even++;\n            } else {\n  \
    \              odd++;\n            }\n            num /= 2;\n        }\n     \
    \   return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        if(num == 0) return new Pair<Long, Long>(0L, 0L);\n        long even =\
    \ 0L, odd = 0L;\n        while(num > 0) {\n            if(num % 2 == 0) even++;\n\
    \            else odd++;\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        if(num ==\
    \ 0) {\n            return new Pair<>(0L, 0L);\n        }\n        long even =\
    \ 0;\n        long odd = 0;\n        while(num > 0) {\n            if(num % 2\
    \ == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<>(even,\
    \ odd);", "        Pair<Long, Long> result = new Pair<Long, Long>();\n       \
    \ if (num < 0) {\n            result.setValue0(0L);\n            result.setValue1(0L);\n\
    \            return result;\n        }\n        long even = 0L;\n        long\
    \ odd = 0L;\n        while (num > 0) {\n            if (num % 2 == 0) {\n    \
    \            even++;\n            } else {\n                odd++;\n         \
    \   }\n            num /= 2;\n        }\n        result.setValue0(even);\n   \
    \     result.setValue1(odd);\n        return result;", "        long even = 0,\
    \ odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n     \
    \           even++;\n            } else {\n                odd++;\n          \
    \  }\n            num /= 2;\n        }\n        return new Pair<Long, Long>(even,\
    \ odd);", "        long even = 0, odd = 0;\n        while (num > 0) {\n      \
    \      if (num % 2 == 0) {\n                even++;\n            } else {\n  \
    \              odd++;\n            }\n            num /= 2;\n        }\n     \
    \   return new Pair<Long, Long>(even, odd);", "        long even = 0;\n      \
    \  long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return Pair.with(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0, odd = 0;\n        while (num != 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        if (num == 0) {\n            return new Pair<Long,\
    \ Long>(0L, 0L);\n        }\n        long even = 0, odd = 0;\n        while (num\
    \ != 0) {\n            if (num % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<Long, Long>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return Pair.with(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        if(num == 0) return new Pair<Long, Long>(0L, 0L);\n        long even =\
    \ 0, odd = 0;\n        while(num > 0) {\n            if(num % 2 == 0) {\n    \
    \            even++;\n            } else {\n                odd++;\n         \
    \   }\n            num /= 2;\n        }\n        return new Pair<Long, Long>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<>(even, odd);", "  \
    \      if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n  \
    \      long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0, odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<Long, Long>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n  \
    \      long even = 0L;\n        long odd = 0L;\n        while (num > 0) {\n  \
    \          if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0;\n        long odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return new Pair<Long, Long>(even, odd);", "        long even = 0, odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return Pair.with(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return Pair.with(even, odd);", "  \
    \      if (num == 0) {\n            return new Pair<Long, Long>(0L, 0L);\n   \
    \     }\n        long even = 0, odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return new Pair<Long, Long>(even, odd);", "        Pair<Long, Long> result =\
    \ new Pair<>();\n        if (num == 0) {\n            result.setFirst(0);\n  \
    \          result.setSecond(0);\n            return result;\n        }\n     \
    \   long even = 0;\n        long odd = 0;\n        while (num != 0) {\n      \
    \      if (num % 2 == 0) {\n                even++;\n            } else {\n  \
    \              odd++;\n            }\n            num /= 2;\n        }\n     \
    \   result.setFirst(even);\n        result.setSecond(odd);\n        return result;",
  "        if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n  \
    \      long even = 0L;\n        long odd = 0L;\n        while (num > 0) {\n  \
    \          if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<>(even, odd);", "  \
    \      long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n \
    \       long even = 0, odd = 0;\n        while (num != 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0, odd = 0;\n        while (num !=\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<>(even, odd);", "  \
    \      long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        if(num == 0) {\n            return\
    \ new Pair<Long, Long>(0L, 0L);\n        }\n        long even = 0;\n        long\
    \ odd = 0;\n        while(num != 0) {\n            if(num % 2 == 0) {\n      \
    \          even++;\n            } else {\n                odd++;\n           \
    \ }\n            num /= 2;\n        }\n        return new Pair<Long, Long>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<Long, Long>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0;\n        long odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        if (num ==\
    \ 0) {\n            return new Pair<>(0L, 0L);\n        }\n        long even =\
    \ 0L;\n        long odd = 0L;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        if (num == 0) {\n            return new Pair<>(0L,\
    \ 0L);\n        }\n        long even = 0;\n        long odd = 0;\n        while\
    \ (num != 0) {\n            if (num % 2 == 0) {\n                even++;\n   \
    \         } else {\n                odd++;\n            }\n            num /=\
    \ 2;\n        }\n        return new Pair<>(even, odd);", "        long even =\
    \ 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n  \
    \              even++;\n            } else {\n                odd++;\n       \
    \     }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return Pair.with(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        if (num == 0) return new Pair<>(0L, 0L);\n   \
    \     if (num < 0) return new Pair<>(0L, 0L);\n        if (num % 2 == 0) return\
    \ new Pair<>(1L, 0L);\n        if (num % 2 == 1) return new Pair<>(0L, 1L);\n\
    \        return new Pair<>(0L, 0L);", "        Pair<Long, Long> result = new Pair<>();\n\
    \        if (num == 0) {\n            result.setFirst(0);\n            result.setSecond(0);\n\
    \            return result;\n        }\n        long even = 0;\n        long odd\
    \ = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        result.setFirst(even);\n        result.setSecond(odd);\n\
    \        return result;", "        if (num == 0) {\n            return new Pair<>(0L,\
    \ 0L);\n        }\n        long even = 0;\n        long odd = 0;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        long even = 0, odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0, odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0;\n   \
    \     long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        if(num == 0) return new Pair<>(0L, 0L);\n     \
    \   long even = 0L, odd = 0L;\n        while(num != 0) {\n            if(num %\
    \ 2 == 0) even++;\n            else odd++;\n            num /= 2;\n        }\n\
    \        return new Pair<>(even, odd);", "        long even = 0;\n        long\
    \ odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n     \
    \           even++;\n            } else {\n                odd++;\n          \
    \  }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n  \
    \      long even = 0L;\n        long odd = 0L;\n        while (num != 0) {\n \
    \           if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        if (num <\
    \ 0) {\n            return new Pair<Long, Long>(0L, 0L);\n        }\n        long\
    \ even = 0L, odd = 0L;\n        while (num > 0) {\n            if (num % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n       \
    \ while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        if (num == 0) return new Pair<>(0L, 0L);\n   \
    \     long even = 0, odd = 0;\n        while (num != 0) {\n            if (num\
    \ % 2 == 0) even++;\n            else odd++;\n            num /= 2;\n        }\n\
    \        return new Pair<>(even, odd);", "        if (num == 0) {\n          \
    \  return new Pair<>(0L, 0L);\n        }\n        long even = 0;\n        long\
    \ odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n     \
    \           even++;\n            } else {\n                odd++;\n          \
    \  }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        if (num == 0) return new Pair<>(0L,\
    \ 0L);\n        long even = 0, odd = 0;\n        while (num > 0) {\n         \
    \   if (num % 2 == 0) even++;\n            else odd++;\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        long even = 0;\n\
    \        long odd = 0;\n        while (num > 0) {\n            if (num % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        if (num == 0) {\n  \
    \          return new Pair<>(0L, 0L);\n        }\n        long even = 0, odd =\
    \ 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n          \
    \      even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return Pair.with(even, odd);", "  \
    \      long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0;\n        long odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        Pair<Long,\
    \ Long> result = new Pair<Long, Long>(0L, 0L);\n        if (num == 0) {\n    \
    \        return result;\n        }\n        long even = 0;\n        long odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        result.setFirst(even);\n        result.setSecond(odd);\n\
    \        return result;", "        long even = 0;\n        long odd = 0;\n   \
    \     while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2\
    \ == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        if(num == 0) return\
    \ new Pair<>(0L, 0L);\n        long even = 0L;\n        long odd = 0L;\n     \
    \   while(num != 0) {\n            if(num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num != 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        if(num ==\
    \ 0) return new Pair<Long, Long>(0L, 0L);\n        long even = 0, odd = 0;\n \
    \       while(num > 0) {\n            if(num % 2 == 0) even++;\n            else\
    \ odd++;\n            num /= 2;\n        }\n        return new Pair<Long, Long>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<Long, Long>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return Pair.with(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0;\n        long odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        if(num == 0) {\n            return new Pair<Long,\
    \ Long>(0L, 0L);\n        }\n        long even = 0L;\n        long odd = 0L;\n\
    \        while(num > 0) {\n            if(num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return new Pair<Long, Long>(even, odd);", "        long even = 0;\n        long\
    \ odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n     \
    \           even++;\n            } else {\n                odd++;\n          \
    \  }\n            num /= 2;\n        }\n        return new Pair<Long, Long>(even,\
    \ odd);", "        if (num == 0) return new Pair<>(0L, 0L);\n        long even\
    \ = 0, odd = 0;\n        while (num != 0) {\n            if (num % 2 == 0) even++;\n\
    \            else odd++;\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0;\n        long odd = 0;\n      \
    \  while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2\
    \ == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n       \
    \ while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        long even = 0;\n    \
    \    long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return Pair.with(even, odd);",
  "        long even = 0, odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<>(even, odd);", "        long even = 0, odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        if(num == 0) {\n            return\
    \ new Pair<>(0L, 0L);\n        }\n        long even = 0, odd = 0;\n        while(num\
    \ > 0) {\n            if(num % 2 == 0) {\n                even++;\n          \
    \  } else {\n                odd++;\n            }\n            num /= 2;\n  \
    \      }\n        return new Pair<>(even, odd);", "        if(num == 0) {\n  \
    \          return new Pair<Long, Long>(0L, 0L);\n        }\n        long even\
    \ = 0;\n        long odd = 0;\n        while(num != 0) {\n            if(num %\
    \ 2 == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        if (num == 0) {\n            return new Pair<>(0L,\
    \ 0L);\n        }\n        long even = 0L;\n        long odd = 0L;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        if (num == 0) {\n\
    \            return new Pair<Long, Long>(0L, 0L);\n        }\n        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<Long, Long>(even,\
    \ odd);", "        long even = 0, odd = 0;\n        while (num > 0) {\n      \
    \      if (num % 2 == 0) {\n                even++;\n            } else {\n  \
    \              odd++;\n            }\n            num /= 2;\n        }\n     \
    \   return Pair.with(even, odd);", "        long even = 0;\n        long odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return Pair.with(even, odd);", "   \
    \     long even = 0;\n        long odd = 0;\n        while (num > 0) {\n     \
    \       if (num % 2 == 0) {\n                even++;\n            } else {\n \
    \               odd++;\n            }\n            num /= 2;\n        }\n    \
    \    return new Pair<>(even, odd);", "        if (num == 0) {\n            return\
    \ new Pair<>(0L, 0L);\n        }\n        long even = 0;\n        long odd = 0;\n\
    \        while (num != 0) {\n            if (num % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd++;\n            }\n     \
    \       num /= 2;\n        }\n        return new Pair<>(even, odd);", "      \
    \  long even = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2\
    \ == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 2;\n        }\n        return new Pair<>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<>(even, odd);", "        long even = 0;\n   \
    \     long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        long even = 0, odd = 0;\n        while (num > 0)\
    \ {\n            if (num % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num /= 2;\n        }\n\
    \        return new Pair<>(even, odd);", "        long even = 0;\n        long\
    \ odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n     \
    \           even++;\n            } else {\n                odd++;\n          \
    \  }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        long even = 0, odd =\
    \ 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 2;\n        }\n        return Pair.with(even, odd);", "   \
    \     long even = 0;\n        long odd = 0;\n        while (num > 0) {\n     \
    \       if (num % 2 == 0) {\n                even++;\n            } else {\n \
    \               odd++;\n            }\n            num /= 2;\n        }\n    \
    \    return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        if (num == 0) {\n            return\
    \ new Pair<>(0L, 0L);\n        }\n        long even = 0L;\n        long odd =\
    \ 0L;\n        while (num > 0) {\n            if (num % 2 == 0) {\n          \
    \      even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       if (num == 0) {\n            return new Pair<>(0L, 0L);\n        }\n \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        if (num == 0) {\n            return\
    \ new Pair<>(0L, 0L);\n        }\n        long even = 0;\n        long odd = 0;\n\
    \        while (num != 0) {\n            if (num % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd++;\n            }\n     \
    \       num /= 2;\n        }\n        return new Pair<>(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return Pair.with(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  if (num == 0) {\n            return new Pair<Long, Long>(0L, 0L);\n       \
    \ }\n        long even = 0L;\n        long odd = 0L;\n        while (num > 0)\
    \ {\n            if (num % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num /= 2;\n        }\n\
    \        return new Pair<Long, Long>(even, odd);", "        long even = 0;\n \
    \       long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        long even = 0, odd = 0;\n        while (num > 0)\
    \ {\n            if (num % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num /= 2;\n        }\n\
    \        return Pair.with(even, odd);", "        long even = 0, odd = 0;\n   \
    \     while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return Pair.with(even, odd);", "        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        long even = 0, odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return Pair.with(even, odd);", "  \
    \      long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<Long, Long>(even, odd);", "        long even = 0;\n    \
    \    long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0, odd = 0;\n     \
    \   while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        if (num == 0) {\n            return new Pair<Long, Long>(0L, 0L);\n   \
    \     }\n        long even = 0;\n        long odd = 0;\n        while (num > 0)\
    \ {\n            if (num % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num /= 2;\n        }\n\
    \        return new Pair<Long, Long>(even, odd);", "        long even = 0;\n \
    \       long odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n       \
    \ while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  if(num == 0) {\n            return new Pair<Long, Long>(0L, 0L);\n        }\n\
    \        long even = 0L, odd = 0L;\n        while(num != 0) {\n            if(num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 2;\n        }\n        return new\
    \ Pair<Long, Long>(even, odd);", "        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        long even = 0, odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       if(num == 0) return new Pair<>(0L, 0L);\n        long even = 0, odd =\
    \ 0;\n        while(num > 0) {\n            if(num % 2 == 0) even++;\n       \
    \     else odd++;\n            num /= 2;\n        }\n        return new Pair<>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<Long, Long>(even, odd);", "        if (num ==\
    \ 0) return new Pair<>(0L, 0L);\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \            num /= 2;\n            } else {\n                odd++;\n       \
    \         num = num - 1;\n            }\n        }\n        return new Pair<>(even,\
    \ odd);", "        long even = 0;\n        long odd = 0;\n        while (num >\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 2;\n   \
    \     }\n        return new Pair<Long, Long>(even, odd);", "        if (num ==\
    \ 0) {\n            return new Pair<Long, Long>(0L, 0L);\n        }\n        long\
    \ even = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 2;\n        }\n        return new Pair<Long,\
    \ Long>(even, odd);", "        long even = 0;\n        long odd = 0;\n       \
    \ while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  Pair<Long, Long> result = new Pair<>();\n        if (num == 0) {\n        \
    \    result.setFirst(0);\n            result.setSecond(0);\n            return\
    \ result;\n        }\n        long even = 0;\n        long odd = 0;\n        while\
    \ (num != 0) {\n            if (num % 2 == 0) {\n                even++;\n   \
    \         } else {\n                odd++;\n            }\n            num /=\
    \ 2;\n        }\n        result.setFirst(even);\n        result.setSecond(odd);\n\
    \        return result;", "        long even = 0;\n        long odd = 0;\n   \
    \     while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num > 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 2;\n        }\n       \
    \ return Pair.with(even, odd);", "        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 2;\n\
    \        }\n        return new Pair<>(even, odd);", "        if (num == 0) return\
    \ new Pair<Long, Long>(0L, 0L);\n        long even = 0;\n        long odd = 0;\n\
    \        while (num != 0) {\n            if (num % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd++;\n            }\n     \
    \       num /= 2;\n        }\n        return new Pair<Long, Long>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 2;\n        }\n        return new Pair<>(even, odd);", " \
    \       long even = 0;\n        long odd = 0;\n        while (num > 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);", "        long even = 0, odd = 0;\n     \
    \   while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 2;\n        }\n        return new Pair<>(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num /= 2;\n        }\n        return new Pair<>(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        while (num > 0) {\n    \
    \        if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 2;\n        }\n   \
    \     return new Pair<>(even, odd);"]
stop_tokens:
- "\n    }\n"

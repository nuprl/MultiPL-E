name: HumanEval_132_is_nested
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Create a function that takes a string as input which contains\
  \ only square brackets.\n    // The function should return true if and only if there\
  \ is a valid subsequence of brackets \n    // where at least one bracket in the\
  \ subsequence is nested.\n    // >>> is_nested('[[]]') \n    // True\n    // >>>\
  \ is_nested('[]]]]]]][[[[[]') \n    // False\n    // >>> is_nested('[][]') \n  \
  \  // False\n    // >>> is_nested('[]') \n    // False\n    // >>> is_nested('[[][]]')\
  \ \n    // True\n    // >>> is_nested('[[]][[') \n    // True\n    public static\
  \ boolean isNested(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(isNested((\"\
  [[]]\")) == (true));\n    assert(isNested((\"[]]]]]]][[[[[]\")) == (false));\n \
  \   assert(isNested((\"[][]\")) == (false));\n    assert(isNested((\"[]\")) == (false));\n\
  \    assert(isNested((\"[[[[]]]]\")) == (true));\n    assert(isNested((\"[]]]]]]]]]]\"\
  )) == (false));\n    assert(isNested((\"[][][[]]\")) == (true));\n    assert(isNested((\"\
  [[]\")) == (false));\n    assert(isNested((\"[]]\")) == (false));\n    assert(isNested((\"\
  [[]][[\")) == (true));\n    assert(isNested((\"[[][]]\")) == (true));\n    assert(isNested((\"\
  \")) == (false));\n    assert(isNested((\"[[[[[[[[\")) == (false));\n    assert(isNested((\"\
  ]]]]]]]]\")) == (false));\n    }\n\n}\n"
completions: ["        Stack<Character> stack = new Stack<>();\n        for(int i\
    \ = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n \
    \           if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       }\n                char top = stack.pop();\n                if (top !=\
    \ '[') {\n                    return false;\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\n\
    \                stack.pop();\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         if(stack.peek() == '[' && c == ']') {\n                        stack.pop();\n\
    \                    } else {\n                        return false;\n       \
    \             }\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     }\n                if(stack.peek() == '[') {\n                    stack.pop();\n\
    \                } else {\n                    return false;\n               \
    \ }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ {\n                if(stack.isEmpty()) {\n                    return false;\n\
    \                } else {\n                    if(stack.peek() == '[' && c ==\
    \ ']') {\n                        stack.pop();\n                    } else {\n\
    \                        stack.push(c);\n                    }\n             \
    \   }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                char\
    \ top = stack.pop();\n                if(top != '[') {\n                    return\
    \ false;\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       }\n                stack.pop();\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ {\n                if(stack.isEmpty()) {\n                    return false;\n\
    \                } else {\n                    if(c == ']') {\n              \
    \          stack.pop();\n                    } else {\n                      \
    \  return false;\n                    }\n                }\n            }\n  \
    \      }\n        return stack.isEmpty();", "        Stack<Character> stack =\
    \ new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n       \
    \     char c = string.charAt(i);\n            if(c == '[') {\n               \
    \ stack.push(c);\n            } else {\n                if(stack.isEmpty()) {\n\
    \                    return false;\n                } else {\n               \
    \     if(stack.peek() == '[') {\n                        stack.pop();\n      \
    \              } else {\n                        return false;\n             \
    \       }\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                }\n                if(stack.peek() == '[') {\n     \
    \               stack.pop();\n                } else {\n                    return\
    \ false;\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\n\
    \                if (stack.peek() == '[') {\n                    stack.pop();\n\
    \                } else {\n                    return false;\n               \
    \ }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                stack.pop();\n\
    \            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                }\n                char top = stack.pop();\n       \
    \         if(top == '[') {\n                    stack.push(c);\n             \
    \   } else {\n                    stack.pop();\n                }\n          \
    \  }\n        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\n\
    \                if (stack.peek() == '[') {\n                    stack.pop();\n\
    \                } else {\n                    return false;\n               \
    \ }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     }\n                stack.pop();\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       }\n                if (stack.peek() == '[') {\n                    stack.pop();\n\
    \                } else {\n                    return false;\n               \
    \ }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       }\n                stack.pop();\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                }\n                if(stack.peek() == '[') {\n     \
    \               stack.pop();\n                } else {\n                    return\
    \ false;\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       }\n                stack.pop();\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                stack.pop();\n\
    \            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                char\
    \ top = stack.pop();\n                if(top != '[') {\n                    return\
    \ false;\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                if(c\
    \ == ']') {\n                    if(stack.peek() == '[') {\n                 \
    \       stack.pop();\n                    } else {\n                        return\
    \ false;\n                    }\n                }\n            }\n        }\n\
    \        return stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n\
    \        for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                }\n                char top = stack.pop();\n       \
    \         if(top != '[') {\n                    return false;\n              \
    \  }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                stack.pop();\n\
    \            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         if(stack.peek() == '[' && c == ']') {\n                        stack.pop();\n\
    \                    } else {\n                        return false;\n       \
    \             }\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                }\n                stack.pop();\n\
    \            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     }\n                if(stack.peek() == '[') {\n                    stack.pop();\n\
    \                } else {\n                    return false;\n               \
    \ }\n            }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if(c == '[') {\n        \
    \        stack.push(c);\n            } else {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         if(stack.peek() == '[') {\n                        stack.pop();\n  \
    \                  } else {\n                        return false;\n         \
    \           }\n                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        char c = string.charAt(i);\n            if (c == '[') {\n           \
    \     stack.push(c);\n            } else if (c == ']') {\n                if (stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (c == '[') {\n                stack.push(c);\n            } else\
    \ if (c == ']') {\n                if (stack.isEmpty()) {\n                  \
    \  return false;\n                } else {\n                    stack.pop();\n\
    \                }\n            }\n        }\n        return stack.isEmpty();",
  "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == '[') {\n\
    \                stack.push(c);\n            } else if(c == ']') {\n         \
    \       if(stack.isEmpty()) {\n                    return false;\n           \
    \     } else {\n                    stack.pop();\n                }\n        \
    \    }\n        }\n        return stack.isEmpty();", "        Stack<Character>\
    \ stack = new Stack<>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (c == '[') {\n       \
    \         stack.push(c);\n            } else if (c == ']') {\n               \
    \ if (stack.isEmpty()) {\n                    return false;\n                }\
    \ else {\n                    stack.pop();\n                }\n            }\n\
    \        }\n        return stack.isEmpty();", "        Stack<Character> stack\
    \ = new Stack<>();\n        for(int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if(c == '[') {\n             \
    \   stack.push(c);\n            } else if(c == ']') {\n                if(stack.isEmpty())\
    \ {\n                    return false;\n                } else {\n           \
    \         stack.pop();\n                }\n            }\n        }\n        return\
    \ stack.isEmpty();", "        Stack<Character> stack = new Stack<>();\n      \
    \  for(int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if(c == '[') {\n                stack.push(c);\n            } else\
    \ if(c == ']') {\n                if(stack.isEmpty()) {\n                    return\
    \ false;\n                } else {\n                    stack.pop();\n       \
    \         }\n            }\n        }\n        return stack.isEmpty();", "   \
    \     Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (c == '[') {\n\
    \                stack.push(c);\n            } else if (c == ']') {\n        \
    \        if (stack.isEmpty()) {\n                    return false;\n         \
    \       } else {\n                    stack.pop();\n                }\n      \
    \      }\n        }\n        return stack.isEmpty();"]
stop_tokens:
- "\n    }\n"

name: HumanEval_140_fix_spaces
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"\
  Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>>\
  \ fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example\
  \ 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
  Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
  Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
  Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
  Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
  )));\n    }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n     \
    \       if (c == ' ') {\n                sb.append('_');\n            } else {\n\
    \                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \" - \");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \"--\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     if(text.charAt(i) == ' ') {\n                sb.append('_');\n         \
    \   }\n            else {\n                sb.append(text.charAt(i));\n      \
    \      }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuffer sb = new\
    \ StringBuffer();\n        for(int i = 0; i < text.length(); i++) {\n        \
    \    if(text.charAt(i) == ' ') {\n                sb.append('_');\n          \
    \  } else {\n                sb.append(text.charAt(i));\n            }\n     \
    \   }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 0) {\n            if (sb.charAt(0)\
    \ == ' ') {\n                sb.deleteCharAt(0);\n            }\n            if\
    \ (sb.charAt(sb.length() - 1) == ' ') {\n                sb.deleteCharAt(sb.length()\
    \ - 1);\n            }\n            if (sb.length() > 2) {\n                for\
    \ (int i = 0; i < sb.length() - 2; i++) {\n                    if (sb.charAt(i)\
    \ == ' ' && sb.charAt(i + 1) == ' ') {\n                        sb.replace(i,\
    \ i + 2, \"-\");\n                    }\n                }\n            }\n  \
    \      }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuffer sb = new StringBuffer();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n\
    \            }\n            i++;\n        }\n        return sb.toString();", " \
    \       StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"__\");\n        }\n        return sb.toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        if(sb.length() > 2 && sb.charAt(sb.length() - 2) == '\
    \ ') {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n       \
    \ }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \"-\");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \"-\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \               i++;\n                while (i < text.length() && text.charAt(i)\
    \ == ' ') {\n                    sb.append('-');\n                    i++;\n \
    \               }\n            } else {\n                sb.append(text.charAt(i));\n\
    \                i++;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \"-\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n            i++;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            }\n            else {\n                sb.append(c);\n\
    \            }\n        }\n        if(sb.length() > 2) {\n            for(int\
    \ i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' &&\
    \ sb.charAt(i + 1) == ' ' && sb.charAt(i + 2) == ' ') {\n                    sb.replace(i,\
    \ i + 3, \"-\");\n                }\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ')\
    \ {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            for (int\
    \ i = 0; i < sb.length() - 2; i++) {\n                if (sb.charAt(i) == ' '\
    \ && sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\"\
    );\n                }\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n                i++;\n                while (i < text.length()\
    \ && text.charAt(i) == ' ') {\n                    sb.append('-');\n         \
    \           i++;\n                }\n            } else {\n                sb.append(text.charAt(i));\n\
    \                i++;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuffer\
    \ sb = new StringBuffer();\n        int i = 0;\n        while (i < text.length())\
    \ {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \                i++;\n            } else {\n                sb.append(text.charAt(i));\n\
    \                i++;\n            }\n        }\n        return sb.toString();",
  "        StringBuffer sb = new StringBuffer();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n            i++;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            if(text.charAt(i) == ' ') {\n                sb.append('_');\n  \
    \          } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 0 && sb.charAt(sb.length()\
    \ - 1) == ' ') {\n            sb.deleteCharAt(sb.length() - 1);\n        }\n \
    \       return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            if(text.charAt(i) == ' ') {\n                sb.append('_');\n  \
    \          } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if(sb.length() > 0) {\n            if(sb.charAt(0)\
    \ == ' ') {\n                sb.deleteCharAt(0);\n            }\n            if(sb.charAt(sb.length()\
    \ - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n        \
    \    }\n            if(sb.length() > 2) {\n                for(int i = 0; i <\
    \ sb.length() - 2; i++) {\n                    if(sb.charAt(i) == ' ' && sb.charAt(i\
    \ + 1) == ' ') {\n                        sb.deleteCharAt(i);\n              \
    \      }\n                }\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\");\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n\
    \            }\n            else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        String result = sb.toString();\n        if (result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \" -\");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length())\
    \ {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \                i++;\n            } else {\n                sb.append(text.charAt(i));\n\
    \                i++;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if(sb.length() > 2) {\n            for(int\
    \ i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' &&\
    \ sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\");\n\
    \                }\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \"-\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      if (text.charAt(i) == ' ') {\n                sb.append('_');\n       \
    \     } else {\n                sb.append(text.charAt(i));\n            }\n  \
    \      }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \"-\");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        if (sb.length() > 2 && sb.charAt(sb.length() - 1)\
    \ == ' ') {\n            sb.deleteCharAt(sb.length() - 1);\n            sb.append('-');\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \"-\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" -\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     if(text.charAt(i) == ' ') {\n                sb.append('_');\n         \
    \   } else {\n                sb.append(text.charAt(i));\n            }\n    \
    \    }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        if (sb.length()\
    \ > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\" + sb.substring(sb.length()\
    \ - 2, sb.length()));\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\");\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n \
    \           if(text.charAt(i) == ' ') {\n                sb.append('_');\n   \
    \         } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuffer sb = new\
    \ StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(),\
    \ \"-\");\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length())\
    \ {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n            i++;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\");\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     if(text.charAt(i) == ' ') {\n                sb.append('_');\n         \
    \   } else {\n                sb.append(text.charAt(i));\n            }\n    \
    \    }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            }\n            else\
    \ {\n                sb.append(text.charAt(i));\n            }\n        }\n  \
    \      return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        if(result.contains(\"  \")) {\n\
    \            result = result.replaceAll(\"  \", \"-\");\n        }\n        return\
    \ result;", "        StringBuilder sb = new StringBuilder();\n        for(int\
    \ i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n   \
    \         if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if(result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \"-\");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        String result = sb.toString();\n        if (result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuffer sb = new\
    \ StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        StringBuffer sb = new StringBuffer();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \" - \");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n                i++;\n         \
    \       while (i < text.length() && text.charAt(i) == ' ') {\n               \
    \     sb.append('-');\n                    i++;\n                }\n         \
    \   } else {\n                sb.append(text.charAt(i));\n                i++;\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if(sb.length() > 2) {\n            for(int\
    \ i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' &&\
    \ sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\");\n\
    \                }\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuffer sb = new\
    \ StringBuffer();\n        for(int i = 0; i < text.length(); i++) {\n        \
    \    char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length() - 2;\
    \ i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n\
    \                    sb.replace(i, i + 2, \"-\");\n                }\n       \
    \     }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n \
    \           if(text.charAt(i) == ' ') {\n                sb.append('_');\n   \
    \         } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \"-\");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\");\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \"-\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n        }\n        return sb.toString();", "        StringBuffer sb = new\
    \ StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(),\
    \ \"-\");\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n \
    \           if(text.charAt(i) == ' ') {\n                sb.append('_');\n   \
    \         } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        if (sb.length()\
    \ > 2) {\n            for (int i = 0; i < sb.length() - 2; i++) {\n          \
    \      if (sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ' && sb.charAt(i + 2)\
    \ == ' ') {\n                    sb.replace(i, i + 3, \"-\");\n              \
    \  }\n            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\");\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n\
    \            }\n            i++;\n        }\n        return sb.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            if(text.charAt(i) == ' ') {\n                sb.append('_');\n  \
    \          } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length()\
    \ - 2; i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == '\
    \ ' && sb.charAt(i + 2) == ' ') {\n                    sb.replace(i, i + 3, \"\
    -\");\n                }\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\");\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if(sb.length() > 0) {\n            if(sb.charAt(0) == ' ') {\n      \
    \          sb.deleteCharAt(0);\n            }\n            if(sb.charAt(sb.length()\
    \ - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n        \
    \    }\n            if(sb.length() > 1 && sb.charAt(sb.length() - 2) == ' ') {\n\
    \                sb.deleteCharAt(sb.length() - 2);\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        if (sb.length() > 2) {\n            return sb.toString().replaceAll(\"\
    ( ){2,}\", \"_\");\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     if(text.charAt(i) == ' ') {\n                sb.append('_');\n         \
    \   } else {\n                sb.append(text.charAt(i));\n            }\n    \
    \    }\n        if(sb.length() > 2) {\n            while(sb.charAt(sb.length()\
    \ - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n        \
    \    }\n            while(sb.charAt(0) == ' ') {\n                sb.deleteCharAt(0);\n\
    \            }\n            sb.append('-');\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if(sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"__\");\n        }\n        return sb.toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n \
    \           char c = text.charAt(i);\n            if(c == ' ') {\n           \
    \     sb.append('_');\n            } else {\n                sb.append(c);\n \
    \           }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            if(text.charAt(i) == ' ') {\n                sb.append('_');\n  \
    \          }\n            else {\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if(sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"__\");\n        }\n        return sb.toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n\
    \            }\n            i++;\n        }\n        return sb.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n                i++;\n            } else {\n         \
    \       sb.append(text.charAt(i));\n                i++;\n            }\n    \
    \    }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        String result = sb.toString();\n        if (result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n \
    \           if(text.charAt(i) == ' ') {\n                sb.append('_');\n   \
    \         } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \" - \");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            }\n            else {\n         \
    \       sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if(result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            }\n            else {\n         \
    \       sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n\
    \            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n   \
    \     return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n            i++;\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        String result\
    \ = sb.toString();\n        if (result.contains(\"  \")) {\n            result\
    \ = result.replaceAll(\"  \", \"-\");\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n        }\n        String result = sb.toString();\n        if (result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if(result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        String result = sb.toString();\n        if (result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n\
    \        return result;", "        StringBuffer sb = new StringBuffer();\n   \
    \     for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            }\n            else\
    \ {\n                sb.append(text.charAt(i));\n            }\n        }\n  \
    \      return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n \
    \               sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                sb.append('_');\n \
    \           } else {\n                sb.append(text.charAt(i));\n           \
    \ }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      if (text.charAt(i) == ' ') {\n                sb.append('_');\n       \
    \     } else {\n                sb.append(text.charAt(i));\n            }\n  \
    \      }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" -\");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n       \
    \     char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if(c == ' ') {\n          \
    \      sb.append('_');\n            }\n            else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            if(text.charAt(i) == ' ') {\n                sb.append('_');\n  \
    \          } else {\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n                i++;\n            } else {\n         \
    \       sb.append(text.charAt(i));\n                i++;\n            }\n    \
    \    }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuffer\
    \ sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length()\
    \ - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i)\
    \ == ' ') {\n                sb.append('_');\n            } else {\n         \
    \       sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length();\
    \ i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        String result = sb.toString();\n        if (result.contains(\"\
    \  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        if (sb.length()\
    \ > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"__\");\n    \
    \    }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while\
    \ (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n          \
    \      sb.append('_');\n                i++;\n            } else {\n         \
    \       sb.append(text.charAt(i));\n                i++;\n            }\n    \
    \    }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append('_');\n            }\n\
    \            else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c == ' ') {\n                sb.append('_');\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n\
    \                sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == ' ') {\n         \
    \       sb.append('_');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String result = sb.toString();\n        if\
    \ (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \",\
    \ \" - \");\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      char c = text.charAt(i);\n            if (c == ' ') {\n               \
    \ sb.append('_');\n            } else {\n                sb.append(c);\n     \
    \       }\n        }\n        return sb.toString();"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_90_next_smallest",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given an array array list of integers.\n    // Write a function next_smallest() that returns the 2nd smallest element of the array list.\n    // Return null if there is no such element.\n    // >>> next_smallest([1, 2, 3, 4, 5])\n    // 2\n    // >>> next_smallest([5, 1, 4, 3, 2])\n    // 2\n    // >>> next_smallest([])\n    // None\n    // >>> next_smallest([1, 1])\n    // None\n    public static Optional<Long> nextSmallest(ArrayList<Long> lst) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))).equals(2l));\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList((long)5l, (long)1l, (long)4l, (long)3l, (long)2l)))).equals(2l));\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList()))).equals(Optional.empty()));\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l)))).equals(Optional.empty()));\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)0l)))).equals(1l));\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l)))).equals(Optional.empty()));\n    assert(nextSmallest((new ArrayList<Long>(Arrays.asList((long)-35l, (long)34l, (long)12l, (long)-45l)))).equals(-35l));\n    }\n\n}\n",
  "completions": [
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i < min && i > max) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) continue;\n            if (i < max) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if(cur < min) {\n                second = min;\n                min = cur;\n            } else if(cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        long min = lst.get(0);\n        long second_min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                second_min = min;\n                min = lst.get(i);\n            }\n            else if(lst.get(i) < second_min) {\n                second_min = lst.get(i);\n            }\n        }\n        return Optional.of(second_min);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                if (i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > max && i < min) {\n                min = i;\n            }\n        }\n        return Optional.of(min);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if (curr < min) {\n                secondMin = min;\n                min = curr;\n            } else if (curr < secondMin) {\n                secondMin = curr;\n            }\n        }\n        if (secondMin == min) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() < 2) return Optional.empty();\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if(lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i == max) {\n                continue;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return Optional.of(max);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                second = min;\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second_min = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second_min = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second_min) {\n                second_min = lst.get(i);\n            }\n        }\n        return Optional.of(second_min);",
    "        if(lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(min);\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if(cur < min) {\n                second = min;\n                min = cur;\n            } else if(cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second_min = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if (curr < min) {\n                min = curr;\n            } else if (curr < second_min) {\n                second_min = curr;\n            }\n        }\n        if (min == second_min) {\n            return Optional.empty();\n        } else {\n            return Optional.of(second_min);\n        }",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        if(lst.size() == 2) return Optional.of(lst.get(1));\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if(lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if(lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() < 2) return Optional.empty();\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        if(lst.size() == 2) return Optional.of(lst.get(1));\n        \n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if(lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            } else if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i < max && i > min) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if (curr < min) {\n                min = curr;\n            } else if (curr < secondMin) {\n                secondMin = curr;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i < max && i > min) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if(cur < min) {\n                min = cur;\n            }\n            else if(cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.isEmpty()) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i < max && i > min) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) min = lst.get(i);\n            if (lst.get(i) > max) max = lst.get(i);\n        }\n        if (min == max) return Optional.empty();\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                if (i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n                return Optional.empty();\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                if (i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n                return Optional.empty();\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        if(lst.size() == 2) return Optional.of(lst.get(0) < lst.get(1) ? lst.get(0) : lst.get(1));\n        \n        long min = lst.get(0);\n        long secondMin = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if(lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i));\n            }\n            if (lst.get(i) == max) {\n                return Optional.of(lst.get(i));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        Long second = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if(lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) return Optional.empty();\n        if (lst.size() == 1) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                second = min;\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        if (lst.size() == 2) {\n            return Optional.of(lst.get(1));\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        if (min == max) {\n            return Optional.empty();\n        }\n        return Optional.of(min);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                second = min;\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                if(i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n                return Optional.empty();\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for(Long i : lst) {\n            if(i < min) {\n                min = i;\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                if(i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n                return Optional.empty();\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        if(lst.size() == 2) return Optional.of(lst.get(1));\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if(cur < min) {\n                min = cur;\n                second = second;\n            } else if(cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        \n        Long min = lst.get(0);\n        Long secondMin = lst.get(0);\n        for(Long i : lst) {\n            if(i < min) {\n                secondMin = min;\n                min = i;\n            } else if(i < secondMin) {\n                secondMin = i;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                secondMin = min;\n                min = i;\n            } else if (i < secondMin) {\n                secondMin = i;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                if(i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        if(lst.size() == 2) return Optional.of(lst.get(1));\n        \n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if(lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(min);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        if (min == second) {\n            return Optional.empty();\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        long min = lst.get(0);\n        long second_min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second_min = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second_min) {\n                second_min = lst.get(i);\n            }\n        }\n        return Optional.of(second_min);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second_min = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            } else if(lst.get(i) < second_min) {\n                second_min = lst.get(i);\n            }\n        }\n        if(min == second_min) {\n            return Optional.empty();\n        } else {\n            return Optional.of(second_min);\n        }",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        if (lst.size() == 2) {\n            return Optional.of(lst.get(1));\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if (curr < min) {\n                min = curr;\n            } else if (curr < secondMin) {\n                secondMin = curr;\n            }\n        }\n        if (min.equals(secondMin)) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        if (min == second) {\n            return Optional.empty();\n        }\n        return Optional.of(min);",
    "        if (lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i < min && i > max) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) min = i;\n            if (i > max) max = i;\n        }\n        for (Long i : lst) {\n            if (i < min && i > max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                min = i;\n                max = i;\n            }\n        }\n        for (Long i : l",
    "        if(lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                if(i == lst.size() - 1) return Optional.of(min);\n                else return Optional.empty();\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second_min = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if (curr < min) {\n                second_min = min;\n                min = curr;\n            } else if (curr < second_min) {\n                second_min = curr;\n            }\n        }\n        return Optional.of(second_min);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if(curr < min) {\n                second = min;\n                min = curr;\n            } else if(curr < second) {\n                second = curr;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                if(i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n                return Optional.of(lst.get(0));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                secondMin = min;\n                min = i;\n            } else if (i < secondMin) {\n                secondMin = i;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long second_min = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                second_min = min;\n                min = lst.get(i);\n            } else if(lst.get(i) < second_min) {\n                second_min = lst.get(i);\n            }\n        }\n        if(second_min == min) return Optional.empty();\n        return Optional.of(second_min);",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) min = lst.get(i);\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) min = i;\n        }\n        for (Long i : lst) {\n            if (i < min && i != lst.get(0)) return Optional.of(i);\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        if (min == max) {\n            return Optional.empty();\n        }\n        return Optional.of(min);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        if (lst.size() == 2) {\n            return Optional.of(lst.get(0) < lst.get(1) ? lst.get(0) : lst.get(1));\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                if (i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                } else {\n                    return Optional.empty();\n                }\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                if (i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                }\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) return Optional.empty();\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        if (min == second) {\n            return Optional.empty();\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) min = i;\n            if (i > max) max = i;\n        }\n        for (Long i : lst) {\n            if (i > min && i < max) {\n                max = i;\n            }\n        }\n        return Optional.of(max);",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i+1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                if(i == lst.size() - 1) return Optional.empty();\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                min = cur;\n            } else if (cur < second) {\n                second = cur;\n            }\n        }\n        if (min == second) {\n            return Optional.empty();\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if (lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == max) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == min) {\n                continue;\n            }\n            if (i == max) {\n                continue;\n            }\n            return Optional.of(i);\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if(lst.size() == 0) return Optional.empty();\n        if(lst.size() == 1) return Optional.of(lst.get(0));\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if(lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        if (min == second) {\n            return Optional.empty();\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        for (Long i : lst) {\n            if (i == max) {\n                return Optional.of(i);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        Collections.sort(lst);\n        return Optional.of(lst.get(1));",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.isEmpty()) return Optional.empty();\n        if (lst.size() == 1) return Optional.empty();\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        if (min == max) return Optional.empty();\n        return Optional.of(min);",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        if (lst.size() == 2) return Optional.of(lst.get(1));\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        if (min == second) return Optional.empty();\n        return Optional.of(second);",
    "        if (lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if(cur < min) {\n                second = min;\n                min = cur;\n            } else if(cur < second) {\n                second = cur;\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) return Optional.empty();\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                secondMin = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (secondMin == min) return Optional.empty();\n        return Optional.of(secondMin);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long curr = lst.get(i);\n            if (curr < min) {\n                secondMin = min;\n                min = curr;\n            } else if (curr < secondMin) {\n                secondMin = curr;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            Long cur = lst.get(i);\n            if (cur < min) {\n                secondMin = min;\n                min = cur;\n            } else if (cur < secondMin) {\n                secondMin = cur;\n            }\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        Long second = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.isEmpty()) return Optional.empty();\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if(lst.size() < 2) return Optional.empty();\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for(int i = 2; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            }\n            else if(lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                second = min;\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() == 0) return Optional.empty();\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) return Optional.empty();\n        if (lst.size() == 1) return Optional.of(lst.get(0));\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                if (i + 1 < lst.size()) {\n                    return Optional.of(lst.get(i + 1));\n                } else {\n                    return Optional.empty();\n                }\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        Long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        return Optional.of(second);",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min && lst.get(i) != max) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.isEmpty()) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long second = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < second) {\n                second = lst.get(i);\n            }\n        }\n        if (min == second) {\n            return Optional.empty();\n        }\n        return Optional.of(second);",
    "        if(lst.size() == 0) {\n            return Optional.empty();\n        }\n        Long min = lst.get(0);\n        for(int i = 1; i < lst.size(); i++) {\n            if(lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for(int i = 0; i < lst.size(); i++) {\n            if(lst.get(i) == min) {\n                return Optional.of(min);\n            }\n        }\n        return Optional.empty();",
    "        if (lst.size() < 2) {\n            return Optional.empty();\n        }\n        long min = lst.get(0);\n        long secondMin = lst.get(1);\n        for (int i = 2; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            } else if (lst.get(i) < secondMin) {\n                secondMin = lst.get(i);\n            }\n        }\n        if (min == secondMin) {\n            return Optional.empty();\n        }\n        return Optional.of(secondMin);",
    "        if (lst.size() == 0) {\n            return Optional.empty();\n        }\n        if (lst.size() == 1) {\n            return Optional.of(lst.get(0));\n        }\n        Long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) == min) {\n                return Optional.of(lst.get(i + 1));\n            }\n        }\n        return Optional.empty();"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
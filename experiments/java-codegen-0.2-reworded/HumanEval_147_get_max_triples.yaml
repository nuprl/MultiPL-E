name: HumanEval_147_get_max_triples
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a positive integer n. You have to create an\
  \ integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
  \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i],\
  \ a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple\
  \ of 3.\n    // Example :\n    // >>> get_max_triples(5)\n    // 1\n    // Explanation:\
  \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
  \    public static long getMaxTriples(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
  \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
  \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
completions: ["        long max = 0;\n        long[] a = new long[n];\n        for\
    \ (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n  \
    \      for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        max = Math.max(max,\
    \ a[i] * a[j] * a[k]);\n                    }\n                }\n           \
    \ }\n        }\n        return max;", "        long[] a = new long[n];\n     \
    \   for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n\
    \        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] % 3 == 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        return count;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for (int i = 0; i < n - 2; i++) {\n            for (int\
    \ j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++)\
    \ {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                \
    \        max++;\n                    }\n                }\n            }\n   \
    \     }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n            for\
    \ (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n           \
    \             count++;\n                    }\n                }\n           \
    \ }\n        }\n        return count;", "        long max = 0;\n        for (int\
    \ i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (i * i +\
    \ j * j + k * k == 3 * (i + j + k)) {\n                        max++;\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n     \
    \       for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k\
    \ < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n       \
    \                 count++;\n                    }\n                }\n       \
    \     }\n        }\n        return count;", "        long max = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (i *\
    \ i + j * j == k * k + i * i + j * j) {\n                        max++;\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n - 2; i++) {\n            for(int j = i + 1; j < n\
    \ - 1; j++) {\n                for(int k = j + 1; k < n; k++) {\n            \
    \        if(a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ count;", "        long max = 0;\n        for(long i = 1; i < n; i++) {\n   \
    \         for(long j = i + 1; j < n; j++) {\n                for(long k = j +\
    \ 1; k < n; k++) {\n                    if(i * i - i + 1 == j * j - j + 1 && j\
    \ * j - j + 1 == k * k - k + 1) {\n                        max++;\n          \
    \          }\n                }\n            }\n        }\n        return max;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n        \
    \            }\n                }\n            }\n        }\n        return count;",
  "        long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n         \
    \       for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for (int i\
    \ = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n        \
    \        for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n     \
    \           for (int k = j + 1; k < n; k++) {\n                    if (a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        return getMaxTriples(a);", " \
    \       long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n     \
    \       a[i] = i * i - i + 1;\n        }\n        long result = 0;\n        for\
    \ (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        result++;\n       \
    \             }\n                }\n            }\n        }\n        return result;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n - 1; i++) {\n            for(int j = i + 1; j < n; j++) {\n   \
    \             for(int k = j + 1; k < n; k++) {\n                    if(a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n     \
    \       a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n        \
    \            }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        for(long i = 1; i < n; i++) {\n            for(long j = i\
    \ + 1; j < n; j++) {\n                for(long k = j + 1; k < n; k++) {\n    \
    \                if(i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k -\
    \ k + 1) {\n                        max++;\n                    }\n          \
    \      }\n            }\n        }\n        return max;", "        long[] a =\
    \ new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i * i\
    \ - i + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i + 1; j < n; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        max++;\n                    }\n                }\n  \
    \          }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n       \
    \     for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n         \
    \               max++;\n                    }\n                }\n           \
    \ }\n        }\n        return max;", "        long[] a = new long[n];\n     \
    \   for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n       \
    \ }\n        long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n    \
    \        for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j\
    \ + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n - 1; i++) {\n \
    \           for(int j = i + 1; j < n; j++) {\n                for(int k = j +\
    \ 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n  \
    \                      count++;\n                    }\n                }\n  \
    \          }\n        }\n        return count;", "        long max = 0;\n    \
    \    for (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n     \
    \                   max++;\n                    }\n                }\n       \
    \     }\n        }\n        return max;", "        long[] a = new long[n];\n \
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        return getMaxTriples(a);", "        long max = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (i *\
    \ i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n          \
    \              max++;\n                    }\n                }\n            }\n\
    \        }\n        return max;", "        long[] a = new long[n];\n        for(int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ return getMaxTriples(a);", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    max++;\n                    }\n                }\n            }\n       \
    \ }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n            for\
    \ (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n           \
    \             count++;\n                    }\n                }\n           \
    \ }\n        }\n        return count;", "        long max = 0;\n        for (int\
    \ i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (i * i -\
    \ i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n              \
    \          max++;\n                    }\n                }\n            }\n \
    \       }\n        return max;", "        long[] a = new long[n];\n        for(int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j\
    \ = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n \
    \                   if(a[i] + a[j] + a[k] % 3 == 0) {\n                      \
    \  count++;\n                    }\n                }\n            }\n       \
    \ }\n        return count;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    max++;\n                    }\n                }\n            }\n       \
    \ }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    max++;\n                    }\n                }\n            }\n       \
    \ }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    max++;\n                    }\n                }\n            }\n       \
    \ }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    max++;\n                    }\n                }\n            }\n       \
    \ }\n        return max;", "        long[] a = new long[n];\n        for(int i\
    \ = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long\
    \ max = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i +\
    \ 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] % 3 == 0) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for (int i\
    \ = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n        \
    \        for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        for (long i = 1; i <= n; i++) {\n            for (long j =\
    \ i + 1; j <= n; j++) {\n                for (long k = j + 1; k <= n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max = Math.max(max, i * j * k);\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        return getMaxTriples(a);",
  "        long max = 0;\n        for (long i = 1; i < n; i++) {\n            for\
    \ (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n;\
    \ k++) {\n                    if (i * i - i + 1 == j * j - j + 1 && j * j - j\
    \ + 1 == k * k - k + 1) {\n                        max++;\n                  \
    \  }\n                }\n            }\n        }\n        return max;", "   \
    \     long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max = Math.max(max, a[i] * a[j]\
    \ * a[k]);\n                    }\n                }\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        for (int i = 1; i < n;\
    \ i++) {\n            for (int j = i + 1; j < n; j++) {\n                for (int\
    \ k = j + 1; k < n; k++) {\n                    if (i * i - i + 1 == j * j - j\
    \ + 1 && j * j - j + 1 == k * k - k + 1) {\n                        max++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long max = 0;\n   \
    \     for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n\
    \ - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n           \
    \         if (a[i] + a[j] + a[k] % 3 == 0) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        return getMaxTriples(a);",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n           \
    \ a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int i\
    \ = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n         \
    \       for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long max = 0;\n        for (long i = 1; i <= n; i++) {\n            for (long\
    \ j = i + 1; j <= n; j++) {\n                for (long k = j + 1; k <= n; k++)\
    \ {\n                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 ==\
    \ k * k - k + 1) {\n                        max++;\n                    }\n  \
    \              }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i\
    \ + 1;\n        }\n        long count = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i + 1; j < n; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n \
    \                       count++;\n                    }\n                }\n \
    \           }\n        }\n        return count;", "        long max = 0;\n   \
    \     for (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (i * i + j * j + k * k == 3 * (i + j + k)) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long max = 0;\n        for (long i = 1; i <= n; i++) {\n            for\
    \ (long j = i + 1; j <= n; j++) {\n                for (long k = j + 1; k <= n;\
    \ k++) {\n                    if (i * i - i + 1 == j * j - j + 1 && j * j - j\
    \ + 1 == k * k - k + 1) {\n                        max++;\n                  \
    \  }\n                }\n            }\n        }\n        return max;", "   \
    \     long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n - 1; i++) {\n            for(int j = i + 1; j < n; j++) {\n              \
    \  for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;", "        long\
    \ max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j = i\
    \ + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n    \
    \                if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k\
    \ - k + 1) {\n                        max = Math.max(max, i * i + j * j + k *\
    \ k);\n                    }\n                }\n            }\n        }\n  \
    \      return max;", "        long max = 0;\n        for (long i = 1; i < n; i++)\
    \ {\n            for (long j = i + 1; j < n; j++) {\n                for (long\
    \ k = j + 1; k < n; k++) {\n                    if (i * i - i + 1 == j * j - j\
    \ + 1 && j * j - j + 1 == k * k - k + 1) {\n                        max++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n - 1; i++) {\n            for(int j = i + 1; j < n;\
    \ j++) {\n                for(int k = j + 1; k < n; k++) {\n                 \
    \   if(a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long max = 0;\n   \
    \     for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n\
    \ - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n           \
    \         if (a[i] + a[j] + a[k] % 3 == 0) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n       \
    \     for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n         \
    \               max++;\n                    }\n                }\n           \
    \ }\n        }\n        return max;", "        long[] a = new long[n];\n     \
    \   for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n       \
    \ }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n        \
    \                max++;\n                    }\n                }\n          \
    \  }\n        }\n        return max;", "        long max = 0;\n        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] % 3 == 0) {\n                     \
    \   max++;\n                    }\n                }\n            }\n        }\n\
    \        return max;", "        long[] a = new long[n];\n        for(int i = 0;\
    \ i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long count\
    \ = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j\
    \ < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n            \
    \        if(a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n        \
    \            }\n                }\n            }\n        }\n        return count;",
  "        long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n - 2; i++) {\n            for(int j = i + 1; j < n - 1; j++) {\n          \
    \      for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for (int\
    \ i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        max++;\n                \
    \    }\n                }\n            }\n        }\n        return max;", " \
    \       long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int\
    \ i = 0; i < n - 2; i++) {\n            for(int j = i + 1; j < n - 1; j++) {\n\
    \                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        max++;\n                \
    \    }\n                }\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        long[] a = new long[n];\n        for (int i = 0;\
    \ i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long max = 0;\n        for (int i = 0; i < n - 2; i++) {\n \
    \           for (int j = i + 1; j < n - 1; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n       \
    \     for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n         \
    \               max++;\n                    }\n                }\n           \
    \ }\n        }\n        return max;", "        long[] a = new long[n];\n     \
    \   for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n       \
    \ }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n        \
    \                max++;\n                    }\n                }\n          \
    \  }\n        }\n        return max;", "        long[] a = new long[n];\n    \
    \    for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n       \
    \ }\n        long result = 0;\n        for(int i = 0; i < n; i++) {\n        \
    \    for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n         \
    \               result++;\n                    }\n                }\n        \
    \    }\n        }\n        return result;", "        long max = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(i * i - i +\
    \ 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n                  \
    \      max++;\n                    }\n                }\n            }\n     \
    \   }\n        return max;", "        long[] a = new long[n];\n        for(int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j\
    \ = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n \
    \                   if(a[i] + a[j] + a[k] % 3 == 0) {\n                      \
    \  count++;\n                    }\n                }\n            }\n       \
    \ }\n        return count;", "        long[] a = new long[n];\n        for(int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j =\
    \ i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n   \
    \                 if(a[i] + a[j] + a[k] % 3 == 0) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long max = 0;\n   \
    \     for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        max++;\n                \
    \    }\n                }\n            }\n        }\n        return max;", " \
    \       long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i\
    \ + 1;\n        }\n        long count = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i + 1; j < n; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n\
    \            for (int j = i + 1; j < n - 1; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i -\
    \ i + 1;\n        }\n        long count = 0;\n        for (int i = 0; i < n; i++)\
    \ {\n            for (int j = i + 1; j < n; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long max = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j <\
    \ n; j++) {\n                for (long k = j + 1; k < n; k++) {\n            \
    \        if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n - 1; i++) {\n\
    \            for (int j = i + 1; j < n; j++) {\n                for (int k = j\
    \ + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n     \
    \       for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k\
    \ < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n       \
    \                 count++;\n                    }\n                }\n       \
    \     }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n \
    \                       count++;\n                    }\n                }\n \
    \           }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n     \
    \       for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k\
    \ < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n       \
    \                 count++;\n                    }\n                }\n       \
    \     }\n        }\n        return count;", "        long max = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (i *\
    \ i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n          \
    \              max++;\n                    }\n                }\n            }\n\
    \        }\n        return max;", "        long[] a = new long[n];\n        for\
    \ (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n  \
    \      long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    max++;\n                    }\n                }\n            }\n       \
    \ }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n            for\
    \ (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n           \
    \             count++;\n                    }\n                }\n           \
    \ }\n        }\n        return count;", "        long[] a = new long[n];\n   \
    \     for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n     \
    \   }\n        long max = 0;\n        for (int i = 0; i < n - 2; i++) {\n    \
    \        for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j\
    \ + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        max++;\n                    }\n                }\n  \
    \          }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n\
    \            for (int j = i + 1; j < n - 1; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long max = 0;\n\
    \        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n     \
    \       a[i] = i * i - i + 1;\n        }\n        for(int i = 0; i < n; i++) {\n\
    \            for(int j = i + 1; j < n; j++) {\n                for(int k = j +\
    \ 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n  \
    \                      max++;\n                    }\n                }\n    \
    \        }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n - 1; i++) {\n\
    \            for (int j = i + 1; j < n; j++) {\n                for (int k = j\
    \ + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n \
    \                       count++;\n                    }\n                }\n \
    \           }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n    \
    \                    max++;\n                    }\n                }\n      \
    \      }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n \
    \                       count++;\n                    }\n                }\n \
    \           }\n        }\n        return count;", "        long max = 0;\n   \
    \     for (long i = 1; i <= n; i++) {\n            for (long j = i + 1; j <= n;\
    \ j++) {\n                for (long k = j + 1; k <= n; k++) {\n              \
    \      if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n\
    \                        max = Math.max(max, i * j * k);\n                   \
    \ }\n                }\n            }\n        }\n        return max;", "    \
    \    long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n         \
    \   a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n - 1; i++) {\n            for(int j = i + 1; j < n; j++) {\n   \
    \             for(int k = j + 1; k < n; k++) {\n                    if(a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n     \
    \       a[i] = i * i - i + 1;\n        }\n        long result = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        result++;\n             \
    \       }\n                }\n            }\n        }\n        return result;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long max = 0;\n        for(long i = 1; i <= n; i++) {\n            for(long\
    \ j = i + 1; j <= n; j++) {\n                for(long k = j + 1; k <= n; k++)\
    \ {\n                    if(i * i - i + 1 == j * j - j + 1 && j * j - j + 1 ==\
    \ k * k - k + 1) {\n                        max++;\n                    }\n  \
    \              }\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        for(int i = 0; i <\
    \ n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n       \
    \     for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n         \
    \               max++;\n                    }\n                }\n           \
    \ }\n        }\n        return max;", "        long max = 0;\n        for (long\
    \ i = 1; i <= n; i++) {\n            for (long j = i + 1; j <= n; j++) {\n   \
    \             for (long k = j + 1; k <= n; k++) {\n                    if (i *\
    \ i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n          \
    \              max = Math.max(max, i * j * k);\n                    }\n      \
    \          }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n     \
    \           for (int k = j + 1; k < n; k++) {\n                    if (a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n - 2; i++) {\n            for(int j = i + 1; j < n - 1; j++) {\n          \
    \      for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n  \
    \              for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long max = 0;\n        for (int i = 0; i\
    \ < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n               \
    \ for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        max++;\n                    }\n       \
    \         }\n            }\n        }\n        return max;", "        long[] a\
    \ = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i *\
    \ i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i -\
    \ i + 1;\n        }\n        long max = 0;\n        for (int i = 0; i < n - 2;\
    \ i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for\
    \ (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] %\
    \ 3 == 0) {\n                        max++;\n                    }\n         \
    \       }\n            }\n        }\n        return max;", "        long[] a =\
    \ new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i *\
    \ i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for\
    \ (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] %\
    \ 3 == 0) {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n     \
    \           for (int k = j + 1; k < n; k++) {\n                    if (a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long result = 0;\n        for(int\
    \ i = 0; i < n - 2; i++) {\n            for(int j = i + 1; j < n - 1; j++) {\n\
    \                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        result++;\n             \
    \       }\n                }\n            }\n        }\n        return result;",
  "        long max = 0;\n        for (long i = 1; i <= n; i++) {\n            for\
    \ (long j = i + 1; j <= n; j++) {\n                for (long k = j + 1; k <= n;\
    \ k++) {\n                    if (i * i - i + 1 == j * j - j + 1 && j * j - j\
    \ + 1 == k * k - k + 1) {\n                        max++;\n                  \
    \  }\n                }\n            }\n        }\n        return max;", "   \
    \     long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n  \
    \              for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n  \
    \              for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        return getMaxTriples(a);", " \
    \       long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n     \
    \       a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n        \
    \            }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i\
    \ + 1;\n        }\n        long count = 0;\n        for(int i = 0; i < n - 1;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i -\
    \ i + 1;\n        }\n        long count = 0;\n        for (int i = 0; i < n -\
    \ 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n       \
    \     for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n         \
    \               max++;\n                    }\n                }\n           \
    \ }\n        }\n        return max;", "        long[] a = new long[n];\n     \
    \   for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n\
    \        long count = 0;\n        for(int i = 0; i < n - 1; i++) {\n         \
    \   for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n;\
    \ k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n            \
    \            count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;", "        long[] a = new long[n];\n       \
    \ for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n\
    \        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] % 3 == 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        return count;", "        long[] a = new long[n];\n        for(int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long max = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j =\
    \ i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n   \
    \                 if(a[i] + a[j] + a[k] % 3 == 0) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        for (int i = 1; i < n; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k < n; k++) {\n                    if (i * i - i + 1 == j * j - j + 1 && j *\
    \ j - j + 1 == k * k - k + 1) {\n                        max++;\n            \
    \        }\n                }\n            }\n        }\n        return max;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for (int\
    \ i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        max++;\n                \
    \    }\n                }\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        for (int i = 1; i < n; i++) {\n            for\
    \ (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)\
    \ {\n                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 ==\
    \ k * k - k + 1) {\n                        max++;\n                    }\n  \
    \              }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for(int i = 0; i <\
    \ n - 2; i++) {\n            for(int j = i + 1; j < n - 1; j++) {\n          \
    \      for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n  \
    \              for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] + a[j] + a[k] % 3 == 0) {\n                        count++;\n        \
    \            }\n                }\n            }\n        }\n        return count;",
  "        long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i + j * j + k * k == 3 * n) {\n                 \
    \       max++;\n                    }\n                }\n            }\n    \
    \    }\n        return max;", "        long[] a = new long[n];\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n       \
    \ long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    count++;\n                    }\n                }\n            }\n     \
    \   }\n        return count;", "        long max = 0;\n        for (int i = 1;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (i * i - i + 1 ==\
    \ j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n                       \
    \ max++;\n                    }\n                }\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        for (int i = 1; i <= n;\
    \ i++) {\n            for (int j = i + 1; j <= n; j++) {\n                for\
    \ (int k = j + 1; k <= n; k++) {\n                    if (i * i - i + 1 == j *\
    \ j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n                        max++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        for(int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n\
    \                for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        count++;\n              \
    \      }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long result = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n \
    \               for (int k = j + 1; k < n; k++) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        result++;\n             \
    \       }\n                }\n            }\n        }\n        return result;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n - 1; i++) {\n            for(int j = i + 1; j < n; j++) {\n   \
    \             for(int k = j + 1; k < n; k++) {\n                    if(a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n      \
    \      a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3 * a[i] * a[j] * a[k]) {\n                        count++;\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ count;", "        long max = 0;\n        for (long i = 1; i < n; i++) {\n  \
    \          for (long j = i + 1; j < n; j++) {\n                for (long k = j\
    \ + 1; k < n; k++) {\n                    if (i * i - i + 1 == j * j - j + 1 &&\
    \ j * j - j + 1 == k * k - k + 1) {\n                        max++;\n        \
    \            }\n                }\n            }\n        }\n        return max;",
  "        long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n       \
    \     a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n       \
    \         for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        return getMaxTriples(a);", "    \
    \    long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n     \
    \           for (int k = j + 1; k < n; k++) {\n                    if (a[i] +\
    \ a[j] + a[k] % 3 == 0) {\n                        count++;\n                \
    \    }\n                }\n            }\n        }\n        return count;", " \
    \       long max = 0;\n        for(long i = 1; i <= n; i++) {\n            for(long\
    \ j = i + 1; j <= n; j++) {\n                for(long k = j + 1; k <= n; k++)\
    \ {\n                    if(i * i - i + 1 == j * j - j + 1 && j * j - j + 1 ==\
    \ k * k - k + 1) {\n                        max++;\n                    }\n  \
    \              }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n         \
    \       for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n           \
    \ a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int i\
    \ = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n         \
    \       for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k\
    \ * k - k + 1) {\n                        max++;\n                    }\n    \
    \            }\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j = i\
    \ + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n    \
    \                if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k\
    \ - k + 1) {\n                        max++;\n                    }\n        \
    \        }\n            }\n        }\n        return max;", "        long[] a\
    \ = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0; i\
    \ < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n       \
    \         for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for (int i\
    \ = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n        \
    \        for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        max++;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n         \
    \       for (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n           \
    \ a[i] = i * i - i + 1;\n        }\n        long count = 0;\n        for(int i\
    \ = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n         \
    \       for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n           \
    \ a[i] = i * i - i + 1;\n        }\n        return getMaxTriples(a);", "     \
    \   long[] a = new long[n];\n        for(int i = 0; i < n; i++) {\n          \
    \  a[i] = i * i - i + 1;\n        }\n        long max = 0;\n        for(int i\
    \ = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n         \
    \       for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] +\
    \ a[k] % 3 == 0) {\n                        max++;\n                    }\n  \
    \              }\n            }\n        }\n        return max;", "        long[]\
    \ a = new long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i\
    \ * i - i + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        max++;\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n    \
    \                    max++;\n                    }\n                }\n      \
    \      }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n   \
    \     }\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n     \
    \       for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k\
    \ < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n       \
    \                 count++;\n                    }\n                }\n       \
    \     }\n        }\n        return count;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n    \
    \                    max++;\n                    }\n                }\n      \
    \      }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n - 2; i++) {\n\
    \            for (int j = i + 1; j < n - 1; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] % 3 == 0)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long[] a = new\
    \ long[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = i * i - i\
    \ + 1;\n        }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n\
    \            for(int j = i + 1; j < n; j++) {\n                for(int k = j +\
    \ 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] % 3 == 0) {\n  \
    \                      max = Math.max(max, a[i] * a[j] * a[k]);\n            \
    \        }\n                }\n            }\n        }\n        return max;"]
stop_tokens:
- "\n    }\n"

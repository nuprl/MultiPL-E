name: HumanEval_156_int_to_mini_roman
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a positive integer, obtain its roman numeral equivalent\
  \ as a string,\n    // and return it in lowercase.\n    // Restrictions: 1 <= num\
  \ <= 1000\n    // Examples:\n    // >>> int_to_mini_roman(19)\n    // 'xix'\n  \
  \  // >>> int_to_mini_roman(152)\n    // 'clii'\n    // >>> int_to_mini_roman(426)\n\
  \    // 'cdxxvi'\n    public static String intToMiniRoman(long number) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(intToMiniRoman((19l)).equals((\"\
  xix\")));\n    assert(intToMiniRoman((152l)).equals((\"clii\")));\n    assert(intToMiniRoman((251l)).equals((\"\
  ccli\")));\n    assert(intToMiniRoman((426l)).equals((\"cdxxvi\")));\n    assert(intToMiniRoman((500l)).equals((\"\
  d\")));\n    assert(intToMiniRoman((1l)).equals((\"i\")));\n    assert(intToMiniRoman((4l)).equals((\"\
  iv\")));\n    assert(intToMiniRoman((43l)).equals((\"xliii\")));\n    assert(intToMiniRoman((90l)).equals((\"\
  xc\")));\n    assert(intToMiniRoman((94l)).equals((\"xciv\")));\n    assert(intToMiniRoman((532l)).equals((\"\
  dxxxii\")));\n    assert(intToMiniRoman((900l)).equals((\"cm\")));\n    assert(intToMiniRoman((994l)).equals((\"\
  cmxciv\")));\n    assert(intToMiniRoman((1000l)).equals((\"m\")));\n    }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        int[] digits\
    \ = new int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2]\
    \ = 10;\n        digits[3] = 50;\n        int i = 0;\n        while (number >\
    \ 0) {\n            int digit = (int) (number % 10);\n            sb.append(digits[i]);\n\
    \            number /= 10;\n            i++;\n            if (i == 4) {\n    \
    \            i = 0;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   sb.append(romanDigits[digits[i] - 1]);\n            }\n        }\n       \
    \ return sb.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = number;\n        while (n > 0) {\n            long digit = n\
    \ % 10;\n            if (digit == 4) {\n                sb.append(\"cd\");\n \
    \           } else if (digit == 9) {\n                sb.append(\"cm\");\n   \
    \         } else if (digit == 5) {\n                sb.append(\"xd\");\n     \
    \       } else if (digit == 8) {\n                sb.append(\"xc\");\n       \
    \     } else if (digit == 1) {\n                sb.append(\"x\");\n          \
    \  } else if (digit == 2) {\n                sb.append(\"ii\");\n            }\
    \ else if (digit == 3) {\n                sb.append(\"ix\");\n            } else\
    \ if (digit == 0) {\n                sb.append(\"i\");\n            } else {\n\
    \                sb.append(digit);\n            }\n            n /= 10;\n    \
    \    }\n        return sb.toString().toLowerCase();", "        StringBuilder sb\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] == 0) {\n                continue;\n     \
    \       }\n            if (digits[i] == 1) {\n                sb.append(\"i\"\
    );\n            } else if (digits[i] == 2) {\n                sb.append(\"ii\"\
    );\n            } else if (digits[i] == 3) {\n                sb.append(\"iii\"\
    );\n            } else if (digits[i] == 4) {\n                sb.append(\"iv\"\
    );\n            } else if (digits[i] == 5) {\n                sb.append(\"v\"\
    );\n            } else if (digits[i] == 6) {\n                sb.append(\"vi\"\
    );\n            } else if (digits[i] == 7) {\n                sb.append(\"vii\"\
    );\n            } else if (digits[i] == 8) {\n                sb.append(\"viii\"\
    );\n            } else if (digits[i] == 9) {\n                sb.append(\"ix\"\
    );\n            } else if (digits[i] == 10) {\n                sb.append(\"x\"\
    );\n            } else if (digits[i] == 11) {\n                sb.append(\"xi\"\
    );\n            } else if (digits[i] == 12) {\n                sb.append(\"xii\"\
    );\n            } else if (digits[i] == 13) {\n                sb.append(\"xiii\"\
    );\n            } else if (digits[i] == 14) {\n                sb.append(\"xiv\"\
    );\n            } else if (digits[i] == 15) {\n                sb.append(\"xv\"\
    );\n            } else if (digits[i] == 16) {\n                sb.append(\"xvi\"\
    );\n            } else if (digits[i]", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            digits[i] = (int) (number / roman[i]);\n            number\
    \ -= digits[i] * roman[i];\n        }\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                result.append(digits[i]);\n\
    \                if (i < digits.length - 1) {\n                    result.append(roman[i]);\n\
    \                }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int n = (int) number;\n\
    \        int i = 0;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            if (digit == 0) {\n                sb.append(\"\");\n           \
    \ } else if (digit == 1) {\n                sb.append(\"i\");\n            } else\
    \ if (digit == 2) {\n                sb.append(\"ii\");\n            } else if\
    \ (digit == 3) {\n                sb.append(\"iii\");\n            } else if (digit\
    \ == 4) {\n                sb.append(\"iv\");\n            } else if (digit ==\
    \ 5) {\n                sb.append(\"v\");\n            } else if (digit == 6)\
    \ {\n                sb.append(\"vi\");\n            } else if (digit == 7) {\n\
    \                sb.append(\"vii\");\n            } else if (digit == 8) {\n \
    \               sb.append(\"viii\");\n            } else if (digit == 9) {\n \
    \               sb.append(\"ix\");\n            }\n            n = n / 10;\n \
    \           i++;\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int) number;\n        int[]\
    \ digits = new int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n     \
    \   digits[2] = 10;\n        digits[3] = 50;\n        int i = 0;\n        while\
    \ (num > 0) {\n            if (num >= digits[i]) {\n                result.append(digits[i]);\n\
    \                num -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 0;\n        digits[1] = 1;\n        digits[2] = 2;\n    \
    \    digits[3] = 3;\n        int i = 0;\n        while (number > 0) {\n      \
    \      int digit = (int) (number % 10);\n            sb.append(digits[digit]);\n\
    \            number /= 10;\n            i++;\n            if (i == 4) {\n    \
    \            i = 0;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder result = new StringBuilder();\n        long num = number;\n\
    \        while (num > 0) {\n            int digit = (int) (num % 10);\n      \
    \      result.append(roman_digits[digit]);\n            num /= 10;\n        }\n\
    \        return result.toString().toLowerCase();", "        StringBuilder sb =\
    \ new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                sb.append(roman_digits[digits[i]]);\n\
    \            }\n        }\n        return sb.toString().toLowerCase();", "   \
    \     StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] roman_digits = {1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1};\n        int digit = 0;\n        int roman_digit = 0;\n   \
    \     while (number > 0) {\n            digit = (int) (number % 10);\n       \
    \     roman_digit = roman[digit];\n            result.append(roman_digits[roman_digit]);\n\
    \            number = number / 10;\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = new int[4];\n        digits[0] = 1000;\n        digits[1]\
    \ = 900;\n        digits[2] = 500;\n        digits[3] = 100;\n        int i =\
    \ 0;\n        while (num > 0) {\n            int digit = num % 10;\n         \
    \   num = num / 10;\n            sb.append(digits[i]);\n            if (digit\
    \ != 0) {\n                sb.append(digit);\n            }\n            i++;\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int num = (int)number;\n        int[] digits = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman = new int[]\
    \ {'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n \
    \       for (int i = 0; i < digits.length; i++) {\n            while (num >= digits[i])\
    \ {\n                sb.append(roman[i]);\n                num -= digits[i];\n\
    \            }\n        }\n        return sb.toString().toLowerCase();", "   \
    \     StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   sb.append(roman_digits[digits[i]]);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        int[]\
    \ digits = new int[4];\n        int[] roman = new int[] {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            digits[i] = number % 10;\n            number /= 10;\n  \
    \      }\n        for (int i = 0; i < digits.length; i++) {\n            for (int\
    \ j = 0; j < roman.length; j++) {\n                if (digits[i] == roman[j])\
    \ {\n                    sb.append(roman[j]);\n                    break;\n  \
    \              }\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder roman = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        int i = 0;\n        while (number > 0)\
    \ {\n            if (number >= digits[i]) {\n                roman.append(digits[i]);\n\
    \                number -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return roman.toString().toLowerCase();", " \
    \       StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % 10);\n            sb.append(digits[digit]);\n            number /=\
    \ 10;\n        }\n        return sb.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ roman_digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n   \
    \     int i = 0;\n        while (number > 0) {\n            digits[i] = (int)\
    \ (number % roman_digits[i]);\n            number /= roman_digits[i];\n      \
    \      i++;\n        }\n        for (int j = 0; j < digits.length; j++) {\n  \
    \          for (int k = 0; k < digits.length - j; k++) {\n                if (digits[k]\
    \ == roman[j]) {\n                    result.append(\"M\");\n                }\
    \ else if (digits[k] == roman[j] + 1) {\n                    result.append(\"\
    CM\");\n                } else if (digits[k] == roman[j] + 2) {\n            \
    \        result.append(\"D\");\n                } else if (digits[k] == roman[j]\
    \ + 3) {\n                    result.append(\"CD\");\n                } else if\
    \ (digits[k] == roman[j] + 4) {\n                    result.append(\"C\");\n \
    \               } else if (digits[k] == roman[j] + 5) {\n                    result.append(\"\
    XC\");\n                } else if (digits[k] == roman[j] + 6) {\n            \
    \        result.append(\"L\");\n                } else if (digits[k] == roman[j]\
    \ + 7) {\n                    result.append(\"XL\");\n                } else if\
    \ (digits[k] == roman[j] + 8) {\n                    result.append(\"L\");\n \
    \               } else if (digits[k] == roman[j] + 9) {\n                    result.append(\"\
    XC\");\n                } else if (digits[k] == roman[j] + 10) {\n           \
    \         result.append(\"C\");\n                } else if (digits[", "      \
    \  StringBuilder roman = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 0;\n        digits[1] = 1;\n        digits[2] = 2;\n    \
    \    digits[3] = 3;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % 10);\n            roman.append(digits[digit]);\n            number\
    \ /= 10;\n        }\n        return roman.reverse().toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ roman_digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n   \
    \     int[] roman_digits_rev = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900,\
    \ 1000};\n        int[] digits_rev = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};\n\
    \        int[] digits_rev_2 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};\n\
    \        int[] digits_rev_3 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15};\n        int[] digits_rev_4 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16};\n        int[] digits_rev_5 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17};\n        int[] digits_rev_6 = {1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18};\n        int[] digits_rev_7 = {1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19};\n        int[]\
    \ digits_rev_8 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20};\n        int[] digits_rev_9 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] digits_reverse = new int[4];\n        digits[0] = number\
    \ % 10;\n        digits[1] = number / 10 % 10;\n        digits[2] = number / 100\
    \ % 10;\n        digits[3] = number / 1000 % 10;\n        digits_reverse[3] =\
    \ number / 10000 % 10;\n        digits_reverse[2] = number / 100000 % 10;\n  \
    \      digits_reverse[1] = number / 1000000 % 10;\n        digits_reverse[0] =\
    \ number / 10000000 % 10;\n        for (int i = 0; i < 4; i++) {\n           \
    \ if (digits[i] != 0) {\n                result.append(digits_reverse[i]);\n \
    \           }\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] roman_numerals = {1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev = {1,\
    \ 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900};\n        int[] roman_numerals_rev_2\
    \ = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
    \ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\
    \ 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\
    \ 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,\
    \ 98, 99, 100};\n        int[] roman_numerals_rev_3 = {1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98", "        StringBuilder\
    \ result = new StringBuilder();\n        long num = number;\n        while (num\
    \ > 0) {\n            long digit = num % 10;\n            if (digit == 1) {\n\
    \                result.append(\"I\");\n            } else if (digit == 2) {\n\
    \                result.append(\"II\");\n            } else if (digit == 3) {\n\
    \                result.append(\"III\");\n            } else if (digit == 4) {\n\
    \                result.append(\"IV\");\n            } else if (digit == 5) {\n\
    \                result.append(\"V\");\n            } else if (digit == 6) {\n\
    \                result.append(\"VI\");\n            } else if (digit == 7) {\n\
    \                result.append(\"VII\");\n            } else if (digit == 8) {\n\
    \                result.append(\"VIII\");\n            } else if (digit == 9)\
    \ {\n                result.append(\"IX\");\n            } else if (digit == 10)\
    \ {\n                result.append(\"X\");\n            } else if (digit == 11)\
    \ {\n                result.append(\"XI\");\n            } else if (digit == 12)\
    \ {\n                result.append(\"XII\");\n            } else if (digit ==\
    \ 13) {\n                result.append(\"XIII\");\n            } else if (digit\
    \ == 14) {\n                result.append(\"XIV\");\n            } else if (digit\
    \ == 15) {\n                result.append(\"XV\");\n            } else if (digit\
    \ == 16) {\n                result.append(\"XVI\");\n            } else if (digit\
    \ == 17) {\n                result.append(\"XVII\");\n            } else if (digit\
    \ == 18) {\n                result.append(\"XVIII\");\n            } else if (digit\
    \ == 19) {\n                result.append(\"XIX\");\n            } else if (digit\
    \ == 20) {\n                result.append(\"XX\");\n            } else if (digit\
    \ == 21) {\n                result.append(\"XXI\");\n            } else if (digit\
    \ == 22) {\n                result.append(\"XXII\");\n            } else if (digit\
    \ == 23) {\n                result.append(\"XXIII\");\n            } else if (digit\
    \ == 24) {\n                result.append(\"XXIV\");\n            } else if (digit\
    \ == 25", "        StringBuilder result = new StringBuilder();\n        int[]\
    \ digits = new int[4];\n        int[] roman = {1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1};\n        int i = 0;\n        while (number > 0) {\n   \
    \         digits[i] = number % 10;\n            number /= 10;\n            i++;\n\
    \        }\n        for (int j = 0; j < digits.length; j++) {\n            for\
    \ (int k = 0; k < roman.length; k++) {\n                if (digits[j] == roman[k])\
    \ {\n                    result.append(roman[k]);\n                    break;\n\
    \                }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n            while\
    \ (num >= digits[i]) {\n                result.append(\"M\");\n              \
    \  num -= digits[i];\n            }\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        for (int i = 0; i < digits.length; i++) {\n            while (num >=\
    \ digits[i]) {\n                sb.append(roman[i]);\n                num -= digits[i];\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n \
    \       int[] roman_digits = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1};\n        int[] roman_digits_rev = new int[]{1, 4, 5, 9, 10, 40,\
    \ 50, 90, 100, 400, 500, 900, 1000};\n        int[] digits_rev = new int[]{1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] digits_rev_2\
    \ = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n       \
    \ int[] digits_rev_3 = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] digits_rev_4 = new int[]{1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] digits_rev_5 = new int[]{1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] digits_rev_6 = new\
    \ int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ digits_rev_7 = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4,\
    \ 1};\n        int[] digits_rev_8 = new int[]{1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1};\n        int[] digits_rev_9 = new int[]{1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] digits_rev_10 = new int[]{1000",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = number % 10;\n        number /= 10;\n        digits[1]\
    \ = number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n  \
    \      number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   result.append(romanDigits[digits[i]]);\n            }\n        }\n       \
    \ return result.toString().toLowerCase();", "        StringBuilder result = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        for (int i = 0;\
    \ i < 4; i++) {\n            digits[i] = number % 10;\n            number /= 10;\n\
    \        }\n        for (int i = 0; i < 4; i++) {\n            if (digits[i] !=\
    \ 0) {\n                result.append(roman_digits[digits[i]]);\n            }\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        digits[0] = number\
    \ % 10;\n        number /= 10;\n        digits[1] = number % 10;\n        number\
    \ /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n        digits[3]\
    \ = number % 10;\n        for (int i = 0; i < digits.length; i++) {\n        \
    \    if (digits[i] == 0) {\n                continue;\n            }\n       \
    \     if (digits[i] == 1) {\n                sb.append(\"i\");\n            }\
    \ else if (digits[i] == 2) {\n                sb.append(\"ii\");\n           \
    \ } else if (digits[i] == 3) {\n                sb.append(\"iii\");\n        \
    \    } else if (digits[i] == 4) {\n                sb.append(\"iv\");\n      \
    \      } else if (digits[i] == 5) {\n                sb.append(\"v\");\n     \
    \       } else if (digits[i] == 6) {\n                sb.append(\"vi\");\n   \
    \         } else if (digits[i] == 7) {\n                sb.append(\"vii\");\n\
    \            } else if (digits[i] == 8) {\n                sb.append(\"viii\"\
    );\n            } else if (digits[i] == 9) {\n                sb.append(\"ix\"\
    );\n            } else if (digits[i] == 10) {\n                sb.append(\"x\"\
    );\n            } else if (digits[i] == 11) {\n                sb.append(\"xi\"\
    );\n            } else if (digits[i] == 12) {\n                sb.append(\"xii\"\
    );\n            } else if (digits[i] == 13) {\n                sb.append(\"xiii\"\
    );\n            } else if (digits[i] == 14) {\n                sb.append(\"xiv\"\
    );\n            } else if (digits[i] == 15) {\n                sb.append(\"xv\"\
    );\n            } else if (digits[i] == 16) {\n                sb.append(\"xvi\"\
    );\n            } else if (digits[i]", "        StringBuilder sb = new StringBuilder();\n\
    \        int num = (int) number;\n        int[] digits = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            int digit = num / digits[i];\n            if (digit > 0)\
    \ {\n                sb.append(digit);\n                num -= digit * digits[i];\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int) number;\n        if (num\
    \ == 0) {\n            return \"\";\n        }\n        if (num < 0) {\n     \
    \       return \"\";\n        }\n        if (num < 10) {\n            result.append(num);\n\
    \            return result.toString();\n        }\n        if (num < 100) {\n\
    \            result.append(\"x\");\n            num -= 10;\n        }\n      \
    \  if (num < 1000) {\n            result.append(\"c\");\n            num -= 100;\n\
    \        }\n        if (num < 1000) {\n            result.append(\"l\");\n   \
    \         num -= 100;\n        }\n        if (num < 1000) {\n            result.append(\"\
    d\");\n            num -= 10;\n        }\n        if (num < 1000) {\n        \
    \    result.append(\"x\");\n            num -= 10;\n        }\n        if (num\
    \ < 1000) {\n            result.append(\"v\");\n            num -= 1;\n      \
    \  }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        int num = (int)number;\n        int[] digits = {1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman = {'M',\
    \ 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n       \
    \ int i = 0;\n        while(num > 0) {\n            int digit = num % 10;\n  \
    \          result.append(roman[i]);\n            num /= 10;\n            i++;\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        int[] roman =\
    \ new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ digits_rev = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900};\n \
    \       int i = 0;\n        while (number > 0) {\n            digits[i] = (int)\
    \ (number % 10);\n            number /= 10;\n            i++;\n        }\n   \
    \     for (int j = 0; j < digits.length; j++) {\n            if (digits[j] !=\
    \ 0) {\n                sb.append(roman[digits[j] - 1]);\n            }\n    \
    \    }\n        for (int j = 0; j < digits.length; j++) {\n            if (digits[j]\
    \ != 0) {\n                sb.append(roman_rev[digits_rev[j]]);\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n        int i = 0;\n\
    \        while (number > 0) {\n            int digit = (int) (number % digits[i]);\n\
    \            sb.append(digit);\n            number /= digits[i];\n           \
    \ i++;\n        }\n        return sb.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        long num = number;\n        while (num > 0)\
    \ {\n            int digit = (int) (num % 10);\n            if (digit == 1) {\n\
    \                result.append(\"I\");\n            } else if (digit == 2) {\n\
    \                result.append(\"II\");\n            } else if (digit == 3) {\n\
    \                result.append(\"III\");\n            } else if (digit == 4) {\n\
    \                result.append(\"IV\");\n            } else if (digit == 5) {\n\
    \                result.append(\"V\");\n            } else if (digit == 6) {\n\
    \                result.append(\"VI\");\n            } else if (digit == 7) {\n\
    \                result.append(\"VII\");\n            } else if (digit == 8) {\n\
    \                result.append(\"VIII\");\n            } else if (digit == 9)\
    \ {\n                result.append(\"IX\");\n            } else if (digit == 10)\
    \ {\n                result.append(\"X\");\n            } else if (digit == 11)\
    \ {\n                result.append(\"XI\");\n            } else if (digit == 12)\
    \ {\n                result.append(\"XII\");\n            } else if (digit ==\
    \ 13) {\n                result.append(\"XIII\");\n            } else if (digit\
    \ == 14) {\n                result.append(\"XIV\");\n            } else if (digit\
    \ == 15) {\n                result.append(\"XV\");\n            } else if (digit\
    \ == 16) {\n                result.append(\"XVI\");\n            } else if (digit\
    \ == 17) {\n                result.append(\"XVII\");\n            } else if (digit\
    \ == 18) {\n                result.append(\"XVIII\");\n            } else if (digit\
    \ == 19) {\n                result.append(\"XIX\");\n            } else if (digit\
    \ == 20) {\n                result.append(\"XX\");\n            } else if (digit\
    \ == 21) {\n                result.append(\"XXI\");\n            } else if (digit\
    \ == 22) {\n                result.append(\"XXII\");\n            } else if (digit\
    \ == 23) {\n                result.append(\"XXIII\");\n            } else if (digit\
    \ == 24) {\n                result.append(\"XXIV\");\n            } else if",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int[] roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] roman_digits = new int[] {1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_rev = new int[] {1,\
    \ 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        int i = 0;\n  \
    \      while (number > 0) {\n            if (number >= roman_digits[i]) {\n  \
    \              digits[i] = number % roman_digits[i];\n                number =\
    \ number / roman_digits[i];\n            } else {\n                digits[i] =\
    \ number;\n                number = 0;\n            }\n            i++;\n    \
    \    }\n        for (i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ != 0) {\n                sb.append(roman_digits_rev[digits[i]]);\n         \
    \   }\n        }\n        return sb.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        int[] roman\
    \ = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n      \
    \  for (int i = 0; i < digits.length; i++) {\n            digits[i] = number %\
    \ roman[i];\n            number /= roman[i];\n        }\n        for (int i =\
    \ digits.length - 1; i >= 0; i--) {\n            if (digits[i] != 0) {\n     \
    \           result.append(digits[i]);\n            }\n        }\n        return\
    \ result.toString().toLowerCase();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int i = 0;\n        while (number\
    \ > 0) {\n            digits[i] = number % 10;\n            number /= 10;\n  \
    \          i++;\n        }\n        for (int j = 0; j < digits.length; j++) {\n\
    \            int digit = digits[j];\n            if (digit == 1) {\n         \
    \       result.append(\"i\");\n            } else if (digit == 2) {\n        \
    \        result.append(\"ii\");\n            } else if (digit == 3) {\n      \
    \          result.append(\"iii\");\n            } else if (digit == 4) {\n   \
    \             result.append(\"iv\");\n            } else if (digit == 5) {\n \
    \               result.append(\"v\");\n            } else if (digit == 6) {\n\
    \                result.append(\"vi\");\n            } else if (digit == 7) {\n\
    \                result.append(\"vii\");\n            } else if (digit == 8) {\n\
    \                result.append(\"viii\");\n            } else if (digit == 9)\
    \ {\n                result.append(\"ix\");\n            } else if (digit == 10)\
    \ {\n                result.append(\"x\");\n            } else if (digit == 11)\
    \ {\n                result.append(\"xi\");\n            } else if (digit == 12)\
    \ {\n                result.append(\"xii\");\n            } else if (digit ==\
    \ 13) {\n                result.append(\"xiii\");\n            } else if (digit\
    \ == 14) {\n                result.append(\"xiv\");\n            } else if (digit\
    \ == 15) {\n                result.append(\"xv\");\n            } else if (digit\
    \ == 16) {\n                result.append(\"xvi\");\n            } else if (digit\
    \ == 17) {\n                result.append(\"xvii\");\n            } else if (digit\
    \ == 18) {\n                result.append(\"xviii\");\n            } else if (digit\
    \ == 19) {\n                result.append(\"xix\");\n            } else if (digit\
    \ == 20) {\n                result.append(\"xx\");\n            } else if (digit\
    \ == 30) {\n                result.append(\"xxi\");\n            } else if (digit\
    \ == 40) {\n                ", "        StringBuilder sb = new StringBuilder();\n\
    \        if (number == 0) {\n            sb.append(\"\");\n        } else if (number\
    \ == 1) {\n            sb.append(\"i\");\n        } else if (number == 2) {\n\
    \            sb.append(\"ii\");\n        } else if (number == 3) {\n         \
    \   sb.append(\"iii\");\n        } else if (number == 4) {\n            sb.append(\"\
    iv\");\n        } else if (number == 5) {\n            sb.append(\"v\");\n   \
    \     } else if (number == 6) {\n            sb.append(\"vi\");\n        } else\
    \ if (number == 7) {\n            sb.append(\"vii\");\n        } else if (number\
    \ == 8) {\n            sb.append(\"viii\");\n        } else if (number == 9) {\n\
    \            sb.append(\"ix\");\n        } else if (number == 10) {\n        \
    \    sb.append(\"x\");\n        } else if (number == 11) {\n            sb.append(\"\
    xi\");\n        } else if (number == 12) {\n            sb.append(\"xii\");\n\
    \        } else if (number == 13) {\n            sb.append(\"xiii\");\n      \
    \  } else if (number == 14) {\n            sb.append(\"xiv\");\n        } else\
    \ if (number == 15) {\n            sb.append(\"xv\");\n        } else if (number\
    \ == 16) {\n            sb.append(\"xvi\");\n        } else if (number == 17)\
    \ {\n            sb.append(\"xvii\");\n        } else if (number == 18) {\n  \
    \          sb.append(\"xviii\");\n        } else if (number == 19) {\n       \
    \     sb.append(\"xix\");\n        } else if (number == 20) {\n            sb.append(\"\
    xx\");\n        } else if (number == 30) {\n            sb.append(\"xxx\");\n\
    \        } else if (number == 40) {\n            sb.append(\"xl\");\n        }\
    \ else if (number == 50) {\n            sb.append(\"l\");\n        } else if (number\
    \ == 60) {\n            sb.append(\"lx\");\n        } else if (number == 70) {\n\
    \            sb.append", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ != 0) {\n                result.append(roman_digits[digits[i]]);\n         \
    \   }\n        }\n        return result.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int\
    \ i = 0;\n        while (number > 0) {\n            digits[i] = number % 10;\n\
    \            number /= 10;\n            i++;\n        }\n        for (int j =\
    \ 0; j < i; j++) {\n            switch (digits[i - j - 1]) {\n               \
    \ case 1:\n                    result.append(\"i\");\n                    break;\n\
    \                case 2:\n                    result.append(\"ii\");\n       \
    \             break;\n                case 3:\n                    result.append(\"\
    iii\");\n                    break;\n                case 4:\n               \
    \     result.append(\"iv\");\n                    break;\n                case\
    \ 5:\n                    result.append(\"v\");\n                    break;\n\
    \                case 6:\n                    result.append(\"vi\");\n       \
    \             break;\n                case 7:\n                    result.append(\"\
    vii\");\n                    break;\n                case 8:\n               \
    \     result.append(\"viii\");\n                    break;\n                case\
    \ 9:\n                    result.append(\"ix\");\n                    break;\n\
    \                case 10:\n                    result.append(\"x\");\n       \
    \             break;\n                case 11:\n                    result.append(\"\
    xi\");\n                    break;\n                case 12:\n               \
    \     result.append(\"xii\");\n                    break;\n                case\
    \ 13:\n                    result.append(\"xiii\");\n                    break;\n\
    \                case 14:\n                    result.append(\"xiv\");\n     \
    \               break;\n                case 15:\n                    result.append(\"\
    xv\");\n                    break;\n                case 16:\n               \
    \     result.append(\"xvi\");\n                    break;\n                case\
    \ 17:\n                    result.append(\"xvii\");\n                    break;\n\
    \                case 18:\n                    result.append(\"xviii\");\n   \
    \                 break;\n                case 19:\n                    result.append(\"\
    xix\");\n                    break;\n                case 20:\n              \
    \      result.append(\"xx\");\n                    break;\n                case\
    \ 21:\n                    result.append(\"xxi\");\n                    break;\n\
    \                case 22:\n                    result.append(\"xxii\");\n    \
    \                break;\n                case 23:\n                    result.append(\"\
    xxiii\");\n                    break;\n                case 24:\n            \
    \        result.append(\"xxiv\");", "        StringBuilder result = new StringBuilder();\n\
    \        long num = number;\n        while (num > 0) {\n            long digit\
    \ = num % 10;\n            if (digit == 1) {\n                result.append(\"\
    I\");\n            } else if (digit == 2) {\n                result.append(\"\
    II\");\n            } else if (digit == 3) {\n                result.append(\"\
    III\");\n            } else if (digit == 4) {\n                result.append(\"\
    IV\");\n            } else if (digit == 5) {\n                result.append(\"\
    V\");\n            } else if (digit == 6) {\n                result.append(\"\
    VI\");\n            } else if (digit == 7) {\n                result.append(\"\
    VII\");\n            } else if (digit == 8) {\n                result.append(\"\
    VIII\");\n            } else if (digit == 9) {\n                result.append(\"\
    IX\");\n            } else if (digit == 0) {\n                result.append(\"\
    X\");\n            }\n            num /= 10;\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int)number;\n\
    \        int rem = 0;\n        while (num > 0) {\n            rem = num % 10;\n\
    \            if (rem == 1) {\n                sb.append(\"I\");\n            }\
    \ else if (rem == 2) {\n                sb.append(\"II\");\n            } else\
    \ if (rem == 3) {\n                sb.append(\"III\");\n            } else if\
    \ (rem == 4) {\n                sb.append(\"IV\");\n            } else if (rem\
    \ == 5) {\n                sb.append(\"V\");\n            } else if (rem == 6)\
    \ {\n                sb.append(\"VI\");\n            } else if (rem == 7) {\n\
    \                sb.append(\"VII\");\n            } else if (rem == 8) {\n   \
    \             sb.append(\"VIII\");\n            } else if (rem == 9) {\n     \
    \           sb.append(\"IX\");\n            } else if (rem == 0) {\n         \
    \       sb.append(\"X\");\n            }\n            num = num / 10;\n      \
    \  }\n        return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit = {1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_2 = {1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_3\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_4\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_5\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_6\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_7\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_8\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_9\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_10\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_11\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_12\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]", " \
    \       StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] digits_reverse = new int[4];\n        int[] digits_reverse_copy\
    \ = new int[4];\n        int[] digits_copy = new int[4];\n        int[] digits_copy_reverse\
    \ = new int[4];\n        int[] digits_copy_reverse_copy = new int[4];\n      \
    \  int[] digits_copy_copy = new int[4];\n        int[] digits_copy_copy_reverse\
    \ = new int[4];\n        int[] digits_copy_copy_reverse_copy = new int[4];\n \
    \       int[] digits_copy_copy_copy = new int[4];\n        int[] digits_copy_copy_copy_reverse\
    \ = new int[4];\n        int[] digits_copy_copy_copy_reverse_copy = new int[4];\n\
    \        int[] digits_copy_copy_copy_copy = new int[4];\n        int[] digits_copy_copy_copy_copy_reverse\
    \ = new int[4];\n        int[] digits_copy_copy_copy_copy_reverse_copy = new int[4];\n\
    \        int[] digits_copy_copy_copy_copy_copy = new int[4];\n        int[] digits_copy_copy_copy_copy_copy_reverse\
    \ = new int[4];\n        int[] digits_copy_copy_copy_copy_copy_reverse_copy =\
    \ new int[4];\n        int[] digits_copy_copy_copy_copy_copy_copy = new int[4];\n\
    \        int[] digits_copy_copy_copy_copy_copy_copy_reverse = new int[4];\n  \
    \      int[] digits_copy_copy_copy_copy_copy_copy_reverse_copy = new int[4];\n\
    \        int[] digits_copy_copy_copy_copy_copy_copy_copy = new int[4];\n     \
    \   int[] digits_copy_copy_copy_copy_copy_copy_copy_reverse = new int[4];\n  \
    \      int[] digits_copy_copy_copy_copy_copy_copy_copy_reverse_copy = new int[4];\n\
    \        int[] digits_copy_copy_copy_copy_copy_copy_copy_copy = new", "      \
    \  StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        int digit = 0;\n        while (number > 0) {\n\
    \            digit = (int) (number % 10);\n            sb.append(digits[digit]);\n\
    \            number /= 10;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder roman = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        while (number > 0) {\n            int\
    \ digit = (int) (number % 10);\n            roman.append(digits[digit]);\n   \
    \         number /= 10;\n        }\n        return roman.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        if (number == 0) {\n \
    \           sb.append(\"\");\n        } else {\n            while (number > 0)\
    \ {\n                int digit = (int) (number % 10);\n                sb.append(roman_digits[digit]);\n\
    \                number /= 10;\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] digits_reverse = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900};\n\
    \        int i = 0;\n        while (num > 0) {\n            if (num >= digits[i])\
    \ {\n                result.append(digits_reverse[i]);\n                num -=\
    \ digits[i];\n            } else {\n                i++;\n            }\n    \
    \    }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        int num = (int) number;\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        int i = 0;\n        while (num > 0) {\n\
    \            if (num >= digits[i]) {\n                result.append(digits[i]);\n\
    \                num -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n            digits[i]\
    \ = (int) (number / roman[i]);\n            number -= digits[i] * roman[i];\n\
    \        }\n        for (int i = 0; i < digits.length; i++) {\n            for\
    \ (int j = 0; j < digits[i]; j++) {\n                result.append(\"m\");\n \
    \           }\n            if (digits[i] > 1) {\n                result.append(\"\
    i\");\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] == 0) {\n             \
    \   continue;\n            }\n            if (digits[i] == 1) {\n            \
    \    sb.append(\"i\");\n            } else if (digits[i] == 2) {\n           \
    \     sb.append(\"ii\");\n            } else if (digits[i] == 3) {\n         \
    \       sb.append(\"iii\");\n            } else if (digits[i] == 4) {\n      \
    \          sb.append(\"iv\");\n            } else if (digits[i] == 5) {\n    \
    \            sb.append(\"v\");\n            } else if (digits[i] == 6) {\n   \
    \             sb.append(\"vi\");\n            } else if (digits[i] == 7) {\n \
    \               sb.append(\"vii\");\n            } else if (digits[i] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[i] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[i] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[i] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[i] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[i] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        for (int i = 0; i < digits.length; i++) {\n            while (num >=\
    \ digits[i]) {\n                num -= digits[i];\n                sb.append(roman[i]);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        long num = number;\n        while (num\
    \ > 0) {\n            long digit = num % 10;\n            if (digit == 1) {\n\
    \                result.append(\"I\");\n            } else if (digit == 2) {\n\
    \                result.append(\"II\");\n            } else if (digit == 3) {\n\
    \                result.append(\"III\");\n            } else if (digit == 4) {\n\
    \                result.append(\"IV\");\n            } else if (digit == 5) {\n\
    \                result.append(\"V\");\n            } else if (digit == 6) {\n\
    \                result.append(\"VI\");\n            } else if (digit == 7) {\n\
    \                result.append(\"VII\");\n            } else if (digit == 8) {\n\
    \                result.append(\"VIII\");\n            } else if (digit == 9)\
    \ {\n                result.append(\"IX\");\n            } else if (digit == 10)\
    \ {\n                result.append(\"X\");\n            } else if (digit == 11)\
    \ {\n                result.append(\"XI\");\n            } else if (digit == 12)\
    \ {\n                result.append(\"XII\");\n            } else if (digit ==\
    \ 13) {\n                result.append(\"XIII\");\n            } else if (digit\
    \ == 14) {\n                result.append(\"XIV\");\n            } else if (digit\
    \ == 15) {\n                result.append(\"XV\");\n            } else if (digit\
    \ == 16) {\n                result.append(\"XVI\");\n            } else if (digit\
    \ == 17) {\n                result.append(\"XVII\");\n            } else if (digit\
    \ == 18) {\n                result.append(\"XVIII\");\n            } else if (digit\
    \ == 19) {\n                result.append(\"XIX\");\n            } else if (digit\
    \ == 20) {\n                result.append(\"XX\");\n            } else if (digit\
    \ == 30) {\n                result.append(\"XXX\");\n            } else if (digit\
    \ == 40) {\n                result.append(\"XL\");\n            } else if (digit\
    \ == 50) {\n                result.append(\"L\");\n            } else if (digit\
    \ == 60) {\n                result.append(\"LX\");\n            } else if (digit\
    \ == 70) {\n", "        StringBuilder sb = new StringBuilder();\n        int[]\
    \ digits = new int[4];\n        digits[0] = 0;\n        digits[1] = 1;\n     \
    \   digits[2] = 2;\n        digits[3] = 3;\n        int i = 0;\n        while\
    \ (number > 0) {\n            int digit = (int) (number % 10);\n            sb.append(digits[digit]);\n\
    \            number /= 10;\n            i++;\n            if (i == 4) {\n    \
    \            i = 0;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder result = new StringBuilder();\n        long num = number;\n\
    \        while (num > 0) {\n            long digit = num % 10;\n            result.append(digit);\n\
    \            num /= 10;\n        }\n        return result.reverse().toString();",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        while (num > 0) {\n            int digit = num % 10;\n            if\
    \ (digit == 1) {\n                result.append(\"I\");\n            } else if\
    \ (digit == 2) {\n                result.append(\"II\");\n            } else if\
    \ (digit == 3) {\n                result.append(\"III\");\n            } else\
    \ if (digit == 4) {\n                result.append(\"IV\");\n            } else\
    \ if (digit == 5) {\n                result.append(\"V\");\n            } else\
    \ if (digit == 6) {\n                result.append(\"VI\");\n            } else\
    \ if (digit == 7) {\n                result.append(\"VII\");\n            } else\
    \ if (digit == 8) {\n                result.append(\"VIII\");\n            } else\
    \ if (digit == 9) {\n                result.append(\"IX\");\n            } else\
    \ if (digit == 10) {\n                result.append(\"X\");\n            } else\
    \ if (digit == 11) {\n                result.append(\"XI\");\n            } else\
    \ if (digit == 12) {\n                result.append(\"XII\");\n            } else\
    \ if (digit == 13) {\n                result.append(\"XIII\");\n            }\
    \ else if (digit == 14) {\n                result.append(\"XIV\");\n         \
    \   } else if (digit == 15) {\n                result.append(\"XV\");\n      \
    \      } else if (digit == 16) {\n                result.append(\"XVI\");\n  \
    \          } else if (digit == 17) {\n                result.append(\"XVII\");\n\
    \            } else if (digit == 18) {\n                result.append(\"XVIII\"\
    );\n            } else if (digit == 19) {\n                result.append(\"XIX\"\
    );\n            } else if (digit == 20) {\n                result.append(\"XX\"\
    );\n            } else if (digit == 21) {\n                result.append(\"XXI\"\
    );\n            } else if (digit == 22) {\n                result.append(\"XXII\"\
    );\n            } else if (digit == 23) {\n                result.append(\"XXIII\"\
    );\n            } else if (digit == 24) {\n                result.append(\"XXIV\"\
    );\n            } else if (", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n        int i = 0;\n\
    \        while (number > 0) {\n            int digit = (int) (number % 10);\n\
    \            if (digit == 4 || digit == 9) {\n                result.append(\"\
    cd\");\n                digits[i] = digits[i] * 2;\n            } else if (digit\
    \ == 5) {\n                result.append(\"cd\");\n                digits[i] =\
    \ digits[i] * 2;\n            } else if (digit == 1) {\n                result.append(\"\
    x\");\n                digits[i] = digits[i] * 2;\n            } else if (digit\
    \ == 2) {\n                result.append(\"x\");\n                digits[i] =\
    \ digits[i] * 2;\n            } else if (digit == 3) {\n                result.append(\"\
    x\");\n                digits[i] = digits[i] * 2;\n            } else if (digit\
    \ == 0) {\n                result.append(\"x\");\n                digits[i] =\
    \ digits[i] * 2;\n            } else {\n                result.append(digits[i]);\n\
    \            }\n            number /= 10;\n            i++;\n        }\n     \
    \   return result.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ != 0) {\n                sb.append(roman_digits[digits[i]]);\n            }\n\
    \        }\n        return sb.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int i = 0;\n        while (number > 0) {\n            digits[i] = number\
    \ % 10;\n            number /= 10;\n            i++;\n        }\n        for (int\
    \ j = 0; j < digits.length; j++) {\n            for (int k = 0; k < roman.length;\
    \ k++) {\n                if (digits[j] == roman[k]) {\n                    result.append(roman[k]);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result.toString().toLowerCase();", "        StringBuilder sb = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        digits[0] = number\
    \ % 10;\n        number /= 10;\n        digits[1] = number % 10;\n        number\
    \ /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n        digits[3]\
    \ = number % 10;\n        for (int i = 0; i < digits.length; i++) {\n        \
    \    if (digits[i] == 0) continue;\n            if (digits[i] == 1) {\n      \
    \          sb.append(\"i\");\n            } else if (digits[i] == 2) {\n     \
    \           sb.append(\"ii\");\n            } else if (digits[i] == 3) {\n   \
    \             sb.append(\"iii\");\n            } else if (digits[i] == 4) {\n\
    \                sb.append(\"iv\");\n            } else if (digits[i] == 5) {\n\
    \                sb.append(\"v\");\n            } else if (digits[i] == 6) {\n\
    \                sb.append(\"vi\");\n            } else if (digits[i] == 7) {\n\
    \                sb.append(\"vii\");\n            } else if (digits[i] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[i] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[i] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[i] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[i] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[i] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]\
    \ == 17) {\n                ", "        StringBuilder roman = new StringBuilder();\n\
    \        long num = number;\n        while (num > 0) {\n            long digit\
    \ = num % 10;\n            if (digit == 1) {\n                roman.append(\"\
    i\");\n            } else if (digit == 2) {\n                roman.append(\"ii\"\
    );\n            } else if (digit == 3) {\n                roman.append(\"iii\"\
    );\n            } else if (digit == 4) {\n                roman.append(\"iv\"\
    );\n            } else if (digit == 5) {\n                roman.append(\"v\");\n\
    \            } else if (digit == 6) {\n                roman.append(\"vi\");\n\
    \            } else if (digit == 7) {\n                roman.append(\"vii\");\n\
    \            } else if (digit == 8) {\n                roman.append(\"viii\");\n\
    \            } else if (digit == 9) {\n                roman.append(\"ix\");\n\
    \            } else if (digit == 10) {\n                roman.append(\"x\");\n\
    \            } else if (digit == 11) {\n                roman.append(\"xi\");\n\
    \            } else if (digit == 12) {\n                roman.append(\"xii\");\n\
    \            } else if (digit == 13) {\n                roman.append(\"xiii\"\
    );\n            } else if (digit == 14) {\n                roman.append(\"xiv\"\
    );\n            } else if (digit == 15) {\n                roman.append(\"xv\"\
    );\n            } else if (digit == 16) {\n                roman.append(\"xvi\"\
    );\n            } else if (digit == 17) {\n                roman.append(\"xvii\"\
    );\n            } else if (digit == 18) {\n                roman.append(\"xviii\"\
    );\n            } else if (digit == 19) {\n                roman.append(\"xix\"\
    );\n            } else if (digit == 20) {\n                roman.append(\"xx\"\
    );\n            } else if (digit == 30) {\n                roman.append(\"xxx\"\
    );\n            } else if (digit == 40) {\n                roman.append(\"xl\"\
    );\n            } else if (digit == 50) {\n                roman.append(\"l\"\
    );\n            } else if (digit == 60) {\n                roman.append(\"lx\"\
    );\n            } else if (digit == 70", "        StringBuilder result = new StringBuilder();\n\
    \        long num = number;\n        while (num > 0) {\n            int digit\
    \ = (int) (num % 10);\n            result.append(roman_digits[digit]);\n     \
    \       num /= 10;\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int)number;\n        int[]\
    \ digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for\
    \ (int i = 0; i < digits.length; i++) {\n            while (num >= digits[i])\
    \ {\n                result.append(digits[i]);\n                num -= digits[i];\n\
    \            }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = new int[]{1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n      \
    \      digits[i] = (int) (number % roman[i]);\n            number /= roman[i];\n\
    \        }\n        for (int i = 0; i < digits.length; i++) {\n            for\
    \ (int j = 0; j < digits[i]; j++) {\n                result.append(\"M\");\n \
    \           }\n            if (i < digits.length - 1) {\n                result.append(\"\
    CM\");\n            }\n        }\n        return result.toString();", "      \
    \  StringBuilder result = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int[] roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n            digits[i]\
    \ = (int) (number / roman[i]);\n            number -= digits[i] * roman[i];\n\
    \        }\n        for (int i = 0; i < digits.length; i++) {\n            if\
    \ (digits[i] != 0) {\n                for (int j = 0; j < digits[i]; j++) {\n\
    \                    result.append(\"M\");\n                }\n            }\n\
    \            if (digits[i] != 0) {\n                for (int j = 0; j < digits[i];\
    \ j++) {\n                    result.append(\"D\");\n                }\n     \
    \       }\n            if (digits[i] != 0) {\n                for (int j = 0;\
    \ j < digits[i]; j++) {\n                    result.append(\"C\");\n         \
    \       }\n            }\n            if (digits[i] != 0) {\n                for\
    \ (int j = 0; j < digits[i]; j++) {\n                    result.append(\"L\");\n\
    \                }\n            }\n            if (digits[i] != 0) {\n       \
    \         for (int j = 0; j < digits[i]; j++) {\n                    result.append(\"\
    X\");\n                }\n            }\n            if (digits[i] != 0) {\n \
    \               for (int j = 0; j < digits[i]; j++) {\n                    result.append(\"\
    V\");\n                }\n            }\n            if (digits[i] != 0) {\n \
    \               for (int j = 0; j < digits[i]; j++) {\n                    result.append(\"\
    I\");\n                }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        for (int i = 0; i < digits.length; i++) {\n            while (num >=\
    \ digits[i]) {\n                result.append(\"M\");\n                num -=\
    \ digits[i];\n            }\n        }\n        return result.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        int i = 0;\n        while (number > 0) {\n    \
    \        if (number >= digits[i]) {\n                sb.append(digits[i]);\n \
    \               number -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n\
    \        int i = 0;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % 10);\n            sb.append(digits[i]);\n            number /= 10;\n\
    \            i++;\n            if (i == 4) {\n                i = 0;\n       \
    \     }\n        }\n        return sb.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        long num = number;\n        while (num > 0)\
    \ {\n            int digit = (int) (num % 10);\n            result.append(roman_digits[digit]);\n\
    \            num /= 10;\n        }\n        return result.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] roman = new int[] {'M', 'CM', 'D', 'CD', 'C', 'XC',\
    \ 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            while (num >= digits[i]) {\n                sb.append(roman[i]);\n\
    \                num -= digits[i];\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = new int[4];\n        digits[0] = number % 10;\n\
    \        number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n\
    \        digits[2] = number % 10;\n        number /= 10;\n        digits[3] =\
    \ number % 10;\n        roman[0] = 1000;\n        roman[1] = 900;\n        roman[2]\
    \ = 500;\n        roman[3] = 100;\n        for (int i = 0; i < 4; i++) {\n   \
    \         if (digits[i] != 0) {\n                int j = 0;\n                while\
    \ (digits[i] > roman[j]) {\n                    digits[i] -= roman[j];\n     \
    \               result.append(roman[j]);\n                    j++;\n         \
    \       }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int i = 0;\n        while (number > 0) {\n            digits[i] = number\
    \ % 10;\n            number /= 10;\n            i++;\n        }\n        for (int\
    \ j = 0; j < digits.length; j++) {\n            for (int k = 0; k < roman.length;\
    \ k++) {\n                if (digits[j] == roman[k]) {\n                    sb.append(roman[k]);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return sb.toString().toLowerCase();", "        StringBuilder result = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        int[] digits_reverse\
    \ = new int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2]\
    \ = 10;\n        digits[3] = 50;\n        digits_reverse[0] = 1;\n        digits_reverse[1]\
    \ = 5;\n        digits_reverse[2] = 10;\n        digits_reverse[3] = 50;\n   \
    \     while (number > 0) {\n            int digit = (int) (number % 10);\n   \
    \         result.append(digits_reverse[digit]);\n            number /= 10;\n \
    \       }\n        return result.toString();", "        StringBuilder result =\
    \ new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n\
    \        int i = 0;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % 10);\n            result.append(digits[i]);\n            number /=\
    \ 10;\n            i++;\n        }\n        return result.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        int i = 0;\n        while (number > 0) {\n    \
    \        int digit = (int) (number % 10);\n            sb.append(digits[i]);\n\
    \            number /= 10;\n            i++;\n            if (i == 4) {\n    \
    \            i = 0;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = number % 10;\n        number /= 10;\n        digits[1]\
    \ = number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n  \
    \      number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   result.append(roman_digits[digits[i]]);\n            }\n        }\n      \
    \  return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits = new\
    \ int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int digit\
    \ = 0;\n        int roman_digit = 0;\n        while (number > 0) {\n         \
    \   digit = (int) (number % 10);\n            roman_digit = roman_digits[digit];\n\
    \            result.append(roman_digit);\n            number = number / 10;\n\
    \        }\n        return result.toString().toLowerCase();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] == 0) {\n                continue;\n     \
    \       }\n            if (digits[i] == 1) {\n                sb.append(\"i\"\
    );\n            } else if (digits[i] == 2) {\n                sb.append(\"ii\"\
    );\n            } else if (digits[i] == 3) {\n                sb.append(\"iii\"\
    );\n            } else if (digits[i] == 4) {\n                sb.append(\"iv\"\
    );\n            } else if (digits[i] == 5) {\n                sb.append(\"v\"\
    );\n            } else if (digits[i] == 6) {\n                sb.append(\"vi\"\
    );\n            } else if (digits[i] == 7) {\n                sb.append(\"vii\"\
    );\n            } else if (digits[i] == 8) {\n                sb.append(\"viii\"\
    );\n            } else if (digits[i] == 9) {\n                sb.append(\"ix\"\
    );\n            } else if (digits[i] == 10) {\n                sb.append(\"x\"\
    );\n            } else if (digits[i] == 11) {\n                sb.append(\"xi\"\
    );\n            } else if (digits[i] == 12) {\n                sb.append(\"xii\"\
    );\n            } else if (digits[i] == 13) {\n                sb.append(\"xiii\"\
    );\n            } else if (digits[i] == 14) {\n                sb.append(\"xiv\"\
    );\n            } else if (digits[i] == 15) {\n                sb.append(\"xv\"\
    );\n            } else if (digits[i] == 16) {\n                sb.append(\"xvi\"\
    );\n            } else if (digits[i]", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n        int i = 0;\n\
    \        while (number > 0) {\n            int digit = (int) (number % 10);\n\
    \            sb.append(digits[i]);\n            number /= 10;\n            i++;\n\
    \            if (i == 4) {\n                i = 0;\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n        int i = 0;\n\
    \        while (number > 0) {\n            int digit = (int) (number % digits[i]);\n\
    \            sb.append(digit);\n            number /= digits[i];\n           \
    \ i++;\n        }\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int num = (int)number;\n        int[] digits\
    \ = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n       \
    \ int[] roman = new int[]{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\",\
    \ \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"};\n        for(int i = 0; i < digits.length;\
    \ i++) {\n            while(num >= digits[i]) {\n                sb.append(roman[i]);\n\
    \                num -= digits[i];\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] == 0) {\n             \
    \   continue;\n            }\n            if (digits[i] == 1) {\n            \
    \    sb.append(\"i\");\n            } else if (digits[i] == 2) {\n           \
    \     sb.append(\"ii\");\n            } else if (digits[i] == 3) {\n         \
    \       sb.append(\"iii\");\n            } else if (digits[i] == 4) {\n      \
    \          sb.append(\"iv\");\n            } else if (digits[i] == 5) {\n    \
    \            sb.append(\"v\");\n            } else if (digits[i] == 6) {\n   \
    \             sb.append(\"vi\");\n            } else if (digits[i] == 7) {\n \
    \               sb.append(\"vii\");\n            } else if (digits[i] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[i] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[i] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[i] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[i] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[i] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   sb.append(romanDigits[digits[i]]);\n            }\n        }\n        return\
    \ sb.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ != 0) {\n                sb.append(roman_digits[digits[i]]);\n            }\n\
    \        }\n        return sb.toString().toLowerCase();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n\
    \        int i = 0;\n        while (number > 0) {\n            if (number >= digits[i])\
    \ {\n                sb.append(digits[i]);\n                number -= digits[i];\n\
    \            } else {\n                i++;\n            }\n        }\n      \
    \  return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int num = (int) number;\n        int[] roman = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < roman.length;\
    \ i++) {\n            while (num >= roman[i]) {\n                sb.append(roman[i]);\n\
    \                num -= roman[i];\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   sb.append(roman_digits[digits[i]]);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder roman = new StringBuilder();\n     \
    \   int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n \
    \       for (int i = 0; i < values.length; i++) {\n            while (number >=\
    \ values[i]) {\n                roman.append(values[i]);\n                number\
    \ -= values[i];\n            }\n        }\n        return roman.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] == 0) {\n             \
    \   continue;\n            }\n            if (digits[i] == 1) {\n            \
    \    sb.append(\"i\");\n            } else if (digits[i] == 2) {\n           \
    \     sb.append(\"ii\");\n            } else if (digits[i] == 3) {\n         \
    \       sb.append(\"iii\");\n            } else if (digits[i] == 4) {\n      \
    \          sb.append(\"iv\");\n            } else if (digits[i] == 5) {\n    \
    \            sb.append(\"v\");\n            } else if (digits[i] == 6) {\n   \
    \             sb.append(\"vi\");\n            } else if (digits[i] == 7) {\n \
    \               sb.append(\"vii\");\n            } else if (digits[i] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[i] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[i] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[i] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[i] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[i] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] values = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < values.length; i++) {\n            while\
    \ (num >= values[i]) {\n                result.append(values[i]);\n          \
    \      num -= values[i];\n            }\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int)number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int i = 0;\n        while (num > 0) {\n            if (num >= digits[i])\
    \ {\n                num -= digits[i];\n                sb.append(roman[i]);\n\
    \            } else {\n                i++;\n            }\n        }\n      \
    \  return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int num = (int)number;\n        int[] digits = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman = new int[]\
    \ {'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n \
    \       for (int i = 0; i < digits.length; i++) {\n            while (num >= digits[i])\
    \ {\n                result.append(roman[i]);\n                num -= digits[i];\n\
    \            }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int i = 0;\n        while (num > 0) {\n            if (num >= digits[i])\
    \ {\n                num -= digits[i];\n                sb.append(roman[i]);\n\
    \            } else {\n                i++;\n            }\n        }\n      \
    \  return sb.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 2;\n        digits[2] = 3;\n        digits[3] = 4;\n        int[] roman =\
    \ {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i\
    \ = 0; i < roman.length; i++) {\n            while (number >= roman[i]) {\n  \
    \              sb.append(digits[i]);\n                number -= roman[i];\n  \
    \          }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ roman_digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n   \
    \     int i = 0;\n        while (number > 0) {\n            digits[i] = (int)\
    \ (number % 10);\n            number /= 10;\n            i++;\n        }\n   \
    \     for (int j = 0; j < digits.length; j++) {\n            for (int k = 0; k\
    \ < roman.length; k++) {\n                if (digits[j] == roman_digits[k]) {\n\
    \                    result.append(roman[k]);\n                    break;\n  \
    \              }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] digits_rev = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n\
    \        for (int i = 0; i < digits.length; i++) {\n            int digit = num\
    \ / digits[i];\n            if (digit > 0) {\n                result.append(digits_rev[i]);\n\
    \                num -= digit * digits[i];\n            }\n        }\n       \
    \ return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int num = (int)number;\n        int[] digits = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] digits_inv = new\
    \ int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900};\n        for (int i\
    \ = 0; i < digits.length; i++) {\n            while (num >= digits[i]) {\n   \
    \             result.append(digits_inv[i]);\n                num -= digits[i];\n\
    \            }\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int) number;\n        int[]\
    \ digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for\
    \ (int i = 0; i < digits.length; i++) {\n            while (num >= digits[i])\
    \ {\n                result.append(\"M\");\n                num -= digits[i];\n\
    \            }\n        }\n        return result.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        int i\
    \ = 0;\n        while (number > 0) {\n            digits[i] = number % 10;\n \
    \           number /= 10;\n            i++;\n        }\n        for (int j = 0;\
    \ j < digits.length; j++) {\n            if (digits[j] != 0) {\n             \
    \   sb.append(roman_digits[digits[j]]);\n            }\n        }\n        return\
    \ sb.toString().toLowerCase();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits = new\
    \ int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ roman_digits_reversed = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500,\
    \ 900, 1000};\n        int[] roman_digits_reversed_2 = new int[] {1, 4, 5, 9,\
    \ 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        int[] roman_digits_reversed_3\
    \ = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n      \
    \  int[] roman_digits_reversed_4 = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100,\
    \ 400, 500, 900, 1000};\n        int[] roman_digits_reversed_5 = new int[] {1,\
    \ 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        int[] roman_digits_reversed_6\
    \ = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n      \
    \  int[] roman_digits_reversed_7 = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100,\
    \ 400, 500, 900, 1000};\n        int[] roman_digits_reversed_8 = new int[] {1,\
    \ 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        int[] roman_digits_reversed_9\
    \ = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n      \
    \  int", "        StringBuilder result = new StringBuilder();\n        int num\
    \ = (int) number;\n        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1};\n        int[] symbols = {'M', 'CM', 'D', 'CD', 'C', 'XC',\
    \ 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n        int i = 0;\n        while (num\
    \ > 0) {\n            while (num >= digits[i]) {\n                result.append(symbols[i]);\n\
    \                num -= digits[i];\n            }\n            i++;\n        }\n\
    \        return result.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int num = (int) number;\n        if (num < 1 || num > 1000) {\n     \
    \       return \"\";\n        }\n        int[] digits = new int[4];\n        digits[0]\
    \ = 1000;\n        digits[1] = 900;\n        digits[2] = 500;\n        digits[3]\
    \ = 100;\n        int i = 0;\n        while (num > 0) {\n            if (num >=\
    \ digits[i]) {\n                sb.append(digits[i]);\n                num -=\
    \ digits[i];\n            } else {\n                i++;\n            }\n    \
    \    }\n        return sb.toString().toLowerCase();", "        StringBuilder sb\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] == 0) {\n                continue;\n     \
    \       }\n            int j = i;\n            while (j < digits.length - 1 &&\
    \ digits[j] == digits[j + 1]) {\n                j++;\n            }\n       \
    \     if (j == i) {\n                sb.append(digits[i]);\n            } else\
    \ {\n                sb.append(digits[i]);\n                for (int k = i; k\
    \ < j; k++) {\n                    sb.append(\"m\");\n                }\n    \
    \            sb.append(digits[j]);\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        long n = number;\n   \
    \     while (n > 0) {\n            int digit = (int) (n % 10);\n            sb.append(roman_digits[digit]);\n\
    \            n /= 10;\n        }\n        return sb.reverse().toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        while (num > 0) {\n            int digit = num % 10;\n            sb.append(roman[digit]);\n\
    \            num /= 10;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder roman = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        int i = 0;\n        while (number > 0)\
    \ {\n            if (number >= digits[i]) {\n                roman.append(digits[i]);\n\
    \                number -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return roman.toString().toLowerCase();", " \
    \       StringBuilder result = new StringBuilder();\n        int[] roman_numerals\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev\
    \ = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900};\n        int i = 0;\n  \
    \      while (number > 0) {\n            while (number >= roman_numerals[i]) {\n\
    \                number -= roman_numerals[i];\n                result.append(roman_numerals_rev[i]);\n\
    \            }\n            i++;\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        long num = number;\n\
    \        while (num > 0) {\n            long digit = num % 10;\n            if\
    \ (digit == 1) {\n                result.append(\"I\");\n            } else if\
    \ (digit == 2) {\n                result.append(\"II\");\n            } else if\
    \ (digit == 3) {\n                result.append(\"III\");\n            } else\
    \ if (digit == 4) {\n                result.append(\"IV\");\n            } else\
    \ if (digit == 5) {\n                result.append(\"V\");\n            } else\
    \ if (digit == 6) {\n                result.append(\"VI\");\n            } else\
    \ if (digit == 7) {\n                result.append(\"VII\");\n            } else\
    \ if (digit == 8) {\n                result.append(\"VIII\");\n            } else\
    \ if (digit == 9) {\n                result.append(\"IX\");\n            } else\
    \ if (digit == 10) {\n                result.append(\"X\");\n            } else\
    \ if (digit == 11) {\n                result.append(\"XI\");\n            } else\
    \ if (digit == 12) {\n                result.append(\"XII\");\n            } else\
    \ if (digit == 13) {\n                result.append(\"XIII\");\n            }\
    \ else if (digit == 14) {\n                result.append(\"XIV\");\n         \
    \   } else if (digit == 15) {\n                result.append(\"XV\");\n      \
    \      } else if (digit == 16) {\n                result.append(\"XVI\");\n  \
    \          } else if (digit == 17) {\n                result.append(\"XVII\");\n\
    \            } else if (digit == 18) {\n                result.append(\"XVIII\"\
    );\n            } else if (digit == 19) {\n                result.append(\"XIX\"\
    );\n            } else if (digit == 20) {\n                result.append(\"XX\"\
    );\n            } else if (digit == 21) {\n                result.append(\"XXI\"\
    );\n            } else if (digit == 22) {\n                result.append(\"XXII\"\
    );\n            } else if (digit == 23) {\n                result.append(\"XXIII\"\
    );\n            } else if (digit == 24) {\n                result.append(\"XXIV\"\
    );\n            } else if (digit == 25", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int i = 0;\n        while (number\
    \ > 0) {\n            digits[i] = number % 10;\n            number /= 10;\n  \
    \          i++;\n        }\n        for (int j = 0; j < digits.length; j++) {\n\
    \            if (digits[j] == 0) {\n                continue;\n            }\n\
    \            for (int k = 0; k < digits.length; k++) {\n                if (digits[k]\
    \ == 0) {\n                    continue;\n                }\n                if\
    \ (digits[j] == digits[k]) {\n                    result.append(\"\" + digits[j]);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int num = (int) number;\n        int[] digits = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman = new int[]\
    \ {'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n \
    \       int i = 0;\n        while (num > 0) {\n            int digit = num % 10;\n\
    \            result.append(roman[i]);\n            num /= 10;\n            i++;\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        int[] roman\
    \ = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n      \
    \  for (int i = 0; i < digits.length; i++) {\n            digits[i] = number %\
    \ roman[i];\n            number /= roman[i];\n        }\n        for (int i =\
    \ 0; i < digits.length; i++) {\n            if (digits[i] != 0) {\n          \
    \      for (int j = 0; j < digits[i]; j++) {\n                    result.append(\"\
    M\");\n                }\n            }\n            if (i < digits.length - 1)\
    \ {\n                for (int j = 0; j < roman[i + 1]; j++) {\n              \
    \      result.append(\"C\");\n                }\n            }\n        }\n  \
    \      return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            digits[i] = number % roman[i];\n            number /= roman[i];\n\
    \        }\n        for (int i = 0; i < digits.length; i++) {\n            if\
    \ (digits[i] != 0) {\n                result.append(digits[i]);\n            }\n\
    \        }\n        return result.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ digits_reverse = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n \
    \       int i = 0;\n        while (number > 0) {\n            digits[i] = (int)\
    \ (number % 10);\n            number /= 10;\n            i++;\n        }\n   \
    \     for (int j = 0; j < digits.length; j++) {\n            if (digits[j] !=\
    \ 0) {\n                for (int k = 0; k < roman.length; k++) {\n           \
    \         if (digits[j] == roman[k]) {\n                        result.append(digits_reverse[k]);\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int i = 0;\n        while (num > 0) {\n            int digit = num %\
    \ 10;\n            sb.append(digits[i]);\n            num = num / 10;\n      \
    \      i++;\n        }\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int num = (int) number;\n        int[] digits\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int\
    \ i = 0; i < digits.length; i++) {\n            while (num >= digits[i]) {\n \
    \               sb.append(\"m\");\n                num -= digits[i];\n       \
    \     }\n        }\n        return sb.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        for (int\
    \ i = 0; i < 4; i++) {\n            digits[i] = (int) (number % 10);\n       \
    \     number /= 10;\n        }\n        for (int i = 0; i < 4; i++) {\n      \
    \      if (digits[i] != 0) {\n                if (digits[i] == 5) {\n        \
    \            result.append(\"v\");\n                } else if (digits[i] == 9)\
    \ {\n                    result.append(\"x\");\n                } else if (digits[i]\
    \ == 4) {\n                    result.append(\"l\");\n                } else if\
    \ (digits[i] == 6) {\n                    result.append(\"c\");\n            \
    \    } else if (digits[i] == 3) {\n                    result.append(\"m\");\n\
    \                } else if (digits[i] == 1) {\n                    result.append(\"\
    i\");\n                } else if (digits[i] == 2) {\n                    result.append(\"\
    ii\");\n                } else if (digits[i] == 7) {\n                    result.append(\"\
    d\");\n                } else if (digits[i] == 8) {\n                    result.append(\"\
    d\");\n                } else if (digits[i] == 0) {\n                    result.append(\"\
    \");\n                }\n            }\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] values = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < values.length; i++) {\n            while\
    \ (num >= values[i]) {\n                result.append(values[i]);\n          \
    \      num -= values[i];\n            }\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] == 0) {\n             \
    \   continue;\n            }\n            if (digits[i] == 1) {\n            \
    \    sb.append(\"i\");\n            } else if (digits[i] == 2) {\n           \
    \     sb.append(\"ii\");\n            } else if (digits[i] == 3) {\n         \
    \       sb.append(\"iii\");\n            } else if (digits[i] == 4) {\n      \
    \          sb.append(\"iv\");\n            } else if (digits[i] == 5) {\n    \
    \            sb.append(\"v\");\n            } else if (digits[i] == 6) {\n   \
    \             sb.append(\"vi\");\n            } else if (digits[i] == 7) {\n \
    \               sb.append(\"vii\");\n            } else if (digits[i] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[i] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[i] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[i] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[i] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[i] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        if (num < 1 || num > 1000) {\n            return \"\";\n        }\n \
    \       int[] digits = new int[] { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1 };\n        int[] roman = new int[] { 'M', 'CM', 'D', 'CD', 'C', 'XC',\
    \ 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I' };\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            while (num >= digits[i]) {\n                sb.append(roman[i]);\n\
    \                num -= digits[i];\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] digits_reverse = new int[4];\n        digits[0] = 1;\n\
    \        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n  \
    \      digits_reverse[0] = 10;\n        digits_reverse[1] = 50;\n        digits_reverse[2]\
    \ = 100;\n        digits_reverse[3] = 500;\n        while (number > 0) {\n   \
    \         int digit = (int) (number % 10);\n            result.append(digits_reverse[digit]);\n\
    \            number /= 10;\n        }\n        return result.reverse().toString();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n            digits[i]\
    \ = number % roman[i];\n            number /= roman[i];\n        }\n        for\
    \ (int i = 0; i < digits.length; i++) {\n            for (int j = 0; j < digits.length\
    \ - i; j++) {\n                if (digits[j] + digits[j + 1] == 2 * digits[j])\
    \ {\n                    result.append(\"i\");\n                } else if (digits[j]\
    \ + digits[j + 1] == 3 * digits[j]) {\n                    result.append(\"x\"\
    );\n                } else if (digits[j] + digits[j + 1] == 4 * digits[j]) {\n\
    \                    result.append(\"c\");\n                } else if (digits[j]\
    \ + digits[j + 1] == 5 * digits[j]) {\n                    result.append(\"d\"\
    );\n                } else if (digits[j] + digits[j + 1] == 6 * digits[j]) {\n\
    \                    result.append(\"m\");\n                } else if (digits[j]\
    \ + digits[j + 1] == 7 * digits[j]) {\n                    result.append(\"l\"\
    );\n                } else if (digits[j] + digits[j + 1] == 8 * digits[j]) {\n\
    \                    result.append(\"x\");\n                } else if (digits[j]\
    \ + digits[j + 1] == 9 * digits[j]) {\n                    result.append(\"v\"\
    );\n                } else if (digits[j] + digits[j + 1] == 10 * digits[j]) {\n\
    \                    result.append(\"i\");\n                } else if (digits[j]\
    \ + digits[j + 1] == 11 * digits[j]) {\n                    result.append(\"x\"\
    );\n                } else if (digits[j] + digits[j + 1] == 12 * digits[j]) {\n\
    \                    result.append(\"c\");\n                ", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman_digits = new int[] {1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1};\n        int digit_count = 0;\n        while (number > 0) {\n\
    \            digits[digit_count] = number % 10;\n            number /= 10;\n \
    \           digit_count++;\n        }\n        for (int i = digit_count - 1; i\
    \ >= 0; i--) {\n            result.append(roman[digits[i]]);\n        }\n    \
    \    return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] digits_reverse = new int[4];\n\
    \        digits[0] = number % 10;\n        digits[1] = (number / 10) % 10;\n \
    \       digits[2] = (number / 100) % 10;\n        digits[3] = (number / 1000)\
    \ % 10;\n        digits_reverse[3] = digits[3];\n        digits_reverse[2] = digits[2];\n\
    \        digits_reverse[1] = digits[1];\n        digits_reverse[0] = digits[0];\n\
    \        for (int i = 0; i < 4; i++) {\n            if (digits[i] != 0) {\n  \
    \              result.append(digits_reverse[i]);\n            }\n        }\n \
    \       return result.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int i = 0;\n        while (number\
    \ > 0) {\n            digits[i] = number % 10;\n            number /= 10;\n  \
    \          i++;\n        }\n        for (int j = 0; j < digits.length; j++) {\n\
    \            for (int k = 0; k < roman.length; k++) {\n                if (digits[j]\
    \ == roman[k]) {\n                    sb.append(roman[k]);\n                 \
    \   break;\n                }\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        if (number == 0) {\n\
    \            result.append(\"\");\n            return result.toString();\n   \
    \     }\n        if (number < 0) {\n            result.append(\"-\");\n      \
    \      number = -number;\n        }\n        int[] digits = new int[4];\n    \
    \    int[] roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1};\n        int i = 0;\n        while (number > 0) {\n            digits[i]\
    \ = number % 10;\n            number /= 10;\n            i++;\n        }\n   \
    \     for (int j = 0; j < digits.length; j++) {\n            for (int k = 0; k\
    \ < roman.length; k++) {\n                if (digits[j] == roman[k]) {\n     \
    \               result.append(roman[k]);\n                    break;\n       \
    \         }\n            }\n        }\n        return result.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n        int i = 0;\n\
    \        while (num > 0) {\n            if (num >= digits[i]) {\n            \
    \    sb.append(digits[i]);\n                num -= digits[i];\n            } else\
    \ {\n                i++;\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        long n = number;\n   \
    \     while (n > 0) {\n            long digit = n % 10;\n            if (digit\
    \ == 1) {\n                sb.append(\"I\");\n            } else if (digit ==\
    \ 2) {\n                sb.append(\"II\");\n            } else if (digit == 3)\
    \ {\n                sb.append(\"III\");\n            } else if (digit == 4) {\n\
    \                sb.append(\"IV\");\n            } else if (digit == 5) {\n  \
    \              sb.append(\"V\");\n            } else if (digit == 6) {\n     \
    \           sb.append(\"VI\");\n            } else if (digit == 7) {\n       \
    \         sb.append(\"VII\");\n            } else if (digit == 8) {\n        \
    \        sb.append(\"VIII\");\n            } else if (digit == 9) {\n        \
    \        sb.append(\"IX\");\n            } else if (digit == 10) {\n         \
    \       sb.append(\"X\");\n            } else if (digit == 11) {\n           \
    \     sb.append(\"XI\");\n            } else if (digit == 12) {\n            \
    \    sb.append(\"XII\");\n            } else if (digit == 13) {\n            \
    \    sb.append(\"XIII\");\n            } else if (digit == 14) {\n           \
    \     sb.append(\"XIV\");\n            } else if (digit == 15) {\n           \
    \     sb.append(\"XV\");\n            } else if (digit == 16) {\n            \
    \    sb.append(\"XVI\");\n            } else if (digit == 17) {\n            \
    \    sb.append(\"XVII\");\n            } else if (digit == 18) {\n           \
    \     sb.append(\"XVIII\");\n            } else if (digit == 19) {\n         \
    \       sb.append(\"XIX\");\n            } else if (digit == 20) {\n         \
    \       sb.append(\"XX\");\n            } else if (digit == 21) {\n          \
    \      sb.append(\"XXI\");\n            } else if (digit == 22) {\n          \
    \      sb.append(\"XXII\");\n            } else if (digit == 23) {\n         \
    \       sb.append(\"XXIII\");\n            } else if (digit == 24) {\n       \
    \         sb.append(\"XXIV\");\n            } else if (digit ==", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int)number;\n        if(num\
    \ < 1 || num > 1000) {\n            return \"\";\n        }\n        int[] digits\
    \ = new int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2]\
    \ = 10;\n        digits[3] = 50;\n        int i = 0;\n        while(num > 0) {\n\
    \            if(num >= digits[i]) {\n                result.append(digits[i]);\n\
    \                num -= digits[i];\n            }\n            i++;\n        }\n\
    \        return result.toString().toLowerCase();", "        StringBuilder result\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        int[] roman\
    \ = new int[4];\n        digits[0] = number % 10;\n        number /= 10;\n   \
    \     digits[1] = number % 10;\n        number /= 10;\n        digits[2] = number\
    \ % 10;\n        number /= 10;\n        digits[3] = number % 10;\n        roman[0]\
    \ = 1000;\n        roman[1] = 900;\n        roman[2] = 500;\n        roman[3]\
    \ = 100;\n        for (int i = 0; i < 4; i++) {\n            for (int j = 0; j\
    \ < digits[i]; j++) {\n                result.append(roman[i]);\n            }\n\
    \        }\n        return result.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n\
    \        int digit = 0;\n        while (number > 0) {\n            digit = (int)\
    \ (number % 10);\n            result.append(digits[digit]);\n            number\
    \ /= 10;\n        }\n        return result.toString().toLowerCase();", "     \
    \   StringBuilder result = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int[] roman = new int[4];\n        int i = 0;\n        while (number\
    \ > 0) {\n            digits[i] = number % 10;\n            number /= 10;\n  \
    \          i++;\n        }\n        for (int j = 0; j < digits.length; j++) {\n\
    \            roman[j] = digits[digits.length - j - 1];\n        }\n        for\
    \ (int k = 0; k < digits.length; k++) {\n            if (k == 0) {\n         \
    \       result.append(roman[k]);\n            } else if (k == 1) {\n         \
    \       result.append(roman[k]);\n                result.append(roman[k]);\n \
    \           } else if (k == 2) {\n                result.append(roman[k]);\n \
    \               result.append(roman[k]);\n                result.append(roman[k]);\n\
    \            } else if (k == 3) {\n                result.append(roman[k]);\n\
    \                result.append(roman[k]);\n                result.append(roman[k]);\n\
    \                result.append(roman[k]);\n            }\n        }\n        return\
    \ result.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = number;\n        while (n > 0) {\n            int digit = (int)\
    \ (n % 10);\n            sb.append(roman_digits[digit]);\n            n /= 10;\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ == 0) {\n                continue;\n            }\n            if (digits[i]\
    \ == 1) {\n                sb.append(\"i\");\n            } else if (digits[i]\
    \ == 2) {\n                sb.append(\"ii\");\n            } else if (digits[i]\
    \ == 3) {\n                sb.append(\"iii\");\n            } else if (digits[i]\
    \ == 4) {\n                sb.append(\"iv\");\n            } else if (digits[i]\
    \ == 5) {\n                sb.append(\"v\");\n            } else if (digits[i]\
    \ == 6) {\n                sb.append(\"vi\");\n            } else if (digits[i]\
    \ == 7) {\n                sb.append(\"vii\");\n            } else if (digits[i]\
    \ == 8) {\n                sb.append(\"viii\");\n            } else if (digits[i]\
    \ == 9) {\n                sb.append(\"ix\");\n            } else if (digits[i]\
    \ == 10) {\n                sb.append(\"x\");\n            } else if (digits[i]\
    \ == 11) {\n                sb.append(\"xi\");\n            } else if (digits[i]\
    \ == 12) {\n                sb.append(\"xii\");\n            } else if (digits[i]\
    \ == 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder result = new StringBuilder();\n        int[] roman_numerals\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev\
    \ = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900};\n        int[] roman_numerals_rev_2\
    \ = {1, 10, 100, 1000};\n        int[] roman_numerals_rev_3 = {1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev_4 =\
    \ {1, 10, 100, 1000};\n        int[] roman_numerals_rev_5 = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev_6 = {1,\
    \ 10, 100, 1000};\n        int[] roman_numerals_rev_7 = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev_8 = {1,\
    \ 10, 100, 1000};\n        int[] roman_numerals_rev_9 = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev_10 = {1,\
    \ 10, 100, 1000};\n        int[] roman_numerals_rev_11 = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev_12 = {1,\
    \ 10, 100, 1000};\n        int[] roman_numerals_rev_13 = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_numerals_rev_14 = {1,\
    \ 10, 100, 1000};\n        int[] roman_", "        StringBuilder result = new\
    \ StringBuilder();\n        if (number < 1 || number > 1000) {\n            return\
    \ \"\";\n        }\n        if (number == 1) {\n            result.append(\"I\"\
    );\n            return result.toString();\n        }\n        if (number == 2)\
    \ {\n            result.append(\"II\");\n            return result.toString();\n\
    \        }\n        if (number == 3) {\n            result.append(\"III\");\n\
    \            return result.toString();\n        }\n        if (number == 4) {\n\
    \            result.append(\"IV\");\n            return result.toString();\n \
    \       }\n        if (number == 5) {\n            result.append(\"V\");\n   \
    \         return result.toString();\n        }\n        if (number == 6) {\n \
    \           result.append(\"VI\");\n            return result.toString();\n  \
    \      }\n        if (number == 7) {\n            result.append(\"VII\");\n  \
    \          return result.toString();\n        }\n        if (number == 8) {\n\
    \            result.append(\"VIII\");\n            return result.toString();\n\
    \        }\n        if (number == 9) {\n            result.append(\"IX\");\n \
    \           return result.toString();\n        }\n        if (number == 10) {\n\
    \            result.append(\"X\");\n            return result.toString();\n  \
    \      }\n        if (number == 11) {\n            result.append(\"XI\");\n  \
    \          return result.toString();\n        }\n        if (number == 12) {\n\
    \            result.append(\"XII\");\n            return result.toString();\n\
    \        }\n        if (number == 13) {\n            result.append(\"XIII\");\n\
    \            return result.toString();\n        }\n        if (number == 14) {\n\
    \            result.append(\"XIV\");\n            return result.toString();\n\
    \        }\n        if (number == 15) {\n            result.append(\"XV\");\n\
    \            return result.toString();\n        }\n        if (number == 16) {\n\
    \            result.append(\"XVI\");\n            return result.toString();\n\
    \        }\n        if (number == 17) {\n            result.append(\"XVII\");\n\
    \            return result.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = 1;\n        digits[1]\
    \ = 2;\n        digits[2] = 3;\n        digits[3] = 4;\n        int[] roman =\
    \ new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int\
    \ i = 0;\n        while (number > 0) {\n            if (number >= roman[i]) {\n\
    \                sb.append(digits[i]);\n                number -= roman[i];\n\
    \            } else {\n                sb.append(digits[i + 1]);\n           \
    \     number -= roman[i + 1];\n            }\n            i++;\n        }\n  \
    \      return sb.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ != 0) {\n                sb.append(digits[i]);\n                if (i < digits.length\
    \ - 1) {\n                    sb.append(roman_digits[digits[i]]);\n          \
    \      }\n            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int\
    \ i = 0;\n        while (number > 0) {\n            digits[i] = number % 10;\n\
    \            number /= 10;\n            i++;\n        }\n        for (int j =\
    \ 0; j < digits.length; j++) {\n            if (digits[j] == 1) {\n          \
    \      result.append(\"I\");\n            } else if (digits[j] == 5) {\n     \
    \           result.append(\"V\");\n            } else if (digits[j] == 10) {\n\
    \                result.append(\"X\");\n            } else if (digits[j] == 50)\
    \ {\n                result.append(\"L\");\n            } else if (digits[j] ==\
    \ 100) {\n                result.append(\"C\");\n            } else if (digits[j]\
    \ == 500) {\n                result.append(\"D\");\n            } else if (digits[j]\
    \ == 1000) {\n                result.append(\"M\");\n            }\n        }\n\
    \        return result.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ == 0) {\n                continue;\n            }\n            int j = i + 1;\n\
    \            while (j < digits.length && digits[j] == 0) {\n                j++;\n\
    \            }\n            if (j == digits.length) {\n                sb.append(digits[i]);\n\
    \            } else {\n                sb.append(digits[i] + \"\" + digits[j]);\n\
    \            }\n        }\n        return sb.toString().toLowerCase();", "   \
    \     StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int i = 0;\n        while (number > 0) {\n            digits[i] = number\
    \ % 10;\n            number /= 10;\n            i++;\n        }\n        for (int\
    \ j = 0; j < digits.length; j++) {\n            if (digits[j] == 1) {\n      \
    \          sb.append(\"i\");\n            } else if (digits[j] == 2) {\n     \
    \           sb.append(\"ii\");\n            } else if (digits[j] == 3) {\n   \
    \             sb.append(\"iii\");\n            } else if (digits[j] == 4) {\n\
    \                sb.append(\"iv\");\n            } else if (digits[j] == 5) {\n\
    \                sb.append(\"v\");\n            } else if (digits[j] == 6) {\n\
    \                sb.append(\"vi\");\n            } else if (digits[j] == 7) {\n\
    \                sb.append(\"vii\");\n            } else if (digits[j] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[j] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[j] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[j] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[j] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[j] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[j]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[j]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[j]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[j]\
    \ == 17) {\n                sb.append(\"xvii\");\n            } else if (digits[j]\
    \ == 18) {\n                sb.append(\"xviii\");\n            } else if (digits",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] digits_reverse = new int[4];\n        int[] digits_reverse_copy\
    \ = new int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2]\
    \ = 10;\n        digits[3] = 50;\n        digits_reverse[0] = 5;\n        digits_reverse[1]\
    \ = 10;\n        digits_reverse[2] = 50;\n        digits_reverse[3] = 100;\n \
    \       digits_reverse_copy[0] = 10;\n        digits_reverse_copy[1] = 50;\n \
    \       digits_reverse_copy[2] = 100;\n        digits_reverse_copy[3] = 500;\n\
    \        while (number > 0) {\n            int digit = (int) (number % 10);\n\
    \            result.append(digits_reverse[digit]);\n            number /= 10;\n\
    \        }\n        return result.toString();", "        StringBuilder roman =\
    \ new StringBuilder();\n        int[] values = {1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < values.length; i++) {\n\
    \            while (number >= values[i]) {\n                roman.append(\"M\"\
    );\n                number -= values[i];\n            }\n        }\n        return\
    \ roman.toString().toLowerCase();", "        StringBuilder result = new StringBuilder();\n\
    \        int num = (int) number;\n        while (num > 0) {\n            int digit\
    \ = num % 10;\n            if (digit == 1) {\n                result.append(\"\
    I\");\n            } else if (digit == 2) {\n                result.append(\"\
    II\");\n            } else if (digit == 3) {\n                result.append(\"\
    III\");\n            } else if (digit == 4) {\n                result.append(\"\
    IV\");\n            } else if (digit == 5) {\n                result.append(\"\
    V\");\n            } else if (digit == 6) {\n                result.append(\"\
    VI\");\n            } else if (digit == 7) {\n                result.append(\"\
    VII\");\n            } else if (digit == 8) {\n                result.append(\"\
    VIII\");\n            } else if (digit == 9) {\n                result.append(\"\
    IX\");\n            } else if (digit == 0) {\n                result.append(\"\
    X\");\n            }\n            num /= 10;\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        for (int i = 0; i < 4; i++) {\n            digits[i] = (int)\
    \ (number % 10);\n            number /= 10;\n        }\n        for (int i = 0;\
    \ i < 4; i++) {\n            if (digits[i] != 0) {\n                result.append(digits[i]);\n\
    \                if (i < 3) {\n                    result.append(roman[digits[i]][i]);\n\
    \                }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        long num = number;\n\
    \        while (num > 0) {\n            long digit = num % 10;\n            if\
    \ (digit == 1) {\n                result.append(\"I\");\n            } else if\
    \ (digit == 2) {\n                result.append(\"II\");\n            } else if\
    \ (digit == 3) {\n                result.append(\"III\");\n            } else\
    \ if (digit == 4) {\n                result.append(\"IV\");\n            } else\
    \ if (digit == 5) {\n                result.append(\"V\");\n            } else\
    \ if (digit == 6) {\n                result.append(\"VI\");\n            } else\
    \ if (digit == 7) {\n                result.append(\"VII\");\n            } else\
    \ if (digit == 8) {\n                result.append(\"VIII\");\n            } else\
    \ if (digit == 9) {\n                result.append(\"IX\");\n            } else\
    \ if (digit == 10) {\n                result.append(\"X\");\n            } else\
    \ if (digit == 11) {\n                result.append(\"XI\");\n            } else\
    \ if (digit == 12) {\n                result.append(\"XII\");\n            } else\
    \ if (digit == 13) {\n                result.append(\"XIII\");\n            }\
    \ else if (digit == 14) {\n                result.append(\"XIV\");\n         \
    \   } else if (digit == 15) {\n                result.append(\"XV\");\n      \
    \      } else if (digit == 16) {\n                result.append(\"XVI\");\n  \
    \          } else if (digit == 17) {\n                result.append(\"XVII\");\n\
    \            } else if (digit == 18) {\n                result.append(\"XVIII\"\
    );\n            } else if (digit == 19) {\n                result.append(\"XIX\"\
    );\n            } else if (digit == 20) {\n                result.append(\"XX\"\
    );\n            } else if (digit == 21) {\n                result.append(\"XXI\"\
    );\n            } else if (digit == 22) {\n                result.append(\"XXII\"\
    );\n            } else if (digit == 23) {\n                result.append(\"XXIII\"\
    );\n            } else if (digit == 24) {\n                result.append(\"XXIV\"\
    );\n            } else if (digit == 25", "        StringBuilder sb = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        digits[0] = number % 10;\n      \
    \  number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n  \
    \      digits[2] = number % 10;\n        number /= 10;\n        digits[3] = number\
    \ % 10;\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i]\
    \ == 0) {\n                continue;\n            }\n            if (digits[i]\
    \ == 1) {\n                sb.append(\"i\");\n            } else if (digits[i]\
    \ == 2) {\n                sb.append(\"ii\");\n            } else if (digits[i]\
    \ == 3) {\n                sb.append(\"iii\");\n            } else if (digits[i]\
    \ == 4) {\n                sb.append(\"iv\");\n            } else if (digits[i]\
    \ == 5) {\n                sb.append(\"v\");\n            } else if (digits[i]\
    \ == 6) {\n                sb.append(\"vi\");\n            } else if (digits[i]\
    \ == 7) {\n                sb.append(\"vii\");\n            } else if (digits[i]\
    \ == 8) {\n                sb.append(\"viii\");\n            } else if (digits[i]\
    \ == 9) {\n                sb.append(\"ix\");\n            } else if (digits[i]\
    \ == 10) {\n                sb.append(\"x\");\n            } else if (digits[i]\
    \ == 11) {\n                sb.append(\"xi\");\n            } else if (digits[i]\
    \ == 12) {\n                sb.append(\"xii\");\n            } else if (digits[i]\
    \ == 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder sb = new StringBuilder();\n        int n = (int) number;\n\
    \        int i = 0;\n        while (n > 0) {\n            int d = n % 10;\n  \
    \          if (d == 4 || d == 9) {\n                sb.append(\"cd\");\n     \
    \       } else if (d == 5) {\n                sb.append(\"xv\");\n           \
    \ } else if (d == 6) {\n                sb.append(\"l\");\n            } else\
    \ if (d == 7) {\n                sb.append(\"xl\");\n            } else if (d\
    \ == 8) {\n                sb.append(\"xc\");\n            } else if (d == 1)\
    \ {\n                sb.append(\"i\");\n            } else if (d == 2) {\n   \
    \             sb.append(\"ii\");\n            } else if (d == 3) {\n         \
    \       sb.append(\"v\");\n            } else if (d == 0) {\n                sb.append(\"\
    x\");\n            }\n            n /= 10;\n            i++;\n        }\n    \
    \    return sb.toString().toLowerCase();", "        StringBuilder result = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        digits[0] = 1;\n\
    \        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n  \
    \      int i = 0;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % digits[i]);\n            number /= digits[i];\n            result.append(digit);\n\
    \            i++;\n        }\n        return result.reverse().toString();", " \
    \       StringBuilder roman = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        while (number > 0) {\n            int\
    \ digit = (int) (number % 10);\n            if (digit == 4 || digit == 9) {\n\
    \                roman.append(\"cd\");\n            } else if (digit == 5) {\n\
    \                roman.append(\"d\");\n            } else if (digit == 6) {\n\
    \                roman.append(\"m\");\n            } else if (digit == 7) {\n\
    \                roman.append(\"l\");\n            } else if (digit == 8) {\n\
    \                roman.append(\"x\");\n            } else if (digit == 9) {\n\
    \                roman.append(\"c\");\n            } else {\n                roman.append(digits[digit]);\n\
    \            }\n            number /= 10;\n        }\n        return roman.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] != 0) {\n             \
    \   sb.append(roman_digits[digits[i]]);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    int[] digits = new int[4];\n        int[] roman = {1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits = {1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed\
    \ = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000};\n        int[] roman_digits_reversed_2\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_3\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_4\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_5\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_6\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_7\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_8\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_9\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits_reversed_10\
    \ = {1000, 400, 500, 900, 100, 90, 50, 40, 10, 9", "        StringBuilder result\
    \ = new StringBuilder();\n        int[] digits = new int[4];\n        int[] roman\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int i = 0;\n\
    \        while (number > 0) {\n            digits[i] = number % 10;\n        \
    \    number /= 10;\n            i++;\n        }\n        for (int j = 0; j < digits.length;\
    \ j++) {\n            for (int k = 0; k < roman.length; k++) {\n             \
    \   if (digits[j] == roman[k]) {\n                    result.append(roman[k]);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result.toString().toLowerCase();", "        StringBuilder result\
    \ = new StringBuilder();\n        long num = number;\n        while (num > 0)\
    \ {\n            int digit = (int) (num % 10);\n            if (digit == 1) {\n\
    \                result.append(\"I\");\n            } else if (digit == 2) {\n\
    \                result.append(\"II\");\n            } else if (digit == 3) {\n\
    \                result.append(\"III\");\n            } else if (digit == 4) {\n\
    \                result.append(\"IV\");\n            } else if (digit == 5) {\n\
    \                result.append(\"V\");\n            } else if (digit == 6) {\n\
    \                result.append(\"VI\");\n            } else if (digit == 7) {\n\
    \                result.append(\"VII\");\n            } else if (digit == 8) {\n\
    \                result.append(\"VIII\");\n            } else if (digit == 9)\
    \ {\n                result.append(\"IX\");\n            } else if (digit == 10)\
    \ {\n                result.append(\"X\");\n            } else if (digit == 11)\
    \ {\n                result.append(\"XI\");\n            } else if (digit == 12)\
    \ {\n                result.append(\"XII\");\n            } else if (digit ==\
    \ 13) {\n                result.append(\"XIII\");\n            } else if (digit\
    \ == 14) {\n                result.append(\"XIV\");\n            } else if (digit\
    \ == 15) {\n                result.append(\"XV\");\n            } else if (digit\
    \ == 16) {\n                result.append(\"XVI\");\n            } else if (digit\
    \ == 17) {\n                result.append(\"XVII\");\n            } else if (digit\
    \ == 18) {\n                result.append(\"XVIII\");\n            } else if (digit\
    \ == 19) {\n                result.append(\"XIX\");\n            } else if (digit\
    \ == 20) {\n                result.append(\"XX\");\n            } else if (digit\
    \ == 30) {\n                result.append(\"XXX\");\n            } else if (digit\
    \ == 40) {\n                result.append(\"XL\");\n            } else if (digit\
    \ == 50) {\n                result.append(\"L\");\n            } else if (digit\
    \ == 60) {\n                result.append(\"LX\");\n            } else if (digit\
    \ ==", "        StringBuilder result = new StringBuilder();\n        if (number\
    \ < 1 || number > 1000) {\n            return \"\";\n        }\n        int[]\
    \ digits = new int[4];\n        digits[0] = number % 10;\n        number /= 10;\n\
    \        digits[1] = number % 10;\n        number /= 10;\n        digits[2] =\
    \ number % 10;\n        number /= 10;\n        digits[3] = number % 10;\n    \
    \    for (int i = 0; i < digits.length; i++) {\n            if (digits[i] == 0)\
    \ {\n                continue;\n            }\n            if (digits[i] == 1)\
    \ {\n                result.append(\"I\");\n            } else if (digits[i] ==\
    \ 2) {\n                result.append(\"II\");\n            } else if (digits[i]\
    \ == 3) {\n                result.append(\"III\");\n            } else if (digits[i]\
    \ == 4) {\n                result.append(\"IV\");\n            } else if (digits[i]\
    \ == 5) {\n                result.append(\"V\");\n            } else if (digits[i]\
    \ == 6) {\n                result.append(\"VI\");\n            } else if (digits[i]\
    \ == 7) {\n                result.append(\"VII\");\n            } else if (digits[i]\
    \ == 8) {\n                result.append(\"VIII\");\n            } else if (digits[i]\
    \ == 9) {\n                result.append(\"IX\");\n            } else if (digits[i]\
    \ == 10) {\n                result.append(\"X\");\n            } else if (digits[i]\
    \ == 11) {\n                result.append(\"XI\");\n            } else if (digits[i]\
    \ == 12) {\n                result.append(\"XII\");\n            } else if (digits[i]\
    \ == 13) {\n                result.append(\"XIII\");\n            } else if (digits[i]\
    \ == 14) {\n                result.append(\"XIV\");\n            } else if (digits[i]\
    \ == 15) {\n                result.append(\"XV\");\n            } else if (digits[i]\
    \ == 16) {", "        StringBuilder sb = new StringBuilder();\n        int[] digits\
    \ = new int[4];\n        int i = 0;\n        while (number > 0) {\n          \
    \  digits[i] = number % 10;\n            number /= 10;\n            i++;\n   \
    \     }\n        for (int j = 0; j < digits.length; j++) {\n            if (digits[j]\
    \ == 1) {\n                sb.append(\"i\");\n            } else if (digits[j]\
    \ == 2) {\n                sb.append(\"ii\");\n            } else if (digits[j]\
    \ == 3) {\n                sb.append(\"iii\");\n            } else if (digits[j]\
    \ == 4) {\n                sb.append(\"iv\");\n            } else if (digits[j]\
    \ == 5) {\n                sb.append(\"v\");\n            } else if (digits[j]\
    \ == 6) {\n                sb.append(\"vi\");\n            } else if (digits[j]\
    \ == 7) {\n                sb.append(\"vii\");\n            } else if (digits[j]\
    \ == 8) {\n                sb.append(\"viii\");\n            } else if (digits[j]\
    \ == 9) {\n                sb.append(\"ix\");\n            } else if (digits[j]\
    \ == 10) {\n                sb.append(\"x\");\n            } else if (digits[j]\
    \ == 11) {\n                sb.append(\"xi\");\n            } else if (digits[j]\
    \ == 12) {\n                sb.append(\"xii\");\n            } else if (digits[j]\
    \ == 13) {\n                sb.append(\"xiii\");\n            } else if (digits[j]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[j]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[j]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[j]\
    \ == 17) {\n                sb.append(\"xvii\");\n            } else if (digits[j]\
    \ == 18) {\n                sb.append(\"xviii\");\n            } else if (digits",
  "        StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        for (int i = 0; i < roman.length; i++) {\n            while (num >= roman[i])\
    \ {\n                result.append(\"M\");\n                num -= roman[i];\n\
    \            }\n        }\n        return result.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                sb.append(digits[i]);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] roman = {1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] num = {1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int i = 0;\n        while (number > 0)\
    \ {\n            if (number >= roman[i]) {\n                result.append(num[i]);\n\
    \                number -= roman[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n        digits[3] = 50;\n\
    \        int i = 0;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % 10);\n            result.append(digits[i]);\n            number /=\
    \ 10;\n            i++;\n        }\n        return result.toString();", "    \
    \    StringBuilder result = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int[] roman_digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1};\n        int[] roman_digits_rev = {1, 4, 5, 9, 10, 40, 50, 90, 100, 400,\
    \ 500, 900};\n        int i = 0;\n        while (number > 0) {\n            digits[i]\
    \ = (int) (number % 10);\n            number /= 10;\n            i++;\n      \
    \  }\n        for (int j = 0; j < digits.length; j++) {\n            if (digits[j]\
    \ != 0) {\n                for (int k = 0; k < roman_digits_rev.length; k++) {\n\
    \                    if (digits[j] == roman_digits_rev[k]) {\n               \
    \         result.append(roman_digits[k]);\n                        break;\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ result.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        int num = (int) number;\n        int[] digits = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] digits_rev = {1, 4, 5, 9, 10,\
    \ 40, 50, 90, 100, 400, 500, 900, 1000};\n        int i = 0;\n        while (num\
    \ > 0) {\n            if (num >= digits[i]) {\n                sb.append(digits_rev[i]);\n\
    \                num -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                sb.append(roman_digits[digits[i]]);\n\
    \            }\n        }\n        return sb.toString().toLowerCase();", "   \
    \     StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        int i = 0;\n        while (number > 0)\
    \ {\n            if (number >= digits[i]) {\n                result.append(digits[i]);\n\
    \                number -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder result = new StringBuilder();\n        if (number == 0)\
    \ {\n            return \"\";\n        }\n        if (number < 0) {\n        \
    \    return \"\";\n        }\n        if (number < 10) {\n            result.append(number);\n\
    \            return result.toString();\n        }\n        if (number < 100) {\n\
    \            result.append(\"x\");\n            number -= 10;\n        }\n   \
    \     if (number < 1000) {\n            result.append(\"c\");\n            number\
    \ -= 100;\n        }\n        if (number < 10000) {\n            result.append(\"\
    l\");\n            number -= 1000;\n        }\n        if (number < 100000) {\n\
    \            result.append(\"x\");\n            number -= 10000;\n        }\n\
    \        if (number < 1000000) {\n            result.append(\"c\");\n        \
    \    number -= 100000;\n        }\n        if (number < 10000000) {\n        \
    \    result.append(\"x\");\n            number -= 1000000;\n        }\n      \
    \  if (number < 100000000) {\n            result.append(\"c\");\n            number\
    \ -= 10000000;\n        }\n        if (number < 1000000000) {\n            result.append(\"\
    x\");\n            number -= 100000000;\n        }\n        if (number < 10000000000)\
    \ {\n            result.append(\"c\");\n            number -= 1000000000;\n  \
    \      }\n        if (number < 100000000000) {\n            result.append(\"x\"\
    );\n            number -= 10000000000;\n        }\n        if (number < 1000000000000)\
    \ {\n            result.append(\"c\");\n            number -= 100000000000;\n\
    \        }\n        if (number < 10000000000000) {\n            result.append(\"\
    x\");\n            number -= 1000000000000;\n        }\n        if (number < 100000000000000)\
    \ {\n            result.append(\"c\");\n            number -= 10000000000000;\n\
    \        }\n        if (number < 1000000000000000) {\n            result.append(\"\
    x\");\n            number -= 100000000000000;\n        }\n        if (number <\
    \ 10000000000000000) {\n            result.append(\"c\");\n            number\
    \ -= 1000000000000000;\n        }\n        if (number < 100000000000000000) {\n\
    \            result.append(\"", "        StringBuilder sb = new StringBuilder();\n\
    \        if (number < 1 || number > 1000) {\n            return \"\";\n      \
    \  }\n        while (number > 0) {\n            int digit = (int) (number % 10);\n\
    \            switch (digit) {\n                case 1:\n                    sb.append(\"\
    i\");\n                    break;\n                case 2:\n                 \
    \   sb.append(\"ii\");\n                    break;\n                case 3:\n\
    \                    sb.append(\"iii\");\n                    break;\n       \
    \         case 4:\n                    sb.append(\"iv\");\n                  \
    \  break;\n                case 5:\n                    sb.append(\"v\");\n  \
    \                  break;\n                case 6:\n                    sb.append(\"\
    vi\");\n                    break;\n                case 7:\n                \
    \    sb.append(\"vii\");\n                    break;\n                case 8:\n\
    \                    sb.append(\"viii\");\n                    break;\n      \
    \          case 9:\n                    sb.append(\"ix\");\n                 \
    \   break;\n                case 10:\n                    sb.append(\"x\");\n\
    \                    break;\n                case 11:\n                    sb.append(\"\
    xi\");\n                    break;\n                case 12:\n               \
    \     sb.append(\"xii\");\n                    break;\n                case 13:\n\
    \                    sb.append(\"xiii\");\n                    break;\n      \
    \          case 14:\n                    sb.append(\"xiv\");\n               \
    \     break;\n                case 15:\n                    sb.append(\"xv\");\n\
    \                    break;\n                case 16:\n                    sb.append(\"\
    xvi\");\n                    break;\n                case 17:\n              \
    \      sb.append(\"xvii\");\n                    break;\n                case\
    \ 18:\n                    sb.append(\"xviii\");\n                    break;\n\
    \                case 19:\n                    sb.append(\"xix\");\n         \
    \           break;\n                case 20:\n                    sb.append(\"\
    xx\");\n                    break;\n                case 21:\n               \
    \     sb.append(\"xxi\");\n                    break;\n                case 22:\n\
    \                    sb.append(\"xxii\");\n                    break;\n      \
    \          case 23:\n                    sb.append(\"xxiii\");\n             \
    \       break;\n                case 24:\n                    sb.append(\"xxiv\"\
    );\n                    break;\n                case 25:\n                   \
    \ sb.append(\"xxv\");\n                    break;\n                case 26:\n\
    \                    sb.append", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits = new\
    \ int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int i\
    \ = 0;\n        while (number > 0) {\n            digits[i] = number % 10;\n \
    \           number /= 10;\n            i++;\n        }\n        for (int j = 0;\
    \ j < digits.length; j++) {\n            for (int k = 0; k < roman.length; k++)\
    \ {\n                if (digits[j] == roman_digits[k]) {\n                   \
    \ result.append(roman[k]);\n                    break;\n                }\n  \
    \          }\n        }\n        return result.toString().toLowerCase();", " \
    \       StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        int i = 0;\n        while (number > 0) {\n    \
    \        if (number >= digits[i]) {\n                sb.append(digits[i]);\n \
    \               number -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n \
    \       int[] roman_digit = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1};\n        int[] roman_digit_2 = new int[]{1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_3 = new int[]{1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_4\
    \ = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n       \
    \ int[] roman_digit_5 = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] roman_digit_6 = new int[]{1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_7 = new int[]{1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_8\
    \ = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n       \
    \ int[] roman_digit_9 = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] roman_digit_10 = new int[]{1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digit_11 = new int[]{1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman", "  \
    \      StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 0;\n        digits[1] = 1;\n        digits[2] = 2;\n    \
    \    digits[3] = 3;\n        int[] roman = new int[] {1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < roman.length; i++)\
    \ {\n            while (number >= roman[i]) {\n                number -= roman[i];\n\
    \                sb.append(digits[i]);\n            }\n        }\n        return\
    \ sb.toString().toLowerCase();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = new int[] {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] roman_digits = new\
    \ int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[]\
    \ roman_digits_rev = new int[] {1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900,\
    \ 1000};\n        int i = 0;\n        while (number > 0) {\n            digits[i]\
    \ = number % 10;\n            number /= 10;\n            i++;\n        }\n   \
    \     for (int j = 0; j < digits.length; j++) {\n            for (int k = 0; k\
    \ < roman.length; k++) {\n                if (digits[j] == roman_digits[k]) {\n\
    \                    result.append(roman_digits_rev[k]);\n                   \
    \ break;\n                }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] =\
    \ 10;\n        digits[3] = 50;\n        int i = 0;\n        while (number > 0)\
    \ {\n            int digit = (int) (number % digits[i]);\n            number /=\
    \ digits[i];\n            result.append(digit);\n            i++;\n        }\n\
    \        return result.reverse().toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        int[] digits = new int[4];\n        digits[0] = number\
    \ % 10;\n        number /= 10;\n        digits[1] = number % 10;\n        number\
    \ /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n        digits[3]\
    \ = number % 10;\n        for (int i = 0; i < digits.length; i++) {\n        \
    \    if (digits[i] == 0) continue;\n            int j = i;\n            while\
    \ (j < digits.length - 1 && digits[j] == digits[j + 1]) {\n                digits[j]\
    \ = 0;\n                j++;\n            }\n            if (digits[j] == 0) continue;\n\
    \            if (digits[j] == 1) {\n                sb.append(\"i\");\n      \
    \      } else if (digits[j] == 5) {\n                sb.append(\"v\");\n     \
    \       } else if (digits[j] == 10) {\n                sb.append(\"x\");\n   \
    \         } else if (digits[j] == 50) {\n                sb.append(\"l\");\n \
    \           } else if (digits[j] == 100) {\n                sb.append(\"c\");\n\
    \            } else if (digits[j] == 500) {\n                sb.append(\"d\");\n\
    \            } else if (digits[j] == 1000) {\n                sb.append(\"m\"\
    );\n            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        for (int i = 0; i < digits.length; i++) {\n            digits[i] = (int)\
    \ (number % roman[i]);\n            number /= roman[i];\n        }\n        for\
    \ (int i = 0; i < digits.length; i++) {\n            if (digits[i] != 0) {\n \
    \               sb.append(digits[i]);\n            }\n            if (i < digits.length\
    \ - 1) {\n                sb.append(roman[digits.length - 1 - i]);\n         \
    \   }\n        }\n        return sb.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        int[]\
    \ roman = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n \
    \       for (int i = 0; i < digits.length; i++) {\n            digits[i] = (int)\
    \ (number / roman[i]);\n            number %= roman[i];\n        }\n        for\
    \ (int i = 0; i < digits.length; i++) {\n            if (digits[i] != 0) {\n \
    \               for (int j = 0; j < digits[i]; j++) {\n                    result.append(\"\
    M\");\n                }\n            }\n            if (i != digits.length -\
    \ 1) {\n                result.append(\"C\");\n            }\n        }\n    \
    \    return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            digits[i] = (int) (number / roman[i]);\n            number\
    \ -= digits[i] * roman[i];\n        }\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                result.append(digits[i]);\n\
    \            }\n            if (i < digits.length - 1) {\n                result.append(roman[digits.length\
    \ - 1]);\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int i = 0;\n        while (number > 0) {\n            digits[i]\
    \ = (int) (number % 10);\n            number /= 10;\n            i++;\n      \
    \  }\n        for (int j = 0; j < digits.length; j++) {\n            for (int\
    \ k = 0; k < roman.length; k++) {\n                if (digits[j] == roman[k])\
    \ {\n                    result.append(roman[k]);\n                    break;\n\
    \                }\n            }\n        }\n        return result.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = number % 10;\n        number /= 10;\n        digits[1] =\
    \ number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n    \
    \    number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] == 0) {\n             \
    \   continue;\n            }\n            if (digits[i] == 1) {\n            \
    \    sb.append(\"i\");\n            } else if (digits[i] == 2) {\n           \
    \     sb.append(\"ii\");\n            } else if (digits[i] == 3) {\n         \
    \       sb.append(\"iii\");\n            } else if (digits[i] == 4) {\n      \
    \          sb.append(\"iv\");\n            } else if (digits[i] == 5) {\n    \
    \            sb.append(\"v\");\n            } else if (digits[i] == 6) {\n   \
    \             sb.append(\"vi\");\n            } else if (digits[i] == 7) {\n \
    \               sb.append(\"vii\");\n            } else if (digits[i] == 8) {\n\
    \                sb.append(\"viii\");\n            } else if (digits[i] == 9)\
    \ {\n                sb.append(\"ix\");\n            } else if (digits[i] == 10)\
    \ {\n                sb.append(\"x\");\n            } else if (digits[i] == 11)\
    \ {\n                sb.append(\"xi\");\n            } else if (digits[i] == 12)\
    \ {\n                sb.append(\"xii\");\n            } else if (digits[i] ==\
    \ 13) {\n                sb.append(\"xiii\");\n            } else if (digits[i]\
    \ == 14) {\n                sb.append(\"xiv\");\n            } else if (digits[i]\
    \ == 15) {\n                sb.append(\"xv\");\n            } else if (digits[i]\
    \ == 16) {\n                sb.append(\"xvi\");\n            } else if (digits[i]",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] roman = new int[] {'M', 'CM', 'D', 'CD', 'C', 'XC',\
    \ 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'};\n        int i = 0;\n        while (num\
    \ > 0) {\n            if (num >= digits[i]) {\n                sb.append(roman[i]);\n\
    \                num -= digits[i];\n            } else {\n                i++;\n\
    \            }\n        }\n        return sb.toString().toLowerCase();", "   \
    \     StringBuilder sb = new StringBuilder();\n        int n = (int) number;\n\
    \        int[] digits = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n            while\
    \ (n >= digits[i]) {\n                sb.append(\"M\");\n                n -=\
    \ digits[i];\n            }\n        }\n        return sb.toString();", "    \
    \    StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        int i = 0;\n        while (number > 0) {\n    \
    \        int digit = (int) (number % 10);\n            sb.append(digits[i]);\n\
    \            number /= 10;\n            i++;\n            if (i == 4) {\n    \
    \            i = 0;\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        int[] roman = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        for (int i = 0; i < digits.length; i++) {\n            digits[i]\
    \ = (int) (number / roman[i]);\n            number -= digits[i] * roman[i];\n\
    \        }\n        for (int i = 0; i < digits.length; i++) {\n            if\
    \ (digits[i] != 0) {\n                sb.append(digits[i]);\n            }\n \
    \           if (i < digits.length - 1) {\n                sb.append(roman[digits.length\
    \ - i - 1]);\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder sb = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] roman = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        for (int i = 0; i < digits.length; i++) {\n            while (num >=\
    \ digits[i]) {\n                num -= digits[i];\n                sb.append(roman[i]);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                sb.append(romanDigits[digits[i]\
    \ - 1]);\n            }\n        }\n        return sb.toString().toLowerCase();",
  "        StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        digits[0] = number % 10;\n        number /= 10;\n        digits[1]\
    \ = number % 10;\n        number /= 10;\n        digits[2] = number % 10;\n  \
    \      number /= 10;\n        digits[3] = number % 10;\n        for (int i = 0;\
    \ i < digits.length; i++) {\n            if (digits[i] == 0) {\n             \
    \   continue;\n            }\n            if (i == 0) {\n                result.append(digits[i]);\n\
    \            } else if (digits[i] == 1) {\n                result.append(\"i\"\
    );\n            } else if (digits[i] == 2) {\n                result.append(\"\
    ii\");\n            } else if (digits[i] == 3) {\n                result.append(\"\
    iii\");\n            } else if (digits[i] == 4) {\n                result.append(\"\
    iv\");\n            } else if (digits[i] == 5) {\n                result.append(\"\
    v\");\n            } else if (digits[i] == 6) {\n                result.append(\"\
    vi\");\n            } else if (digits[i] == 7) {\n                result.append(\"\
    vii\");\n            } else if (digits[i] == 8) {\n                result.append(\"\
    viii\");\n            } else if (digits[i] == 9) {\n                result.append(\"\
    ix\");\n            } else if (digits[i] == 10) {\n                result.append(\"\
    x\");\n            } else if (digits[i] == 11) {\n                result.append(\"\
    xi\");\n            } else if (digits[i] == 12) {\n                result.append(\"\
    xii\");\n            } else if (digits[i] == 13) {\n                result.append(\"\
    xiii\");\n            } else if (digits[i] == 14) {\n                result.append(\"\
    xiv\");\n            } else if (digits[i] == 15) {\n                result.append(\"\
    xv\");\n            } else if (digits[i] == 16)", "        StringBuilder sb =\
    \ new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] == 0) {\n                continue;\n     \
    \       }\n            if (digits[i] == 1) {\n                sb.append(\"i\"\
    );\n            } else if (digits[i] == 2) {\n                sb.append(\"ii\"\
    );\n            } else if (digits[i] == 3) {\n                sb.append(\"iii\"\
    );\n            } else if (digits[i] == 4) {\n                sb.append(\"iv\"\
    );\n            } else if (digits[i] == 5) {\n                sb.append(\"v\"\
    );\n            } else if (digits[i] == 6) {\n                sb.append(\"vi\"\
    );\n            } else if (digits[i] == 7) {\n                sb.append(\"vii\"\
    );\n            } else if (digits[i] == 8) {\n                sb.append(\"viii\"\
    );\n            } else if (digits[i] == 9) {\n                sb.append(\"ix\"\
    );\n            } else if (digits[i] == 10) {\n                sb.append(\"x\"\
    );\n            } else if (digits[i] == 11) {\n                sb.append(\"xi\"\
    );\n            } else if (digits[i] == 12) {\n                sb.append(\"xii\"\
    );\n            } else if (digits[i] == 13) {\n                sb.append(\"xiii\"\
    );\n            } else if (digits[i] == 14) {\n                sb.append(\"xiv\"\
    );\n            } else if (digits[i] == 15) {\n                sb.append(\"xv\"\
    );\n            } else if (digits[i] == 16) {\n                sb.append(\"xvi\"\
    );\n            } else if (digits[i]", "        StringBuilder result = new StringBuilder();\n\
    \        int[] digits = new int[4];\n        int[] roman = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            digits[i] = number % roman[i];\n            number /= roman[i];\n\
    \        }\n        for (int i = 0; i < digits.length; i++) {\n            if\
    \ (digits[i] != 0) {\n                result.append(digits[i]);\n            }\n\
    \        }\n        return result.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int) number;\n        int[]\
    \ digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for\
    \ (int i = 0; i < digits.length; i++) {\n            while (num >= digits[i])\
    \ {\n                result.append(\"M\");\n                num -= digits[i];\n\
    \            }\n        }\n        return result.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int n = (int) number;\n        int[] digits\
    \ = new int[] {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n      \
    \  int[] roman = new int[] {'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX',\
    \ 'V', 'IV', 'I'};\n        int i = 0;\n        while (n > 0) {\n            if\
    \ (n >= digits[i]) {\n                n -= digits[i];\n                sb.append(roman[i]);\n\
    \            } else {\n                i++;\n            }\n        }\n      \
    \  return sb.toString().toLowerCase();", "        StringBuilder sb = new StringBuilder();\n\
    \        long num = number;\n        while (num > 0) {\n            int digit\
    \ = (int) (num % 10);\n            if (digit == 1) {\n                sb.append(\"\
    I\");\n            } else if (digit == 2) {\n                sb.append(\"II\"\
    );\n            } else if (digit == 3) {\n                sb.append(\"III\");\n\
    \            } else if (digit == 4) {\n                sb.append(\"IV\");\n  \
    \          } else if (digit == 5) {\n                sb.append(\"V\");\n     \
    \       } else if (digit == 6) {\n                sb.append(\"VI\");\n       \
    \     } else if (digit == 7) {\n                sb.append(\"VII\");\n        \
    \    } else if (digit == 8) {\n                sb.append(\"VIII\");\n        \
    \    } else if (digit == 9) {\n                sb.append(\"IX\");\n          \
    \  } else if (digit == 10) {\n                sb.append(\"X\");\n            }\
    \ else if (digit == 11) {\n                sb.append(\"XI\");\n            } else\
    \ if (digit == 12) {\n                sb.append(\"XII\");\n            } else\
    \ if (digit == 13) {\n                sb.append(\"XIII\");\n            } else\
    \ if (digit == 14) {\n                sb.append(\"XIV\");\n            } else\
    \ if (digit == 15) {\n                sb.append(\"XV\");\n            } else if\
    \ (digit == 16) {\n                sb.append(\"XVI\");\n            } else if\
    \ (digit == 17) {\n                sb.append(\"XVII\");\n            } else if\
    \ (digit == 18) {\n                sb.append(\"XVIII\");\n            } else if\
    \ (digit == 19) {\n                sb.append(\"XIX\");\n            } else if\
    \ (digit == 20) {\n                sb.append(\"XX\");\n            } else if (digit\
    \ == 30) {\n                sb.append(\"XXX\");\n            } else if (digit\
    \ == 40) {\n                sb.append(\"XL\");\n            } else if (digit ==\
    \ 50) {\n                sb.append(\"L\");\n            } else if (digit == 60)\
    \ {\n                sb.append(\"LX\");\n            } else if (digit", "    \
    \    StringBuilder result = new StringBuilder();\n        int num = (int) number;\n\
    \        int[] digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] tens = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n\
    \        int[] hundreds = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4,\
    \ 1};\n        int[] thousands = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1};\n        int[] hundreds_tens = {1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1};\n        int[] hundreds_thousands = {1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] thousands_tens = {1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] thousands_hundreds\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] thousands_thousands\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] thousands_hundreds_tens\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] thousands_hundreds_thousands\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] hundreds_tens_thousands\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] hundreds_thousands_tens\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        int[] hundreds_thousands_hundreds\
    \ = {1000, 900, 500, 400, 100, 90,", "        StringBuilder sb = new StringBuilder();\n\
    \        int num = (int) number;\n        while (num > 0) {\n            int digit\
    \ = num % 10;\n            if (digit == 1) {\n                sb.append(\"x\"\
    );\n            } else if (digit == 2) {\n                sb.append(\"x\");\n\
    \            } else if (digit == 3) {\n                sb.append(\"c\");\n   \
    \         } else if (digit == 4) {\n                sb.append(\"c\");\n      \
    \      } else if (digit == 5) {\n                sb.append(\"c\");\n         \
    \   } else if (digit == 6) {\n                sb.append(\"c\");\n            }\
    \ else if (digit == 7) {\n                sb.append(\"c\");\n            } else\
    \ if (digit == 8) {\n                sb.append(\"c\");\n            } else if\
    \ (digit == 9) {\n                sb.append(\"c\");\n            } else if (digit\
    \ == 10) {\n                sb.append(\"x\");\n            } else if (digit ==\
    \ 11) {\n                sb.append(\"x\");\n            } else if (digit == 12)\
    \ {\n                sb.append(\"x\");\n            } else if (digit == 13) {\n\
    \                sb.append(\"x\");\n            } else if (digit == 14) {\n  \
    \              sb.append(\"x\");\n            } else if (digit == 15) {\n    \
    \            sb.append(\"x\");\n            } else if (digit == 16) {\n      \
    \          sb.append(\"x\");\n            } else if (digit == 17) {\n        \
    \        sb.append(\"x\");\n            } else if (digit == 18) {\n          \
    \      sb.append(\"x\");\n            } else if (digit == 19) {\n            \
    \    sb.append(\"x\");\n            } else if (digit == 20) {\n              \
    \  sb.append(\"c\");\n            } else if (digit == 21) {\n                sb.append(\"\
    c\");\n            } else if (digit == 22) {\n                sb.append(\"c\"\
    );\n            } else if (digit == 23) {\n                sb.append(\"c\");\n\
    \            } else if (digit == 24) {\n                sb.append(\"c\");\n  \
    \          } else if (digit == 25) {\n                sb.append(\"c\");\n", " \
    \       StringBuilder result = new StringBuilder();\n        int[] digits = new\
    \ int[4];\n        int[] roman = new int[4];\n        digits[0] = number % 10;\n\
    \        number /= 10;\n        digits[1] = number % 10;\n        number /= 10;\n\
    \        digits[2] = number % 10;\n        number /= 10;\n        digits[3] =\
    \ number % 10;\n        roman[0] = 1000;\n        roman[1] = 900;\n        roman[2]\
    \ = 500;\n        roman[3] = 100;\n        for (int i = 0; i < 4; i++) {\n   \
    \         if (digits[i] != 0) {\n                for (int j = 0; j < roman[i];\
    \ j++) {\n                    result.append(\"M\");\n                }\n     \
    \       }\n            if (digits[i] != 0) {\n                for (int j = 0;\
    \ j < digits[i]; j++) {\n                    result.append(\"C\");\n         \
    \       }\n            }\n            if (digits[i] != 0) {\n                for\
    \ (int j = 0; j < digits[i]; j++) {\n                    result.append(\"X\");\n\
    \                }\n            }\n            if (digits[i] != 0) {\n       \
    \         for (int j = 0; j < digits[i]; j++) {\n                    result.append(\"\
    I\");\n                }\n            }\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int[] digits = new int[4];\n\
    \        digits[0] = 1;\n        digits[1] = 5;\n        digits[2] = 10;\n   \
    \     digits[3] = 50;\n        while (number > 0) {\n            int digit = (int)\
    \ (number % 10);\n            sb.append(digits[digit]);\n            number /=\
    \ 10;\n        }\n        return sb.toString();", "        StringBuilder sb =\
    \ new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                sb.append(roman_digits[digits[i]]);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int num = (int) number;\n        int[] roman\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        for (int\
    \ i = 0; i < roman.length; i++) {\n            while (num >= roman[i]) {\n   \
    \             sb.append(roman[i]);\n                num -= roman[i];\n       \
    \     }\n        }\n        return sb.toString().toLowerCase();", "        StringBuilder\
    \ result = new StringBuilder();\n        int num = (int)number;\n        while\
    \ (num > 0) {\n            int digit = num % 10;\n            if (digit == 1)\
    \ {\n                result.append(\"I\");\n            } else if (digit == 2)\
    \ {\n                result.append(\"II\");\n            } else if (digit == 3)\
    \ {\n                result.append(\"III\");\n            } else if (digit ==\
    \ 4) {\n                result.append(\"IV\");\n            } else if (digit ==\
    \ 5) {\n                result.append(\"V\");\n            } else if (digit ==\
    \ 6) {\n                result.append(\"VI\");\n            } else if (digit ==\
    \ 7) {\n                result.append(\"VII\");\n            } else if (digit\
    \ == 8) {\n                result.append(\"VIII\");\n            } else if (digit\
    \ == 9) {\n                result.append(\"IX\");\n            } else if (digit\
    \ == 10) {\n                result.append(\"X\");\n            } else if (digit\
    \ == 11) {\n                result.append(\"XI\");\n            } else if (digit\
    \ == 12) {\n                result.append(\"XII\");\n            } else if (digit\
    \ == 13) {\n                result.append(\"XIII\");\n            } else if (digit\
    \ == 14) {\n                result.append(\"XIV\");\n            } else if (digit\
    \ == 15) {\n                result.append(\"XV\");\n            } else if (digit\
    \ == 16) {\n                result.append(\"XVI\");\n            } else if (digit\
    \ == 17) {\n                result.append(\"XVII\");\n            } else if (digit\
    \ == 18) {\n                result.append(\"XVIII\");\n            } else if (digit\
    \ == 19) {\n                result.append(\"XIX\");\n            } else if (digit\
    \ == 20) {\n                result.append(\"XX\");\n            } else if (digit\
    \ == 30) {\n                result.append(\"XXX\");\n            } else if (digit\
    \ == 40) {\n                result.append(\"XL\");\n            } else if (digit\
    \ == 50) {\n                result.append(\"L\");\n            } else if (digit\
    \ == 60) {\n                result.append(\"LX\");\n            } else if (digit\
    \ == 70", "        StringBuilder result = new StringBuilder();\n        int num\
    \ = (int) number;\n        if (num < 1 || num > 1000) {\n            return \"\
    \";\n        }\n        for (int i = 0; i < num; i++) {\n            result.append(roman_numerals[num\
    \ - i - 1]);\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        int[] digits = new int[4];\n        digits[0]\
    \ = number % 10;\n        number /= 10;\n        digits[1] = number % 10;\n  \
    \      number /= 10;\n        digits[2] = number % 10;\n        number /= 10;\n\
    \        digits[3] = number % 10;\n        for (int i = 0; i < digits.length;\
    \ i++) {\n            if (digits[i] != 0) {\n                result.append(roman_digits[digits[i]]);\n\
    \            }\n        }\n        return result.toString().toLowerCase();"]
stop_tokens:
- "\n    }\n"

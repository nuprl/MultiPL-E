{
  "name": "HumanEval_130_tri",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n    // the last couple centuries. However, what people don't know is Tribonacci sequence.\n    // Tribonacci sequence is defined by the recurrence:\n    // tri(1) = 3\n    // tri(n) = 1 + n / 2, if n is even.\n    // tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    // For example:\n    // tri(2) = 1 + (2 / 2) = 2\n    // tri(4) = 3\n    // tri(3) = tri(2) + tri(1) + tri(4)\n    // = 2 + 3 + 3 = 8 \n    // You are given a non-negative integer number n, you have to a return an array array list of the \n    // first n + 1 numbers of the Tribonacci sequence.\n    // Examples:\n    // >>> tri(3)\n    // [1, 3, 2, 8]\n    public static ArrayList<Long> tri(long n) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(tri((3l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l)))));\n    assert(tri((4l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l)))));\n    assert(tri((5l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l, (long)15l)))));\n    assert(tri((6l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l)))));\n    assert(tri((7l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l)))));\n    assert(tri((8l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l)))));\n    assert(tri((9l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l)))));\n    assert(tri((20l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l, (long)6l, (long)48l, (long)7l, (long)63l, (long)8l, (long)80l, (long)9l, (long)99l, (long)10l, (long)120l, (long)11l)))));\n    assert(tri((0l)).equals((new ArrayList<Long>(Arrays.asList((long)1l)))));\n    assert(tri((1l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l)))));\n    }\n\n}\n",
  "completions": [
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(1L + (n / 2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(1L + (n / 2));\n        result.add(1L + (n / 2) + (n / 2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2) + tri(n - 1).get(3));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1) + result.get(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <= n; i++) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\");\n        }\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        result.add(1L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(1L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(1L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L + (n / 2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2 + 1));\n        } else {\n            result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2 + 1));\n            result.add(result.get(n / 2) + result.get(n / 2) + result.get(n / 2 + 1));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n - 2) + result.get(n - 1) + result.get(n));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n == 2) {\n            return result;\n        }\n        if (n == 3) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 3));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 3));\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 3));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2 + 1));\n        } else {\n            result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2 + 1));\n            result.add(result.get(n / 2) + result.get(n / 2) + result.get(n / 2 + 1));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i + 1));\n            }\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i < n; i += 2) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i + 1));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            ",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(1L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 5) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            n = n / 2;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            n = (n - 1) / 2;\n        }\n        for (int i = 0; i < n; i++) {\n            result.add(result.get(i) + result.get(i + 1) + result.get(i + 2));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1) + result.get(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <= n; i++) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n < 1) {\n            return result;\n        }\n        result.add(1L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\");\n        }\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        result.add(1L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2) + tri(n - 1).get(0) + tri(n - 1).get(1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n        result.add(tri(n - 3).get(0) + tri(n - 3).get(1) + tri(n - 3).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\");\n        }\n        if (n == 0) {\n            result.add(0L);\n            result.add(1L);\n            result.add(2L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(0L);\n            result.add(1L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(0L);\n        result.add(1L);\n        result.add(2L);\n        result.add(8L);\n        result.add(3L);\n        result.add(5L);\n        result.add(4L);\n        result.add(7L);\n        result.add(6L);\n        result.add(9L);\n        result.add(8L);\n        result.add(11L);\n        result.add(10L);\n        result.add(13L);\n        result.add(12L);\n        result.add(15L);\n        result.add(14L);\n        result.add(17L);\n        result.add(16L);\n        result.add(19L);\n        result.add(18L);\n        result.add(21L);\n        result.add(20L);\n        result.add(23L);\n        result.add(22L);\n        result.add(25L);\n        result.add(24L);\n        result.add(27L);\n        result.add(26L);\n        result.add(29L);\n        result.add(28L);\n        result.add(31L);\n        result.add(30L);\n        result.add(33L);\n        result.add(32L);\n        result.add(35L);\n        result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(5L);\n            result.add(8L);\n            result.add(13L);\n            result.add(21L);\n            result.add(34L);\n            result.add(55L);\n            result.add(89L);\n            result.add(144L);\n            result.add(233L);\n            result.add(377L);\n            result.add(610L);\n            result.add(987L);\n            result.add(1597L);\n            result.add(2584L);\n            result.add(4181L);\n            result.add(6765L);\n            result.add(10946L);\n            result.add(17711L);\n            result.add(28657L);\n            result.add(46368L);\n            result.add(75025L);\n            result.add(121393L);\n            result.add(196418L);\n            result.add(317811L);\n            result.add(514229L);\n            result.add(832040L);\n            result.add(1346269L);\n            result.add(2178309L);\n            result.add(3524578L);\n            result.add(5702887L);\n            result.add(9227465L);\n            result.add(14930352L);\n            result.add(24157817L);\n            result.add(39088169L);\n            result.add",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 5) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 6) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 7) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 8) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 9) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            ",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n - 2) + result.get(n - 1) + result.get(n));\n        } else {\n            result.add(result.get(n - 2) + result.get(n - 1) + result.get(n - 1) + result.get(n));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n < 1) {\n            return result;\n        }\n        result.add(1L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i + 1));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i + 1));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 5) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 3));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(result.get(result.size() - 1) + result.get(result.size() - 2));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(result.get(result.size() - 1) + result.get(result.size() - 2));\n            result.add(result.get(result.size() - 1) + result.get(result.size() - 2) + result.get(result.size() - 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n == 2) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n            return result;\n        } else {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1) + result.get(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 5) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 6) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 7) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 8) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 9) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n            return result;\n        } else {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1) + result.get(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2) + tri(n - 2).get(3));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2) + tri(n - 1).get(3));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(1L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(1L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            result.",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n == 2) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n - 2) + result.get(n - 1) + result.get(n));\n            return result;\n        }\n        result.add(result.get(n - 2) + result.get(n - 1) + result.get(n));\n        result.add(result.get(n - 1) + result.get(n));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(3L);\n            result.add(1L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(6L);\n        result.add(5L);\n        result.add(4L);\n        result.add(3L);\n        result.add(2L);\n        result.add(1L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L + n / 2);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(1L + (n / 2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(1L + (n / 2));\n        result.add(1L + (n / 2) + (n / 2));\n        result.add(1L + (n / 2) + (n / 2) + (n / 2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(8L);\n            result.add(5L);\n            result.add(4L);\n            result.add(7L);\n            result.add(6L);\n            result.add(9L);\n            result.add(10L);\n            result.add(12L);\n            result.add(11L);\n            result.add(14L);\n            result.add(13L);\n            result.add(16L);\n            result.add(15L);\n            result.add(18L);\n            result.add(17L);\n            result.add(20L);\n            result.add(19L);\n            result.add(22L);\n            result.add(21L);\n            result.add(24L);\n            result.add(23L);\n            result.add(26L);\n            result.add(25L);\n            result.add(28L);\n            result.add(27L);\n            result.add(30L);\n            result.add(29L);\n            result.add(32L);\n            result.add(31L);\n            result.add(34L);\n            result.add(33L);\n            result.add(36L);\n            result.add(35L);\n            result.add(38L);\n            result.add(37L);\n            result.add(40L);\n            result.add(39L);\n            result.add(42L);\n            result.add(41L);\n            result.add(44L);\n            result.add(43L);\n            result.add(46L);\n            result.add(45L);\n            result.add(48L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n            }\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <= n; i += 2) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i < n; i += 2) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i < n; i += 2) {\n            result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2 + 1));\n            return result;\n        }\n        result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2));\n        result.add(result.get(n / 2) + result.get(n / 2) + result.get(n / 2 + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\");\n        }\n        if (n == 0) {\n            result.add(0L);\n            result.add(1L);\n            result.add(1L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1) + result.get(n - 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n < 1) {\n            return result;\n        }\n        result.add(1L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n        } else {\n            result.add(3L);\n            result.add(1L);\n            result.add(2L);\n            for (int i = 2; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i < n + 1; i++) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L + n / 2);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i - 3));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(5L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(5L);\n            result.add(4L);\n            return result;\n        }\n        if (n == 5) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(5L);\n            result.add(4L);\n            result.add(3L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 6) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(5L);\n            result.add(4L);\n            result.add(3L);\n            result.add(8L);\n            result.add(7L);\n            return result;\n        }\n        if (n == 7) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(5L);\n            result.add(4L);\n",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n < 1) {\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i < n; i += 2) {\n                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n            }\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i < n; i += 2) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L + n / 2);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(1L + (n / 2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(1L + (n / 2));\n        result.add(1L + (n / 2) + (n / 2));\n        result.add(1L + (n / 2) + (n / 2) + (n / 2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(3L);\n            result.add(2",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L + n / 2);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result.add(1L);\n            result",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            result.add(2L);\n            result.add(3L);\n            result.add(8L);\n            result.add(1L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(5L);\n            result.add(8L);\n            result.add(13L);\n            result.add(21L);\n            result.add(34L);\n            result.add(55L);\n            result.add(89L);\n            result.add(144L);\n            result.add(233L);\n            result.add(377L);\n            result.add(610L);\n            result.add(987L);\n            result.add(1597L);\n            result.add(2584L);\n            result.add(4181L);\n            result.add(6765L);\n            result.add(10946L);\n            result.add(17711L);\n            result.add(28657L);\n            result.add(46368L);\n            result.add(75025L);\n            result.add(121393L);\n            result.add(196418L);\n            result.add(317811L);\n            result.add(514229L);\n            result.add(832040L);\n            result.add(1346269L);\n            result.add(2178309L);\n            result.add(3524578L);\n            result.add(5702887L);\n            result.add(9227465L);\n            result.add(14930352L);\n            result.add(24157817L);\n            result.add(39088169L);\n            result.add(63245986L);\n            result.add(102334155L);\n            result.add(165580141L);\n            result.add(267914296L);\n            result.add(433494437L);\n            result.add(701",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(1L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        if (n == 0) return result;\n        if (n == 1) return result;\n        if (n % 2 == 0) {\n            result.add(result.get(n / 2) + result.get(n / 2 - 1) + result.get(n / 2 + 1));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2).get(0) + tri(n - 2).get(1) + tri(n - 2).get(2));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1).get(0) + tri(n - 1).get(1) + tri(n - 1).get(2));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(1L);\n            result",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            for (int i = 3; i <= n; i += 2) {\n                result.add(result.get(i - 2) + result.get(i - 1) + result.get(i));\n            }\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 3) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 4) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 5) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 6) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 7) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 8) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n == 9) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        if (n == 0) {\n            return result;\n        }\n        if (n == 1) {\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(result.get(n - 1) + result.get(n - 2) + result.get(n + 1));\n            return result;\n        }\n        result.add(result.get(n - 1) + result.get(n - 2) + result.get(n - 1) + result.get(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            n = n / 2;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            n = (n - 1) / 2;\n        }\n        for (int i = 0; i < n; i++) {\n            result.add(result.get(i) + result.get(i + 1) + result.get(i + 2));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(n / 2);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        }\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 2) + tri(n - 1) + tri(n + 1));\n            return result;\n        } else {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0L);\n            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        if (n % 2 == 0) {\n            result.add(1L);\n            result.add(3L);\n            result.add(2L);\n            result.add(8L);\n            return result;\n        }\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result.add(1L);\n        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n        result"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
name: HumanEval_9_rolling_max
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // From a given array list of integers, generate an array array\
  \ list of rolling maximum element found until given moment\n    // in the sequence.\n\
  \    // >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n \
  \   public static ArrayList<Long> rollingMax(ArrayList<Long> numbers) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(rollingMax((new\
  \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(rollingMax((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
  \ (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
  \ (long)4l)))));\n    assert(rollingMax((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)3l, (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)4l, (long)4l, (long)4l)))));\n    assert(rollingMax((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)2l, (long)3l, (long)100l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l, (long)100l, (long)100l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        result.add(numbers.get(0));\n        for(int\
    \ i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        int size = numbers.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n         \
    \   for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j) >\
    \ result.get(i)) {\n                    result.set(i, numbers.get(j));\n     \
    \           }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < numbers.size(); i++)\
    \ {\n            result.add(numbers.get(i));\n            for(int j = i + 1; j\
    \ < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        result.add(numbers.get(0));\n        for (int\
    \ i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        int size = numbers.size();\n        if\
    \ (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) > result.get(result.size() - 1)) {\n\
    \                result.add(numbers.get(i));\n            } else {\n         \
    \       result.set(result.size() - 1, numbers.get(i));\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i + 1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n  \
    \              }\n            }\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        int size = numbers.size();\n\
    \        if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i+1;\
    \ j < numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (int i = 0; i < numbers.size(); i++) {\n \
    \           result.add(numbers.get(i));\n            for (int j = i + 1; j < numbers.size();\
    \ j++) {\n                if (numbers.get(j) > result.get(i)) {\n            \
    \        result.set(i, numbers.get(j));\n                }\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) return result;\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        if (numbers.size() ==\
    \ 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  for (int i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n\
    \        }\n        for (int i = size - 1; i >= 0; i--) {\n            result.set(i,\
    \ Math.max(result.get(i), result.get(i + 1)));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        int max_index = 0;\n        for (int\
    \ i = 0; i < numbers.size(); i++) {\n            if (numbers.get(i) > numbers.get(max_index))\
    \ {\n                max_index = i;\n            }\n        }\n        result.add(numbers.get(max_index));\n\
    \        for (int i = max_index + 1; i < numbers.size(); i++) {\n            if\
    \ (numbers.get(i) > numbers.get(max_index)) {\n                max_index = i;\n\
    \            }\n            result.add(numbers.get(max_index));\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        if (size == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < size; i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        if (numbers.size() ==\
    \ 0) return result;\n        result.add(numbers.get(0));\n        for (int i =\
    \ 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(numbers.get(0));\n        for(int\
    \ i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        int size = numbers.size();\n       \
    \ int i = 0;\n        while (i < size) {\n            result.add(numbers.get(i));\n\
    \            i++;\n        }\n        i = 0;\n        while (i < size) {\n   \
    \         result.add(Math.max(result.get(i), numbers.get(i)));\n            i++;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i+1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n  \
    \              }\n            }\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            if (numbers.get(i)\
    \ > result.get(result.size() - 1)) {\n                result.add(numbers.get(i));\n\
    \            } else {\n                result.set(result.size() - 1, numbers.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        int size = numbers.size();\n        if (size\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) return result;\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i+1;\
    \ j < numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if(numbers.size() == 0) return result;\n \
    \       result.add(numbers.get(0));\n        for(int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        if (size == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < size; i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        int size = numbers.size();\n\
    \        for (int i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (numbers.size() == 0) {\n          \
    \  return result;\n        }\n        result.add(numbers.get(0));\n        for\
    \ (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for(int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for(int j = i+1; j < numbers.size();\
    \ j++) {\n                if(numbers.get(j) > result.get(i)) {\n             \
    \       result.set(i, numbers.get(j));\n                }\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       int size = numbers.size();\n        int i = 0;\n        while (i < size)\
    \ {\n            result.add(numbers.get(i));\n            i++;\n            if\
    \ (i < size) {\n                result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            if (numbers.get(i)\
    \ > result.get(result.size() - 1)) {\n                result.add(numbers.get(i));\n\
    \            } else {\n                result.set(result.size() - 1, numbers.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        result.add(numbers.get(0));\n        for (int\
    \ i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        int size = numbers.size();\n        for\
    \ (int i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n    \
    \        for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            if (numbers.get(i)\
    \ > result.get(result.size() - 1)) {\n                result.add(numbers.get(i));\n\
    \            } else {\n                result.set(result.size() - 1, numbers.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ numbers.size(); j++) {\n                if (numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for(int j = i + 1; j < numbers.size();\
    \ j++) {\n                if(numbers.get(j) > numbers.get(i)) {\n            \
    \        result.set(i, numbers.get(j));\n                }\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) return result;\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  for (int i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if(numbers.size() == 0) return result;\n \
    \       result.add(numbers.get(0));\n        for(int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) return result;\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (int i = 0; i < numbers.size(); i++) {\n \
    \           result.add(numbers.get(i));\n            for (int j = i + 1; j < numbers.size();\
    \ j++) {\n                if (numbers.get(j) > numbers.get(i)) {\n           \
    \         result.set(i, numbers.get(j));\n                }\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        for (int i = 0; i < size; i++) {\n\
    \            result.add(numbers.get(i));\n        }\n        for (int i = size\
    \ - 1; i >= 0; i--) {\n            result.set(i, Math.max(result.get(i), result.get(i\
    \ + 1)));\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        result.add(numbers.get(0));\n        for(int\
    \ i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < numbers.size(); i++)\
    \ {\n            result.add(numbers.get(i));\n            for(int j = i + 1; j\
    \ < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        int size = numbers.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n         \
    \   for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j) >\
    \ result.get(i)) {\n                    result.set(i, numbers.get(j));\n     \
    \           }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) > result.get(result.size() - 1)) {\n\
    \                result.add(numbers.get(i));\n            } else {\n         \
    \       result.set(result.size() - 1, numbers.get(i));\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        if (size == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < size; i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i+1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n  \
    \              }\n            }\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        Long max = numbers.get(0);\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            if (numbers.get(i)\
    \ > max) {\n                max = numbers.get(i);\n            }\n        }\n\
    \        result.add(max);\n        for (int i = 1; i < numbers.size(); i++) {\n\
    \            if (numbers.get(i) > max) {\n                max = numbers.get(i);\n\
    \            } else {\n                max = max + numbers.get(i);\n         \
    \   }\n            result.add(max);\n        }\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < numbers.size(); i++)\
    \ {\n            result.add(numbers.get(i));\n            for(int j = i+1; j <\
    \ numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        int size = numbers.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n         \
    \   for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j) >\
    \ result.get(i)) {\n                    result.set(i, numbers.get(j));\n     \
    \           }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (int i = 0; i < numbers.size(); i++) {\n \
    \           result.add(numbers.get(i));\n            for (int j = i + 1; j < numbers.size();\
    \ j++) {\n                if (numbers.get(j) > result.get(i)) {\n            \
    \        result.set(i, numbers.get(j));\n                }\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) > result.get(result.size() - 1)) {\n\
    \                result.add(numbers.get(i));\n            } else {\n         \
    \       result.set(result.size() - 1, numbers.get(i));\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        if (size == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < size; i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for(int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if(numbers.size() == 0) {\n       \
    \     return result;\n        }\n        int size = numbers.size();\n        int\
    \ i = 0;\n        while(i < size) {\n            int j = i + 1;\n            while(j\
    \ < size) {\n                if(numbers.get(i) < numbers.get(j)) {\n         \
    \           numbers.set(i, numbers.get(j));\n                }\n             \
    \   j++;\n            }\n            result.add(numbers.get(i));\n           \
    \ i++;\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        for(int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for(int j = i + 1; j < numbers.size();\
    \ j++) {\n                if(numbers.get(j) > result.get(i)) {\n             \
    \       result.set(i, numbers.get(j));\n                }\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        for (int i = 0; i < size; i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ size; j++) {\n                if (numbers.get(j) > result.get(i)) {\n      \
    \              result.set(i, numbers.get(j));\n                }\n           \
    \ }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        for(int i = 0; i < numbers.size(); i++) {\n    \
    \        result.add(numbers.get(i));\n            for(int j = i + 1; j < numbers.size();\
    \ j++) {\n                if(numbers.get(j) > result.get(i)) {\n             \
    \       result.set(i, numbers.get(j));\n                }\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i+1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        for (int i = 0; i < size; i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ size; j++) {\n                if (numbers.get(j) > result.get(i)) {\n      \
    \              result.set(i, numbers.get(j));\n                }\n           \
    \ }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n   \
    \         result.add(numbers.get(i));\n            for (int j = i + 1; j < numbers.size();\
    \ j++) {\n                if (numbers.get(j) > numbers.get(i)) {\n           \
    \         result.set(i, numbers.get(j));\n                }\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if(numbers.size() == 0) {\n            return result;\n        }\n  \
    \      result.add(numbers.get(0));\n        for(int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for(int j = i + 1; j < numbers.size();\
    \ j++) {\n                if(numbers.get(j) > result.get(i)) {\n             \
    \       result.set(i, numbers.get(j));\n                }\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > result.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        int size = numbers.size();\n\
    \        if (size == 0) return result;\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        int size = numbers.size();\n        for\
    \ (int i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n    \
    \        for (int j = i + 1; j < size; j++) {\n                if (numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if(size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for(int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        Long max = numbers.get(0);\n       \
    \ for (int i = 1; i < numbers.size(); i++) {\n            if (numbers.get(i) >\
    \ max) {\n                max = numbers.get(i);\n            }\n        }\n  \
    \      result.add(max);\n        for (int i = 1; i < numbers.size(); i++) {\n\
    \            if (numbers.get(i) > max) {\n                max = numbers.get(i);\n\
    \            }\n            result.add(max);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n      \
    \      for (int j = i + 1; j < numbers.size(); j++) {\n                if (numbers.get(j)\
    \ > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n  \
    \              }\n            }\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (numbers.size() == 0) {\n          \
    \  return result;\n        }\n        result.add(numbers.get(0));\n        for\
    \ (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for(int j = i +\
    \ 1; j < numbers.size(); j++) {\n                if(numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        int size = numbers.size();\n        if (size ==\
    \ 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (numbers.size() == 0) {\n            return\
    \ result;\n        }\n        result.add(numbers.get(0));\n        for (int i\
    \ = 1; i < numbers.size(); i++) {\n            if (numbers.get(i) > result.get(result.size()\
    \ - 1)) {\n                result.add(numbers.get(i));\n            } else {\n\
    \                result.set(result.size() - 1, numbers.get(i));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        if (size == 0) return result;\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < size; i++) {\n\
    \            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < numbers.size(); i++)\
    \ {\n            result.add(numbers.get(i));\n            for(int j = i + 1; j\
    \ < numbers.size(); j++) {\n                if(numbers.get(j) > result.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        int size = numbers.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            result.add(numbers.get(i));\n        }\n\
    \        for (int i = size - 1; i >= 0; i--) {\n            result.set(i, Math.max(result.get(i),\
    \ result.get(i + 1)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add(numbers.get(i));\n            for (int j = i\
    \ + 1; j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for(int i = 0; i < numbers.size(); i++) {\n  \
    \          result.add(numbers.get(i));\n            for(int j = i + 1; j < numbers.size();\
    \ j++) {\n                if(numbers.get(j) > numbers.get(i)) {\n            \
    \        result.set(i, numbers.get(j));\n                }\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i+1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n  \
    \              }\n            }\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for(int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        result.add(numbers.get(0));\n     \
    \   for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) > result.get(result.size() - 1)) {\n\
    \                result.add(numbers.get(i));\n            } else {\n         \
    \       result.set(result.size() - 1, numbers.get(i));\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i+1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (numbers.size() == 0) {\n            return result;\n        }\n \
    \       result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int size = numbers.size();\n        for (int i = 0; i < size; i++) {\n\
    \            result.add(numbers.get(i));\n            for (int j = i + 1; j <\
    \ size; j++) {\n                if (numbers.get(j) > result.get(i)) {\n      \
    \              result.set(i, numbers.get(j));\n                }\n           \
    \ }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n   \
    \         result.add(numbers.get(i));\n            for (int j = i + 1; j < numbers.size();\
    \ j++) {\n                if (numbers.get(j) > numbers.get(i)) {\n           \
    \         result.set(i, numbers.get(j));\n                }\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) return result;\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for(int j = i + 1; j < numbers.size(); j++) {\n                if(numbers.get(j)\
    \ > result.get(i)) {\n                    result.set(i, numbers.get(j));\n   \
    \             }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if(numbers.size() == 0) return result;\n\
    \        result.add(numbers.get(0));\n        for(int i = 1; i < numbers.size();\
    \ i++) {\n            result.add(Math.max(result.get(i - 1), numbers.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n\
    \            for (int j = i + 1; j < numbers.size(); j++) {\n                if\
    \ (numbers.get(j) > numbers.get(i)) {\n                    result.set(i, numbers.get(j));\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        if (numbers.size()\
    \ == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if (size == 0) {\n            return result;\n        }\n        result.add(numbers.get(0));\n\
    \        for (int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = numbers.size();\n      \
    \  if(size == 0) return result;\n        result.add(numbers.get(0));\n       \
    \ for(int i = 1; i < size; i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (numbers.size() == 0) {\n      \
    \      return result;\n        }\n        result.add(numbers.get(0));\n      \
    \  for (int i = 1; i < numbers.size(); i++) {\n            result.add(Math.max(result.get(i\
    \ - 1), numbers.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (int i = 0; i < numbers.size(); i++)\
    \ {\n            result.add(numbers.get(i));\n            for (int j = i + 1;\
    \ j < numbers.size(); j++) {\n                if (numbers.get(j) > numbers.get(i))\
    \ {\n                    result.set(i, numbers.get(j));\n                }\n \
    \           }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

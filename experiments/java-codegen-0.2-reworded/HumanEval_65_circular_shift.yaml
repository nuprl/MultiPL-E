name: HumanEval_65_circular_shift
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Circular shift the digits of the integer x, shift the digits\
  \ right by shift\n    // and return the result as a string.\n    // If shift > number\
  \ of digits, return digits reversed.\n    // >>> circular_shift(12, 1)\n    // \"\
  21\"\n    // >>> circular_shift(12, 2)\n    // \"12\"\n    public static String\
  \ circularShift(long x, long shift) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(circularShift((100l),\
  \ (2l)).equals((\"001\")));\n    assert(circularShift((12l), (2l)).equals((\"12\"\
  )));\n    assert(circularShift((97l), (8l)).equals((\"79\")));\n    assert(circularShift((12l),\
  \ (1l)).equals((\"21\")));\n    assert(circularShift((11l), (101l)).equals((\"11\"\
  )));\n    }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        while (shift\
    \ > 0) {\n            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.insert(0,\
    \ n % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        long\
    \ n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n      \
    \      n /= 10;\n            shift--;\n        }\n        while (shift < 0) {\n\
    \            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.insert(0, x % 10);\n            x /= 10;\n   \
    \         shift++;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        sb.append(x);\n        return sb.reverse().toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        long mask = 1;\n      \
    \  for(int i = 0; i < shift; i++) {\n            sb.append(x & mask);\n      \
    \      x = x >> 1;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        long mask = 1;\n        for (int i = 0; i\
    \ < shift; i++) {\n            sb.append(x & mask);\n            x = x >> 1;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < shift;\
    \ i++) {\n            sb.append(x % 10);\n            x /= 10;\n        }\n  \
    \      sb.append(x);\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        while (shift < 0) {\n            sb.append(x % 10);\n        \
    \    x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.insert(0, x % 10);\n \
    \           x /= 10;\n            shift++;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.insert(0, x % 10);\n \
    \           x /= 10;\n            shift++;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.insert(0,\
    \ n % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        while\
    \ (shift > 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            shift--;\n      \
    \      n /= 10;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            shift++;\n            n /= 10;\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        while\
    \ (shift > 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = 1;\n        for (int i = 0; i < shift; i++) {\n         \
    \   sb.append(x & mask);\n            x = x >> 1;\n        }\n        sb.append(x);\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = 1L << shift;\n        for (int i = 0; i < shift; i++) {\n\
    \            sb.append((x & mask) == 0 ? '0' : '1');\n            x = x << 1;\n\
    \        }\n        sb.append((x & mask) == 0 ? '0' : '1');\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        sb.append(x);\n        return sb.reverse().toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        long n = x;\n       \
    \ while (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n\
    \            shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            shift--;\n\
    \            x /= 10;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            shift++;\n            x /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.insert(0, x % 10);\n            x /= 10;\n            shift++;\n     \
    \   }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        long n = x;\n        for(int\
    \ i = 0; i < shift; i++) {\n            sb.append(n % 10);\n            n /= 10;\n\
    \        }\n        sb.append(n);\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < shift; i++) {\n     \
    \       sb.append(x % 10);\n            x /= 10;\n        }\n        sb.append(x);\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        sb.append(x);\n        return sb.reverse().toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < shift;\
    \ i++) {\n            sb.append(x % 10);\n            x /= 10;\n        }\n  \
    \      sb.append(x);\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        for (int i = 0; i < shift; i++) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n        }\n        sb.append(n);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < shift; i++) {\n            sb.append(x % 10);\n \
    \           x /= 10;\n        }\n        sb.append(x);\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < shift;\
    \ i++) {\n            sb.append(x % 10);\n            x /= 10;\n        }\n  \
    \      sb.append(x);\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        long mask = 1;\n        for (int i = 0; i <\
    \ shift; i++) {\n            sb.append(x & mask);\n            x = x >> 1;\n \
    \       }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = (1L << shift) - 1;\n        long shifted = x >> shift;\n\
    \        long shifted_mask = mask << (shift - 1);\n        sb.append(shifted &\
    \ shifted_mask);\n        for (int i = 0; i < shift; i++) {\n            sb.append(shifted\
    \ & shifted_mask);\n            shifted = shifted >> 1;\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        while\
    \ (shift > 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        for (int i = 0; i < shift; i++) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n        }\n        sb.append(n);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            shift--;\n\
    \            x /= 10;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            shift++;\n            x /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = 0x1000000000000000L;\n        for(int i = 0; i < shift; i++)\
    \ {\n            sb.append(Long.toString((x & mask) >>> i));\n        }\n    \
    \    for(int i = 0; i < shift; i++) {\n            sb.append(Long.toString((x\
    \ & mask) << i));\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        while (shift < 0) {\n            sb.append(x % 10);\n        \
    \    x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        sb.append(n);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = 1;\n        for (int i = 0; i < shift; i++) {\n         \
    \   sb.append(x & mask);\n            x = x >>> 1;\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        while\
    \ (shift > 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift--;\n        }\n        sb.append(x);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            shift--;\n      \
    \      n /= 10;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            shift++;\n            n /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        long n = x;\n        while (shift > 0) {\n \
    \           sb.append(n % 10);\n            n /= 10;\n            shift--;\n \
    \       }\n        while (shift < 0) {\n            sb.append(n % 10);\n     \
    \       n /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < shift;\
    \ i++) {\n            sb.append(x % 10);\n            x /= 10;\n        }\n  \
    \      sb.append(x);\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        long mask = (1L << shift) - 1;\n        long\
    \ shifted = x >> shift;\n        long shifted_masked = shifted & mask;\n     \
    \   sb.append(shifted_masked);\n        while (shift > 0) {\n            shift--;\n\
    \            shifted = (shifted >> 1) & mask;\n            sb.append(shifted);\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.insert(0, x % 10);\n            x /= 10;\n            shift++;\n     \
    \   }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = 1;\n        for (int i = 0; i < shift; i++) {\n         \
    \   sb.append(x & mask);\n            x = x >> 1;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long mask = 1L << shift;\n\
    \        while (x > 0) {\n            sb.append(x & mask);\n            x = x\
    \ >>> shift;\n        }\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        sb.append(x);\n        return sb.reverse().toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            shift--;\n      \
    \      n /= 10;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            shift++;\n            n /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = (1L << shift) - 1;\n        long shifted = x >> shift;\n\
    \        for (int i = 0; i < shift; i++) {\n            sb.append((shifted & mask)\
    \ + \"\");\n            shifted = shifted >> 1;\n        }\n        sb.append(shifted);\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        for (int i = 0; i < shift; i++) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n        }\n        sb.append(n);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = (1L << shift) - 1;\n        for (int i = 0; i < shift; i++)\
    \ {\n            sb.append(x & mask);\n            x = x >> 1;\n        }\n  \
    \      sb.append(x);\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        long mask = 1L << shift;\n        while (x !=\
    \ 0) {\n            sb.append(x & mask);\n            x = x >>> shift;\n     \
    \   }\n        return sb.reverse().toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        long n = x;\n        while (shift > 0) {\n       \
    \     sb.append(n % 10);\n            n /= 10;\n            shift--;\n       \
    \ }\n        while (shift < 0) {\n            sb.insert(0, n % 10);\n        \
    \    n /= 10;\n            shift++;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.insert(0, x % 10);\n            x /= 10;\n            shift++;\n     \
    \   }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long mask = 1;\n        for (int i = 0; i < shift; i++) {\n         \
    \   sb.append(x & mask);\n            x = x >> 1;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.insert(0, n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.reverse().toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.insert(0, n % 10);\n            n /= 10;\n            shift++;\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        while (shift <\
    \ 0) {\n            sb.insert(0, (n % 10) + 48);\n            n /= 10;\n     \
    \       shift++;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        sb.append(x);\n        return sb.reverse().toString();", "   \
    \     StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n \
    \           sb.append(x % 10);\n            x /= 10;\n            shift--;\n \
    \       }\n        while (shift < 0) {\n            sb.append(x % 10);\n     \
    \       x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            shift--;\n            x /= 10;\n\
    \        }\n        while (shift < 0) {\n            sb.insert(0, x % 10);\n \
    \           shift++;\n            x /= 10;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        for\
    \ (int i = 0; i < shift; i++) {\n            sb.append(n % 10);\n            n\
    \ /= 10;\n        }\n        sb.append(n);\n        return sb.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.insert(0, x % 10);\n \
    \           x /= 10;\n            shift++;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.insert(0, x % 10);\n \
    \           x /= 10;\n            shift++;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        sb.append(n);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.insert(0, x % 10);\n \
    \           x /= 10;\n            shift++;\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long mask = 0xF;\n   \
    \     for (int i = 0; i < shift; i++) {\n            sb.append((x & mask) + \"\
    \");\n            x = x >> 4;\n        }\n        sb.append((x & mask) + \"\"\
    );\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < shift; i++) {\n            sb.append(x % 10);\n  \
    \          x /= 10;\n        }\n        sb.append(x);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.toString();", "        StringBuilder sb = new StringBuilder();\n        long\
    \ n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n      \
    \      n /= 10;\n            shift--;\n        }\n        sb.append(n);\n    \
    \    return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            shift--;\n            n /= 10;\n        }\n        while (shift <\
    \ 0) {\n            sb.append(n % 10);\n            shift++;\n            n /=\
    \ 10;\n        }\n        return sb.reverse().toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        long mask = 1;\n        for\
    \ (int i = 0; i < shift; i++) {\n            sb.append(x & mask);\n          \
    \  x = x >> 1;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            shift--;\n      \
    \      n /= 10;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            shift++;\n            n /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long n = x;\n        while (shift > 0) {\n            sb.append(n % 10);\n\
    \            n /= 10;\n            shift--;\n        }\n        sb.append(n);\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < shift; i++) {\n            sb.append(x % 10);\n \
    \           x /= 10;\n        }\n        while (x > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        sb.append(n);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long n = x;\n        while\
    \ (shift > 0) {\n            sb.append(n % 10);\n            n /= 10;\n      \
    \      shift--;\n        }\n        while (shift < 0) {\n            sb.append(n\
    \ % 10);\n            n /= 10;\n            shift++;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            shift--;\n\
    \            x /= 10;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            shift++;\n            x /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < shift; i++) {\n            sb.append(x % 10);\n  \
    \          x /= 10;\n        }\n        sb.append(x);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long mask = 1;\n     \
    \   for (int i = 0; i < shift; i++) {\n            sb.append(x & mask);\n    \
    \        x = x >> 1;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        while (shift > 0) {\n            sb.append(x\
    \ % 10);\n            x /= 10;\n            shift--;\n        }\n        while\
    \ (shift < 0) {\n            sb.append(x % 10);\n            x /= 10;\n      \
    \      shift++;\n        }\n        return sb.reverse().toString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n    \
    \        sb.append(x % 10);\n            x /= 10;\n            shift--;\n    \
    \    }\n        while (shift < 0) {\n            sb.append(x % 10);\n        \
    \    x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        while (shift < 0) {\n            sb.append(x % 10);\n    \
    \        x /= 10;\n            shift++;\n        }\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        while (shift > 0) {\n\
    \            sb.append(x % 10);\n            x /= 10;\n            shift--;\n\
    \        }\n        sb.append(x);\n        return sb.reverse().toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        long n = x;\n       \
    \ while (shift > 0) {\n            sb.append(n % 10);\n            shift--;\n\
    \            n /= 10;\n        }\n        sb.append(n);\n        return sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        long mask = 1;\n     \
    \   for (int i = 0; i < shift; i++) {\n            sb.append(x & mask);\n    \
    \        x = x >>> 1;\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < shift; i++) {\n      \
    \      sb.append(x % 10);\n            x /= 10;\n        }\n        sb.append(x);\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.insert(0, x % 10);\n            x /= 10;\n            shift++;\n     \
    \   }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            shift--;\n\
    \            x /= 10;\n        }\n        while (shift < 0) {\n            sb.append(x\
    \ % 10);\n            shift++;\n            x /= 10;\n        }\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.insert(0, x % 10);\n            x /= 10;\n            shift++;\n     \
    \   }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        sb.append(x);\n        return\
    \ sb.reverse().toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (shift > 0) {\n            sb.append(x % 10);\n            x /=\
    \ 10;\n            shift--;\n        }\n        while (shift < 0) {\n        \
    \    sb.append(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        return sb.reverse().toString();"]
stop_tokens:
- "\n    }\n"

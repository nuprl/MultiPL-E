{
  "name": "HumanEval_74_total_match",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            for (String s : lst1) {\n                if (s.length() < lst2.size()) {\n                    result.add(s);\n                }\n            }\n        } else {\n            for (String s : lst2) {\n                if (s.length() < lst1.size()) {\n                    result.add(s);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdtnl11jn.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            for (String s : lst1) {\n                if (lst2.contains(s)) {\n                    result.add(s);\n                }\n            }\n        } else {\n            for (String s : lst2) {\n                if (lst1.contains(s)) {\n                    result.add(s);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292699,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmn9b23n2.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (int i = 0; i < lst1.size(); i++) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<>();\n        for (int i = 0; i < lst1.size(); i++) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7ur50_6.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count += s1.length();\n                    break;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s : lst1) {\n            if(count == s.length()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292699,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiilkn00c.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n            if (count == l2) {\n                result.add(lst1.get(i));\n            }\n            count = 0;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjr799jj0.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fl3xlah.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s : lst1) {\n            count += s.length();\n        }\n        for(String s : lst2) {\n            count -= s.length();\n        }\n        for(String s : lst1) {\n            if(count < 0) {\n                break;\n            }\n            if(s.length() == count) {\n                result.add(s);\n                count = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms_y4ya3.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<>();\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                count++;\n            }\n        }\n        for (String s : lst2) {\n            if (!lst1.contains(s)) {\n                count++;\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        if (count == lst1.size() + lst2.size()) {\n            return lst2;\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        for (String s : lst2) {\n            if (!lst1.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa60h_fyk.java:56)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                    if(count > 1) {\n                        break;\n                    }\n                }\n            }\n            if(count == 1) {\n                result.add(s1);\n            }\n            count = 0;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiv6hgj17.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    count++;\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        if (count == lst1.size() && count == lst2.size()) {\n            return lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybkmjahi.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        if(count == lst1.size()) {\n            return result;\n        }\n        return lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0cs0ajyy.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int l1 = 0, l2 = 0;\n        for (String s : lst1) {\n            l1 += s.length();\n        }\n        for (String s : lst2) {\n            l2 += s.length();\n        }\n        if (l1 < l2) {\n            result.addAll(lst1);\n        } else if (l1 > l2) {\n            result.addAll(lst2);\n        } else {\n            result.addAll(lst1);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxwa_8w_x.java:57)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count < 0) {\n                break;\n            }\n            if (s.length() == count) {\n                result.add(s);\n                count = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwiked65p.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        for (String str : lst1) {\n            if (count == 0) {\n                result.add(str);\n                count = 0;\n            } else {\n                count -= str.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp827fqabu.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprt_98nly.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int count = 0;\n        for (String str : lst1) {\n            for (String str2 : lst2) {\n                if (str.length() == str2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        for (String str : lst1) {\n            for (String str2 : lst2) {\n                if (str.length() == str2.length()) {\n                    result.add(str);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8io7v0y.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprkxrkier.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int l1 = 0;\n        int l2 = 0;\n        for (String s : lst1) {\n            l1 += s.length();\n        }\n        for (String s : lst2) {\n            l2 += s.length();\n        }\n        if (l1 == l2) {\n            result.addAll(lst1);\n            return result;\n        }\n        for (String s : lst1) {\n            if (s.length() < l2) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4n2llkt.java:53)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkd55n9z_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        if (lst1.size() == 1 && lst2.size() == 1) {\n            if (lst1.get(0).length() == lst2.get(0).length()) {\n                return lst1;\n            } else {\n                return lst2;\n            }\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count < 0) {\n                break;\n            }\n            count -= s.length();\n            result.add(s);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30hygoh5.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int i = 0;\n        int j = 0;\n        while (i < l1 && j < l2) {\n            if (lst1.get(i).length() == lst2.get(j).length()) {\n                result.add(lst1.get(i));\n                i++;\n                j++;\n            } else if (lst1.get(i).length() < lst2.get(j).length()) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb7ae_8e.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                return result;\n            }\n            count -= s.length();\n        }\n        for (String s : lst2) {\n            count += s.length();\n        }\n        if (count == 0) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (String s : lst2) {\n            if (count == 0) {\n                result.add(s);\n                return result;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpha28nvh4.java:69)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    count += s1.length();\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwp8k7hyj.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            result = lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oz3uur8.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_11hub7.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if(l1 == 0 && l2 == 0) {\n            return result;\n        }\n        if(l1 > l2) {\n            for(int i = 0; i < l1; i++) {\n                if(lst2.contains(lst1.get(i))) {\n                    result.add(lst1.get(i));\n                }\n            }\n        } else {\n            for(int i = 0; i < l2; i++) {\n                if(lst1.contains(lst2.get(i))) {\n                    result.add(lst2.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdh31k2cg.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzjutm5o.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int l = l1;\n        if (l1 > l2) {\n            l = l2;\n        }\n        for (int i = 0; i < l; i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgj_lxky.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw83f2xsj.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                count++;\n            }\n        }\n        for (String s : lst2) {\n            if (!lst1.contains(s)) {\n                count++;\n            }\n        }\n        if (count == 0) {\n            return result;\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        for (String s : lst2) {\n            if (!lst1.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgddsq1n.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0)\n            return result;\n        if(lst1.size() == 0 || lst2.size() == 0)\n            return lst1.size() == 0 ? lst2 : lst1;\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int i = 0, j = 0;\n        while(i < l1 && j < l2) {\n            if(lst1.get(i).length() == lst2.get(j).length()) {\n                result.add(lst1.get(i));\n                i++;\n                j++;\n            } else if(lst1.get(i).length() < lst2.get(j).length()) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpit_prt.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if(lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for(int i = 0; i < lst1.size(); i++) {\n            if(lst1.get(i).length() < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            } else {\n                result.add(lst2.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n\tat Problem.totalMatch(tmpc4jhsfnj.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_11hub7.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            } else if (lst1.get(i).length() > lst2.get(i).length()) {\n                result.add(lst2.get(i));\n            } else {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptv2rjhyl.java:54)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if(count == lst1.size()) {\n            return lst1;\n        }\n        else if(count == lst2.size()) {\n            return lst2;\n        }\n        else {\n            ArrayList<String> result = new ArrayList<String>();\n            result.addAll(lst1);\n            result.addAll(lst2);\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfulu2akr.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String str1 : lst1) {\n            for(String str2 : lst2) {\n                if(str1.length() == str2.length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for(String str : lst1) {\n            if(count == lst2.size()) {\n                result.add(str);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp86g89yra.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            if (lst2.stream().filter(s::equals).count() > 0) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz90_x73m.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fl3xlah.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0)\n            return result;\n        if(lst1.size() == 0 || lst2.size() == 0)\n            return lst1.size() == 0 ? lst2 : lst1;\n        int count = 0;\n        for(String str1 : lst1) {\n            for(String str2 : lst2) {\n                if(str1.length() == str2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if(count == lst1.size() && count == lst2.size())\n            return lst1;\n        for(String str1 : lst1) {\n            for(String str2 : lst2) {\n                if(str1.length() == str2.length()) {\n                    result.add(str1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgh3plq6.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3xll1xv.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count1 = 0, count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 == count2) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count1 < count2) {\n                break;\n            }\n            if (count1 - s.length() < count2) {\n                result.add(s);\n            }\n            count1 -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02skaw42.java:54)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count < 0) {\n                break;\n            }\n            if (s.length() == count) {\n                result.add(s);\n                count = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa00ow9mt.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                count = 0;\n            } else {\n                count -= s.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8y1frz77.java:56)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk369dsz3.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count1 = 0;\n        int count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 == count2) {\n            return lst1;\n        }\n        if (count1 < count2) {\n            return lst2;\n        }\n        for (String s : lst1) {\n            if (count2 < count1) {\n                break;\n            }\n            if (count2 - s.length() < count1) {\n                result.add(s);\n                count1 -= s.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffsaepuc.java:61)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmsfmmg4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if(lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n\tat Problem.totalMatch(tmpbw02a2ty.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return lst1;\n        }\n        if (lst1.size() < lst2.size()) {\n            return lst2;\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjpp59qh.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count < 0) {\n                break;\n            }\n            if (s.length() == count) {\n                result.add(s);\n                count = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ejy6ue9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String str : lst1) {\n            if (count == 0) {\n                result.add(str);\n                break;\n            }\n            count -= str.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7syle8kn.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1: lst1) {\n            for(String s2: lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1: lst1) {\n            for(String s2: lst2) {\n                if(s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd_r_sn05.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        if(count == lst1.size() || count == lst2.size()) {\n            return lst1;\n        }\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpto0oyc1j.java:53)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1: lst1) {\n            for(String s2: lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0_9xm4f.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            for (int i = 0; i < lst1.size(); i++) {\n                if (lst1.get(i).length() < lst2.get(0).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n            return result;\n        }\n        if (lst2.size() > lst1.size()) {\n            for (int i = 0; i < lst2.size(); i++) {\n                if (lst2.get(i).length() < lst1.get(0).length()) {\n                    result.add(lst2.get(i));\n                }\n            }\n            return result;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst1.get(i).length() < lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsxpvixy.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() == s2.length()) {\n                    count++;\n                    if (count == 2) {\n                        result.add(s);\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzhhywea5.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if(lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        if(lst1.size() == lst2.size()) {\n            for(int i = 0; i < lst1.size(); i++) {\n                if(lst1.get(i).length() < lst2.get(i).length()) {\n                    result.add(lst1.get(i));\n                } else {\n                    result.add(lst2.get(i));\n                }\n            }\n            return result;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n\tat Problem.totalMatch(tmphopj3yo2.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxei_2vc.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count1 = 0, count2 = 0;\n        for(String str : lst1) {\n            count1 += str.length();\n        }\n        for(String str : lst2) {\n            count2 += str.length();\n        }\n        if(count1 == count2) {\n            result.addAll(lst1);\n        } else if(count1 < count2) {\n            result.addAll(lst2);\n        } else {\n            result.addAll(lst1);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdhagxi4h.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<>();\n        for (String str : lst1) {\n            for (String str2 : lst2) {\n                if (str.length() == str2.length()) {\n                    count += str.length();\n                    break;\n                }\n            }\n        }\n        for (String str : lst1) {\n            if (count == str.length()) {\n                result.add(str);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqqyyqya9.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxei_2vc.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count += s1.length();\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count -= s1.length();\n                }\n            }\n            if (count == 0) {\n                result.add(s1);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa81l55jc.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s : lst1) {\n            count = 0;\n            for(String s2 : lst2) {\n                if(s.length() == s2.length()) {\n                    count++;\n                }\n            }\n            if(count == lst2.size()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxnn1uqvg.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int i = 0;\n        int j = 0;\n        while(i < l1 && j < l2) {\n            if(lst1.get(i).length() == lst2.get(j).length()) {\n                result.add(lst1.get(i));\n                i++;\n                j++;\n            } else if(lst1.get(i).length() < lst2.get(j).length()) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7pklla8q.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < l1 && j < l2) {\n            if (lst1.get(i).length() == lst2.get(j).length()) {\n                count++;\n                result.add(lst1.get(i));\n                i++;\n                j++;\n            } else if (lst1.get(i).length() < lst2.get(j).length()) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        if (count == l2) {\n            result.addAll(lst1);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq1tu8bch.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return lst1;\n        }\n        if (lst1.size() < lst2.size()) {\n            return lst2;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymabxgff.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count--;\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst2;\n        }\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count--;\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst2;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02rcl0kz.java:74)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fl3xlah.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if (l1 == l2) {\n            return lst1;\n        }\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<>();\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdxhgx9f.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz5sn5r6.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int l3 = l1 + l2;\n        int[] arr = new int[l3];\n        for (int i = 0; i < l1; i++) {\n            arr[i] = lst1.get(i).length();\n        }\n        for (int i = 0; i < l2; i++) {\n            arr[i + l1] = lst2.get(i).length();\n        }\n        int i = 0;\n        while (i < l3) {\n            if (arr[i] == arr[i + l1]) {\n                i++;\n            } else {\n                int j = i + l1;\n                while (j < l3 && arr[i] < arr[j]) {\n                    j++;\n                }\n                if (j == l3) {\n                    result.add(lst1.get(i));\n                } else {\n                    i = j;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 4\n\tat Problem.totalMatch(tmp5mclkwlo.java:44)\n\tat Problem.main(tmp5mclkwlo.java:62)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        ArrayList<String> result = new ArrayList<>();\n        for (String str : lst1) {\n            if (count < 0) {\n                break;\n            }\n            if (str.length() == count) {\n                result.add(str);\n                count = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7duqnelq.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s : lst1) {\n            if(count == lst2.size()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6uzkbngy.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                break;\n            }\n            count -= s.length();\n            result.add(s);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2ko28l9.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count1 = 0;\n        int count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 < count2) {\n            return lst1;\n        } else if (count1 > count2) {\n            return lst2;\n        } else {\n            return lst1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnw6t1kx.java:58)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int l1 = 0, l2 = 0;\n        for(String s1 : lst1) {\n            l1 += s1.length();\n        }\n        for(String s2 : lst2) {\n            l2 += s2.length();\n        }\n        if(l1 == l2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if(l1 > l2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if(l2 > l1) {\n            result.addAll(lst2);\n            return result;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr_nhc3f4.java:54)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) return result;\n        if(lst1.size() == 0) return lst2;\n        if(lst2.size() == 0) return lst1;\n        if(lst1.size() > lst2.size()) {\n            for(int i = 0; i < lst1.size(); i++) {\n                if(lst1.get(i).length() < lst2.get(0).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n            return result;\n        }\n        else {\n            for(int i = 0; i < lst2.size(); i++) {\n                if(lst2.get(i).length() < lst1.get(0).length()) {\n                    result.add(lst2.get(i));\n                }\n            }\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3itb0b2.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            for (int i = 0; i < lst1.size(); i++) {\n                if (lst1.get(i).length() < lst2.get(0).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        } else {\n            for (int i = 0; i < lst2.size(); i++) {\n                if (lst2.get(i).length() < lst1.get(0).length()) {\n                    result.add(lst2.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8jorytkh.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fl3xlah.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if(count == lst1.size()) {\n            result.addAll(lst1);\n        }\n        else if(count == lst2.size()) {\n            result.addAll(lst2);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyw0fb6y.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3xll1xv.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            } else {\n                result.add(lst2.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hqmd1qq.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        ArrayList<String> result = new ArrayList<>();\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp37csqyjm.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstfs0bg0.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int l1 = 0, l2 = 0;\n        for (String s : lst1) {\n            l1 += s.length();\n        }\n        for (String s : lst2) {\n            l2 += s.length();\n        }\n        if (l1 == l2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (l1 > l2) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (String s : lst1) {\n            if (l2 < l1) {\n                result.add(s);\n                l1 -= s.length();\n            } else {\n                l2 -= s.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpab6_h93n.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                count = 0;\n            } else {\n                count -= s.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8y1frz77.java:56)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkd55n9z_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count1 = 0, count2 = 0;\n        for (String str : lst1) {\n            count1 += str.length();\n        }\n        for (String str : lst2) {\n            count2 += str.length();\n        }\n        if (count1 == count2) {\n            return lst1;\n        }\n        for (String str : lst1) {\n            if (count1 < count2) {\n                result.add(str);\n                count1 -= str.length();\n            } else {\n                count2 -= str.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7zoytg_.java:53)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            for (String t : lst2) {\n                if (s.length() == t.length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == lst1.size()) {\n            result = lst1;\n        } else if (count == lst2.size()) {\n            result = lst2;\n        } else {\n            for (String s : lst1) {\n                for (String t : lst2) {\n                    if (s.length() == t.length()) {\n                        result.add(s);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv739bkm5.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return lst1;\n        }\n        if (lst1.size() < lst2.size()) {\n            return lst2;\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_fohqfv.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    result.add(str1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhig2ekg.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            count = 0;\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    count = count + s.length();\n                } else {\n                    count = count + s2.length();\n                }\n            }\n            if (count < lst2.size()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttrcyh_y.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() == lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                count++;\n            }\n        }\n        for (String s : lst2) {\n            if (!lst1.contains(s)) {\n                count++;\n            }\n        }\n        if (count == 0) {\n            return result;\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        for (String s : lst2) {\n            if (!lst1.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl_9qf22c.java:63)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fl3xlah.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int count = 0;\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    count += str1.length();\n                    break;\n                }\n            }\n        }\n        for (String str : lst1) {\n            if (count < str.length()) {\n                result.add(str);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg5cnw7_1.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < l1 && j < l2) {\n            if (lst1.get(i).length() == lst2.get(j).length()) {\n                count += lst1.get(i).length();\n                i++;\n                j++;\n            } else if (lst1.get(i).length() < lst2.get(j).length()) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        if (count == l1) {\n            result.addAll(lst1);\n        } else if (count == l2) {\n            result.addAll(lst2);\n        } else {\n            result.addAll(lst1);\n            result.addAll(lst2);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv97rj98n.java:62)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<>();\n        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsik_wn1.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2a2q_9k.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        return lst2;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbazu5dc.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s : lst1) {\n            for(String t : lst2) {\n                if(s.length() == t.length()) {\n                    count++;\n                    result.add(s);\n                }\n            }\n        }\n        if(count == lst1.size()) {\n            return lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gh39id8.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() > lst2.size()) {\n            return lst1;\n        }\n        if(lst2.size() > lst1.size()) {\n            return lst2;\n        }\n        int count = 0;\n        for(String s : lst1) {\n            if(lst2.contains(s)) {\n                count++;\n            }\n        }\n        for(String s : lst2) {\n            if(lst1.contains(s)) {\n                count++;\n            }\n        }\n        if(count == lst1.size() && count == lst2.size()) {\n            return lst1;\n        }\n        if(count == lst1.size()) {\n            return lst2;\n        }\n        if(count == lst2.size()) {\n            return lst1;\n        }\n        for(String s : lst1) {\n            if(lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        for(String s : lst2) {\n            if(lst1.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0bnrvrlq.java:68)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == lst1.size() && count == lst2.size()) {\n            return lst1;\n        }\n        if (count == lst1.size()) {\n            return lst2;\n        }\n        if (count == lst2.size()) {\n            return lst1;\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptkuhqk7e.java:62)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwil70tyr.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    count += str1.length();\n                    break;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for (String str : lst1) {\n            if (count == str.length()) {\n                result.add(str);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua3yxs7l.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (s.length() == count) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpscmshjm7.java:53)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int l1 = 0;\n        int l2 = 0;\n        int l3 = 0;\n        int l4 = 0;\n        int l5 = 0;\n        int l6 = 0;\n        int l7 = 0;\n        int l8 = 0;\n        int l9 = 0;\n        int l10 = 0;\n        int l11 = 0;\n        int l12 = 0;\n        int l13 = 0;\n        int l14 = 0;\n        int l15 = 0;\n        int l16 = 0;\n        int l17 = 0;\n        int l18 = 0;\n        int l19 = 0;\n        int l20 = 0;\n        int l21 = 0;\n        int l22 = 0;\n        int l23 = 0;\n        int l24 = 0;\n        int l25 = 0;\n        int l26 = 0;\n        int l27 = 0;\n        int l28 = 0;\n        int l29 = 0;\n        int l30 = 0;\n        int l31 = 0;\n        int l32 = 0;\n        int l33 = 0;\n        int l34 = 0;\n        int l35 = 0;\n        int l36 = 0;\n        int l37 = 0;\n        int l38 = 0;\n        int l39 = 0;\n        int l40 = 0;\n        int l41 = 0;\n        int l42 = 0;\n        int l43 = 0;\n        int l44 = 0;\n        int l45 = 0;\n        int l46 = 0;\n        int l47 = 0;\n        int l48 = 0;\n        int l49 = 0;\n        int l50 = 0;\n        int l51 = 0;\n        int l52 = 0;\n        int l53 = 0;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292706,
      "stdout": "",
      "stderr": "/tmp/tmp_ewcrjm1.java:85: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() > lst2.size()) {\n            return lst1;\n        }\n        if(lst1.size() < lst2.size()) {\n            return lst2;\n        }\n        for(int i = 0; i < lst1.size(); i++) {\n            if(lst1.get(i).length() < lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg48el9r4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count += s1.length();\n                } else {\n                    count += s2.length();\n                }\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            if(count == 0) {\n                result.add(s1);\n            }\n            count = 0;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrxff8br.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count1 = 0, count2 = 0;\n        for(String s : lst1) {\n            count1 += s.length();\n        }\n        for(String s : lst2) {\n            count2 += s.length();\n        }\n        if(count1 < count2) {\n            return lst1;\n        } else if(count1 > count2) {\n            return lst2;\n        } else {\n            return lst1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count1 = 0;\n        int count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 < count2) {\n            for (String s : lst1) {\n                if (s.length() < count2) {\n                    result.add(s);\n                }\n            }\n        } else {\n            for (String s : lst2) {\n                if (s.length() < count1) {\n                    result.add(s);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvsf5k_n.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String str : lst1) {\n            count = 0;\n            for (String str2 : lst2) {\n                if (str.length() == str2.length()) {\n                    count++;\n                }\n            }\n            if (count == lst2.size()) {\n                result.add(str);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8dsxsj63.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if(l1 == 0 || l2 == 0) {\n            return result;\n        }\n        if(l1 > l2) {\n            for(int i = 0; i < l1; i++) {\n                if(lst2.contains(lst1.get(i))) {\n                    result.add(lst1.get(i));\n                }\n            }\n        } else {\n            for(int i = 0; i < l2; i++) {\n                if(lst1.contains(lst2.get(i))) {\n                    result.add(lst2.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp48a4x40_.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (int i = 0; i < lst1.size(); i++) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < lst1.size(); i++) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0jnb3kpl.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count += s1.length();\n                    break;\n                } else if (s1.length() == s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        if (count == 0) {\n            return result;\n        } else {\n            return lst1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqcgol42.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count += s1.length();\n                } else {\n                    count += s2.length();\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count -= s1.length();\n                } else {\n                    count -= s2.length();\n                }\n                if (count == 0) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanuk1lc7.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == l1) {\n            result = lst1;\n        } else if (count == l2) {\n            result = lst2;\n        } else {\n            for (int i = 0; i < l1; i++) {\n                for (int j = 0; j < l2; j++) {\n                    if (lst1.get(i).length() == lst2.get(j).length()) {\n                        result.add(lst1.get(i));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypisqe9g.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int lst1_len = lst1.size();\n        int lst2_len = lst2.size();\n        if(lst1_len == lst2_len) {\n            result.addAll(lst1);\n            return result;\n        }\n        for(int i = 0; i < lst1_len; i++) {\n            if(lst1.get(i).length() < lst2.get(0).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ti359w6.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count += s1.length();\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmjgt86l.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int count = 0;\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == lst1.size()) {\n            result = lst1;\n        } else if (count == lst2.size()) {\n            result = lst2;\n        } else {\n            for (String s : lst1) {\n                for (String s2 : lst2) {\n                    if (s.length() == s2.length()) {\n                        count++;\n                    }\n                }\n            }\n            if (count == lst1.size() + lst2.size()) {\n                result = lst1;\n            } else {\n                result = lst2;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwa54et9.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count += s1.length();\n                    break;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<>();\n        for(String s : lst1) {\n            if(count == s.length()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfq11gov0.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    result.add(str1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.totalMatch(tmpti7qi6wv.java:32)\n\tat Problem.",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int lst1_len = lst1.size();\n        int lst2_len = lst2.size();\n        int lst1_count = 0;\n        int lst2_count = 0;\n        for (int i = 0; i < lst1_len; i++) {\n            for (int j = 0; j < lst2_len; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    lst1_count += lst1.get(i).length();\n                    lst2_count += lst2.get(j).length();\n                    if (lst1_count > lst2_count) {\n                        result.add(lst1.get(i));\n                        break;\n                    } else if (lst1_count < lst2_count) {\n                        result.add(lst2.get(j));\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuw4yx6fd.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int count1 = 0;\n        int count2 = 0;\n        for(String str : lst1) {\n            count1 += str.length();\n        }\n        for(String str : lst2) {\n            count2 += str.length();\n        }\n        if(count1 < count2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if(count1 > count2) {\n            result.addAll(lst2);\n            return result;\n        }\n        for(String str : lst1) {\n            if(lst2.contains(str)) {\n                result.add(str);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92hgr6pz.java:62)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int count = 0;\n        for(String s : lst1) {\n            count += s.length();\n        }\n        for(String s : lst2) {\n            count -= s.length();\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        for(String s : lst1) {\n            if(count < 0) {\n                break;\n            }\n            count -= s.length();\n            result.add(s);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe3wzemgj.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2y4uanoj.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count1 = 0, count2 = 0;\n        for(String s : lst1) {\n            count1 += s.length();\n        }\n        for(String s : lst2) {\n            count2 += s.length();\n        }\n        if(count1 == count2) {\n            result.addAll(lst1);\n        }\n        else if(count1 < count2) {\n            result.addAll(lst1);\n        }\n        else {\n            result.addAll(lst2);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgmerixa.java:57)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if (l1 == 0 && l2 == 0) {\n            return result;\n        }\n        if (l1 > l2) {\n            for (int i = 0; i < l1; i++) {\n                if (lst1.get(i).length() < lst2.get(0).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n            return result;\n        }\n        if (l1 < l2) {\n            for (int i = 0; i < l2; i++) {\n                if (lst2.get(i).length() < lst1.get(0).length()) {\n                    result.add(lst2.get(i));\n                }\n            }\n            return result;\n        }\n        for (int i = 0; i < l1; i++) {\n            if (lst1.get(i).length() < lst2.get(0).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        for (int i = 0; i < l2; i++) {\n            if (lst2.get(i).length() < lst1.get(0).length()) {\n                result.add(lst2.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplsrszerm.java:60)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count1 = 0;\n        int count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 == count2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (count1 < count2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (count1 > count2) {\n            result.addAll(lst2);\n            return result;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96udpt2d.java:64)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int count = 0;\n        for(String str : lst1) {\n            count += str.length();\n        }\n        for(String str : lst2) {\n            count -= str.length();\n        }\n        for(String str : lst1) {\n            if(count == 0) {\n                result.add(str);\n                break;\n            }\n            count -= str.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjb2z_nz.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == l1) {\n            result.addAll(lst1);\n        } else if (count == l2) {\n            result.addAll(lst2);\n        } else {\n            for (int i = 0; i < l1; i++) {\n                for (int j = 0; j < l2; j++) {\n                    if (lst1.get(i).length() == lst2.get(j).length()) {\n                        result.add(lst1.get(i));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9bgrlhz.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<>();\n        for (String str : lst1) {\n            for (String str2 : lst2) {\n                if (str.length() < str2.length()) {\n                    count += str.length();\n                } else {\n                    count += str2.length();\n                }\n            }\n            if (count < lst2.size()) {\n                result.add(str);\n            }\n            count = 0;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_obrnw6.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        for (String s : lst1) {\n            if (lst2.stream().filter(s::equals).count() == 0) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx21n3h5r.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == lst1.size() && count == lst2.size()) {\n            return lst1;\n        }\n        if (count == lst1.size()) {\n            return lst2;\n        }\n        if (count == lst2.size()) {\n            return lst1;\n        }\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    result.add(str1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5_2ribhp.java:62)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count < 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnz065j92.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            if (count < lst2.size()) {\n                if (s.length() == lst2.get(count).length()) {\n                    result.add(s);\n                    count++;\n                }\n            } else {\n                break;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnd60hjyu.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0) {\n            return lst2;\n        }\n        if(lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for(int i = 0; i < lst1.size(); i++) {\n            for(int j = 0; j < lst2.size(); j++) {\n                if(lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if(count == lst1.size() || count == lst2.size()) {\n            result.addAll(lst1);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprgffn2a7.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count1 = 0, count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 < count2) {\n            return lst1;\n        } else if (count1 > count2) {\n            return lst2;\n        } else {\n            return lst1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s : lst1) {\n            count += s.length();\n        }\n        for(String s : lst2) {\n            count -= s.length();\n        }\n        if(count < 0) {\n            result.addAll(lst1);\n        } else {\n            result.addAll(lst2);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy24fn5nz.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count < 0) {\n                break;\n            }\n            count -= s.length();\n            result.add(s);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobnl9o5p.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            return totalMatch(lst2, lst1);\n        }\n        if (lst1.size() < lst2.size()) {\n            return totalMatch(lst1, lst2);\n        }\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstfs0bg0.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1: lst1) {\n            for(String s2: lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        else {\n            ArrayList<String> result = new ArrayList<String>();\n            for(String s1: lst1) {\n                for(String s2: lst2) {\n                    if(s1.length() == s2.length()) {\n                        result.add(s1);\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyga699k5.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s : lst1) {\n            for(String s2 : lst2) {\n                if(s.length() < s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpop1x7e8a.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_d2728b.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(int i = 0; i < l1; i++) {\n            for(int j = 0; j < l2; j++) {\n                if(lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                    result.add(lst1.get(i));\n                    break;\n                }\n            }\n        }\n        if(count == l1) {\n            return lst1;\n        }\n        else if(count == l2) {\n            return lst2;\n        }\n        else {\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_oz9x79.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmtsp_9o.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkd55n9z_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int count = 0;\n        for(String s : lst1) {\n            count = 0;\n            for(String s2 : lst2) {\n                if(s.length() == s2.length()) {\n                    count++;\n                }\n            }\n            if(count == lst2.size()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_hn6_7y8.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if (l1 == 0 || l2 == 0) {\n            return result;\n        }\n        if (l1 > l2) {\n            return lst1;\n        }\n        if (l2 > l1) {\n            return lst2;\n        }\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == l1) {\n            return lst1;\n        }\n        if (count == l2) {\n            return lst2;\n        }\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71vxb0nz.java:61)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkd55n9z_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count = 0;\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if (count == lst1.size() && count == lst2.size()) {\n            return lst1;\n        }\n        for (String str1 : lst1) {\n            for (String str2 : lst2) {\n                if (str1.length() == str2.length()) {\n                    result.add(str1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ioai19v.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1: lst1) {\n            for(String s2: lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0_9xm4f.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count += s1.length();\n                    break;\n                }\n                else if(s1.length() == s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        else {\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd82n98s.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        if (count == lst1.size() && count == lst2.size()) {\n            return result;\n        }\n        return lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleerm7lq.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if (l1 == l2) {\n            result = lst1;\n        } else {\n            for (String s1 : lst1) {\n                for (String s2 : lst2) {\n                    if (s1.length() == s2.length()) {\n                        result.add(s1);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhiqd1b6.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        } else if (count == l1) {\n            return lst2;\n        } else {\n            ArrayList<String> result = new ArrayList<String>();\n            for (int i = 0; i < l1; i++) {\n                for (int j = 0; j < l2; j++) {\n                    if (lst1.get(i).length() == lst2.get(j).length()) {\n                        result.add(lst1.get(i));\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ye0aocc.java:53)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int l1 = 0, l2 = 0;\n        for (String s : lst1) {\n            l1 += s.length();\n        }\n        for (String s : lst2) {\n            l2 += s.length();\n        }\n        if (l1 == l2) {\n            result.addAll(lst1);\n        } else if (l1 < l2) {\n            result.addAll(lst1);\n        } else {\n            result.addAll(lst2);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpknv45snb.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            count1 += s1.length();\n        }\n        for(String s2 : lst2) {\n            count2 += s2.length();\n        }\n        if(count1 < count2) {\n            result.addAll(lst1);\n        }\n        else if(count1 > count2) {\n            result.addAll(lst2);\n        }\n        else {\n            result.addAll(lst1);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            for (String s : lst1) {\n                if (s.length() <= lst2.size()) {\n                    result.add(s);\n                }\n            }\n        } else {\n            for (String s : lst2) {\n                if (s.length() <= lst1.size()) {\n                    result.add(s);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt06eyuif.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count += s1.length();\n                } else {\n                    count += s2.length();\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count -= s1.length();\n                } else {\n                    count -= s2.length();\n                }\n                if(count == 0) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfvxmn08.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count1 = 0;\n        int count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 == count2) {\n            return lst1;\n        }\n        if (count1 < count2) {\n            return lst2;\n        }\n        for (String s : lst1) {\n            if (count2 < count1) {\n                break;\n            }\n            if (count2 == count1) {\n                result.add(s);\n            }\n            count1 -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfm0q95d.java:61)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count += s1.length();\n                } else {\n                    count += s2.length();\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count -= s1.length();\n                } else {\n                    count -= s2.length();\n                }\n                if (count == 0) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanuk1lc7.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        for (String str : lst1) {\n            if (count < 0) {\n                break;\n            }\n            if (count == 0) {\n                result.add(str);\n                break;\n            }\n            count -= str.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9co7gct4.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int lst1_count = 0, lst2_count = 0;\n        for(String s : lst1) {\n            lst1_count += s.length();\n        }\n        for(String s : lst2) {\n            lst2_count += s.length();\n        }\n        if(lst1_count == lst2_count) {\n            result.addAll(lst1);\n            return result;\n        }\n        if(lst1_count > lst2_count) {\n            result.addAll(lst2);\n            return result;\n        }\n        for(String s : lst1) {\n            if(lst2.contains(s)) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int lst1_size = lst1.size();\n        int lst2_size = lst2.size();\n        int lst1_count = 0;\n        int lst2_count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < lst1_size; i++) {\n            for (int j = 0; j < lst2_size; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    lst1_count += lst1.get(i).length();\n                    lst2_count += lst2.get(j).length();\n                    if (lst1_count == lst2_count) {\n                        result.add(lst1.get(i));\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwq8nc__u.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1mfai_w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() < s2.length()) {\n                    count += s1.length();\n                    break;\n                } else {\n                    count += s2.length();\n                }\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            if (count == 0) {\n                result.add(s1);\n            }\n            count = 0;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_u478gn.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<>();\n        for(String s : lst1) {\n            for(String s2 : lst2) {\n                if(s.length() < s2.length()) {\n                    count += s.length();\n                    break;\n                }\n                else if(s.length() == s2.length()) {\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        else {\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1umw_6q.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() < s2.length()) {\n                    count += s1.length();\n                    break;\n                }\n                else if(s1.length() > s2.length()) {\n                    count += s2.length();\n                    break;\n                }\n                else {\n                    count += s1.length();\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        else {\n            for(String s : lst1) {\n                if(count < s.length()) {\n                    result.add(s);\n                }\n            }\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxxr8ssf8.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        int count = 0;\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    count += s.length();\n                }\n            }\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            for (String s2 : lst2) {\n                if (s.length() < s2.length()) {\n                    count -= s.length();\n                }\n            }\n            if (count == 0) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzvu9l36f.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count1 = 0;\n        int count2 = 0;\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 == count2) {\n            return lst1;\n        }\n        if (count1 < count2) {\n            return lst2;\n        }\n        for (String s : lst1) {\n            if (count2 < count1) {\n                break;\n            }\n            if (count2 == count1) {\n                result.add(s);\n                count1 -= s.length();\n                count2 -= s.length();\n            } else {\n                count1 -= s.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu298p8t.java:64)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String str1 : lst1) {\n            for(String str2 : lst2) {\n                if(str1.length() == str2.length()) {\n                    count += str1.length();\n                    result.add(str1);\n                    break;\n                }\n            }\n        }\n        if(count == 0) {\n            return lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_mqge2p.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for (String str : lst1) {\n            if (count == 0) {\n                result.add(str);\n                count = 0;\n            } else {\n                count -= str.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3saa0099.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if(lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if(lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int[] l1_count = new int[l1];\n        int[] l2_count = new int[l2];\n        for(int i = 0; i < l1; i++) {\n            l1_count[i] = lst1.get(i).length();\n        }\n        for(int i = 0; i < l2; i++) {\n            l2_count[i] = lst2.get(i).length();\n        }\n        int l1_max = 0;\n        int l2_max = 0;\n        for(int i = 0; i < l1; i++) {\n            if(l1_count[i] > l1_max) {\n                l1_max = l1_count[i];\n            }\n        }\n        for(int i = 0; i < l2; i++) {\n            if(l2_count[i] > l2_max) {\n                l2_max = l2_count[i];\n            }\n        }\n        for(int i = 0; i < l1; i++) {\n            for(int j = 0; j < l2; j++) {\n                if(l1_count[i] == l2_count[j]) {\n                    result.add(lst1.get(i));\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg85vy32s.java:65)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s : lst1) {\n            count1 += s.length();\n        }\n        for(String s : lst2) {\n            count2 += s.length();\n        }\n        if(count1 < count2) {\n            count = count2 - count1;\n        } else {\n            count = count1 - count2;\n        }\n        for(String s : lst1) {\n            if(s.length() <= count) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgh50iyv.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            count1 += s.length();\n        }\n        for (String s : lst2) {\n            count2 += s.length();\n        }\n        if (count1 < count2) {\n            for (String s : lst1) {\n                if (count1 < count2) {\n                    count1 -= s.length();\n                    result.add(s);\n                } else {\n                    break;\n                }\n            }\n        } else if (count1 > count2) {\n            for (String s : lst2) {\n                if (count1 > count2) {\n                    count2 -= s.length();\n                    result.add(s);\n                } else {\n                    break;\n                }\n            }\n        } else {\n            result = lst1;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    count++;\n                }\n            }\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1 : lst1) {\n            for(String s2 : lst2) {\n                if(s1.length() == s2.length()) {\n                    result.add(s1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwo2xryf_.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (String s1 : lst1) {\n            for (String s2 : lst2) {\n                if (s1.length() == s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno6jx066.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (String s : lst1) {\n            if (lst2.contains(s)) {\n                count += s.length();\n            }\n        }\n        for (String s : lst2) {\n            if (lst1.contains(s)) {\n                count -= s.length();\n            }\n        }\n        if (count == 0) {\n            result = lst1;\n        } else {\n            result = lst2;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawl1dpmf.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for (String s : lst1) {\n            count = 0;\n            for (String s2 : lst2) {\n                if (s.length() == s2.length()) {\n                    count++;\n                }\n            }\n            if (count == lst2.size()) {\n                result.add(s);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeewot_mt.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxezxw3s.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String str : lst1) {\n            count += str.length();\n        }\n        for (String str : lst2) {\n            count -= str.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String str : lst1) {\n            if (count == 0) {\n                result.add(str);\n                count = 0;\n            } else {\n                count -= str.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprm9anw_u.java:56)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst2 : lst1;\n        }\n        int l1 = 0, l2 = 0;\n        for (String s : lst1) {\n            l1 += s.length();\n        }\n        for (String s : lst2) {\n            l2 += s.length();\n        }\n        if (l1 == l2) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (l1 > l2) {\n            result.addAll(lst2);\n            return result;\n        }\n        for (String s : lst1) {\n            if (l2 < l1) {\n                result.add(s);\n                l1 -= s.length();\n            } else {\n                l2 -= s.length();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpab6_h93n.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                    if (count == l1) {\n                        result.add(lst1.get(i));\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqyk7lqna.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(String s1: lst1) {\n            for(String s2: lst2) {\n                if(s1.length() < s2.length()) {\n                    result.add(s1);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0_9xm4f.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        if (l1 == 0 || l2 == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                }\n            }\n        }\n        if (count == l1) {\n            return lst1;\n        }\n        if (count == l2) {\n            return lst2;\n        }\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8sq8s3kh.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n        if (lst2.size() == 0) {\n            return lst1;\n        }\n        int count = 0;\n        for (String s : lst1) {\n            count += s.length();\n        }\n        for (String s : lst2) {\n            count -= s.length();\n        }\n        if (count == 0) {\n            return lst1;\n        }\n        for (String s : lst1) {\n            if (count == 0) {\n                result.add(s);\n                break;\n            }\n            count -= s.length();\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2a2q_9k.java:55)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int count = 0;\n        for(String s : lst1) {\n            for(String s2 : lst2) {\n                if(s.length() == s2.length()) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        for(String s : lst1) {\n            for(String s2 : lst2) {\n                if(s.length() == s2.length() && count > 0) {\n                    count--;\n                    result.add(s);\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk89tex3e.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() == 0 ? lst2 : lst1;\n        }\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int[] arr = new int[l1];\n        for (int i = 0; i < l1; i++) {\n            arr[i] = lst1.get(i).length();\n        }\n        int[] arr2 = new int[l2];\n        for (int i = 0; i < l2; i++) {\n            arr2[i] = lst2.get(i).length();\n        }\n        Arrays.sort(arr);\n        Arrays.sort(arr2);\n        int i = 0, j = 0;\n        while (i < l1 && j < l2) {\n            if (arr[i] == arr2[j]) {\n                result.add(lst1.get(i));\n                i++;\n                j++;\n            } else if (arr[i] < arr2[j]) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpie907z1y.java:59)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int count = 0;\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < l1; i++) {\n            for (int j = 0; j < l2; j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    count++;\n                    result.add(lst1.get(i));\n                }\n            }\n        }\n        if (count == l1) {\n            return lst1;\n        } else if (count == l2) {\n            return lst2;\n        } else {\n            return result;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxh5iueql.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        int l1 = lst1.size();\n        int l2 = lst2.size();\n        int i = 0;\n        int j = 0;\n        while (i < l1 && j < l2) {\n            if (lst1.get(i).length() == lst2.get(j).length()) {\n                result.add(lst1.get(i));\n                i++;\n                j++;\n            } else if (lst1.get(i).length() < lst2.get(j).length()) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzqln1or.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() > lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        if (lst1.size() < lst2.size()) {\n            result.addAll(lst2);\n            return result;\n        }\n        if (lst1.size() == lst2.size()) {\n            result.addAll(lst1);\n            return result;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1.get(i).length() == lst2.get(i).length()) {\n                result.add(lst1.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwllfyi4l.java:53)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // >>> total_match([], [])\n    // []\n    // >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n    // ['hI', 'Hi']\n    // >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n    // ['hi', 'admin']\n    // >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n    // ['hI', 'hi', 'hi']\n    // >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n    // ['4']\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (lst1.size() == 0 && lst2.size() == 0) {\n            return result;\n        }\n        if (lst1.size() == 0 || lst2.size() == 0) {\n            return lst1.size() > lst2.size() ? lst1 : lst2;\n        }\n        if (lst1.size() > lst2.size()) {\n            return lst1;\n        }\n        if (lst2.size() > lst1.size()) {\n            return lst2;\n        }\n        for (int i = 0; i < lst1.size(); i++) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst1.get(i).length() == lst2.get(j).length()) {\n                    result.add(lst1.get(i));\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))), (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n    }\n\n}\n",
      "timestamp": 1664292711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuw5p28ib.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
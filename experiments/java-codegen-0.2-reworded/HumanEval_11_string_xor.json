{
  "name": "HumanEval_11_string_xor",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Input are two strings a and b consisting only of 1s and 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n    // >>> string_xor('010', '110')\n    // '100'\n    public static String stringXor(String a, String b) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(stringXor((\"111000\"), (\"101010\")).equals((\"010010\")));\n    assert(stringXor((\"1\"), (\"1\")).equals((\"0\")));\n    assert(stringXor((\"0101\"), (\"0000\")).equals((\"0101\")));\n    }\n\n}\n",
  "completions": [
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length() + b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        for (int i = a.length(); i < res.length; i++) {\n            res[i] = bi[i - a.length()];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n        int m = 0;\n        int n = 0;\n        int o = 0;\n        int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n        int t = 0;\n        int u = 0;\n        int v = 0;\n        int w = 0;\n        int x = 0;\n        int y = 0;\n        int z = 0;\n        int A = 0;\n        int B = 0;\n        int C = 0;\n        int D = 0;\n        int E = 0;\n        int F = 0;\n        int G = 0;\n        int H = 0;\n        int I = 0;\n        int J = 0;\n        int K = 0;\n        int L = 0;\n        int M = 0;\n        int N = 0;\n        int O = 0;\n        int P = 0;\n        int Q = 0;\n        int R = 0;\n        int S = 0;\n        int T = 0;\n        int U = 0;\n        int V = 0;\n        int W = 0;\n        int X = 0;\n        int Y = 0;\n        int Z = 0;\n        int AA = 0;\n        int AB = 0;\n        int AC = 0;\n        int AD = 0;\n        int AE = 0;\n        int AF = 0;\n        int AG = 0;\n        int AH = 0;\n        int AI = 0;\n        int AJ = 0;\n        int AK = 0;\n        int AL = 0;\n        int AM = 0;\n        int AN = 0;\n        int AO = 0;\n        int AP = 0;\n        int AQ = 0;\n        int AR = 0;\n        int AS = 0;\n        int AT = 0;\n        int AU = 0;\n        int AV = 0;\n        int AW = 0;\n        int AX = 0;\n        int AY = 0;\n        int AZ = 0;\n        int BA = 0;\n        int BB = 0;\n        int BC = 0;",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n            res = res % 2;\n            res = res + '0';\n        }\n        return res + \"\";",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] a_int = new int[len];\n        int[] b_int = new int[len];\n        for(int i = 0; i < len; i++) {\n            a_int[i] = a.charAt(i) - '0';\n            b_int[i] = b.charAt(i) - '0';\n        }\n        int result = 0;\n        for(int i = 0; i < len; i++) {\n            result = result ^ a_int[i] ^ b_int[i];\n        }\n        return Integer.toString(result);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int res = 0;\n        while (i < len) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(j) - '0');\n            if (res == 1) {\n                return \"1\";\n            }\n            i++;\n            j++;\n        }\n        return \"0\";",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return new String(result);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) == '1' && b.charAt(i) == '1') ? 1 : 0;\n            res = res ^ 1;\n            res = res & 1;\n        }\n        return Integer.toString(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = ai[i] ^ bi[i];\n            ai[i] = res;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append(ai[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length() + b.length()];\n        for (int i = 0; i < ai.length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        for (int i = ai.length; i < res.length; i++) {\n            res[i] = bi[i - ai.length];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int res = 0;\n        while (i < len) {\n            if (a.charAt(i) == '1' && b.charAt(j) == '1') {\n                res = res ^ 1;\n            }\n            i++;\n            j++;\n        }\n        return Integer.toString(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for(int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for(int i = 0; i < len; i++) {\n            res = (res ^ ai[i]) ^ bi[i];\n        }\n        return Integer.toString(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) == '1' && b.charAt(i) == '1') ? 1 : 0;\n        }\n        return String.valueOf(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = ai[i] ^ bi[i];\n            ai[i] = res;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append(ai[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        StringBuilder sb = new StringBuilder();\n        while (i < len) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n            i++;\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int result = 0;\n        for (int i = 0; i < len; i++) {\n            result = (result << 1) | (a.charAt(i) - '0');\n            result = (result << 1) | (b.charAt(i) - '0');\n        }\n        return Integer.toString(result, 2);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        StringBuilder sb = new StringBuilder();\n        while (i < len) {\n            int ai = a.charAt(i) - '0';\n            int bi = b.charAt(i) - '0';\n            sb.append((ai ^ bi) + '0');\n            i++;\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int i = 0;\n        int j = 0;\n        int len = a.length();\n        int k = 0;\n        int l = 0;\n        StringBuilder sb = new StringBuilder();\n        while (i < len && j < len) {\n            if (a.charAt(i) == '1' && b.charAt(j) == '1') {\n                sb.append('1');\n                i++;\n                j++;\n            } else if (a.charAt(i) == '1' && b.charAt(j) == '0') {\n                sb.append('0');\n                i++;\n            } else if (a.charAt(i) == '0' && b.charAt(j) == '1') {\n                sb.append('0');\n                j++;\n            } else {\n                sb.append('0');\n            }\n        }\n        while (i < len) {\n            if (a.charAt(i) == '1') {\n                sb.append('1');\n                i++;\n            } else {\n                sb.append('0');\n            }\n        }\n        while (j < len) {\n            if (b.charAt(j) == '1') {\n                sb.append('1');\n                j++;\n            } else {\n                sb.append('0');\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int result = 0;\n        while (i < len) {\n            result = result ^ (a.charAt(i) - '0') ^ (b.charAt(j) - '0');\n            i++;\n            j++;\n        }\n        return Integer.toString(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n            res = res & 0x1;\n            res = res << 1;\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for(int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for(int i = 0; i < len; i++) {\n            res = (res ^ ai[i]) ^ bi[i];\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int result = 0;\n        for (int i = 0; i < len; i++) {\n            result = result ^ ai[i] ^ bi[i];\n        }\n        return Integer.toString(result, 2);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length() + b.length()];\n        for (int i = 0; i < ai.length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = ai[i] ^ bi[i];\n            ai[i] = res;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append(ai[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return new String(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ ai[i] ^ bi[i];\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            throw new IllegalArgumentException(\"Strings must be of same length\");\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append((a.charAt(i) ^ b.charAt(i)));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return new String(result);",
    "        int i = 0, j = 0;\n        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (j = 0; j < b.length(); j++) {\n            bi[j] = b.charAt(j) - '0';\n        }\n        int[] result = new int[a.length() + b.length()];\n        for (i = 0; i < a.length(); i++) {\n            for (j = 0; j < b.length(); j++) {\n                result[i + j] = ai[i] ^ bi[j];\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for(int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[len];\n        for(int i = 0; i < len; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) == '1' && b.charAt(i) == '1') ? 1 : 0;\n        }\n        return Integer.toString(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int res = 0;\n        while (i < len) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(j) - '0');\n            if (res == 1) {\n                return \"1\";\n            }\n            i++;\n            j++;\n        }\n        return \"0\";",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (res << 1) | (ai[i] ^ bi[i]);\n        }\n        return Integer.toString(res);",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            if (a.charAt(i) == '1' && b.charAt(i) == '1') {\n                res = 1;\n            } else if (a.charAt(i) == '0' && b.charAt(i) == '0') {\n                res = 0;\n            } else {\n                return \"\";\n            }\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(result);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for(int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[len];\n        for(int i = 0; i < len; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < len; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n            res = res % 2;\n            res = res + '0';\n        }\n        return String.valueOf(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (res ^ a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for(int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int result = 0;\n        for(int i = 0; i < len; i++) {\n            result = result ^ ai[i] ^ bi[i];\n        }\n        return Integer.toString(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] result = new int[len];\n        for (int i = 0; i < len; i++) {\n            result[i] = (a.charAt(i) == '1' && b.charAt(i) == '1') ? 1 : 0;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            throw new IllegalArgumentException(\"Input strings must be of same length\");\n        }\n        int i = 0;\n        int j = 0;\n        int result = 0;\n        while (i < len) {\n            result = (a.charAt(i++) - '0') ^ (b.charAt(j++) - '0');\n            if (result == 1) {\n                return \"1\";\n            }\n        }\n        return \"0\";",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return new String(result);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int result = 0;\n        while (i < len) {\n            result = a.charAt(i) ^ b.charAt(j);\n            if (result == 1) {\n                return \"1\";\n            }\n            i++;\n            j++;\n        }\n        return \"0\";",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int res = 0;\n        while (i < len) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(j) - '0');\n            if (res == 1) {\n                return \"1\";\n            }\n            i++;\n            j++;\n        }\n        return \"0\";",
    "        int i = 0;\n        int j = 0;\n        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (j = 0; j < b.length(); j++) {\n            bi[j] = b.charAt(j) - '0';\n        }\n        int[] result = new int[a.length() + b.length()];\n        for (i = 0; i < a.length(); i++) {\n            for (j = 0; j < b.length(); j++) {\n                result[i + j] += ai[i] ^ bi[j];\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            throw new IllegalArgumentException(\"Input strings must be of same length\");\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append((a.charAt(i) == '1' && b.charAt(i) == '1') ? '1' : '0');\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (res << 1) | (ai[i] ^ bi[i]);\n        }\n        return Integer.toString(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int result = 0;\n        while (i < len) {\n            result = result ^ (a.charAt(i) - '0') ^ (b.charAt(j) - '0');\n            i++;\n            j++;\n        }\n        return Integer.toString(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) {\n            return \"\";\n        }\n        int[] a_int = new int[len];\n        int[] b_int = new int[len];\n        for(int i = 0; i < len; i++) {\n            a_int[i] = a.charAt(i) - '0';\n            b_int[i] = b.charAt(i) - '0';\n        }\n        int result = 0;\n        for(int i = 0; i < len; i++) {\n            result = result ^ a_int[i] ^ b_int[i];\n        }\n        return Integer.toString(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res ^= ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length() + b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        for (int i = a.length(); i < a.length() + b.length(); i++) {\n            result[i] = bi[i - a.length()];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.length; i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(result);",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for(int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for(int i = 0; i < len; i++) {\n            res = res ^ ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            throw new IllegalArgumentException(\"Inputs must be of same length\");\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int result = 0;\n        for (int i = 0; i < len; i++) {\n            result = result ^ ai[i] ^ bi[i];\n        }\n        return Integer.toString(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] a_arr = new int[len];\n        int[] b_arr = new int[len];\n        for (int i = 0; i < len; i++) {\n            a_arr[i] = a.charAt(i) - '0';\n            b_arr[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = a_arr[i] ^ b_arr[i];\n            a_arr[i] = res;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append(a_arr[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            throw new IllegalArgumentException(\"Input strings must be of same length\");\n        }\n        int result = 0;\n        for (int i = 0; i < len; i++) {\n            result = result ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(result);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int result = 0;\n        while (i < len) {\n            result = a.charAt(i) ^ b.charAt(j);\n            if (result == 1) {\n                return \"1\";\n            } else {\n                return \"0\";\n            }\n            i++;\n            j++;\n        }\n        return \"\";",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int result = 0;\n        for (int i = 0; i < len; i++) {\n            result = (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n            result = result % 2;\n            result = result + '0';\n        }\n        return result + \"\";",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int i = 0;\n        int j = 0;\n        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (i = 0; i < a.length(); i++) {\n            sb.append(result[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        int j = 0;\n        int res = 0;\n        while (i < len) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(j) - '0');\n            if (res == 1) {\n                return \"1\";\n            }\n            i++;\n            j++;\n        }\n        return \"0\";",
    "        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int i = 0;\n        StringBuilder sb = new StringBuilder();\n        while (i < len) {\n            int ai = a.charAt(i) - '0';\n            int bi = b.charAt(i) - '0';\n            sb.append((ai ^ bi) + '0');\n            i++;\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(res);",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res ^ (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n        }\n        return Integer.toString(res);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for(int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for(int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for(int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.valueOf(result);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) return \"\";\n        int[] a_arr = new int[len];\n        int[] b_arr = new int[len];\n        for(int i = 0; i < len; i++) {\n            a_arr[i] = a.charAt(i) - '0';\n            b_arr[i] = b.charAt(i) - '0';\n        }\n        int result = 0;\n        for(int i = 0; i < len; i++) {\n            result = result ^ a_arr[i] ^ b_arr[i];\n        }\n        return Integer.toString(result);",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = ai[i] ^ bi[i];\n            ai[i] = res;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            sb.append(ai[i]);\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (a.charAt(i) - '0') ^ (b.charAt(i) - '0');\n            res = res % 2;\n            res = res + '0';\n        }\n        return res + \"\";",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int i = 0;\n        int j = 0;\n        StringBuilder sb = new StringBuilder();\n        while (i < a.length() && j < b.length()) {\n            sb.append(a.charAt(i) ^ b.charAt(j));\n            i++;\n            j++;\n        }\n        while (i < a.length()) {\n            sb.append(a.charAt(i));\n            i++;\n        }\n        while (j < b.length()) {\n            sb.append(b.charAt(j));\n            j++;\n        }\n        return sb.toString();",
    "        int[] ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n        for (int i = 0; i < a.length(); i++) {\n            ai[i] = a.charAt(i) - '0';\n        }\n        for (int i = 0; i < b.length(); i++) {\n            bi[i] = b.charAt(i) - '0';\n        }\n        int[] res = new int[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < res.length; i++) {\n            sb.append(res[i]);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if (len != b.length()) {\n            return \"\";\n        }\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a.charAt(i) - '0';\n            bi[i] = b.charAt(i) - '0';\n        }\n        int res = 0;\n        for (int i = 0; i < len; i++) {\n            res = (ai[i] ^ bi[i]) + '0';\n            ai[i] = res;\n        }\n        return String.valueOf(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        int len = a.length();\n        if(len != b.length()) {\n            return \"\";\n        }\n        int res = 0;\n        for(int i = 0; i < len; i++) {\n            res = (a.charAt(i) == '1' && b.charAt(i) == '1') ? 1 : 0;\n        }\n        return Integer.toString(res);",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
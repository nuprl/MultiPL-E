{
  "name": "HumanEval_79_decimal_to_binary",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int remainder = 0;\n        while (decimal > 0) {\n            remainder = (int) (decimal % 2);\n            binary.insert(0, remainder);\n            decimal = decimal / 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzq5v2_n.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppttmsdx7.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptogelq8n.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvv_dmix.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int digit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10qamt9w.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            if (remainder_copy % 2 == 1) {\n                binary.append(\"1\");\n            } else {\n                binary.append(\"0\");\n            }\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe0i6dhzu.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(Long.toBinaryString(decimal));\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfqs_js5q.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0pf37nsx.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.insert(0, decimal % 2);\n            decimal /= 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkh9kobm.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvv_dmix.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int num = (int) decimal;\n        while (num > 0) {\n            int remainder = num % 2;\n            binary.append(remainder);\n            num = num / 2;\n        }\n        binary.append(\"db\");\n        return binary.reverse().toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7hpzs03.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7a_4qi91.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk7njwrj_.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6mrn5b8.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            sb.append(bit);\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmpadrmj8r7.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder != 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf39i40c3.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbfu_ra7.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(Long.toBinaryString(decimal));\n        sb.append('d');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4bnj9fg.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmpg0uivsw0.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            if (remainder_copy % 2 == 1) {\n                binary.append(\"1\");\n            } else {\n                binary.append(\"0\");\n            }\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3cdv8xa_.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int)remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_0igrj8.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int num = (int) decimal;\n        while (num > 0) {\n            int rem = num % 2;\n            binary.append(rem);\n            num = num / 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa9n3nr1o.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long temp = decimal;\n        while (temp != 0) {\n            sb.append(temp % 2);\n            temp /= 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbr1c6dd3.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(decimal);\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpu7kdvm.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppttmsdx7.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqefiri9z.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6mrn5b8.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            sb.append(remainder_copy % 2);\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7jzr5njz.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder != 0) {\n            binary.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvhfx0rz.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        binary.append(\"db\");\n        return binary.reverse().toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0e874_lt.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            binary.append(remainder_copy % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbeiiz4ny.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long temp = decimal;\n        while (temp > 0) {\n            sb.append(temp % 2);\n            temp = temp / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegrj6y0t.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6mrn5b8.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int) remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw96_18q_.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvv_dmix.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2);\n            remainder = remainder - remainder_div_2;\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo6dbsf6.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptogelq8n.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2);\n            remainder = remainder - remainder_div_2;\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo6dbsf6.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptogelq8n.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyobkjdj3.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int count = 0;\n        while (decimal > 0) {\n            if (count % 2 == 0) {\n                binary.append(\"0\");\n            } else {\n                binary.append(\"1\");\n            }\n            decimal = decimal / 2;\n            count++;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpft3t_l42.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            binary.append(remainder_copy % 2);\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84dv1xyl.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(decimal);\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpu7kdvm.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(decimal);\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpu7kdvm.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int digit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakd1k7uj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            binary.append(remainder_copy % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbeiiz4ny.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int remainder = 0;\n        while (decimal > 0) {\n            remainder = (int) (decimal % 2);\n            binary.append(remainder);\n            decimal = decimal / 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd_4z3a3d.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            binary.append(remainder_copy % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbeiiz4ny.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6mrn5b8.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int digit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakd1k7uj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        while (decimal != 0) {\n            int remainder = (int) (decimal % 2);\n            decimal /= 2;\n            binary.append(remainder);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0lz7vg1u.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppttmsdx7.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2);\n            remainder = remainder - remainder_div_2;\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo6dbsf6.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7a_4qi91.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0pf37nsx.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptogelq8n.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            binary.append(remainder_copy % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbeiiz4ny.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal /= 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6mrn5b8.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyzjok1me.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            if (remainder_div_2 == 1) {\n                binary.append(\"1\");\n                remainder = remainder % 2;\n            } else {\n                binary.append(\"0\");\n                remainder = remainder % 2;\n            }\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12lf3g_x.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbfu_ra7.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(decimal);\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpu7kdvm.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(decimal);\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpu7kdvm.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int num = (int) decimal;\n        while (num > 0) {\n            int remainder = num % 2;\n            binary.append(remainder);\n            num = num / 2;\n        }\n        binary.append(\"db\");\n        return binary.reverse().toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7hpzs03.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "/tmp/tmptuxkgi64.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbfu_ra7.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(Long.toBinaryString(decimal));\n        sb.append('d');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4bnj9fg.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyzjok1me.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int) remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw96_18q_.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        int num = (int) decimal;\n        int remainder = 0;\n        while (num > 0) {\n            remainder = num % 2;\n            binary.append(remainder);\n            num = num / 2;\n        }\n        binary.insert(0, \"db\");\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xxgsoa.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(Long.toBinaryString(decimal));\n        sb.append('d');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4bnj9fg.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('d');\n        sb.append(decimal);\n        sb.append('b');\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpu7kdvm.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvv_dmix.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long temp = decimal;\n        while (temp > 0) {\n            int bit = (int) (temp % 2);\n            binary.append(bit);\n            temp = temp / 2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3k_aml8l.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long temp = decimal;\n        while (temp > 0) {\n            binary.append(temp % 2);\n            temp /= 2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2esi2y52.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            sb.append(remainder_copy % 2);\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspluu6qt.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            sb.append(remainder_copy % 2);\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspluu6qt.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmpg0uivsw0.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvv_dmix.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            if (remainder % 2 == 1) {\n                binary.append(\"1\");\n            } else {\n                binary.append(\"0\");\n            }\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ysgpxlk.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7yt9jywv.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long digit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(digit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20dh8en4.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(Long.toBinaryString(decimal));\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq13h79_.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        while (decimal > 0) {\n            int remainder = (int) (decimal % 2);\n            binary.append(remainder);\n            decimal = decimal / 2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbqphh3m.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmpg0uivsw0.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = remainder % 2;\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "/tmp/tmp2c_qckfs.java:24: error: incompatible types: possible lossy conversion from long to int\n            int bit = remainder % 2;\n                                ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long temp = decimal;\n        while (temp != 0) {\n            sb.append(temp % 2);\n            temp = temp / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhg9jm90.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            if (remainder_copy % 2 == 1) {\n                binary.append(\"1\");\n            } else {\n                binary.append(\"0\");\n            }\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3cdv8xa_.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            remainder = remainder / 2;\n            binary.append(remainder % 2);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7a_4qi91.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long temp = decimal;\n        while (temp != 0) {\n            sb.append(temp % 2);\n            temp /= 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbr1c6dd3.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_copy = remainder;\n            remainder = remainder / 2;\n            sb.append(remainder_copy % 2);\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspluu6qt.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 == 1 ? \"1\" : \"0\");\n            remainder = remainder - remainder_div_2 * 2;\n        }\n        binary.append(\"db\");\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3dshe3w.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append('d');\n        binary.append(decimal);\n        binary.append('b');\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdciqopk.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            long remainder_div_2 = remainder / 2;\n            binary.append(remainder_div_2 % 2);\n            remainder = remainder_div_2;\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvv_dmix.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder binary = new StringBuilder();\n        binary.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            int bit = (int) (remainder % 2);\n            remainder = remainder / 2;\n            binary.append(bit);\n        }\n        return binary.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xkpkq2s.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder != 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptogelq8n.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You will be given a number in decimal form and your task is to convert it to\n    // binary format. The function should return a string, with each character representing a binary\n    // number. Each character in the string will be '0' or '1'.\n    // There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    // The extra characters are there to help with the format.\n    // Examples:\n    // >>> decimal_to_binary(15)\n    // \"db1111db\"\n    // >>> decimal_to_binary(32)\n    // \"db100000db\"\n    public static String decimalToBinary(long decimal) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n        long remainder = decimal;\n        while (remainder > 0) {\n            sb.append(remainder % 2);\n            remainder = remainder / 2;\n        }\n        sb.append(\"db\");\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuil1a9l9.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
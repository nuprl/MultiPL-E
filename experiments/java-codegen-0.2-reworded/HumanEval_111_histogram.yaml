name: HumanEval_111_histogram
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string representing a space separated lowercase\
  \ letters, return a hash map\n    // of the letter with the most repetition and\
  \ containing the corresponding count.\n    // If several letters have the same occurrence,\
  \ return all of them.\n    // Example:\n    // >>> histogram('a b c')\n    // {'a':\
  \ 1, 'b': 1, 'c': 1}\n    // >>> histogram('a b b a')\n    // {'a': 2, 'b': 2}\n\
  \    // >>> histogram('a b c a b')\n    // {'a': 2, 'b': 2}\n    // >>> histogram('b\
  \ b b b a')\n    // {'b': 4}\n    // >>> histogram('')\n    // {}\n    public static\
  \ HashMap<String,Long> histogram(String test) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
  a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
  \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
  a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
  a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
  r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\", 1l)))));\n\
  \    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
  b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
  r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new HashMap<String,Long>())));\n\
  \    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 1l)))));\n\
  \    }\n\n}\n"
completions: ["        HashMap<String,Long> map = new HashMap<>();\n        for(int\
    \ i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        String[] str = test.split(\" \");\n        for(String s:str) {\n    \
    \        if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n  \
    \          }\n            else {\n                hm.put(s, 1L);\n           \
    \ }\n        }\n        return hm;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s,map.get(s)+1);\n\
    \            } else {\n                map.put(s,1L);\n            }\n       \
    \ }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0; i<test.length(); i++) {\n            String str = test.substring(i,i+1);\n\
    \            if(map.containsKey(str)) {\n                map.put(str, map.get(str)+1);\n\
    \            } else {\n                map.put(str, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(String s: test.split(\" \")) {\n            if(!map.containsKey(s))\
    \ {\n                map.put(s, 1L);\n            } else {\n                map.put(s,\
    \ map.get(s)+1);\n            }\n        }\n        return map;", "        HashMap<String,Long>\
    \ map = new HashMap<>();\n        for(int i = 0; i < test.length(); i++) {\n \
    \           String s = test.substring(i,i+1);\n            if(map.containsKey(s))\
    \ {\n                map.put(s, map.get(s)+1);\n            } else {\n       \
    \         map.put(s, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> result = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(result.containsKey(c)) {\n                result.put(c, result.get(c)+1);\n\
    \            } else {\n                result.put(c, 1L);\n            }\n   \
    \     }\n        return result;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c: test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s,map.get(s)+1);\n\
    \            } else {\n                map.put(s,1L);\n            }\n       \
    \ }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        if(test.length() == 0) return map;\n        String[] arr = test.split(\"\
    \ \");\n        for(String s : arr) {\n            if(map.containsKey(s)) {\n\
    \                map.put(s, map.get(s) + 1);\n            } else {\n         \
    \       map.put(s, 1L);\n            }\n        }\n        return map;", "   \
    \     HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i <\
    \ test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i=0;i<test.length();i++) {\n            String str = test.substring(i,i+1);\n\
    \            if(map.containsKey(str)) {\n                map.put(str, map.get(str)+1);\n\
    \            } else {\n                map.put(str, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i=0; i<test.length();\
    \ i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(result.containsKey(c)) {\n                result.put(c, result.get(c)+1);\n\
    \            } else {\n                result.put(c, 1L);\n            }\n   \
    \     }\n        return result;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        for(char c: test.toCharArray()) {\n            if(result.containsKey(c))\
    \ {\n                result.put(c, result.get(c)+1);\n            } else {\n \
    \               result.put(c, 1L);\n            }\n        }\n        return result;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)\
    \ + 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(String s : test.split(\" \")) {\n            if(map.containsKey(s))\
    \ {\n                map.put(s, map.get(s)+1);\n            } else {\n       \
    \         map.put(s, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c: test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(String s:test.split(\" \")){\n            if(!map.containsKey(s)){\n\
    \                map.put(s,1L);\n            }\n            else{\n          \
    \      map.put(s,map.get(s)+1);\n            }\n        }\n        return map;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> h = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(h.containsKey(s)) {\n                h.put(s, h.get(s)+1);\n \
    \           } else {\n                h.put(s, 1L);\n            }\n        }\n\
    \        return h;", "        HashMap<String,Long> map = new HashMap<>();\n  \
    \      for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i = 0; i < test.length(); i++) {\n            String ch = test.substring(i,i+1);\n\
    \            if(map.containsKey(ch)) {\n                map.put(ch, map.get(ch)+1);\n\
    \            } else {\n                map.put(ch, 1L);\n            }\n     \
    \   }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(result.containsKey(c)) {\n                result.put(c, result.get(c)+1);\n\
    \            } else {\n                result.put(c, 1L);\n            }\n   \
    \     }\n        return result;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s,hm.get(s)+1);\n\
    \            } else {\n                hm.put(s,1L);\n            }\n        }\n\
    \        return hm;", "        HashMap<String,Long> hm = new HashMap<>();\n  \
    \      for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(hm.containsKey(c)) {\n                hm.put(c, hm.get(c) + 1);\n\
    \            } else {\n                hm.put(c, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(String s: test.split(\" \")) {\n            if(!map.containsKey(s))\
    \ {\n                map.put(s, 1L);\n            } else {\n                map.put(s,\
    \ map.get(s)+1);\n            }\n        }\n        return map;", "        HashMap<String,Long>\
    \ map = new HashMap<>();\n        for(char c : test.toCharArray()) {\n       \
    \     if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n  \
    \          } else {\n                map.put(c, 1L);\n            }\n        }\n\
    \        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String key = test.substring(i,i+1);\n\
    \            if(map.containsKey(key)) {\n                map.put(key, map.get(key)+1);\n\
    \            } else {\n                map.put(key, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> hm = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> hm = new HashMap<String,Long>();\n        for(int\
    \ i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c: test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        if(test.length()\
    \ == 0) return map;\n        String[] arr = test.split(\" \");\n        for(String\
    \ s: arr) {\n            if(map.containsKey(s)) {\n                map.put(s,\
    \ map.get(s)+1);\n            } else {\n                map.put(s, 1L);\n    \
    \        }\n        }\n        return map;", "        HashMap<String,Long> map\
    \ = new HashMap<String,Long>();\n        for(int i = 0; i < test.length(); i++)\
    \ {\n            String s = test.substring(i,i+1);\n            if(map.containsKey(s))\
    \ {\n                map.put(s, map.get(s)+1);\n            } else {\n       \
    \         map.put(s, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> h = new HashMap<>();\n        for(int i = 0; i <\
    \ test.length(); i++) {\n            char c = test.charAt(i);\n            if(h.containsKey(c))\
    \ {\n                h.put(c, h.get(c)+1);\n            } else {\n           \
    \     h.put(c, 1L);\n            }\n        }\n        return h;", "        HashMap<String,Long>\
    \ map = new HashMap<>();\n        for(String s : test.split(\" \")) {\n      \
    \      if(!map.containsKey(s)) {\n                map.put(s, 1L);\n          \
    \  } else {\n                map.put(s, map.get(s)+1);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> hm = new HashMap<>();\n\
    \        for(char c: test.toCharArray()) {\n            if(hm.containsKey(c))\
    \ {\n                hm.put(c, hm.get(c)+1);\n            } else {\n         \
    \       hm.put(c, 1L);\n            }\n        }\n        return hm;", "     \
    \   HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int i\
    \ = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s,map.get(s)+1);\n\
    \            } else {\n                map.put(s,1L);\n            }\n       \
    \ }\n        return map;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        String[] arr = test.split(\" \");\n        for(String s:arr) {\n    \
    \        if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n  \
    \          } else {\n                hm.put(s, 1L);\n            }\n        }\n\
    \        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n \
    \       for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n   \
    \         if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(result.containsKey(c))\
    \ {\n                result.put(c, result.get(c)+1);\n            } else {\n \
    \               result.put(c, 1L);\n            }\n        }\n        return result;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(int i=0;i<test.length();i++)\
    \ {\n            String s = test.substring(i,i+1);\n            if(map.containsKey(s))\
    \ {\n                map.put(s, map.get(s)+1);\n            } else {\n       \
    \         map.put(s, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String ch = test.substring(i,i+1);\n\
    \            if(map.containsKey(ch)) {\n                map.put(ch, map.get(ch)+1);\n\
    \            } else {\n                map.put(ch, 1L);\n            }\n     \
    \   }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> hm = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(hm.containsKey(c)) {\n                hm.put(c, hm.get(c)+1);\n\
    \            } else {\n                hm.put(c, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(String s: test.split(\" \")){\n            if(!map.containsKey(s)){\n\
    \                map.put(s,1L);\n            }\n            else{\n          \
    \      map.put(s,map.get(s)+1);\n            }\n        }\n        return map;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i <\
    \ test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c: test.toCharArray())\
    \ {\n            if(map.containsKey(c+\"\")) {\n                map.put(c+\"\"\
    , map.get(c+\"\")+1);\n            } else {\n                map.put(c+\"\", 1L);\n\
    \            }\n        }\n        return map;", "        HashMap<String,Long>\
    \ map = new HashMap<>();\n        for(int i = 0; i < test.length(); i++) {\n \
    \           char c = test.charAt(i);\n            if(map.containsKey(c)) {\n \
    \               map.put(c, map.get(c)+1);\n            } else {\n            \
    \    map.put(c, 1L);\n            }\n        }\n        return map;", "      \
    \  HashMap<String,Long> map = new HashMap<>();\n        for(int i=0; i<test.length();\
    \ i++) {\n            String str = test.substring(i,i+1);\n            if(map.containsKey(str))\
    \ {\n                map.put(str, map.get(str)+1);\n            } else {\n   \
    \             map.put(str, 1L);\n            }\n        }\n        return map;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i <\
    \ test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n   \
    \         if(map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        if(test.length()\
    \ == 0) return map;\n        String[] arr = test.split(\" \");\n        for(String\
    \ s: arr) {\n            if(map.containsKey(s)) {\n                map.put(s,\
    \ map.get(s)+1);\n            } else {\n                map.put(s, 1L);\n    \
    \        }\n        }\n        return map;", "        HashMap<String,Long> map\
    \ = new HashMap<>();\n        for(char c : test.toCharArray()) {\n           \
    \ if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n      \
    \      } else {\n                map.put(c, 1L);\n            }\n        }\n \
    \       return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            String str = test.substring(i,i+1);\n\
    \            if(map.containsKey(str)) {\n                map.put(str, map.get(str)+1);\n\
    \            } else {\n                map.put(str, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String str = test.substring(i,i+1);\n \
    \           if(map.containsKey(str)) {\n                map.put(str, map.get(str)+1);\n\
    \            } else {\n                map.put(str, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> result = new HashMap<>();\n        for(int i=0;i<test.length();i++)\
    \ {\n            char c = test.charAt(i);\n            if(result.containsKey(c))\
    \ {\n                result.put(c,result.get(c)+1);\n            } else {\n  \
    \              result.put(c,1L);\n            }\n        }\n        return result;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c: test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0; i<test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> hm = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(hm.containsKey(s)) {\n                hm.put(s, hm.get(s)+1);\n\
    \            } else {\n                hm.put(s, 1L);\n            }\n       \
    \ }\n        return hm;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        if(test.length() == 0) return result;\n        String[] str = test.split(\"\
    \ \");\n        Arrays.sort(str);\n        for(String s : str) {\n           \
    \ if(result.containsKey(s)) {\n                result.put(s, result.get(s)+1);\n\
    \            } else {\n                result.put(s, 1L);\n            }\n   \
    \     }\n        return result;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(result.containsKey(c))\
    \ {\n                result.put(c, result.get(c)+1);\n            } else {\n \
    \               result.put(c, 1L);\n            }\n        }\n        return result;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i <\
    \ test.length(); i++) {\n            String str = test.substring(i,i+1);\n   \
    \         if(map.containsKey(str)) {\n                map.put(str, map.get(str)+1);\n\
    \            } else {\n                map.put(str, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        if(test.length() == 0) return map;\n        String[] arr = test.split(\"\
    \ \");\n        for(String s : arr) {\n            if(map.containsKey(s)) {\n\
    \                map.put(s, map.get(s)+1);\n            } else {\n           \
    \     map.put(s, 1L);\n            }\n        }\n        return map;", "     \
    \   HashMap<String,Long> map = new HashMap<>();\n        for(char c : test.toCharArray())\
    \ {\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c) +\
    \ 1);\n            } else {\n                map.put(c, 1L);\n            }\n\
    \        }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String str = test.substring(i,i+1);\n\
    \            if(map.containsKey(str)) {\n                map.put(str, map.get(str)+1);\n\
    \            } else {\n                map.put(str, 1L);\n            }\n    \
    \    }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(String s : test.split(\" \")) {\n            if(!map.containsKey(s))\
    \ {\n                map.put(s, 1L);\n            } else {\n                map.put(s,\
    \ map.get(s)+1);\n            }\n        }\n        return map;", "        HashMap<String,Long>\
    \ map = new HashMap<>();\n        for(char c : test.toCharArray()) {\n       \
    \     if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n  \
    \          } else {\n                map.put(c, 1L);\n            }\n        }\n\
    \        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i=0;i<test.length();i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<String,Long>();\n\
    \        for(int i=0; i<test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(int i = 0; i < test.length(); i++) {\n            char c = test.charAt(i);\n\
    \            if(map.containsKey(c)) {\n                map.put(c, map.get(c)+1);\n\
    \            } else {\n                map.put(c, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i,i+1);\n   \
    \         if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<String,Long>();\n        for(int\
    \ i=0;i<test.length();i++) {\n            String s = test.substring(i,i+1);\n\
    \            if(map.containsKey(s)) {\n                map.put(s,map.get(s)+1);\n\
    \            } else {\n                map.put(s,1L);\n            }\n       \
    \ }\n        return map;", "        HashMap<String,Long> result = new HashMap<>();\n\
    \        for(char c : test.toCharArray()) {\n            if(result.containsKey(c))\
    \ {\n                result.put(c, result.get(c)+1);\n            } else {\n \
    \               result.put(c, 1L);\n            }\n        }\n        return result;",
  "        HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i <\
    \ test.length(); i++) {\n            String s = test.substring(i,i+1);\n     \
    \       if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;", "        HashMap<String,Long> map = new HashMap<>();\n\
    \        for(char c: test.toCharArray()) {\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i=0;i<test.length();i++)\
    \ {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c)+1);\n            } else {\n       \
    \         map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            char c = test.charAt(i);\n            if(map.containsKey(c))\
    \ {\n                map.put(c, map.get(c) + 1);\n            } else {\n     \
    \           map.put(c, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(char c: test.toCharArray())\
    \ {\n            if(map.containsKey(c+\"\")) {\n                map.put(c+\"\"\
    , map.get(c+\"\")+1);\n            } else {\n                map.put(c+\"\", 1L);\n\
    \            }\n        }\n        return map;", "        HashMap<String,Long>\
    \ map = new HashMap<>();\n        for(int i = 0; i < test.length(); i++) {\n \
    \           String s = test.substring(i,i+1);\n            if(map.containsKey(s))\
    \ {\n                map.put(s, map.get(s)+1);\n            } else {\n       \
    \         map.put(s, 1L);\n            }\n        }\n        return map;", " \
    \       HashMap<String,Long> map = new HashMap<>();\n        for(int i = 0; i\
    \ < test.length(); i++) {\n            String s = test.substring(i, i+1);\n  \
    \          if(map.containsKey(s)) {\n                map.put(s, map.get(s)+1);\n\
    \            } else {\n                map.put(s, 1L);\n            }\n      \
    \  }\n        return map;"]
stop_tokens:
- "\n    }\n"

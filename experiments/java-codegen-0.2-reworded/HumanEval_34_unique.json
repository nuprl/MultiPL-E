{
  "name": "HumanEval_34_unique",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Return sorted unique elements in an array array list\n    // >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Long> unique(ArrayList<Long> l) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)5l, (long)9l, (long)123l)))));\n    }\n\n}\n",
  "completions": [
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> result = new ArrayList<Long>();\n        result.addAll(h);\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            hs.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : hs) {\n            res.add(i);\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (result.contains(l.get(i))) {\n                continue;\n            }\n            result.add(l.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        return ret;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        return ret;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (!set.contains(i)) {\n                result.add(i);\n                set.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> res = new ArrayList<Long>();\n        res.addAll(h);\n        return res;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        return ret;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            hs.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n        res.addAll(hs);\n        Collections.sort(res);\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        result.add(l.get(0));\n        for (int i = 1; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        return ret;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for(Long i : l) {\n            if(!res.contains(i)) {\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> res = new ArrayList<Long>();\n        res.addAll(h);\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        return new ArrayList<Long>(h);",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        result.addAll(h);\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (h.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) result.add(i);\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> result = new ArrayList<Long>();\n        result.addAll(h);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n        res.addAll(h);\n        return res;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (res.contains(l.get(i))) {\n                continue;\n            }\n            res.add(l.get(i));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        return ret;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n        return res;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        return new ArrayList<Long>(h);",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        result.addAll(h);\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        return new ArrayList<Long>(h);",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        ArrayList<Long> al = new ArrayList<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                al.add(i);\n            }\n        }\n        return al;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                res.add(i);\n                hs.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (l.size() == 0) return res;\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.contains(i)) continue;\n            hs.add(i);\n            res.add(i);\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n        res.addAll(h);\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        Collections.sort(ret);\n        return ret;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        ArrayList<Long> res = new ArrayList<Long>();\n        res.addAll(h);\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (!set.contains(i)) {\n                result.add(i);\n                set.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (!set.contains(i)) {\n                result.add(i);\n                set.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for(Long i : l) {\n            if(!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            hs.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : hs) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        return new ArrayList<Long>(h);",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        result.addAll(h);\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for(Long i : l) {\n            if(!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for(Long i : l) {\n            if(result.contains(i)) continue;\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        HashSet<Long> hs = new HashSet<Long>();\n        ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                ret.add(i);\n            }\n        }\n        return ret;",
    "        HashSet<Long> h = new HashSet<Long>();\n        h.addAll(l);\n        return new ArrayList<Long>(h);",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for(Long i : l) {\n            if(result.contains(i)) {\n                continue;\n            }\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (!set.contains(i)) {\n                result.add(i);\n                set.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for(Long i : l) {\n            if(res.contains(i)) {\n                continue;\n            }\n            res.add(i);\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        result.add(l.get(0));\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (l.size() == 0) return res;\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) res.add(i);\n        }\n        return res;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long i : h) {\n            ret.add(i);\n        }\n        return ret;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ret.addAll(h);\n        Collections.sort(ret);\n        return ret;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            h.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : h) {\n            result.add(i);\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n        return res;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (l.size() == 0) {\n            return res;\n        }\n        HashSet<Long> h = new HashSet<Long>();\n        for (Long i : l) {\n            if (!h.contains(i)) {\n                h.add(i);\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        result.add(l.get(0));\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n            }\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                hs.add(i);\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (l.size() == 0) return result;\n        result.add(l.get(0));\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n            if (set.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (l.size() == 0) return res;\n        if (l.size() == 1) return l;\n        if (l.size() == 2) {\n            if (l.get(0) == l.get(1)) return l;\n            res.add(l.get(0));\n            res.add(l.get(1));\n            return res;\n        }\n        for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) == l.get(j)) {\n                    l.remove(j);\n                    j--;\n                }\n            }\n        }\n        for (int i = 0; i < l.size(); i++) {\n            res.add(l.get(i));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.add(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (!hs.contains(i)) {\n                result.add(i);\n                hs.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (l.size() == 0) return res;\n        res.add(l.get(0));\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) != res.get(res.size() - 1)) {\n                res.add(l.get(i));\n            }\n        }\n        return res;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
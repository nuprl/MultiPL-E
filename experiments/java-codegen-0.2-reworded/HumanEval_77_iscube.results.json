{
  "name": "HumanEval_77_iscube",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfmfjk__.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long n = a;\n        while (n > 0) {\n            if (n % 3 != 0) {\n                return false;\n            }\n            n /= 3;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprw8zk7q4.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return false;\n        if(a % 9 == 0) return false;\n        if(a % 27 == 0) return false;\n        if(a % 27 == 0) return false;\n        if(a % 27 == 0) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ww9z9qm.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long b = a;\n        while (b != 0) {\n            b = b / 10;\n            if (b * b * b == a) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3r8zpkie.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        long b = a;\n        while (b != 0) {\n            if (b % 3 != 0) return false;\n            b /= 3;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdegfh66q.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfmfjk__.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return false;\n        if (a % 4 == 0) return false;\n        if (a % 5 == 0) return false;\n        if (a % 6 == 0) return false;\n        if (a % 7 == 0) return false;\n        if (a % 8 == 0) return false;\n        if (a % 9 == 0) return false;\n        if (a % 10 == 0) return false;\n        if (a % 11 == 0) return false;\n        if (a % 12 == 0) return false;\n        if (a % 13 == 0) return false;\n        if (a % 14 == 0) return false;\n        if (a % 15 == 0) return false;\n        if (a % 16 == 0) return false;\n        if (a % 17 == 0) return false;\n        if (a % 18 == 0) return false;\n        if (a % 19 == 0) return false;\n        if (a % 20 == 0) return false;\n        if (a % 21 == 0) return false;\n        if (a % 22 == 0) return false;\n        if (a % 23 == 0) return false;\n        if (a % 24 == 0) return false;\n        if (a % 25 == 0) return false;\n        if (a % 26 == 0) return false;\n        if (a % 27 == 0) return false;\n        if (a % 28 == 0) return false;\n        if (a % 29 == 0) return false;\n        if (a % 30 == 0) return false;\n        if (a % 31 == 0) return false;\n        if (a % 32 == 0) return false;\n        if (a % 33 == 0) return false;\n        if (a % 34 == 0) return false;\n        if (a % 35 == 0) return false;\n        if (a % 36 == 0) return false;\n        if (a % 37 == 0) return false;\n        if (a % 38 == 0) return false;\n        if (a % 39 == 0) return false;\n        if (a % 40 == 0)\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "/tmp/tmpao9it92i.java:66: error: illegal start of statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfmfjk__.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 4 == 0) return true;\n        if(a % 5 == 0) return true;\n        if(a % 6 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbkt_mbw3.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 4 == 0) return true;\n        if(a % 5 == 0) return true;\n        if(a % 6 == 0) return true;\n        if(a % 7 == 0) return true;\n        if(a % 8 == 0) return true;\n        if(a % 9 == 0) return true;\n        if(a % 10 == 0) return true;\n        if(a % 11 == 0) return true;\n        if(a % 12 == 0) return true;\n        if(a % 13 == 0) return true;\n        if(a % 14 == 0) return true;\n        if(a % 15 == 0) return true;\n        if(a % 16 == 0) return true;\n        if(a % 17 == 0) return true;\n        if(a % 18 == 0) return true;\n        if(a % 19 == 0) return true;\n        if(a % 20 == 0) return true;\n        if(a % 21 == 0) return true;\n        if(a % 22 == 0) return true;\n        if(a % 23 == 0) return true;\n        if(a % 24 == 0) return true;\n        if(a % 25 == 0) return true;\n        if(a % 26 == 0) return true;\n        if(a % 27 == 0) return true;\n        if(a % 28 == 0) return true;\n        if(a % 29 == 0) return true;\n        if(a % 30 == 0) return true;\n        if(a % 31 == 0) return true;\n        if(a % 32 == 0) return true;\n        if(a % 33 == 0) return true;\n        if(a % 34 == 0) return true;\n        if(a % 35 == 0) return true;\n        if(a % 36 == 0) return true;\n        if(a % 37 == 0) return true;\n        if(a % 38 == 0) return true;\n        if(a % 39 == 0) return true;\n        if(a % 40 == 0)\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "/tmp/tmpuvhy_0xn.java:66: error: illegal start of statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        long b = a;\n        while(b > 0) {\n            b = b / 10;\n            if(b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv3t5s4x.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfmfjk__.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfmfjk__.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return iscube(a / 3);\n        return iscube(a / 3) || iscube(a / 2);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppto51odk.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long b = a;\n        while (b > 0) {\n            b = b - a;\n        }\n        return b == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zci4mf1.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (int)a && a == (int)(a*a) && a == (int)(a*a*a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoejfjtj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        return iscube(a / 3);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8coyvot.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        long b = a;\n        while (b > 0) {\n            b = b / 10;\n            if (b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxqywoms.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long b = a;\n        while (b != 0) {\n            b = b / 10;\n            if (b * b * b == a) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3r8zpkie.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return true;\n        if (a % 9 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy4nf8_y1.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return iscube(a / 3);\n        return iscube(a / 3) || iscube(a / 2);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppto51odk.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a==0) return true;\n        if(a==1) return true;\n        if(a==2) return false;\n        if(a==3) return true;\n        if(a==4) return false;\n        if(a==5) return true;\n        if(a==6) return false;\n        if(a==7) return true;\n        if(a==8) return false;\n        if(a==9) return true;\n        if(a==10) return false;\n        if(a==11) return true;\n        if(a==12) return false;\n        if(a==13) return true;\n        if(a==14) return false;\n        if(a==15) return true;\n        if(a==16) return false;\n        if(a==17) return true;\n        if(a==18) return false;\n        if(a==19) return true;\n        if(a==20) return false;\n        if(a==21) return true;\n        if(a==22) return false;\n        if(a==23) return true;\n        if(a==24) return false;\n        if(a==25) return true;\n        if(a==26) return false;\n        if(a==27) return true;\n        if(a==28) return false;\n        if(a==29) return true;\n        if(a==30) return false;\n        if(a==31) return true;\n        if(a==32) return false;\n        if(a==33) return true;\n        if(a==34) return false;\n        if(a==35) return true;\n        if(a==36) return false;\n        if(a==37) return true;\n        if(a==38) return false;\n        if(a==39) return true;\n        if(a==40) return false;\n        if(a==41) return true;\n        if(a==42) return false;\n        if(a==43) return true;\n        if(a==44) return false;\n        if(a==45) return true;\n        if(a==46\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "/tmp/tmpaznbelxf.java:72: error: ')' expected\n        if(a==46\n                ^\n/tmp/tmpaznbelxf.java:73: error: illegal start of statement\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        if (a % 4 == 0) {\n            return false;\n        }\n        if (a % 5 == 0) {\n            return false;\n        }\n        if (a % 6 == 0) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcxz6kd7.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (int)a && a == (int)(a*a) && a == (int)(a*a*a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoejfjtj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 9 == 0) return true;\n        if(a % 27 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpouh5cj9j.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        long b = a;\n        while (b != 0) {\n            b = b / 10;\n            if (b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0cjh82q_.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        if (a % 9 == 0) {\n            return false;\n        }\n        if (a % 27 == 0) {\n            return false;\n        }\n        if (a % 54 == 0) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumlcu2h_.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        long b = a;\n        while(b > 0) {\n            b = b / 10;\n            if(b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv3t5s4x.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a==0) return true;\n        if(a==1) return true;\n        if(a==2) return false;\n        if(a==3) return true;\n        if(a==4) return false;\n        if(a==5) return true;\n        if(a==6) return false;\n        if(a==7) return true;\n        if(a==8) return false;\n        if(a==9) return true;\n        if(a==10) return false;\n        if(a==11) return true;\n        if(a==12) return false;\n        if(a==13) return true;\n        if(a==14) return false;\n        if(a==15) return true;\n        if(a==16) return false;\n        if(a==17) return true;\n        if(a==18) return false;\n        if(a==19) return true;\n        if(a==20) return false;\n        if(a==21) return true;\n        if(a==22) return false;\n        if(a==23) return true;\n        if(a==24) return false;\n        if(a==25) return true;\n        if(a==26) return false;\n        if(a==27) return true;\n        if(a==28) return false;\n        if(a==29) return true;\n        if(a==30) return false;\n        if(a==31) return true;\n        if(a==32) return false;\n        if(a==33) return true;\n        if(a==34) return false;\n        if(a==35) return true;\n        if(a==36) return false;\n        if(a==37) return true;\n        if(a==38) return false;\n        if(a==39) return true;\n        if(a==40) return false;\n        if(a==41) return true;\n        if(a==42) return false;\n        if(a==43) return true;\n        if(a==44) return false;\n        if(a==45) return true;\n        if(a==46\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "/tmp/tmpaznbelxf.java:72: error: ')' expected\n        if(a==46\n                ^\n/tmp/tmpaznbelxf.java:73: error: illegal start of statement\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        long b = a;\n        while(b > 0) {\n            b = b / 10;\n            if(b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv3t5s4x.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return false;\n        if(a % 9 == 0) return false;\n        if(a % 27 == 0) return false;\n        if(a % 81 == 0) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqtzho8.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && (a % 3 == 0);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfhry0jg.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppb4r9zeo.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && (a % 3 == 0 || a % 5 == 0);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyohf0b4m.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 4 == 0) return true;\n        if(a % 5 == 0) return true;\n        if(a % 6 == 0) return true;\n        if(a % 7 == 0) return true;\n        if(a % 8 == 0) return true;\n        if(a % 9 == 0) return true;\n        if(a % 10 == 0) return true;\n        if(a % 11 == 0) return true;\n        if(a % 12 == 0) return true;\n        if(a % 13 == 0) return true;\n        if(a % 14 == 0) return true;\n        if(a % 15 == 0) return true;\n        if(a % 16 == 0) return true;\n        if(a % 17 == 0) return true;\n        if(a % 18 == 0) return true;\n        if(a % 19 == 0) return true;\n        if(a % 20 == 0) return true;\n        if(a % 21 == 0) return true;\n        if(a % 22 == 0) return true;\n        if(a % 23 == 0) return true;\n        if(a % 24 == 0) return true;\n        if(a % 25 == 0) return true;\n        if(a % 26 == 0) return true;\n        if(a % 27 == 0) return true;\n        if(a % 28 == 0) return true;\n        if(a % 29 == 0) return true;\n        if(a % 30 == 0) return true;\n        if(a % 31 == 0) return true;\n        if(a % 32 == 0) return true;\n        if(a % 33 == 0) return true;\n        if(a % 34 == 0) return true;\n        if(a % 35 == 0) return true;\n        if(a % 36 == 0) return true;\n        if(a % 37 == 0) return true;\n        if(a % 38 == 0) return true;\n        if(a % 39 == 0) return true;\n        if(a % 40 == 0)\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "/tmp/tmpuvhy_0xn.java:66: error: illegal start of statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && (a % 3 == 0);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfhry0jg.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 3 == 1) return false;\n        if(a % 3 == 2) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xi7n5dq.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (int)a && a == (int)(a*a) && a == (int)(a*a*a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoejfjtj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        long n = a;\n        while (n > 0) {\n            n = n / 3;\n            if (n == 0) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplw7nhtn1.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a < 0) return true;\n        if(a == 0) return true;\n        if(a % 3 != 0) return false;\n        long b = a;\n        while(b > 0) {\n            b = b / 3;\n        }\n        return b == 1;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy2i6nhym.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long b = a;\n        while (b > 0) {\n            b = b - a;\n        }\n        return b == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zci4mf1.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        if (a % 4 == 0) {\n            return false;\n        }\n        if (a % 5 == 0) {\n            return false;\n        }\n        if (a % 6 == 0) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcxz6kd7.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return iscube(a/3);\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4x4d5vr9.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return false;\n        if (a % 9 == 0) return false;\n        if (a % 27 == 0) return false;\n        if (a % 54 == 0) return false;\n        if (a % 63 == 0) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptm8xbjke.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        long b = a;\n        while(b != 0) {\n            b = b/3;\n            if(b*3 != a) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdh_vmdx.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvpd_5nvd.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        if (a % 4 == 0) {\n            return false;\n        }\n        if (a % 5 == 0) {\n            return false;\n        }\n        if (a % 6 == 0) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcxz6kd7.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 != 0) return false;\n        for (int i = 2; i < a; i++) {\n            if (a % i == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9gbd8qx.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        long n = a;\n        while (n > 0) {\n            n = n / 3;\n        }\n        return n == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01zwg6f5.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 3 == 1) return false;\n        if(a % 3 == 2) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xi7n5dq.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return false;\n        if(a % 9 == 0) return false;\n        if(a % 27 == 0) return false;\n        if(a % 81 == 0) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqtzho8.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a < 0) return false;\n        long n = a;\n        while(n > 0) {\n            if(n % 3 != 0) return false;\n            n /= 3;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3ka0ggu.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return iscube(a / 3);\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzf78o8g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 != 0) return false;\n        long t = a;\n        while(t > 0) {\n            t = t / 3;\n        }\n        return t == 1;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph363totv.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return iscube(a / 3);\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzf78o8g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        if(a % 4 == 0) return true;\n        if(a % 5 == 0) return true;\n        if(a % 6 == 0) return true;\n        if(a % 7 == 0) return true;\n        if(a % 8 == 0) return true;\n        if(a % 9 == 0) return true;\n        if(a % 10 == 0) return true;\n        if(a % 11 == 0) return true;\n        if(a % 12 == 0) return true;\n        if(a % 13 == 0) return true;\n        if(a % 14 == 0) return true;\n        if(a % 15 == 0) return true;\n        if(a % 16 == 0) return true;\n        if(a % 17 == 0) return true;\n        if(a % 18 == 0) return true;\n        if(a % 19 == 0) return true;\n        if(a % 20 == 0) return true;\n        if(a % 21 == 0) return true;\n        if(a % 22 == 0) return true;\n        if(a % 23 == 0) return true;\n        if(a % 24 == 0) return true;\n        if(a % 25 == 0) return true;\n        if(a % 26 == 0) return true;\n        if(a % 27 == 0) return true;\n        if(a % 28 == 0) return true;\n        if(a % 29 == 0) return true;\n        if(a % 30 == 0) return true;\n        if(a % 31 == 0) return true;\n        if(a % 32 == 0) return true;\n        if(a % 33 == 0) return true;\n        if(a % 34 == 0) return true;\n        if(a % 35 == 0) return true;\n        if(a % 36 == 0) return true;\n        if(a % 37 == 0) return true;\n        if(a % 38 == 0) return true;\n        if(a % 39 == 0) return true;\n        if(a % 40 == 0)\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "/tmp/tmpuvhy_0xn.java:66: error: illegal start of statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a < 0) {\n            return false;\n        }\n        long n = a;\n        while(n > 0) {\n            if(n % 3 != 0) {\n                return false;\n            }\n            n /= 3;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphila4039.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long n = a;\n        while (n > 0) {\n            if (n % 3 != 0) {\n                return false;\n            }\n            n /= 3;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprw8zk7q4.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (int)a && a == (int)(a*a) && a == (int)(a*a*a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoejfjtj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) return false;\n        if (a % 3 == 0) return false;\n        if (a % 9 == 0) return false;\n        if (a % 27 == 0) return false;\n        if (a % 81 == 0) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7m9iibmq.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (a * a * a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr54az59g.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        long b = a;\n        while(b > 0) {\n            b = b / 10;\n            if(b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv3t5s4x.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 3 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u0mag0f.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a == 1) return true;\n        if(a == 2) return true;\n        if(a % 3 == 0) return true;\n        if(a % 3 == 1) return false;\n        if(a % 3 == 2) return true;\n        if(a % 5 == 0) return true;\n        if(a % 5 == 1) return false;\n        if(a % 5 == 2) return true;\n        if(a % 5 == 3) return false;\n        if(a % 7 == 0) return true;\n        if(a % 7 == 1) return false;\n        if(a % 7 == 2) return true;\n        if(a % 7 == 3) return false;\n        if(a % 7 == 4) return true;\n        if(a % 7 == 5) return false;\n        if(a % 7 == 6) return true;\n        if(a % 11 == 0) return true;\n        if(a % 11 == 1) return false;\n        if(a % 11 == 2) return true;\n        if(a % 11 == 3) return false;\n        if(a % 11 == 4) return true;\n        if(a % 11 == 5) return false;\n        if(a % 11 == 6) return true;\n        if(a % 11 == 7) return false;\n        if(a % 11 == 8) return true;\n        if(a % 11 == 9) return false;\n        if(a % 11 == 10) return true;\n        if(a % 13 == 0) return true;\n        if(a % 13 == 1) return false;\n        if(a % 13 == 2) return true;\n        if(a % 13 == 3) return false;\n        if(a % 13 == 4) return true;\n        if(a % 13 == 5) return false;\n        if(a % 13 == 6) return true;\n        if(a % 13 == 7) return false;\n        if(a % 13 == 8) return true;\n        if(a % 13 == 9) return false;\n        if(a % 13 == 10) return true;\n\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "/tmp/tmp07go56cp.java:67: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && (a % 9 == 0 || a % 9 == 1 || a % 9 == 8);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnq83ahhv.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (int)a && a == (int)(a*a) && a == (int)(a*a*a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoejfjtj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a < 0) {\n            return true;\n        }\n        if(a == 0) {\n            return true;\n        }\n        if(a % 3 == 0) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9um3s2r.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a > 0 && a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfmfjk__.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 != 0) {\n            return false;\n        }\n        long b = a;\n        while (b > 0) {\n            b = b / 3;\n        }\n        return b == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2r8kr3do.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        long n = a;\n        while (n > 0) {\n            if (n % 3 != 0) {\n                return false;\n            }\n            n /= 3;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprw8zk7q4.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        long b = a;\n        while(b > 0) {\n            b = b / 10;\n            if(b * b * b == a) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv3t5s4x.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if(a == 0) return true;\n        if(a < 0) return false;\n        if(a % 3 == 0) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrx083t.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a == (int)a && a == (int)(a*a) && a == (int)(a*a*a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoejfjtj.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a < 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmi33mtof.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a < 0) {\n            return true;\n        }\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return false;\n        }\n        if (a % 9 == 0) {\n            return false;\n        }\n        if (a % 27 == 0) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptw5dzxd9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n        if (a % 3 == 0) {\n            return iscube(a / 3);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmaeajdcw.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an integer a and returns true \n    // if this ingeger is a cube of some integer number.\n    // Note: you may assume the input is always valid.\n    // Examples:\n    // >>> iscube(1)\n    // True\n    // >>> iscube(2)\n    // False\n    // >>> iscube(-1)\n    // True\n    // >>> iscube(64)\n    // True\n    // >>> iscube(0)\n    // True\n    // >>> iscube(180)\n    // False\n    public static boolean iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664292729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rugxhwq.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
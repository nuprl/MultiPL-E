{
  "name": "HumanEval_120_maximum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list arr of integers and a positive integer k, return a sorted array list \n    // of length k with the maximum k numbers in arr.\n    // Example 1:\n    // >>> maximum([-3, -4, 5], 3)\n    // [-4, -3, 5]\n    // Example 2:\n    // >>> maximum([4, -4, 4], 2)\n    // [4, 4]\n    // Example 3:\n    // >>> maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    // [2]\n    // Note:\n    // 1. The length of the array array list will be in the range of [1, 1000].\n    // 2. The elements in the array array list will be in the range of [-1000, 1000].\n    // 3. 0 <= k <= len(arr)\n    public static ArrayList<Long> maximum(ArrayList<Long> arr, long k) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-3l, (long)-4l, (long)5l))), (3l)).equals((new ArrayList<Long>(Arrays.asList((long)-4l, (long)-3l, (long)5l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)4l, (long)-4l, (long)4l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-3l, (long)2l, (long)1l, (long)2l, (long)-1l, (long)-2l, (long)1l))), (1l)).equals((new ArrayList<Long>(Arrays.asList((long)2l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)123l, (long)-123l, (long)20l, (long)0l, (long)1l, (long)2l, (long)-3l))), (3l)).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)20l, (long)123l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-123l, (long)20l, (long)0l, (long)1l, (long)2l, (long)-3l))), (4l)).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)20l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)0l, (long)3l, (long)-13l, (long)-8l, (long)0l))), (7l)).equals((new ArrayList<Long>(Arrays.asList((long)-13l, (long)-8l, (long)0l, (long)0l, (long)3l, (long)5l, (long)15l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)2l, (long)5l, (long)3l, (long)-10l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)5l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)5l, (long)-7l))), (1l)).equals((new ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)4l, (long)-4l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)-4l, (long)4l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-10l, (long)10l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)-10l, (long)10l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)-23l, (long)243l, (long)-400l, (long)0l))), (0l)).equals((new ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n",
  "completions": [
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() <= k) {\n            result.addAll(arr);\n            return result;\n        }\n        Collections.sort(arr);\n        int i = 0;\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        int left = 0;\n        int right = arr.size() - 1;\n        while (left < right) {\n            int mid = (left + right) / 2;\n            if (arr.get(mid) > arr.get(right)) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        \n        result.add(arr.get(left));\n        result.add(arr.get(right));\n        \n        while (result.size() < k) {\n            result.add(arr.get(left));\n            left++;\n        }\n        \n        while (result.size() > k) {\n            result.remove(result.size() - 1);\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                ans.add(arr.get(i));\n            }\n        }\n        \n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        int i = 0;\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int kk = 0;\n        while (i < arr.size() && j < arr.size()) {\n            if (arr.get(i) < arr.get(j)) {\n                i++;\n            } else if (arr.get(i) > arr.get(j)) {\n                j++;\n            } else {\n                result.add(arr.get(i));\n                i++;\n                j++;\n                kk++;\n                if (kk == k) {\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (arr.size() < k) {\n            return arr;\n        }\n        \n        Collections.sort(arr);\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k > arr.size()) {\n            result.addAll(arr);\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int max = 0;\n        while (i < arr.size() && j < arr.size()) {\n            if (arr.get(i) < arr.get(j)) {\n                max = arr.get(i);\n                i++;\n            } else {\n                max = arr.get(j);\n                j++;\n            }\n            if (max == k) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                res.add(arr.get(i));\n            }\n        }\n        \n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return res;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                res.add(arr.get(i));\n            }\n        }\n        \n        return res;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n            for(int j = 1; j < arr.size(); j++) {\n                if(arr.get(j) > max) {\n                    max = arr.get(j);\n                }\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n            arr.remove(0);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n            ",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr == null || arr.size() == 0) {\n            return result;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        if (k > arr.size()) {\n            k = arr.size();\n        }\n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0) + arr.get(arr.size() - 1);\n            arr.remove(arr.size() - 1);\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (k == 1) {\n            ans.add(arr.get(0));\n            return ans;\n        }\n        if (k == 2) {\n            Long max = arr.get(0);\n            Long second = arr.get(1);\n            if (max > second) {\n                ans.add(max);\n                ans.add(second);\n            } else {\n                ans.add(second);\n                ans.add(max);\n            }\n            return ans;\n        }\n        if (k == 3) {\n            Long max = arr.get(0);\n            Long second = arr.get(1);\n            Long third = arr.get(2);\n            if (max > second && max > third) {\n                ans.add(max);\n                ans.add(second);\n                ans.add(third);\n            } else if (second > max && second > third) {\n                ans.add(second);\n                ans.add(max);\n                ans.add(third);\n            } else {\n                ans.add(third);\n                ans.add(max);\n                ans.add(second);\n            }\n            return ans;\n        }\n        if (k == 4) {\n            Long max = arr.get(0);\n            Long second = arr.get(1);\n            Long third = arr.get(2);\n            Long fourth = arr.get(3);\n            if (max > second && max > third && max > fourth) {\n                ans.add(max);\n                ans.add(second);\n                ans.add(third);\n                ans.add(fourth);\n            } else if (second > max && second > third && second > fourth) {\n                ans.add(second);\n                ans.add(max);\n                ans.add(third);\n                ans.add(fourth);\n            } else if (third > max && third > second && third > fourth) {\n                ans.add(third);\n                ans.add(max);\n                ans.add(second);\n                ans.add(fourth);\n            } else if (fourth > max && fourth > third && fourth > second)",
    "        // Write your code here\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Start from the end and find the k-th largest number\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            if (result.size() == k) {\n                break;\n            }\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n        }\n        \n        return res;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        Collections.sort(arr);\n        for(int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n        }\n        return res;",
    "        // Write your code here\n        ArrayList<Long> max = new ArrayList<Long>();\n        if(arr.size() < k)\n            return max;\n        \n        long max_val = arr.get(0);\n        for(int i = 1; i < arr.size(); i++)\n            if(arr.get(i) > max_val)\n                max_val = arr.get(i);\n        \n        for(int i = 0; i < k; i++)\n            max.add(max_val);\n        \n        for(int i = 0; i < arr.size(); i++)\n            if(arr.get(i) > max_val)\n                max.set(i, arr.get(i));\n        \n        return max;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() == 0)\n            return result;\n        if(k == 1)\n            return arr;\n        if(k > arr.size())\n            return result;\n        \n        int start = 0;\n        int end = arr.size() - 1;\n        int mid = (start + end) / 2;\n        while(start <= end) {\n            if(arr.get(mid) > arr.get(mid + 1)) {\n                mid++;\n            }\n            else if(arr.get(mid) < arr.get(mid + 1)) {\n                mid--;\n            }\n            else {\n                mid++;\n            }\n            if(mid == arr.size() - 1) {\n                result.add(arr.get(mid));\n                break;\n            }\n            if(arr.get(mid) > arr.get(mid + 1)) {\n                end = mid - 1;\n            }\n            else {\n                start = mid + 1;\n            }\n            mid = (start + end) / 2;\n        }\n        return result;",
    "        // Write your code here\n        \n        ArrayList<Long> res = new ArrayList<Long>();\n        \n        if(arr.size() < k) {\n            return res;\n        }\n        \n        if(k == 1) {\n            res.add(arr.get(0));\n            return res;\n        }\n        \n        if(k == 2) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            return res;\n        }\n        \n        if(k == 3) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            return res;\n        }\n        \n        if(k == 4) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            return res;\n        }\n        \n        if(k == 5) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            res.add(arr.get(4));\n            return res;\n        }\n        \n        if(k == 6) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            res.add(arr.get(4));\n            res.add(arr.get(5));\n            return res;\n        }\n        \n        if(k == 7) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            res.add(arr.get(4));\n            res.add(arr.get(5));\n            res.add(arr.get(6));\n            return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr == null || arr.size() == 0 || k <= 0) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int max = 0;\n        while (i < arr.size() && j < k) {\n            if (arr.get(i) > arr.get(j)) {\n                max = arr.get(i);\n                i++;\n            } else {\n                max = arr.get(j);\n                j++;\n            }\n            result.add(max);\n        }\n        while (i < arr.size()) {\n            result.add(arr.get(i));\n            i++;\n        }\n        while (j < k) {\n            result.add(arr.get(j));\n            j++;\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> ans = new ArrayList<>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Add the first k elements\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Add the remaining elements\n        for (int i = k; i < arr.size(); i++) {\n            if (result.get(result.size() - 1) < arr.get(i)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        int i = 0;\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (k == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n            result.",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() == 0) return result;\n        if(k == 1) return arr;\n        if(k == 2) return new ArrayList<Long>(){{add(arr.get(0));add(arr.get(1));}};\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) max = arr.get(i);\n        }\n        \n        long start = 0;\n        long end = arr.size() - 1;\n        while(start < end) {\n            long mid = start + (end - start) / 2;\n            if(arr.get(mid) < max) {\n                start = mid + 1;\n            } else {\n                end = mid;\n            }\n        }\n        \n        if(arr.get(start) < max) {\n            result.add(arr.get(start));\n            result.add(arr.get(start + 1));\n        } else {\n            result.add(arr.get(start));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Get the first k elements\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Get the remaining elements\n        for (int i = k; i < arr.size(); i++) {\n            if (result.get(result.size() - 1) < arr.get(i)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        Collections.sort(arr);\n        for(int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        if(k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(k == 2) {\n            result.add(Math.max(arr.get(0), arr.get(1)));\n            return result;\n        }\n        \n        if(k == 3) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), arr.get(2))));\n            return result;\n        }\n        \n        if(k == 4) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), arr.get(3)))));\n            return result;\n        }\n        \n        if(k == 5) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), arr.get(4))))));\n            return result;\n        }\n        \n        if(k == 6) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), arr.get(5)))))));\n            return result;\n        }\n        \n        if(k == 7) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), Math.max(arr.get(5), arr.get(6))))))));\n            return result;\n        }\n        \n        if(k == 8) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        if (max == 0) {\n            return result;\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (arr.size() == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (arr.size() == 2) {\n            result.add(Math.max(arr.get(0), arr.get(1)));\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int max = 0;\n        while (i < arr.size() && j < arr.size()) {\n            if (arr.get(i) < arr.get(j)) {\n                i++;\n            } else if (arr.get(i) > arr.get(j)) {\n                j++;\n            } else {\n                i++;\n                j++;\n            }\n        }\n        while (i < arr.size()) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            i++;\n        }\n        while (j < arr.size()) {\n            if (arr.get(j) > max) {\n                max = arr.get(j);\n            }\n            j++;\n        }\n        if (max <= k) {\n            result.add(max);\n        } else {\n            result.add(max - k);\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() == 0 || k == 0) return res;\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        if(max >= k) {\n            res.add(max);\n            return res;\n        }\n        \n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= k) {\n                res.add(arr.get(i));\n            }\n        }\n        \n        return res;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n            ",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return res;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        if (max < k) {\n            return res;\n        }\n        \n        for (int i = 0; i < k; i++) {\n            res.add(max);\n            max = max - arr.get(0);\n            arr.remove(0);\n        }\n        \n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n            ",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (arr.size() == k) {\n            result.addAll(arr);\n            return result;\n        }\n        Collections.sort(arr);\n        int i = 0;\n        int j = arr.size() - 1;\n        while (i < k && j >= k) {\n            result.add(arr.get(i));\n            i++;\n            j--;\n        }\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        while (j >= k) {\n            result.add(arr.get(j));\n            j--;\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() == 0) return res;\n        if(k == 1) return arr;\n        if(k == 2) return new ArrayList<Long>();\n        if(k == 3) return new ArrayList<Long>();\n        if(k == 4) return new ArrayList<Long>();\n        if(k == 5) return new ArrayList<Long>();\n        if(k == 6) return new ArrayList<Long>();\n        if(k == 7) return new ArrayList<Long>();\n        if(k == 8) return new ArrayList<Long>();\n        if(k == 9) return new ArrayList<Long>();\n        if(k == 10) return new ArrayList<Long>();\n        if(k == 11) return new ArrayList<Long>();\n        if(k == 12) return new ArrayList<Long>();\n        if(k == 13) return new ArrayList<Long>();\n        if(k == 14) return new ArrayList<Long>();\n        if(k == 15) return new ArrayList<Long>();\n        if(k == 16) return new ArrayList<Long>();\n        if(k == 17) return new ArrayList<Long>();\n        if(k == 18) return new ArrayList<Long>();\n        if(k == 19) return new ArrayList<Long>();\n        if(k == 20) return new ArrayList<Long>();\n        if(k == 21) return new ArrayList<Long>();\n        if(k == 22) return new ArrayList<Long>();\n        if(k == 23) return new ArrayList<Long>();\n        if(k == 24) return new ArrayList<Long>();\n        if(k == 25) return new ArrayList<Long>();\n        if(k == 26) return new ArrayList<Long>();\n        if(k == 27) return new ArrayList<Long>();\n        if(k == 28) return new ArrayList<Long>();\n        if(k == 29) return new ArrayList<Long>();\n        if(k == 30) return new ArrayList<Long>();\n",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Add the first k elements to the result\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Add the rest of the elements to the result\n        for (int i = k; i < arr.size(); i++) {\n            if (result.size() < k) {\n                result.add(arr.get(i));\n            } else {\n                if (result.get(k - 1) < arr.get(i)) {\n                    result.set(k - 1, arr.get(i));\n                }\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() == 0) return res;\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        if(max < k) {\n            res.add(max);\n            return res;\n        }\n        \n        long start = 0;\n        long end = arr.size() - 1;\n        while(start < end) {\n            long mid = start + (end - start) / 2;\n            if(arr.get(mid) < k) {\n                start = mid + 1;\n            } else {\n                end = mid;\n            }\n        }\n        \n        if(arr.get(start) < k) {\n            res.add(arr.get(start));\n        } else {\n            res.add(arr.get(end));\n        }\n        \n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                ans.add(arr.get(i));\n            }\n        }\n        return ans;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Find the k largest numbers\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        \n        if(arr.size() < k)\n            return arr;\n        \n        Collections.sort(arr);\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        for(int i = 0; i < k; i++)\n            result.add(arr.get(i));\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        int i = 0;\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                res.add(arr.get(i));\n            }\n        }\n        \n        return res;",
    "        // Write your code here\n        ArrayList<Long> max = new ArrayList<Long>();\n        long max_val = Long.MIN_VALUE;\n        for(long i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max_val) {\n                max_val = arr.get(i);\n                max.clear();\n                max.add(arr.get(i));\n            }\n            else if(arr.get(i) == max_val) {\n                max.add(arr.get(i));\n            }\n        }\n        if(max.size() < k) {\n            max.add(max_val);\n        }\n        return max;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (arr.size() == k) {\n            result.addAll(arr);\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < arr.size() && j < k) {\n            if (arr.get(i) > arr.get(j)) {\n                j++;\n            } else {\n                i++;\n            }\n        }\n        for (int k = 0; k < k; k++) {\n            result.add(arr.get(i));\n            i++;\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (k > arr.size()) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(Math.max(arr.get(0), arr.get(1)));\n            return result;\n        }\n        if (k == 3) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), arr.get(2))));\n            return result;\n        }\n        if (k == 4) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), arr.get(3)))));\n            return result;\n        }\n        if (k == 5) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), arr.get(4))))));\n            return result;\n        }\n        if (k == 6) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), arr.get(5)))))));\n            return result;\n        }\n        if (k == 7) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), Math.max(arr.get(5), arr.get(6))))))));\n            return result;\n        }\n        if (k == 8) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        int i = 0;\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        \n        return result;",
    "        // Write your code here\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        \n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(max == arr.get(i)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> max = new ArrayList<Long>();\n        if(arr.size()<k)\n            return max;\n        Collections.sort(arr);\n        for(int i=0;i<k;i++)\n            max.add(arr.get(i));\n        return max;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(max == arr.get(i)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n        }\n        \n        return res;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return res;\n        }\n        \n        // Sort arr\n        Collections.sort(arr);\n        \n        // Get the max k numbers\n        for (int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n        }\n        \n        return res;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (k == 1) {\n            for (Long i : arr) {\n                ans.add(i);\n            }\n        } else {\n            long max = arr.get(0);\n            for (int i = 1; i < arr.size(); i++) {\n                if (arr.get(i) > max) {\n                    max = arr.get(i);\n                }\n            }\n            for (int i = 0; i < k; i++) {\n                if (max == arr.get(i)) {\n                    ans.add(arr.get(i));\n                }\n            }\n        }\n        return ans;",
    "        // Write your code here\n        ArrayList<Long> max = new ArrayList<>();\n        if(arr.size() < k) {\n            return max;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            max.add(arr.get(i));\n        }\n        \n        return max;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort arr\n        Collections.sort(arr);\n        \n        // Add the first k elements\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Add the rest of elements\n        for (int i = k; i < arr.size(); i++) {\n            if (result.size() == k) {\n                break;\n            }\n            \n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(k > arr.size()) {\n            return result;\n        }\n        \n        if(k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        \n        if(k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        \n        int i = 0;\n        int j = 0;\n        int max = arr.get(0);\n        while(i < arr.size()) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n                j = i;\n            }\n            i++;\n        }\n        \n        result.add(arr.get(j));\n        \n        i = j + 1;\n        while(i < arr.size()) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n                j = i;\n            }\n            i++;\n        }\n        \n        result.add(arr.get(j));\n        \n        i = j + 1;\n        while(i < arr.size()) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n                j = i;\n            }\n            i++;\n        }\n        \n        result.add(arr.get(j));\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() == 0) return result;\n        if(k == 1) return arr;\n        if(k > arr.size()) return result;\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) max = arr.get(i);\n        }\n        \n        for(int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n            for(int j = 1; j < arr.size(); j++) {\n                if(arr.get(j) > max) max = arr.get(j);\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        for (int i = k; i < arr.size(); i++) {\n            if (arr.get(i) >= max) {\n                result.set(i - k, arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (arr.size() == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (arr.size() == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (arr.size() == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (arr.size() == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (arr.size() == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (arr.size() == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (arr.size() == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort arr\n        Collections.sort(arr);\n        \n        // Initialize max\n        long max = arr.get(0);\n        \n        // Iterate through arr\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        // Add max to result\n        result.add(max);\n        \n        // Iterate through arr\n        for (int i = k; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            \n            // Add max to result\n            result.add(max);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        if (arr.size() == 0) {\n            return new ArrayList<Long>();\n        }\n        if (k == 1) {\n            return arr;\n        }\n        if (arr.size() == 1) {\n            return arr;\n        }\n        if (arr.size() == 2) {\n            if (arr.get(0) > arr.get(1)) {\n                return arr;\n            } else {\n                return new ArrayList<Long>();\n            }\n        }\n        if (arr.size() == 3) {\n            if (arr.get(0) > arr.get(1)) {\n                if (arr.get(0) > arr.get(2)) {\n                    return arr;\n                } else {\n                    return new ArrayList<Long>();\n                }\n            } else {\n                if (arr.get(1) > arr.get(2)) {\n                    return arr;\n                } else {\n                    return new ArrayList<Long>();\n                }\n            }\n        }\n        if (arr.size() == 4) {\n            if (arr.get(0) > arr.get(1)) {\n                if (arr.get(0) > arr.get(2)) {\n                    if (arr.get(0) > arr.get(3)) {\n                        return arr;\n                    } else {\n                        return new ArrayList<Long>();\n                    }\n                } else {\n                    if (arr.get(1) > arr.get(3)) {\n                        return arr;\n                    } else {\n                        return new ArrayList<Long>();\n                    }\n                }\n            } else {\n                if (arr.get(1) > arr.get(2)) {\n                    if (arr.get(1) > arr.get(3)) {\n                        return arr;\n                    } else {\n                        return new ArrayList<Long>();\n                    }\n                } else {\n                    if (arr.get(2) > arr.get(3)) {\n                        return arr;\n                    } else {\n                        return new ArrayList<Long>();\n                    }\n                }\n            }\n        }\n        if (arr.size()",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        if (k == 1) {\n            return arr;\n        }\n        if (k == 2) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1));}};\n        }\n        if (k == 3) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1)); add(arr.get(2));}};\n        }\n        if (k == 4) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1)); add(arr.get(2)); add(arr.get(3));}};\n        }\n        if (k == 5) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1)); add(arr.get(2)); add(arr.get(3)); add(arr.get(4));}};\n        }\n        if (k == 6) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1)); add(arr.get(2)); add(arr.get(3)); add(arr.get(4)); add(arr.get(5));}};\n        }\n        if (k == 7) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1)); add(arr.get(2)); add(arr.get(3)); add(arr.get(4)); add(arr.get(5)); add(arr.get(6));}};\n        }\n        if (k == 8) {\n            return new ArrayList<Long>(){{add(arr.get(0)); add(arr.get(1)); add(arr.get(2)); add(arr.get(3)); add(arr.get(4)); add(arr.get(5)); add(arr.get(6)); add(arr.get(7));}};\n        }\n        if (k",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (arr.size() == k) {\n            result.addAll(arr);\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        if (result.size() < k) {\n            result.addAll(arr);\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> max = new ArrayList<Long>();\n        if(k > arr.size()) {\n            return max;\n        }\n        \n        if(k == 1) {\n            max.add(arr.get(0));\n            return max;\n        }\n        \n        long max_val = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max_val) {\n                max_val = arr.get(i);\n            }\n        }\n        \n        if(max_val == arr.get(0)) {\n            max.add(arr.get(0));\n        }\n        \n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) == max_val) {\n                max.add(arr.get(i));\n            }\n        }\n        \n        for(int i = 0; i < k - max.size(); i++) {\n            max.add(arr.get(0));\n        }\n        \n        return max;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        int left = 0;\n        int right = arr.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) / 2;\n            if (arr.get(mid) > arr.get(right)) {\n                left = mid + 1;\n            } else if (arr.get(mid) < arr.get(right)) {\n                right = mid - 1;\n            } else {\n                result.add(arr.get(mid));\n                left++;\n                right--;\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array\n        Collections.sort(arr);\n        \n        // Populate the result\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(Math.max(arr.get(0), arr.get(1)));\n            return result;\n        }\n        if (k == 3) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), arr.get(2))));\n            return result;\n        }\n        if (k == 4) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), arr.get(3)))));\n            return result;\n        }\n        if (k == 5) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), arr.get(4))))));\n            return result;\n        }\n        if (k == 6) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), arr.get(5)))))));\n            return result;\n        }\n        if (k == 7) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), Math.max(arr.get(5), arr.get(6))))))));\n            return result;\n        }\n        if (k == 8) {\n            result.add(Math.max(arr.get(0), Math.max(arr.get(1), Math.max(arr.get(2), Math.max(arr.get(3), Math.max(arr.get(4), Math.max(arr.get(5), Math",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (k == 1) {\n            ans.add(arr.get(0));\n            return ans;\n        }\n        if (arr.size() == 1) {\n            ans.add(arr.get(0));\n            return ans;\n        }\n        if (arr.size() == 2) {\n            if (arr.get(0) > arr.get(1)) {\n                ans.add(arr.get(1));\n                ans.add(arr.get(0));\n            } else {\n                ans.add(arr.get(0));\n                ans.add(arr.get(1));\n            }\n            return ans;\n        }\n        int i = 0;\n        int j = arr.size() - 1;\n        while (i < j) {\n            if (arr.get(i) > arr.get(j)) {\n                ans.add(arr.get(i));\n                i++;\n            } else {\n                ans.add(arr.get(j));\n                j--;\n            }\n        }\n        if (i == j) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            res.add(arr.get(i));\n        }\n        \n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() == 0 || k == 0)\n            return res;\n        if(k == 1)\n            return arr;\n        Collections.sort(arr);\n        int i = 0;\n        while(i < k && i < arr.size())\n            res.add(arr.get(i++));\n        while(i < arr.size())\n            res.add(arr.get(i++));\n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (max == arr.get(i)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> max = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return max;\n        }\n        \n        long max_val = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max_val) {\n                max_val = arr.get(i);\n            }\n        }\n        \n        if(max_val == arr.get(0)) {\n            max.add(arr.get(0));\n        }\n        \n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) == max_val) {\n                max.add(arr.get(i));\n            }\n        }\n        \n        if(max.size() < k) {\n            return max;\n        }\n        \n        Collections.sort(max);\n        \n        for(int i = 0; i < k; i++) {\n            max.add(max.get(i));\n        }\n        \n        return max;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(arr.size() == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(arr.size() == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        \n        if(arr.size() == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        \n        if(arr.size() == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        \n        if(arr.size() == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        \n        if(arr.size() == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        \n        if(arr.size() == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(max == arr.get(i)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() <= k) {\n            result.addAll(arr);\n            return result;\n        }\n        \n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        long start = 0;\n        long end = arr.size() - 1;\n        while (start + k - 1 < arr.size()) {\n            if (arr.get(start) <= max) {\n                result.add(arr.get(start));\n                start++;\n            } else {\n                start++;\n            }\n        }\n        \n        while (end - k + 1 >= 0) {\n            if (arr.get(end) <= max) {\n                result.add(arr.get(end));\n                end--;\n            } else {\n                end--;\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() == 0) return ans;\n        if (k == 1) {\n            ans.add(arr.get(0));\n            return ans;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) max = arr.get(i);\n        }\n        if (max == arr.get(0)) {\n            ans.add(arr.get(0));\n            return ans;\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n                ans.add(arr.get(i));\n                if (ans.size() == k) return ans;\n            }\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n            ",
    "        // Write your code here\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Initialize the result\n        result.add(arr.get(0));\n        \n        // Iterate through the array list\n        for (int i = 1; i < k; i++) {\n            // If the current element is greater than the previous one, add it to the result\n            if (arr.get(i) > arr.get(i - 1)) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        if(arr.size() == 0) {\n            return result;\n        }\n        \n        if(k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(k > arr.size()) {\n            result.addAll(arr);\n            return result;\n        }\n        \n        long max = arr.get(0);\n        \n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        if(k > max) {\n            result.add(max);\n            return result;\n        }\n        \n        long index = 0;\n        \n        while(index < arr.size()) {\n            if(arr.get(index) < max) {\n                index++;\n                continue;\n            }\n            \n            if(index + k - 1 < arr.size()) {\n                result.add(arr.get(index + k - 1));\n            }\n            \n            index++;\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        \n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Add the first k elements to result\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Add the rest of elements to result\n        for (int i = k; i < arr.size(); i++) {\n            if (result.size() < k) {\n                result.add(arr.get(i));\n            } else {\n                if (result.get(k - 1) < arr.get(i)) {\n                    result.set(k - 1, arr.get(i));\n                }\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(arr.size() == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        \n        if(arr.size() == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        \n        if(arr.size() == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        \n        if(arr.size() == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        \n        if(arr.size() == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        \n        if(arr.size() == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        \n        if(arr.size() == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array\n        Collections.sort(arr);\n        \n        // Get the first k elements\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Get the rest elements\n        for (int i = k; i < arr.size(); i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return res;\n        }\n        \n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        \n        long max_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n                max_index = i;\n            }\n        }\n        \n        long min_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == min) {\n                min_index = i;\n            }\n        }\n        \n        if (max_index - min_index < k - 1) {\n            for (int i = 0; i < k - 1 - (max_index - min_index); i++) {\n                res.add(arr.get(min_index + i));\n            }\n        }\n        \n        for (int i = 0; i < k - 1 - (max_index - min_index); i++) {\n            res.add(arr.get(max_index + i));\n        }\n        \n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        // Sort the array\n        Collections.sort(arr);\n        \n        // Get the first k elements\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        // Get the rest of the elements\n        for (int i = k; i < arr.size(); i++) {\n            if (arr.get(i) > result.get(k - 1)) {\n                result.set(k - 1, arr.get(i));\n            }\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr == null || arr.size() == 0 || k <= 0) {\n            return result;\n        }\n        \n        // Sort the array list\n        Collections.sort(arr);\n        \n        // Initialize the max and min\n        long max = arr.get(0);\n        long min = arr.get(0);\n        \n        // Iterate through the array list\n        for (int i = 1; i < arr.size(); i++) {\n            // If the current element is greater than max, then update max\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            \n            // If the current element is less than min, then update min\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        \n        // If the max and min are equal, then return the array list\n        if (max == min) {\n            return arr;\n        }\n        \n        // If the max is greater than k, then return the array list\n        if (max > k) {\n            return arr;\n        }\n        \n        // If the max is less than k, then return the array list\n        if (max < k) {\n            return arr;\n        }\n        \n        // If the max is equal to k, then return the array list\n        if (max == k) {\n            result.add(max);\n            return result;\n        }\n        \n        // If the max is greater than k, then return the array list\n        if (max > k) {\n            return arr;\n        }\n        \n        // If the max is less than k, then return the array list\n        if (max < k) {\n            return arr;\n        }\n        \n        // If the max is equal to k, then return the array list\n        if (max == k) {\n            result.add(max);\n            return result;\n        }\n        \n        // If the max is greater than k, then return the array list\n        if (max > k) {\n            return arr;\n        }\n        \n        ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() == 0) return ans;\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) max = arr.get(i);\n        }\n        if (max > k) {\n            for (int i = 0; i < k; i++) {\n                ans.add(max);\n                max--;\n            }\n        } else {\n            for (int i = 0; i < arr.size(); i++) {\n                if (arr.get(i) > k) {\n                    ans.add(arr.get(i));\n                    arr.set(i, arr.get(i) - k);\n                }\n            }\n        }\n        return ans;",
    "        ArrayList<Long> res = new ArrayList<>();\n        if (arr.size() < k) {\n            return res;\n        }\n        if (k == 1) {\n            res.add(arr.get(0));\n            return res;\n        }\n        if (k == 2) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            return res;\n        }\n        if (k == 3) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            return res;\n        }\n        if (k == 4) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            return res;\n        }\n        if (k == 5) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            res.add(arr.get(4));\n            return res;\n        }\n        if (k == 6) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            res.add(arr.get(4));\n            res.add(arr.get(5));\n            return res;\n        }\n        if (k == 7) {\n            res.add(arr.get(0));\n            res.add(arr.get(1));\n            res.add(arr.get(2));\n            res.add(arr.get(3));\n            res.add(arr.get(4));\n            res.add(arr.get(5));\n            res.add(arr.get(6));\n            return res;\n        }\n        if (k == 8) {\n            res.add(arr.get(0));\n            ",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr == null || arr.size() == 0 || k <= 0) {\n            return result;\n        }\n        int start = 0;\n        int end = arr.size() - 1;\n        while (start < end) {\n            int mid = start + (end - start) / 2;\n            if (arr.get(mid) < arr.get(mid + 1)) {\n                start = mid + 1;\n            } else {\n                end = mid;\n            }\n        }\n        if (arr.get(start) < arr.get(end)) {\n            result.add(arr.get(start));\n            result.add(arr.get(end));\n        } else {\n            result.add(arr.get(end));\n            result.add(arr.get(start));\n        }\n        if (result.size() < k) {\n            result.add(arr.get(start));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (arr.size() == k) {\n            result.addAll(arr);\n            return result;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for(int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        return ans;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() == 0 || k == 0)\n            return res;\n        if(k == 1)\n            return arr;\n        if(k == 2)\n            return new ArrayList<Long>(){{add(arr.get(0));add(arr.get(1));}};\n        \n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for(int i = 0; i < arr.size(); i++)\n            pq.add(arr.get(i));\n        \n        while(pq.size() > k)\n            pq.poll();\n        \n        while(pq.size() > 0)\n            res.add(pq.poll());\n        \n        return res;",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return res;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        if (k > arr.size()) {\n            k = arr.size();\n        }\n        \n        for (int i = 0; i < k; i++) {\n            res.add(max);\n            max = max - arr.get(0) + arr.get(arr.size() - 1);\n            arr.remove(arr.size() - 1);\n        }\n        \n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            result.add(max);\n            max = max - arr.get(0);\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(Math.max(arr.get(0), arr.get(1)));\n            return result;\n        }\n        if (k == 3) {\n            result.add(Math.max(Math.max(arr.get(0), arr.get(1)), arr.get(2)));\n            return result;\n        }\n        if (k == 4) {\n            result.add(Math.max(Math.max(Math.max(arr.get(0), arr.get(1)), arr.get(2)), arr.get(3)));\n            return result;\n        }\n        if (k == 5) {\n            result.add(Math.max(Math.max(Math.max(Math.max(arr.get(0), arr.get(1)), arr.get(2)), arr.get(3)), arr.get(4)));\n            return result;\n        }\n        if (k == 6) {\n            result.add(Math.max(Math.max(Math.max(Math.max(Math.max(arr.get(0), arr.get(1)), arr.get(2)), arr.get(3)), arr.get(4)), arr.get(5)));\n            return result;\n        }\n        if (k == 7) {\n            result.add(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(arr.get(0), arr.get(1)), arr.get(2)), arr.get(3)), arr.get(4)), arr.get(5)), arr.get(6)));\n            return result;\n        }\n        if (k == 8) {\n            result.add(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(arr.get(0), arr.get(1)), arr.get(2)), arr.get(3)), arr.get(4)), arr.get(5)),",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "        // Write your code here\n        \n        if (arr.size() < k) {\n            return arr;\n        }\n        \n        Collections.sort(arr);\n        \n        ArrayList<Long> result = new ArrayList<Long>();\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n            return result;\n        }\n        if (k == 2) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            return result;\n        }\n        if (k == 3) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            return result;\n        }\n        if (k == 4) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            return result;\n        }\n        if (k == 5) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            return result;\n        }\n        if (k == 6) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            return result;\n        }\n        if (k == 7) {\n            result.add(arr.get(0));\n            result.add(arr.get(1));\n            result.add(arr.get(2));\n            result.add(arr.get(3));\n            result.add(arr.get(4));\n            result.add(arr.get(5));\n            result.add(arr.get(6));\n            return result;\n        }\n        if (k == 8) {\n            result.add(arr.get(0));\n",
    "        // Write your code here\n        ArrayList<Long> res = new ArrayList<Long>();\n        if(arr.size() < k) {\n            return res;\n        }\n        \n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for(int i = 0; i < k; i++) {\n            if(arr.get(i) == max) {\n                res.add(arr.get(i));\n            }\n        }\n        \n        return res;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            ans.add(arr.get(i));\n        }\n        \n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        if (arr.size() == k) {\n            result.addAll(arr);\n            return result;\n        }\n        \n        Collections.sort(arr);\n        int i = 0;\n        while (i < k) {\n            result.add(arr.get(i));\n            i++;\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (arr.size() < k) {\n            return arr;\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        Collections.sort(result);\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        long max = arr.get(0);\n        for (int i = 1; i < k; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        \n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) == max) {\n                result.add(arr.get(i));\n            }\n        }\n        \n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return result;\n        }\n        \n        Collections.sort(arr);\n        \n        for (int i = 0; i < k; i++) {\n            result.add(arr.get(i));\n        }\n        \n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        if (arr.size() < k) {\n            return ans;\n        }\n        if (k == 1) {\n            ans.add(arr.get(0));\n            return ans;\n        }\n        if (k == 2) {\n            ans.add(arr.get(0));\n            ans.add(arr.get(1));\n            return ans;\n        }\n        if (k == 3) {\n            ans.add(arr.get(0));\n            ans.add(arr.get(1));\n            ans.add(arr.get(2));\n            return ans;\n        }\n        if (k == 4) {\n            ans.add(arr.get(0));\n            ans.add(arr.get(1));\n            ans.add(arr.get(2));\n            ans.add(arr.get(3));\n            return ans;\n        }\n        if (k == 5) {\n            ans.add(arr.get(0));\n            ans.add(arr.get(1));\n            ans.add(arr.get(2));\n            ans.add(arr.get(3));\n            ans.add(arr.get(4));\n            return ans;\n        }\n        if (k == 6) {\n            ans.add(arr.get(0));\n            ans.add(arr.get(1));\n            ans.add(arr.get(2));\n            ans.add(arr.get(3));\n            ans.add(arr.get(4));\n            ans.add(arr.get(5));\n            return ans;\n        }\n        if (k == 7) {\n            ans.add(arr.get(0));\n            ans.add(arr.get(1));\n            ans.add(arr.get(2));\n            ans.add(arr.get(3));\n            ans.add(arr.get(4));\n            ans.add(arr.get(5));\n            ans.add(arr.get(6));\n            return ans;\n        }\n        if (k == 8) {\n            ans.add(arr.get(0));\n",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        if(arr.size() == 0) return result;\n        if(k == 1) return arr;\n        if(k > arr.size()) return result;\n        \n        int i = 0;\n        int j = 0;\n        int max = arr.get(0);\n        while(i < arr.size() && j < k) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n                j = 0;\n            }\n            if(arr.get(i) == max) {\n                j++;\n            }\n            i++;\n        }\n        \n        for(int k = 0; k < j; k++) {\n            result.add(max);\n        }\n        \n        return result;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
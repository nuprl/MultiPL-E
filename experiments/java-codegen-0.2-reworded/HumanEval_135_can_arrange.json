{
  "name": "HumanEval_135_can_arrange",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Create a function which returns the largest index of an element which\n    // is not greater than or equal to the element immediately preceding it. If\n    // no such element exists then return -1. The given array array list will not contain\n    // duplicate values.\n    // Examples:\n    // >>> can_arrange([1,2,4,3,5])\n    // 3\n    // >>> can_arrange([1,2,3])\n    // -1\n    public static long canArrange(ArrayList<Long> arr) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)3l, (long)5l)))) == (3l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l)))) == (-1l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)2l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)10l)))) == (2l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)4l, (long)8l, (long)5l, (long)7l, (long)3l)))) == (4l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList()))) == (-1l));\n    }\n\n}\n",
  "completions": [
    "        long max = 0;\n        int max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n                break;\n            }\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for(Long l : arr) {\n            if(l > arr.get(i)) {\n                max = i;\n            }\n            i++;\n        }\n        return max;",
    "        long max = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) <= arr.get(j)) {\n                    max = Math.max(max, j);\n                }\n            }\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        int len = arr.size();\n        if (len < 2) {\n            return -1;\n        }\n        long max = arr.get(0);\n        long max_index = 0;\n        for (int i = 1; i < len; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        for (int i = max_index; i < len; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        int n = arr.size();\n        if (n == 1) return 0;\n        long max = 0;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max == 0 ? -1 : max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long min = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            } else {\n                min = arr.get(i);\n            }\n        }\n        if (max_index == -1) {\n            return -1;\n        } else {\n            return max_index;\n        }",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        int maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        int max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) <= max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i + 1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        int i = 0;\n        for(long x : arr) {\n            if(x > arr.get(i)) {\n                max = Math.max(max, i);\n            }\n            i++;\n        }\n        return max;",
    "        long max = 0;\n        int maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int size = arr.size();\n        if (size == 1) {\n            return -1;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < size; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < size; i++) {\n            if (arr.get(i) >= max) {\n                return i;\n            }\n        }\n        return -1;",
    "        int size = arr.size();\n        if (size < 2) {\n            return -1;\n        }\n        int max = arr.get(0);\n        for (int i = 1; i < size; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < size; i++) {\n            if (arr.get(i) >= max) {\n                return i;\n            }\n        }\n        return -1;",
    "        int n = arr.size();\n        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= max && arr.get(i + 1) > max) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) < arr.get(i + 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        int i = 0;\n        for (long l : arr) {\n            if (l <= arr.get(i)) {\n                max = Math.max(max, i);\n            } else {\n                i++;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int i = 0;\n        int j = arr.size() - 1;\n        while (i < j) {\n            if (arr.get(i) <= arr.get(j)) {\n                i++;\n            } else {\n                j--;\n            }\n        }\n        if (i == j) {\n            return -1;\n        } else {\n            return i;\n        }",
    "        int n = arr.size();\n        long max = arr.get(0);\n        int maxIndex = 0;\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        int n = arr.size();\n        if(n == 1) return 0;\n        long max = arr.get(0);\n        for(int i = 1; i < n; i++) {\n            if(arr.get(i) > max) max = arr.get(i);\n        }\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) <= max) return i;\n        }\n        return -1;",
    "        int n = arr.size();\n        if (n == 0) return -1;\n        long max = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) > max) max = arr.get(i);\n        }\n        long result = -1;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < max) {\n                result = i;\n                break;\n            }\n        }\n        return result;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for(Long x : arr) {\n            if(x > arr.get(i)) {\n                i++;\n            }\n            max = Math.max(max, i);\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for (long l : arr) {\n            if (l > arr.get(i)) {\n                max = i;\n            }\n            i++;\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = i - 1;\n                break;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        int n = arr.size();\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max == 0 ? -1 : max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long min = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n            else if(arr.get(i) < arr.get(i-1)) {\n                min = arr.get(i);\n            }\n        }\n        if(max_index == -1) {\n            return -1;\n        }\n        else {\n            return max_index;\n        }",
    "        int size = arr.size();\n        long max = arr.get(0);\n        for (int i = 1; i < size; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < size; i++) {\n            if (arr.get(i) < max) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        int n = arr.size();\n        long max = -1;\n        for (int i = 0; i < n; i++) {\n            long cur = arr.get(i);\n            if (i == 0) {\n                max = cur;\n                continue;\n            }\n            if (cur > max) {\n                max = cur;\n            }\n            if (cur < arr.get(i - 1)) {\n                max = -1;\n                break;\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) < arr.get(i+1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) < arr.get(i + 1)) {\n                max = i;\n                break;\n            }\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        while (i < arr.size() - 1) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                i++;\n            } else {\n                max = Math.max(max, i);\n                i++;\n            }\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for (Long val : arr) {\n            if (val > arr.get(i)) {\n                max = arr.get(i);\n                i = 0;\n            }\n            i++;\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        int n = arr.size();\n        if (n == 0) return -1;\n        long max = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) <= max) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long cur = arr.get(i);\n            if (i == 0) {\n                max = cur;\n            } else {\n                if (cur > max) {\n                    max = cur;\n                }\n            }\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i+1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = arr.get(0);\n        long maxIndex = 0;\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        int size = arr.size();\n        if (size == 0) return -1;\n        long max = arr.get(0);\n        for (int i = 1; i < size; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < size; i++) {\n            if (arr.get(i) <= max) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i + 1;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i + 1);\n                max_index = i + 1;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long min = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < arr.get(i - 1)) {\n                min = arr.get(i);\n                if (max_index == i) {\n                    max_index = -1;\n                }\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i+1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        int maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        long min = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        if(max_index == -1) {\n            return -1;\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(max_index)) {\n                min = arr.get(i);\n                break;\n            }\n        }\n        for(int i = max_index; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                return -1;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > min) {\n                max = i;\n                min = arr.get(i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long min = arr.get(0);\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > min) {\n                max = i;\n                min = arr.get(i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            long cur = arr.get(i);\n            if (i > 0 && arr.get(i - 1) >= cur) {\n                max = Math.max(max, i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n                break;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int len = arr.size();\n        if(len < 2) return -1;\n        int max = 0;\n        int max_index = -1;\n        for(int i = 0; i < len; i++) {\n            if(arr.get(i) > arr.get(max)) {\n                max = i;\n                max_index = max;\n            }\n        }\n        if(max_index == -1) return -1;\n        for(int i = max_index + 1; i < len; i++) {\n            if(arr.get(i) > arr.get(max_index)) {\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long min = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = i;\n            }\n            if(arr.get(i) < arr.get(i-1)) {\n                min = i;\n            }\n        }\n        return max - min;",
    "        int size = arr.size();\n        if (size < 2) {\n            return -1;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < size; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < size; i++) {\n            if (arr.get(i) <= max) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (Long l : arr) {\n            if (l <= arr.get(i)) {\n                i++;\n            }\n            if (i == arr.size()) {\n                max = arr.get(i - 1);\n            }\n        }\n        return max;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n                break;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = arr.get(0);\n        long maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int n = arr.size();\n        if (n == 0) return -1;\n        long max = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) <= max) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max_index = i;\n                max = arr.get(i);\n                break;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        long min = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = i;\n            }\n            if (arr.get(i) < arr.get(i - 1)) {\n                min = i;\n            }\n        }\n        if (max == 0 && min == 0) {\n            return -1;\n        }\n        return Math.max(max, min);",
    "        long max = -1;\n        int index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                index = i;\n                max = arr.get(i);\n                break;\n            }\n        }\n        return index;",
    "        long max = -1;\n        int i = 0;\n        for (Long l : arr) {\n            if (l > arr.get(i)) {\n                max = arr.indexOf(l);\n            }\n            i++;\n        }\n        return max;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (Long l : arr) {\n            if (l <= arr.get(i)) {\n                i++;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = arr.get(0);\n        int maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i + 1)) {\n                max = i + 1;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (Long val : arr) {\n            if (i == 0) {\n                max = val;\n                i++;\n                continue;\n            }\n            if (val >= max) {\n                max = val;\n                i++;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr.get(j) > arr.get(i)) {\n                i = j;\n            }\n        }\n        if (i == arr.size() - 1) {\n            return -1;\n        }\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (arr.get(j) > arr.get(i)) {\n                max = Math.max(max, j);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > min) {\n                max = i;\n                min = arr.get(i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int n = arr.size();\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n                break;\n            }\n        }\n        return max_index;",
    "        int n = arr.size();\n        if (n == 1) {\n            return -1;\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long result = -1;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < max) {\n                result = i;\n                break;\n            }\n        }\n        return result;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (long a : arr) {\n            if (a > arr.get(i)) {\n                max = i;\n            }\n            i++;\n        }\n        return max;",
    "        long max = 0;\n        int i = 0;\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr.get(j) > arr.get(i)) {\n                max = Math.max(max, j);\n            }\n        }\n        return max;",
    "        int n = arr.size();\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n            long val = arr.get(i);\n            if(val > max) {\n                max = val;\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            long val = arr.get(i);\n            if(val > max && val < arr.get(i-1)) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n                break;\n            }\n        }\n        return max;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n                break;\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long max_index = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for(long x : arr) {\n            if(x > arr.get(i)) {\n                max = i;\n            }\n            i++;\n        }\n        return max;",
    "        int size = arr.size();\n        if(size < 2) {\n            return -1;\n        }\n        long max = arr.get(0);\n        long prev = arr.get(0);\n        for(int i = 1; i < size; i++) {\n            if(arr.get(i) > prev) {\n                prev = arr.get(i);\n            } else {\n                return i - 1;\n            }\n        }\n        return -1;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for (Long l : arr) {\n            if (l <= arr.get(i)) {\n                i++;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) >= arr.get(j)) {\n                    max = Math.max(max, j);\n                }\n            }\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for (long x : arr) {\n            if (x > arr.get(i)) {\n                max = arr.get(i);\n                i = 0;\n            } else {\n                i++;\n            }\n        }\n        return max;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        int i = 0;\n        for (long x : arr) {\n            if (x > arr.get(i)) {\n                max = i;\n            }\n            i++;\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int size = arr.size();\n        long max = arr.get(0);\n        int maxIndex = 0;\n        for (int i = 1; i < size; i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i+1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr.get(j) > arr.get(i)) {\n                i = j;\n            }\n        }\n        if(i == arr.size() - 1) {\n            return -1;\n        }\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(arr.get(j) > arr.get(i)) {\n                max = Math.max(max, j);\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) < arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (Long x : arr) {\n            if (x <= arr.get(i)) {\n                max = Math.max(max, i);\n            }\n            i++;\n        }\n        return max;",
    "        long max = arr.get(0);\n        long max_index = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1) && arr.get(i) > max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= arr.get(i-1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i + 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        int i = 0;\n        for (Long l : arr) {\n            if (l > arr.get(i)) {\n                max = i;\n            }\n            i++;\n        }\n        return max;",
    "        int len = arr.size();\n        long max = -1;\n        int max_index = -1;\n        for (int i = 0; i < len; i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n                break;\n            }\n        }\n        if (max_index == -1) {\n            return -1;\n        }\n        for (int i = max_index + 1; i < len; i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n                break;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) <= arr.get(i + 1)) {\n                max = Math.max(max, i);\n            }\n        }\n        return max;",
    "        long max = -1;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) < arr.get(i + 1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= arr.get(i - 1)) {\n                max = arr.get(i);\n                maxIndex = i;\n                break;\n            }\n        }\n        return maxIndex;",
    "        int n = arr.size();\n        if (n == 0) return -1;\n        long max = arr.get(0);\n        long min = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) > max) max = arr.get(i);\n            if (arr.get(i) < min) min = arr.get(i);\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < min) {\n                return i;\n            }\n        }\n        return -1;",
    "        long max = -1;\n        long max_index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        int size = arr.size();\n        if(size == 0) return -1;\n        long max = arr.get(0);\n        long max_index = 0;\n        for(int i = 1; i < size; i++) {\n            if(arr.get(i) >= max) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i-1)) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = arr.get(0);\n        long maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxIndex = i;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;",
    "        long max = -1;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) <= arr.get(i + 1)) {\n                max = i;\n                break;\n            }\n        }\n        return max;",
    "        long max = -1;\n        int maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i - 1);\n                maxIndex = i - 1;\n            }\n        }\n        return maxIndex;",
    "        long max = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) > arr.get(i+1)) {\n                max = i;\n            }\n        }\n        return max;",
    "        int n = arr.size();\n        long max = 0;\n        long prev = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) <= prev) {\n                max = Math.max(max, i);\n            }\n            prev = arr.get(i);\n        }\n        return max;",
    "        long max = -1;\n        int i = 0;\n        for(Long l : arr) {\n            if(l <= arr.get(i)) {\n                max = Math.max(max, i);\n            }\n            i++;\n        }\n        return max;",
    "        long max = -1;\n        long max_index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(i - 1)) {\n                max = arr.get(i);\n                max_index = i;\n            }\n        }\n        return max_index;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
{
  "name": "HumanEval_95_check_dict_case",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        boolean allLowerCase = true;\n        boolean allUpperCase = true;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase())) {\n                allLowerCase = false;\n            }\n            if(!entry.getKey().equals(entry.getKey().toUpperCase())) {\n                allUpperCase = false;\n            }\n        }\n        return allLowerCase || allUpperCase;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08jf79v7.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0i9dgdh5.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) &&\n               !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1z_ma5i.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(entry.getKey().equals(entry.getKey().toUpperCase()) ||\n               entry.getKey().equals(entry.getKey().toLowerCase()))\n                continue;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvm9b4fk6.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            if(key.length() > 1) return false;\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoz2975rk.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key : keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wew7ejr.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7p0scl5o.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ju_sri.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) &&\n               !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1z_ma5i.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeizbn9fh.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev04pwx8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(entry.getKey().length() != entry.getValue().length()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oaxbqe3.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(entry.getKey().equals(entry.getKey().toUpperCase()) || entry.getKey().equals(entry.getKey().toLowerCase()))\n                continue;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8b4tmhw9.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7p0scl5o.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzpdd3fc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev04pwx8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3srvft7.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        boolean allLower = true;\n        boolean allUpper = true;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase())) {\n                allLower = false;\n            }\n            if(!entry.getKey().equals(entry.getKey().toUpperCase())) {\n                allUpper = false;\n            }\n        }\n        return allLower || allUpper;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3aq0r1yp.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnh9l8g5.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            String key = entry.getKey();\n            if(key.length() > 1) return false;\n            if(key.length() == 1) {\n                char c = key.charAt(0);\n                if(c >= 'a' && c <= 'z') continue;\n                if(c >= 'A' && c <= 'Z') continue;\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5p84wye.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnh9l8g5.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbsdugz59.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key : keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wew7ejr.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3wa_hbo.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            String value = entry.getValue();\n            if(key.length() != value.length()) {\n                return false;\n            }\n            if(key.length() == 1) {\n                if(Character.isUpperCase(key.charAt(0)) && Character.isLowerCase(value.charAt(0))) {\n                    return false;\n                }\n                if(Character.isLowerCase(key.charAt(0)) && Character.isUpperCase(value.charAt(0))) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwdq6ewyb.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfrlpvd1.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp8d7snwe.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82hpjjs7.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3wa_hbo.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        boolean allLower = true;\n        boolean allUpper = true;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase())) {\n                allLower = false;\n            }\n            if(!entry.getKey().equals(entry.getKey().toUpperCase())) {\n                allUpper = false;\n            }\n        }\n        return allLower || allUpper;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3aq0r1yp.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nhcsjzj.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3wa_hbo.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjweql6j2.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev04pwx8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3srvft7.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        boolean lower = true;\n        boolean upper = true;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase())) lower = false;\n            if(!key.equals(key.toUpperCase())) upper = false;\n        }\n        return lower && upper;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9vqserz.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key : keys) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58wg0_hp.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0i9dgdh5.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        boolean lowerCase = true;\n        boolean upperCase = true;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase())) {\n                lowerCase = false;\n            }\n            if(!key.equals(key.toUpperCase())) {\n                upperCase = false;\n            }\n        }\n        return lowerCase || upperCase;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprni819qf.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon2awm9e.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev04pwx8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82hpjjs7.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfrlpvd1.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) &&\n               !entry.getKey().equals(entry.getKey().toUpperCase()))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe62wu9mc.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1b1q4c3.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty())\n            return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase()))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxilvil5.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3wa_hbo.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(entry.getKey().length() != entry.getValue().length()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oaxbqe3.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(entry.getKey().equals(entry.getKey().toLowerCase()) ||\n               entry.getKey().equals(entry.getKey().toUpperCase())) {\n                continue;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1mjdrccb.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsrdhqwi.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfrlpvd1.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3wa_hbo.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2xgobul.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfrlpvd1.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) &&\n               !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdn_yngsv.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3srvft7.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_8cxq_7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) &&\n               !entry.getKey().equals(entry.getKey().toUpperCase()))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8o777mnp.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1b1q4c3.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(key.equals(key.toUpperCase()) || key.equals(key.toLowerCase()))\n                continue;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6hmrwjp.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1b1q4c3.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyy333cy.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty())\n            return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase()))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxilvil5.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1b1q4c3.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0)\n            return false;\n        for(String key : dict.keySet()) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase())))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvau6gy37.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key : keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wew7ejr.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0i9dgdh5.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw89hwr88.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) &&\n               !entry.getKey().equals(entry.getKey().toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacmfh91c.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(entry.getKey().equals(entry.getKey().toUpperCase()) ||\n               entry.getKey().equals(entry.getKey().toLowerCase()))\n                continue;\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgftl1qmg.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp225gjddc.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h0sa6hq.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.size() == 0) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7p0scl5o.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        boolean isLowerCase = true;\n        boolean isUpperCase = true;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase())) {\n                isLowerCase = false;\n            }\n            if(!entry.getKey().equals(entry.getKey().toUpperCase())) {\n                isUpperCase = false;\n            }\n        }\n        return isLowerCase && isUpperCase;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypujbnvg.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!entry.getKey().equals(entry.getKey().toLowerCase()) && !entry.getKey().equals(entry.getKey().toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3srvft7.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp714jz1x7.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(Map.Entry<String,String> entry: dict.entrySet()) {\n            if(!(entry.getKey().equals(entry.getKey().toLowerCase()) || entry.getKey().equals(entry.getKey().toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293105,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1b1q4c3.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        for(String key: dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbilrd9t.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(key.equals(key.toLowerCase())) return true;\n            if(key.equals(key.toUpperCase())) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgr954_q1.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!(key.equals(key.toLowerCase()) || key.equals(key.toUpperCase()))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev04pwx8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n        for(String key: keys) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n25g5vg.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(Map.Entry<String,String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n            String value = entry.getValue();\n            if(key.equals(value)) continue;\n            if(key.equals(key.toUpperCase())) return false;\n            if(key.equals(key.toLowerCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293106,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64gb_i55.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a hash map, return true if all keys are strings in lower \n    // case or all keys are strings in upper case, else return false.\n    // The function should return false is the given hash map is empty.\n    // Examples:\n    // >>> check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\n    // True\n    // >>> check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})\n    // False\n    // >>> check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})\n    // False\n    // >>> check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})\n    // False\n    // >>> check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" })\n    // True\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n        if(dict.isEmpty()) return false;\n        for(String key : dict.keySet()) {\n            if(!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n    }\n\n}\n",
      "timestamp": 1664293103,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j9geti.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
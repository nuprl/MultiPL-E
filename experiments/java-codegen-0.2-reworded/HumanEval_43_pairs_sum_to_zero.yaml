name: HumanEval_43_pairs_sum_to_zero
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
  \ as an input.\n    // it returns true if there are two distinct elements in the\
  \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairs_sum_to_zero([1,\
  \ 3, 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
  \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
  \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
  \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) == (false));\n\
  \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
  \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
  \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
  \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
  \ (long)31l)))) == (false));\n    }\n\n}\n"
completions: ["        if(l.size() < 2) return false;\n        long sum = 0;\n   \
    \     for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n    \
    \    }\n        return sum == 0;", "        if(l.size() == 1) return false;\n\
    \        if(l.size() == 2) return l.get(0) != l.get(1);\n        long sum = 0;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        if(sum == 0) return false;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            for(int j = i + 1; j < l.size(); j++) {\n              \
    \  if(l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n     \
    \   return false;", "        if(l.size() == 1) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if(sum == 0) return false;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            for(int j = i + 1; j < l.size(); j++) {\n              \
    \  if(l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n     \
    \   return false;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if (l.size() == 1) return false;\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ == 1) return false;\n        long sum = 0;\n        for (Long i : l) {\n   \
    \         sum += i;\n        }\n        return sum == 0;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        // Write your code here\n        if(l.size() < 2)\n            return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++)\n          \
    \  sum += l.get(i);\n        if(sum == 0)\n            return true;\n        return\
    \ false;", "        // Write your code here\n        if(l.size() == 0) return\
    \ false;\n        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n\
    \            sum += l.get(i);\n        }\n        if(sum == 0) return false;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j\
    \ < l.size(); j++) {\n                if(l.get(i) + l.get(j) == 0) return true;\n\
    \            }\n        }\n        return false;", "        if (l.size() < 2)\
    \ {\n            return false;\n        }\n        long sum = 0;\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n\
    \        if (sum == 0) {\n            return true;\n        }\n        return\
    \ false;", "        if(l.size() < 2) return false;\n        long sum = 0;\n  \
    \      for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n   \
    \     }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if (sum == 0) return\
    \ false;\n        for (int i = 0; i < l.size(); i++) {\n            for (int j\
    \ = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0)\
    \ return true;\n            }\n        }\n        return false;", "        if(l.size()\
    \ < 2)\n            return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++)\n            sum += l.get(i);\n        if(sum == 0)\n\
    \            return true;\n        return false;", "        if (l.size() == 1)\
    \ {\n            return false;\n        }\n        long sum = 0;\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n\
    \        if (sum == 0) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size(); j++)\
    \ {\n                if (l.get(i) + l.get(j) == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;",
  "        if (l.size() < 2) {\n            return false;\n        }\n        long\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if (l.size() == 1) return false;\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        if (sum == 0) return false;\n     \
    \   for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j <\
    \ l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) return true;\n\
    \            }\n        }\n        return false;", "        if (l.size() == 1)\
    \ return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if (sum == 0) return\
    \ false;\n        for (int i = 0; i < l.size(); i++) {\n            for (int j\
    \ = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0)\
    \ return true;\n            }\n        }\n        return false;", "        if(l.size()\
    \ == 1) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if(sum == 0) return\
    \ false;\n        long min = Long.MAX_VALUE;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            if(l.get(i) < min) min = l.get(i);\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            if(l.get(i) == min) return true;\n\
    \        }\n        return false;", "        // write your code here\n       \
    \ if(l.size() < 2) return false;\n        long sum = 0;\n        for(int i = 0;\
    \ i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        if(sum\
    \ == 0) return false;\n        for(int i = 0; i < l.size(); i++) {\n         \
    \   for(int j = i + 1; j < l.size(); j++) {\n                if(l.get(i) + l.get(j)\
    \ == 0) return true;\n            }\n        }\n        return false;", "    \
    \    if(l.size() < 2) return false;\n        Long sum = 0L;\n        for(Long\
    \ i : l) {\n            sum += i;\n        }\n        return sum == 0;", "   \
    \     if(l.size() == 1) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   if(sum == 0) return false;\n        for(int i = 0; i < l.size(); i++) {\n\
    \            for(int j = i + 1; j < l.size(); j++) {\n                if(l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        if(l.size() < 2) return false;\n        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for(Long i : l) {\n            if(hs.contains(i)) return false;\n   \
    \         hs.add(i);\n        }\n        return true;", "        long sum = 0;\n\
    \        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return false;\n        }\n  \
    \      for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j\
    \ < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) {\n      \
    \              return true;\n                }\n            }\n        }\n   \
    \     return false;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() == 1) return false;\n        if(l.size() == 2) return l.get(0).longValue()\
    \ == 0 && l.get(1).longValue() == 0;\n        long sum = 0;\n        for(int i\
    \ = 0; i < l.size(); i++) {\n            sum += l.get(i).longValue();\n      \
    \  }\n        if(sum == 0) return false;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            for(int j = i + 1; j < l.size(); j++) {\n              \
    \  if(l.get(i).longValue() + l.get(j).longValue() == 0) return true;\n       \
    \     }\n        }\n        return false;", "        if (l.size() < 2) return\
    \ false;\n        long sum = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n        }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        // Write\
    \ your code here\n        if(l.size() < 2)\n            return false;\n      \
    \  \n        long sum = 0;\n        for(int i = 0; i < l.size(); i++)\n      \
    \      sum += l.get(i);\n        \n        if(sum == 0)\n            return true;\n\
    \        \n        return false;", "        // Write your code here\n        if\
    \ (l.size() == 1) {\n            return false;\n        }\n        long sum =\
    \ 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     return false;", "        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if (sum == 0) {\n \
    \           return false;\n        }\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            for (int j = i + 1; j < l.size(); j++) {\n                if\
    \ (l.get(i) + l.get(j) == 0) {\n                    return true;\n           \
    \     }\n            }\n        }\n        return false;", "        if(l.size()\
    \ == 1) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if(sum == 0) return\
    \ false;\n        for(int i = 0; i < l.size(); i++) {\n            for(int j =\
    \ i + 1; j < l.size(); j++) {\n                if(l.get(i) + l.get(j) == 0) return\
    \ true;\n            }\n        }\n        return false;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(Long\
    \ i : l) {\n            sum += i;\n        }\n        if(sum == 0) return false;\n\
    \        return true;", "        if (l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if(l.size() == 0) return false;\n\
    \        if(l.size() == 1) return false;\n        if(l.size() == 2) return l.get(0)\
    \ + l.get(1) == 0;\n        if(l.size() == 3) return l.get(0) + l.get(1) + l.get(2)\
    \ == 0;\n        if(l.size() == 4) return l.get(0) + l.get(1) + l.get(2) + l.get(3)\
    \ == 0;\n        if(l.size() == 5) return l.get(0) + l.get(1) + l.get(2) + l.get(3)\
    \ + l.get(4) == 0;\n        if(l.size() == 6) return l.get(0) + l.get(1) + l.get(2)\
    \ + l.get(3) + l.get(4) + l.get(5) == 0;\n        if(l.size() == 7) return l.get(0)\
    \ + l.get(1) + l.get(2) + l.get(3) + l.get(4) + l.get(5) + l.get(6) == 0;\n  \
    \      if(l.size() == 8) return l.get(0) + l.get(1) + l.get(2) + l.get(3) + l.get(4)\
    \ + l.get(5) + l.get(6) + l.get(7) == 0;\n        if(l.size() == 9) return l.get(0)\
    \ + l.get(1) + l.get(2) + l.get(3) + l.get(4) + l.get(5) + l.get(6) + l.get(7)\
    \ + l.get(8) == 0;\n        if(l.size() == 10) return l.get(0) + l.get(1) + l.get(2)\
    \ + l.get(3) + l.get(4) + l.get(5) + l.get(6) + l.get(", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if (l.size() == 0) return false;\n        if (l.size() == 1) return false;\n\
    \        if (l.size() == 2) return l.get(0) != l.get(1);\n        long sum = 0;\n\
    \        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for(Long i : l) {\n            if(hs.contains(i)) return false;\n   \
    \         hs.add(i);\n        }\n        return true;", "        if(l.size() <\
    \ 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if (l.size() < 2) {\n            return false;\n        }\n        long\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     return false;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() == 1) return false;\n        if(l.size() == 2) return l.get(0).longValue()\
    \ == l.get(1).longValue();\n        long sum = 0;\n        for(int i = 0; i <\
    \ l.size(); i++) {\n            sum += l.get(i).longValue();\n        }\n    \
    \    return sum == 0;", "        HashSet<Long> hs = new HashSet<>();\n       \
    \ for (Long i : l) {\n            if (hs.contains(i)) {\n                return\
    \ false;\n            }\n            hs.add(i);\n        }\n        return true;",
  "        if (l.size() < 2) return false;\n        long sum = 0;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return (sum == 0);", "        if(l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        long sum = 0;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   if (sum == 0) {\n            return false;\n        }\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size(); j++)\
    \ {\n                if (l.get(i) + l.get(j) == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;",
  "        // Write your code here\n        if(l.size() == 1)\n            return\
    \ false;\n        if(l.size() == 2)\n            return l.get(0) != l.get(1);\n\
    \        HashSet<Long> hs = new HashSet<Long>();\n        for(Long i : l)\n  \
    \          hs.add(i);\n        for(Long i : l)\n            for(Long j : l)\n\
    \                if(i + j == 0 && !hs.contains(i + j))\n                    return\
    \ true;\n        return false;", "        if (l.size() < 2) {\n            return\
    \ false;\n        }\n        Long sum = 0L;\n        for (Long i : l) {\n    \
    \        sum += i;\n        }\n        return sum == 0L;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if (l.size() < 2) return false;\n        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        return sum == 0;", "   \
    \     if (l.size() < 2) return false;\n        long sum = 0;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return sum == 0;", "        // Write your code here\n        if(l.size() <\
    \ 2)\n            return false;\n        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for(Long i : l)\n            hs.add(i);\n        for(Long i : l)\n  \
    \          for(Long j : l)\n                if(i+j == 0 && !hs.contains(i+j))\n\
    \                    return true;\n        return false;", "        if (l.size()\
    \ == 0) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if (sum == 0) return\
    \ false;\n        for (int i = 0; i < l.size(); i++) {\n            for (int j\
    \ = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0)\
    \ return true;\n            }\n        }\n        return false;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   if(sum == 0) return false;\n        for(int i = 0; i < l.size(); i++) {\n\
    \            for(int j = i + 1; j < l.size(); j++) {\n                if(l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return (sum == 0);", "        if(l.size() == 1)\n            return false;\n\
    \        HashSet<Long> hs = new HashSet<Long>();\n        for(Long i : l)\n  \
    \          hs.add(i);\n        if(hs.size() == 1)\n            return false;\n\
    \        for(Long i : l)\n            if(i == 0)\n                return true;\n\
    \        return false;", "        if (l.size() < 2) {\n            return false;\n\
    \        }\n        long sum = 0;\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            sum += l.get(i);\n        }\n        return (sum == 0);", " \
    \       if(l.size() < 2) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return sum == 0;", "        if(l.size() < 2) return false;\n        Long sum\
    \ = 0L;\n        for(Long i : l) {\n            sum += i;\n        }\n       \
    \ return sum == 0;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if(sum == 0) return true;\n        else return false;", " \
    \       if(l.size() < 2)\n            return false;\n        long sum = 0;\n \
    \       for(int i = 0; i < l.size(); i++)\n            sum += l.get(i);\n    \
    \    return sum == 0;", "        if(l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return (sum == 0);", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return (sum == 0);", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        // Write your code here\n        if (l.size() == 1) {\n            return\
    \ false;\n        }\n        HashSet<Long> hs = new HashSet<>();\n        for\
    \ (Long i : l) {\n            hs.add(i);\n        }\n        for (Long i : l)\
    \ {\n            for (Long j : l) {\n                if (i + j == 0 && hs.contains(i)\
    \ && hs.contains(j)) {\n                    return true;\n                }\n\
    \            }\n        }\n        return false;", "        // write your code\
    \ here\n        if(l.size() < 2)\n            return false;\n        \n      \
    \  long sum = 0;\n        for(int i = 0; i < l.size(); i++)\n            sum +=\
    \ l.get(i);\n        \n        if(sum == 0)\n            return true;\n      \
    \  \n        return false;", "        // Write your code here\n        if(l.size()\
    \ == 0)\n            return false;\n        if(l.size() == 1)\n            return\
    \ false;\n        long sum = 0;\n        for(int i = 0; i < l.size(); i++)\n \
    \           sum += l.get(i);\n        if(sum == 0)\n            return true;\n\
    \        return false;", "        // Write your code here\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            Long key = l.get(i);\n            if (map.containsKey(key)) {\n\
    \                return true;\n            }\n            map.put(key, 1);\n \
    \       }\n        return false;", "        if (l.size() < 2) return false;\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) return false;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            for (int j = i + 1; j < l.size(); j++) {\n             \
    \   if (l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n   \
    \     return false;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if(sum == 0) return\
    \ true;\n        return false;", "        if(l.size() < 2) return false;\n   \
    \     long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n           \
    \ sum += l.get(i);\n        }\n        if(sum == 0) return true;\n        else\
    \ return false;", "        if (l.size() == 1) {\n            return false;\n \
    \       }\n        Long sum = 0L;\n        for (Long i : l) {\n            sum\
    \ += i;\n        }\n        if (sum == 0) {\n            return true;\n      \
    \  }\n        return false;", "        if(l.size() < 2) return false;\n      \
    \  long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum\
    \ += l.get(i);\n        }\n        return (sum == 0);", "        if(l.size() <\
    \ 2) return false;\n        Long sum = 0L;\n        for(Long i : l) {\n      \
    \      sum += i;\n        }\n        return sum == 0L;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(Long i : l) {\n     \
    \       sum += i;\n        }\n        return sum == 0;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() == 1) return false;\n        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for(Long i : l) {\n            if(hs.contains(i)) return false;\n   \
    \         hs.add(i);\n        }\n        return true;", "        if(l.size() <\
    \ 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if (l.size() < 2) {\n            return false;\n        }\n        Long\
    \ sum = 0L;\n        for (Long i : l) {\n            sum += i;\n        }\n  \
    \      return (sum == 0);", "        if(l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        // Write your code here\n    \
    \    if(l.size() == 0)\n            return false;\n        long sum = 0;\n   \
    \     for(int i = 0; i < l.size(); i++)\n            sum += l.get(i);\n      \
    \  if(sum == 0)\n            return true;\n        else\n            return false;",
  "        if(l.size() < 2) return false;\n        Long sum = 0L;\n        for(Long\
    \ i : l) {\n            sum += i;\n        }\n        return sum == 0L;", "  \
    \      if (l.size() < 2) {\n            return false;\n        }\n        long\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     return false;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return (sum == 0);", "        if(l.size() == 1) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        if(sum == 0) return false;\n       \
    \ for(int i = 0; i < l.size(); i++) {\n            for(int j = i+1; j < l.size();\
    \ j++) {\n                if(l.get(i) + l.get(j) == 0) return true;\n        \
    \    }\n        }\n        return false;", "        if (l.size() == 1) return\
    \ false;\n        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n\
    \            sum += l.get(i);\n        }\n        if (sum == 0) return false;\n\
    \        for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1;\
    \ j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) return true;\n\
    \            }\n        }\n        return false;", "        // Write your code\
    \ here\n        if(l.size() == 1)\n            return false;\n        HashSet<Long>\
    \ hs = new HashSet<Long>();\n        for(Long i : l)\n            hs.add(i);\n\
    \        for(Long i : l)\n            for(Long j : l)\n                if(i +\
    \ j == 0 && !hs.contains(i + j))\n                    return true;\n        return\
    \ false;", "        if (l.size() < 2) {\n            return false;\n        }\n\
    \        HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n\
    \            if (hs.contains(i)) {\n                return false;\n          \
    \  }\n            hs.add(i);\n        }\n        return true;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() < 2) return false;\n        Long sum = 0L;\n        for(Long\
    \ i : l) {\n            sum += i;\n        }\n        if(sum == 0) return false;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j\
    \ < l.size(); j++) {\n                if(l.get(i) + l.get(j) == 0) return true;\n\
    \            }\n        }\n        return false;", "        HashMap<Long, Integer>\
    \ hm = new HashMap<>();\n        for (int i = 0; i < l.size(); i++) {\n      \
    \      Long key = l.get(i);\n            if (hm.containsKey(key)) {\n        \
    \        return false;\n            }\n            hm.put(key, 1);\n        }\n\
    \        for (int i = 0; i < l.size(); i++) {\n            Long key = l.get(i);\n\
    \            if (hm.containsKey(key)) {\n                hm.put(key, hm.get(key)\
    \ + 1);\n            }\n        }\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            Long key = l.get(i);\n            if (hm.containsKey(key) &&\
    \ hm.get(key) == 2) {\n                return true;\n            }\n        }\n\
    \        return false;", "        if (l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n   \
    \     if (sum == 0) return true;\n        return false;", "        if(l.size()\
    \ == 1) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if(sum == 0) return\
    \ false;\n        for(int i = 0; i < l.size(); i++) {\n            for(int j =\
    \ i + 1; j < l.size(); j++) {\n                if(l.get(i) + l.get(j) == 0) return\
    \ true;\n            }\n        }\n        return false;", "        if(l.size()\
    \ < 2)\n            return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++)\n            sum += l.get(i);\n        if(sum == 0)\n\
    \            return true;\n        else\n            return false;", "       \
    \ long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum\
    \ += l.get(i);\n        }\n        if (sum == 0) {\n            return false;\n\
    \        }\n        for (int i = 0; i < l.size(); i++) {\n            for (int\
    \ j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) ==\
    \ 0) {\n                    return true;\n                }\n            }\n \
    \       }\n        return false;", "        if(l.size() < 2) return false;\n \
    \       Long sum = 0L;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        HashSet<Long> hs = new HashSet<Long>();\n        for(Long i : l) {\n\
    \            if(hs.contains(i)) return false;\n            hs.add(i);\n      \
    \  }\n        return true;", "        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for (Long i : l) {\n            if (hs.contains(i)) {\n             \
    \   return true;\n            }\n            hs.add(i);\n        }\n        return\
    \ false;", "        // Write your code here\n        int size = l.size();\n  \
    \      if (size < 2) {\n            return false;\n        }\n        long sum\
    \ = 0;\n        for (int i = 0; i < size; i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     return false;", "        // Write your code here\n        if(l.size()==0)\n\
    \            return false;\n        if(l.size()==1)\n            return false;\n\
    \        long sum=0;\n        for(int i=0;i<l.size();i++)\n            sum+=l.get(i);\n\
    \        if(sum==0)\n            return true;\n        return false;", "     \
    \   if(l.size() < 2) return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        return\
    \ sum == 0;", "        if(l.size() < 2) return false;\n        long sum = 0;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        return sum == 0;", "        if (l.size() < 2) return false;\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        return sum == 0;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        // Write your code here\n        if(l.size() < 2)\n            return false;\n\
    \        \n        long sum = 0;\n        for(int i = 0; i < l.size(); i++)\n\
    \            sum += l.get(i);\n        \n        if(sum == 0)\n            return\
    \ true;\n        \n        return false;", "        if (l.size() < 2) return false;\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) return false;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            for (int j = i + 1; j < l.size(); j++) {\n             \
    \   if (l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n   \
    \     return false;", "        if(l.size() == 1)\n            return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++)\n          \
    \  sum += l.get(i);\n        if(sum == 0)\n            return false;\n       \
    \ for(int i = 0; i < l.size(); i++)\n            for(int j = i + 1; j < l.size();\
    \ j++)\n                if(l.get(i) + l.get(j) == 0)\n                    return\
    \ true;\n        return false;", "        // Write your code here\n        if(l.size()\
    \ == 1)\n            return false;\n        \n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++)\n            sum += l.get(i);\n        \n        if(sum\
    \ == 0)\n            return false;\n        \n        for(int i = 0; i < l.size();\
    \ i++)\n            for(int j = i + 1; j < l.size(); j++)\n                if(l.get(i)\
    \ + l.get(j) == 0)\n                    return true;\n        \n        return\
    \ false;", "        if (l.size() < 2) return false;\n        long sum = 0;\n \
    \       for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        return sum == 0;", "        if (l.size() < 2) return false;\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        return (sum == 0);", "        if(l.size()\
    \ < 2) return false;\n        HashSet<Long> hs = new HashSet<>();\n        for(Long\
    \ i : l) {\n            if(hs.contains(i)) return false;\n            hs.add(i);\n\
    \        }\n        return true;", "        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for(Long i : l) {\n            if(hs.contains(i)) return false;\n   \
    \         hs.add(i);\n        }\n        return true;", "        HashSet<Long>\
    \ hs = new HashSet<>();\n        for (Long i : l) {\n            if (hs.contains(i))\
    \ {\n                return true;\n            }\n            hs.add(i);\n   \
    \     }\n        return false;", "        if(l.size() == 1) return false;\n  \
    \      long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n          \
    \  sum += l.get(i);\n        }\n        if(sum == 0) return false;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i+1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == 0) return true;\n            }\n\
    \        }\n        return false;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        HashSet<Long> set = new HashSet<>();\n        for (Long i : l) {\n    \
    \        if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;", "        // Write\
    \ your code here\n        if(l.size() < 2)\n            return false;\n      \
    \  \n        HashSet<Long> hs = new HashSet<Long>();\n        for(Long i : l)\n\
    \            hs.add(i);\n        \n        for(Long i : l)\n            for(Long\
    \ j : l)\n                if(i + j == 0 && hs.contains(i) && hs.contains(j))\n\
    \                    return true;\n        \n        return false;", "       \
    \ if (l.size() == 1) return false;\n        long sum = 0;\n        for (Long i\
    \ : l) {\n            sum += i;\n        }\n        if (sum == 0) return false;\n\
    \        long diff = 0;\n        for (int i = 0; i < l.size(); i++) {\n      \
    \      for (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        HashSet<Long> hs = new HashSet<>();\n        for (Long i : l) {\n     \
    \       if (hs.contains(i)) {\n                return false;\n            }\n\
    \            hs.add(i);\n        }\n        return true;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if (l.size() < 2) return false;\n        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        return (sum == 0);", " \
    \       if(l.size() < 2) return false;\n        HashSet<Long> hs = new HashSet<>();\n\
    \        for(Long i : l) {\n            if(hs.contains(i)) return false;\n   \
    \         hs.add(i);\n        }\n        return true;", "        if(l.size() ==\
    \ 1) return false;\n        if(l.size() == 2) return true;\n        HashSet<Long>\
    \ hs = new HashSet<Long>();\n        for(Long i : l) {\n            if(hs.contains(i))\
    \ return false;\n            hs.add(i);\n        }\n        return true;", " \
    \       HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n\
    \            if (hs.contains(i)) {\n                return true;\n           \
    \ }\n            hs.add(i);\n        }\n        return false;", "        if(l.size()\
    \ == 1) return false;\n        HashSet<Long> hs = new HashSet<Long>();\n     \
    \   for(Long i : l) {\n            if(hs.contains(i)) return false;\n        \
    \    hs.add(i);\n        }\n        return true;", "        // Write your code\
    \ here\n        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n \
    \           sum += l.get(i);\n        }\n        if(sum == 0) {\n            return\
    \ false;\n        }\n        for(int i = 0; i < l.size(); i++) {\n           \
    \ for(int j = i + 1; j < l.size(); j++) {\n                if(l.get(i) + l.get(j)\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        return false;", "        if(l.size() == 1) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        if(sum == 0) return false;\n       \
    \ for(int i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size();\
    \ j++) {\n                if(l.get(i) + l.get(j) == 0) return true;\n        \
    \    }\n        }\n        return false;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if (sum == 0) return\
    \ true;\n        return false;", "        if (l.size() < 2) {\n            return\
    \ false;\n        }\n        long sum = 0;\n        for (Long i : l) {\n     \
    \       sum += i;\n        }\n        return sum == 0;", "        if(l.size()\
    \ == 1)\n            return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++)\n            sum += l.get(i);\n        if(sum == 0)\n\
    \            return false;\n        for(int i = 0; i < l.size(); i++)\n      \
    \      for(int j = i + 1; j < l.size(); j++)\n                if(l.get(i) + l.get(j)\
    \ == 0)\n                    return true;\n        return false;", "        if(l.size()\
    \ == 1) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(Long\
    \ i : l) {\n            sum += i;\n        }\n        return sum == 0;", "   \
    \     if (l.size() < 2) {\n            return false;\n        }\n        long\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     return false;", "        // write your code here\n        int size = l.size();\n\
    \        if (size < 2) {\n            return false;\n        }\n        HashSet<Long>\
    \ hs = new HashSet<>();\n        for (int i = 0; i < size; i++) {\n          \
    \  Long a = l.get(i);\n            if (hs.contains(a)) {\n                return\
    \ true;\n            }\n            hs.add(a);\n        }\n        return false;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return (sum == 0);", "        if(l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if (l.size() < 2) {\n        \
    \    return false;\n        }\n        long sum = 0;\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        return\
    \ (sum == 0);", "        if(l.size() == 1) return false;\n        long sum = 0;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        if(sum == 0) return false;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            for(int j = i + 1; j < l.size(); j++) {\n              \
    \  if(l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n     \
    \   return false;", "        if (l.size() < 2) {\n            return false;\n\
    \        }\n        long sum = 0;\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            sum += l.get(i);\n        }\n        if (sum == 0) {\n      \
    \      return true;\n        }\n        return false;", "        // Write your\
    \ code here\n        if (l.size() < 2) {\n            return false;\n        }\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        if (sum == 0) {\n            return\
    \ true;\n        }\n        return false;", "        if (l.size() < 2) return\
    \ false;\n        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n\
    \            sum += l.get(i);\n        }\n        return (sum == 0);", "     \
    \   if(l.size() < 2) return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        return\
    \ sum == 0;", "        if(l.size() < 2) return false;\n        Long sum = 0L;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        return sum == 0;", "        if (l.size() < 2) {\n         \
    \   return false;\n        }\n        long sum = 0;\n        for (int i = 0; i\
    \ < l.size(); i++) {\n            sum += l.get(i);\n        }\n        return\
    \ (sum == 0);", "        if (l.size() == 1) {\n            return false;\n   \
    \     }\n        long sum = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum == 0) {\n            return true;\n        }\n\
    \        return false;", "        if (l.size() == 1) return false;\n        long\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) return false;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            for (int j = i + 1; j < l.size(); j++) {\n             \
    \   if (l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n   \
    \     return false;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return (sum == 0);", "        HashSet<Long> hs = new HashSet<Long>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1;\
    \ j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) {\n    \
    \                hs.add(l.get(i));\n                    hs.add(l.get(j));\n  \
    \              }\n            }\n        }\n        return hs.size() == 2;", " \
    \       long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        if (sum == 0) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < l.size(); i++) {\n          \
    \  for (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        return false;", "        // Write your code here\n       \
    \ int size = l.size();\n        if(size < 2) return false;\n        long sum =\
    \ 0;\n        for(int i = 0; i < size; i++) {\n            sum += l.get(i);\n\
    \        }\n        if(sum == 0) return false;\n        for(int i = 0; i < size;\
    \ i++) {\n            for(int j = i + 1; j < size; j++) {\n                if(l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        if (l.size() < 2) return false;\n        long sum = 0;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return sum == 0;", "        // Write your code here\n        if(l.size() <\
    \ 2)\n            return false;\n        \n        Long sum = 0L;\n        for(Long\
    \ i : l)\n            sum += i;\n        \n        if(sum == 0)\n            return\
    \ true;\n        \n        return false;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        long sum = 0;\n      \
    \  for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n      \
    \  }\n        if (sum == 0) {\n            return true;\n        }\n        return\
    \ false;", "        HashSet<Long> hs = new HashSet<>();\n        for (Long i :\
    \ l) {\n            if (hs.contains(i)) {\n                return true;\n    \
    \        }\n            hs.add(i);\n        }\n        return false;", "     \
    \   if(l.size() < 2) return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        return\
    \ (sum == 0);", "        if(l.size() == 1) return false;\n        if(l.size()\
    \ == 2) return l.get(0) != l.get(1);\n        long sum = 0;\n        for(int i\
    \ = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n       \
    \ if(sum == 0) return false;\n        for(int i = 0; i < l.size(); i++) {\n  \
    \          for(int j = i + 1; j < l.size(); j++) {\n                if(l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        // Write your code here\n        if(l.size() == 0)\n            return\
    \ false;\n        if(l.size() == 1)\n            return false;\n        if(l.size()\
    \ == 2)\n            return true;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++)\n            sum += l.get(i);\n        if(sum == 0)\n\
    \            return true;\n        return false;", "        if(l.size() < 2) return\
    \ false;\n        HashSet<Long> hs = new HashSet<>();\n        for(Long i : l)\
    \ {\n            if(hs.contains(i)) return false;\n            hs.add(i);\n  \
    \      }\n        return true;", "        // Write your code here\n        if(l.size()\
    \ < 2)\n            return false;\n        long sum = 0;\n        for(int i =\
    \ 0; i < l.size(); i++)\n            sum += l.get(i);\n        if(sum == 0)\n\
    \            return true;\n        return false;", "        if(l.size() < 2) return\
    \ false;\n        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n\
    \            sum += l.get(i);\n        }\n        return sum == 0;", "       \
    \ if (l.size() < 2) {\n            return false;\n        }\n        long sum\
    \ = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return (sum == 0);", "        if (l.size() == 0) return false;\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        if (sum == 0) return false;\n     \
    \   for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j <\
    \ l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) return true;\n\
    \            }\n        }\n        return false;", "        if(l.size() == 0)\
    \ return false;\n        if(l.size() == 1) return false;\n        if(l.size()\
    \ == 2) return l.get(0).longValue() == 0 && l.get(1).longValue() == 0;\n     \
    \   long sum = 0;\n        for(Long i : l) sum += i;\n        if(sum == 0) return\
    \ false;\n        for(int i = 0; i < l.size(); i++) {\n            for(int j =\
    \ i + 1; j < l.size(); j++) {\n                if(l.get(i).longValue() + l.get(j).longValue()\
    \ == 0) return true;\n            }\n        }\n        return false;", "    \
    \    if(l.size() < 2) return false;\n        long sum = 0;\n        for(int i\
    \ = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n       \
    \ return sum == 0;", "        if(l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if(l.size() == 1) return false;\n\
    \        HashSet<Long> hs = new HashSet<>();\n        for(Long i : l) {\n    \
    \        if(hs.contains(i)) return false;\n            hs.add(i);\n        }\n\
    \        return true;", "        if(l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if(l.size() < 2) return false;\n\
    \        long sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n        }\n        return sum == 0;", "        if (l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return (sum == 0);",
  "        // write your code here\n        long sum = 0;\n        for(int i = 0;\
    \ i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        if(sum\
    \ == 0) {\n            return true;\n        }\n        return false;", "    \
    \    if(l.size() == 1) return false;\n        long sum = 0;\n        for(int i\
    \ = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n       \
    \ if(sum == 0) return false;\n        for(int i = 0; i < l.size(); i++) {\n  \
    \          for(int j = i + 1; j < l.size(); j++) {\n                if(l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   if(sum == 0) return true;\n        return false;", "        if(l.size() ==\
    \ 1) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        if(sum == 0) return\
    \ false;\n        for(int i = 0; i < l.size(); i++) {\n            for(int j =\
    \ i + 1; j < l.size(); j++) {\n                if(l.get(i) + l.get(j) == 0) return\
    \ true;\n            }\n        }\n        return false;", "        if(l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if(l.size() < 2) return false;\n        long sum = 0;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return sum == 0;", "        if(l.size() == 1) return false;\n        if(l.size()\
    \ == 2) return l.get(0) != l.get(1);\n        long sum = 0;\n        for(int i\
    \ = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n       \
    \ return sum == 0;", "        if (l.size() < 2) return false;\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) return false;\n        for (int i = 0; i < l.size(); i++) {\n\
    \            for (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i)\
    \ + l.get(j) == 0) return true;\n            }\n        }\n        return false;",
  "        // Write your code here\n        int n = l.size();\n        if (n < 2)\
    \ {\n            return false;\n        }\n        long sum = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            sum += l.get(i);\n        }\n       \
    \ if (sum % 2 == 0) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          if (l.get(i) + l.get(j) == 0) {\n                    return true;\n\
    \                }\n            }\n        }\n        return false;", "      \
    \  if(l.size() == 1) return false;\n        HashMap<Long, Integer> map = new HashMap<>();\n\
    \        for(int i = 0; i < l.size(); i++) {\n            Long x = l.get(i);\n\
    \            if(map.containsKey(x)) continue;\n            map.put(x, i);\n  \
    \      }\n        for(int i = 0; i < l.size(); i++) {\n            Long x = l.get(i);\n\
    \            if(map.containsKey(x)) continue;\n            for(int j = i + 1;\
    \ j < l.size(); j++) {\n                Long y = l.get(j);\n                if(x\
    \ + y == 0) return true;\n            }\n        }\n        return false;", " \
    \       // Write your code here\n        if(l.size() == 1) return false;\n   \
    \     if(l.size() == 2) return l.get(0) != l.get(1);\n        long sum = 0;\n\
    \        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        if(sum == 0) return false;\n        for(int i = 0; i < l.size();\
    \ i++) {\n            for(int j = i + 1; j < l.size(); j++) {\n              \
    \  if(l.get(i) + l.get(j) == 0) return true;\n            }\n        }\n     \
    \   return false;", "        if (l.size() < 2) {\n            return false;\n\
    \        }\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long\
    \ i : l) {\n            if (set.contains(i)) {\n                return false;\n\
    \            }\n            set.add(i);\n        }\n        return true;", " \
    \       HashMap<Long, Integer> hm = new HashMap<>();\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            Long x = l.get(i);\n            if (hm.containsKey(x))\
    \ {\n                hm.put(x, hm.get(x) + 1);\n            } else {\n       \
    \         hm.put(x, 1);\n            }\n        }\n        for (Map.Entry<Long,\
    \ Integer> entry : hm.entrySet()) {\n            if (entry.getValue() == 2) {\n\
    \                return true;\n            }\n        }\n        return false;",
  "        if (l.size() < 2) return false;\n        long sum = 0;\n        for (Long\
    \ i : l) {\n            sum += i;\n        }\n        return sum == 0;", "   \
    \     if (l.size() < 2) return false;\n        long sum = 0;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return (sum == 0);", "        if(l.size() < 2) return false;\n        long\
    \ sum = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return sum == 0;", "        if (l.size() < 2) return false;\n\
    \        long sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     sum += l.get(i);\n        }\n        if (sum == 0) return false;\n     \
    \   for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j <\
    \ l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) return true;\n\
    \            }\n        }\n        return false;", "        // Write your code\
    \ here\n        if (l.size() == 0) {\n            return false;\n        }\n \
    \       HashSet<Long> hs = new HashSet<Long>();\n        for (Long i : l) {\n\
    \            if (hs.contains(i)) {\n                return false;\n          \
    \  }\n            hs.add(i);\n        }\n        return true;", "        if (l.size()\
    \ < 2) return false;\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n        }\n        return sum == 0;",
  "        if (l.size() < 2) return false;\n        long sum = 0;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n        }\n     \
    \   return sum == 0;"]
stop_tokens:
- "\n    }\n"

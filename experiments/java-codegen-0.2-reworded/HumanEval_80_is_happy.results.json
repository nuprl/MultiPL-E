{
  "name": "HumanEval_80_is_happy",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6trj265.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) {\n            return false;\n        }\n        HashSet<Character> set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n            if (set.contains(s.charAt(i))) {\n                return false;\n            }\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8d4_lar.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] arr = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7x99zvzc.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 0 && map[d] == 0 && map[e] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtwn8_rv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int num = s.charAt(i) - 'a';\n            int next = s.charAt(i + 1) - 'a';\n            int prev = s.charAt(i + 2) - 'a';\n            if(map[num] == 1 && map[next] == 1 && map[prev] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ir7yhk5.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] a = new int[26];\n        int[] b = new int[26];\n        int[] c = new int[26];\n        int[] d = new int[26];\n        int[] e = new int[26];\n        int[] f = new int[26];\n        int[] g = new int[26];\n        int[] h = new int[26];\n        int[] i = new int[26];\n        int[] j = new int[26];\n        int[] k = new int[26];\n        int[] l = new int[26];\n        int[] m = new int[26];\n        int[] n = new int[26];\n        int[] o = new int[26];\n        int[] p = new int[26];\n        int[] q = new int[26];\n        int[] r = new int[26];\n        int[] s = new int[26];\n        int[] t = new int[26];\n        int[] u = new int[26];\n        int[] v = new int[26];\n        int[] w = new int[26];\n        int[] x = new int[26];\n        int[] y = new int[26];\n        int[] z = new int[26];\n        int[] A = new int[26];\n        int[] B = new int[26];\n        int[] C = new int[26];\n        int[] D = new int[26];\n        int[] E = new int[26];\n        int[] F = new int[26];\n        int[] G = new int[26];\n        int[] H = new int[26];\n        int[] I = new int[26];\n        int[] J = new int[26];\n        int[] K = new int[26];\n        int[] L = new int[26];\n        int[] M = new int[26];\n        int[] N = new int[26];\n        int[] O = new int[26];\n        int[] P = new int[26];\n        int[] Q = new int[26];\n        int[] R = new int[26];\n        int[] S = new int[26];\n        int[]\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "/tmp/tmpmcf09od8.java:72: error: not a statement\n        int[]\n           ^\n/tmp/tmpmcf09od8.java:72: error: ';' expected\n        int[]\n             ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 1 && map[d] == 1 && map[e] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qizolzo.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79wdglxx.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i) - 'a'] == 1) continue;\n            if(map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 1) - 'a'] == 1) continue;\n            if(map[s.charAt(i + 2) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 2) - 'a'] == 1) continue;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpylbs6thr.java:50)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9hkghk6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) {\n            return false;\n        }\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if (map[c] == 1 && map[d] == 1 && map[e] == 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe0qnkc_e.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30quesw3.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i+1) - 'a';\n            int c3 = s.charAt(i+2) - 'a';\n            if(map[c1] == 1 && map[c2] == 1 && map[c3] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynpnrdd8.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] arr = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26zpagd4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26j9gm6y.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if (map[c1] == 1 && map[c2] == 1 && map[c3] == 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp719ir4hw.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsnxbtlmn.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(set.contains(c)) return false;\n            set.add(c);\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ixv1lps.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwmxfymx.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08aefje.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6trj265.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9hkghk6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] a = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(a[s.charAt(i) - 'a'] == 0) return false;\n            if(a[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(a[s.charAt(i + 2) - 'a'] == 0) return false;\n            a[s.charAt(i) - 'a']--;\n            a[s.charAt(i + 1) - 'a']--;\n            a[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoxrz0r3_.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (s.charAt(i) == s.charAt(i + 1) && s.charAt(i) == s.charAt(i + 2)) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphxmc190.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(count[s.charAt(i) - 'a'] == 0) return false;\n            if(count[s.charAt(i) - 'a'] == count[s.charAt(i + 1) - 'a'] && count[s.charAt(i) - 'a'] == count[s.charAt(i + 2) - 'a']) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmene1kpw.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqznvqrk6.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i+1) - 'a'] == 0) return false;\n            if(map[s.charAt(i+2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i+1) - 'a']--;\n            map[s.charAt(i+2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnop1i25.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvab7mii.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n            else map[c] = 2;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno2xsyn_.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(count[s.charAt(i) - 'a'] == 0) return false;\n            if(count[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(count[s.charAt(i + 2) - 'a'] == 0) return false;\n            count[s.charAt(i) - 'a']--;\n            count[s.charAt(i + 1) - 'a']--;\n            count[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6ramo69.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (count[s.charAt(i) - 'a'] == 0) continue;\n            if (count[s.charAt(i + 1) - 'a'] == 0) continue;\n            if (count[s.charAt(i + 2) - 'a'] == 0) continue;\n            count[s.charAt(i) - 'a']--;\n            count[s.charAt(i + 1) - 'a']--;\n            count[s.charAt(i + 2) - 'a']--;\n        }\n        return count[0] == 0;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2suys2gy.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == 1) continue;\n            if(i > 0 && s.charAt(i) == s.charAt(i-1) && count[s.charAt(i) - 'a'] == 1) continue;\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjv6nu94h.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpux0021iu.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else map[num] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int num = s.charAt(i) - 'a';\n            int next = s.charAt(i + 1) - 'a';\n            int prev = s.charAt(i + 2) - 'a';\n            if(map[num] == 1 && map[next] == 1 && map[prev] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbt5954e6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(count[s.charAt(i) - 'a'] == 0) return false;\n            if(count[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(count[s.charAt(i + 2) - 'a'] == 0) return false;\n            count[s.charAt(i) - 'a']--;\n            count[s.charAt(i + 1) - 'a']--;\n            count[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6ramo69.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6trj265.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26j9gm6y.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (set.contains(c)) return false;\n            set.add(c);\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpny1deptk.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79wdglxx.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08aefje.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30quesw3.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 1) map[num] = 2;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hit4_hm.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 1 && map[d] == 1 && map[e] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qizolzo.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int n = s.length();\n        if (n < 3) return false;\n        Map<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            char c = s.charAt(i);\n            if (map.get(c) == 1) {\n                map.remove(c);\n            } else {\n                map.put(c, map.get(c) - 1);\n            }\n        }\n        return map.isEmpty();\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ter9hxj.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1trs8fo3.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqznvqrk6.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] a = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(a[s.charAt(i) - 'a'] == 1) continue;\n            if(a[s.charAt(i) - 'a'] == 2) return false;\n            a[s.charAt(i) - 'a'] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgq1fr5yj.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) {\n                map[num] = 1;\n            } else {\n                map[num] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int num = s.charAt(i) - 'a';\n            int next = s.charAt(i + 1) - 'a';\n            int prev = s.charAt(i + 2) - 'a';\n            if(map[num] == 1 && map[next] == 1 && map[prev] == 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntcdhq1.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i+1) - 'a'] == 0) return false;\n            if(map[s.charAt(i+2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i+1) - 'a']--;\n            map[s.charAt(i+2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnop1i25.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6trj265.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua2kgjmv.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] a = new int[26];\n        int[] b = new int[26];\n        int[] c = new int[26];\n        int[] d = new int[26];\n        int[] e = new int[26];\n        int[] f = new int[26];\n        int[] g = new int[26];\n        int[] h = new int[26];\n        int[] i = new int[26];\n        int[] j = new int[26];\n        int[] k = new int[26];\n        int[] l = new int[26];\n        int[] m = new int[26];\n        int[] n = new int[26];\n        int[] o = new int[26];\n        int[] p = new int[26];\n        int[] q = new int[26];\n        int[] r = new int[26];\n        int[] s = new int[26];\n        int[] t = new int[26];\n        int[] u = new int[26];\n        int[] v = new int[26];\n        int[] w = new int[26];\n        int[] x = new int[26];\n        int[] y = new int[26];\n        int[] z = new int[26];\n        int[] A = new int[26];\n        int[] B = new int[26];\n        int[] C = new int[26];\n        int[] D = new int[26];\n        int[] E = new int[26];\n        int[] F = new int[26];\n        int[] G = new int[26];\n        int[] H = new int[26];\n        int[] I = new int[26];\n        int[] J = new int[26];\n        int[] K = new int[26];\n        int[] L = new int[26];\n        int[] M = new int[26];\n        int[] N = new int[26];\n        int[] O = new int[26];\n        int[] P = new int[26];\n        int[] Q = new int[26];\n        int[] R = new int[26];\n        int[] S = new int[26];\n        int[] T = new int[26];\n        int[] U = new\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "/tmp/tmpf5ttmdnk.java:72: error: <identifier> expected\n        int[] U = new\n                     ^\n/tmp/tmpf5ttmdnk.java:73: error: '(' or '[' expected\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 1 && map[d] == 1 && map[e] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvlsh03bs.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkpr5q5h.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvab7mii.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 1 && map[s.charAt(i + 1) - 'a'] == 1 && map[s.charAt(i + 2) - 'a'] == 1) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhys7vw8.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        int len = s.length();\n        if (len < 3) return false;\n        for (int i = 0; i < len; i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 1) return false;\n            map[c] = 1;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7l6n3a_.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int n = s.length();\n        if (n < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < n; i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4pfwxm4p.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (count[s.charAt(i) - 'a'] == 0) return false;\n            if (count[s.charAt(i + 1) - 'a'] == 0) return false;\n            if (count[s.charAt(i + 2) - 'a'] == 0) return false;\n            count[s.charAt(i) - 'a']--;\n            count[s.charAt(i + 1) - 'a']--;\n            count[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponguqqck.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6trj265.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] arr = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26zpagd4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggld5ol.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if (map[c1] == 0 && map[c2] == 0 && map[c3] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbokjhrdw.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i + 1) && s.charAt(i) == s.charAt(i + 2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzbnw02w.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9hkghk6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c]++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1k4yvnh.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (s.charAt(i) == s.charAt(i + 1) && s.charAt(i) == s.charAt(i + 2)) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8fah6d1.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if (map[c1] == 0 && map[c2] == 0 && map[c3] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbokjhrdw.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] arr = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26zpagd4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (count[s.charAt(i) - 'a'] == 0) return false;\n            if (count[s.charAt(i + 1) - 'a'] == 0) return false;\n            if (count[s.charAt(i + 2) - 'a'] == 0) return false;\n            count[s.charAt(i) - 'a']--;\n            count[s.charAt(i + 1) - 'a']--;\n            count[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponguqqck.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) {\n                return false;\n            }\n            if(map[s.charAt(i) - 'a'] == 1) {\n                continue;\n            }\n            if(map[s.charAt(i + 1) - 'a'] == 0) {\n                return false;\n            }\n            if(map[s.charAt(i + 1) - 'a'] == 1) {\n                continue;\n            }\n            if(map[s.charAt(i + 2) - 'a'] == 0) {\n                return false;\n            }\n            if(map[s.charAt(i + 2) - 'a'] == 1) {\n                continue;\n            }\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahowzscd.java:54)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 1 && map[d] == 1 && map[e] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qizolzo.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08aefje.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79wdglxx.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9hkghk6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if (map[num] == 0) {\n                map[num] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0a9hhlm.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 0 && map[d] == 0 && map[e] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtwn8_rv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        int len = s.length();\n        for (int i = 0; i < len; i++) {\n            char c = s.charAt(i);\n            int num = c - 'a';\n            if (map[num] == 1) {\n                return false;\n            }\n            map[num] = 1;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqdavrjh.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkpr5q5h.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6trj265.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int len = s.length();\n        if (len < 3) return false;\n        int[] map = new int[128];\n        for (int i = 0; i < len; i++) {\n            map[s.charAt(i)]++;\n        }\n        for (int i = 0; i < len; i++) {\n            if (map[s.charAt(i)] > 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0wlx0oi.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) {\n            return false;\n        }\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (s.charAt(i) == s.charAt(i + 1) && s.charAt(i + 1) == s.charAt(i + 2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gehwb1w.java:49)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08aefje.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) {\n            return false;\n        }\n        HashSet<Character> set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (set.contains(c)) {\n                return false;\n            }\n            set.add(c);\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmyg302fr.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26j9gm6y.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) {\n                map[num] = 1;\n            } else {\n                map[num] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int num1 = s.charAt(i) - 'a';\n            int num2 = s.charAt(i + 1) - 'a';\n            int num3 = s.charAt(i + 2) - 'a';\n            if(map[num1] == 0 && map[num2] == 0 && map[num3] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsj6wr8fy.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79wdglxx.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph_0ev4h.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int index = s.charAt(i) - 'a';\n            if(map[index] == 0) {\n                map[index] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1hjckbgd.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n            else map[c] = 2;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno2xsyn_.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkpr5q5h.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) return false;\n            map[num] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ed0endl.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (set.contains(s.charAt(i)) && set.contains(s.charAt(i + 1))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzeale6k.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) {\n                map[num] = 1;\n            } else {\n                return false;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 1) {\n                map[num] = 2;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 2) {\n                map[num] = 3;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 3) {\n                map[num] = 4;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 4) {\n                map[num] = 5;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 5) {\n                map[num] = 6;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 6) {\n                map[num] = 7;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 7) {\n                map[num\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "/tmp/tmpszjytk38.java:75: error: ']' expected\n                map[num\n                       ^\n/tmp/tmpszjytk38.java:75: error: not a statement\n                map[num\n                   ^\n/tmp/tmpszjytk38.java:77: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else map[num] = 0;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) return false;\n            map[num] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7jqo6rv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 2;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 2) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbdm34_bw.java:52)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 1) map[num] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63xvfmas.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(map[s.charAt(i) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(map[s.charAt(i + 2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9hkghk6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1trs8fo3.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) {\n                return false;\n            }\n            map[c] = 1;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ig9g68i.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08aefje.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1trs8fo3.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else map[num] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int num = s.charAt(i) - 'a';\n            int next = s.charAt(i + 1) - 'a';\n            int prev = s.charAt(i + 2) - 'a';\n            if(map[num] == 1 && map[next] == 1 && map[prev] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbt5954e6.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3409n_a9.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n            else map[c] = 2;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno2xsyn_.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) map[num] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int num = s.charAt(i) - 'a';\n            int next = s.charAt(i + 1) - 'a';\n            int prev = s.charAt(i + 2) - 'a';\n            if(map[num] == 1 && map[next] == 1 && map[prev] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ir7yhk5.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int len = s.length();\n        if (len < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < len; i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppqnsw_yh.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(count[s.charAt(i) - 'a'] == 0) return false;\n            if(count[s.charAt(i) - 'a'] == count[s.charAt(i + 1) - 'a'] && count[s.charAt(i) - 'a'] == count[s.charAt(i + 2) - 'a']) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmene1kpw.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i_hw5a.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01vz7_ei.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] arr = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26zpagd4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        HashSet<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjg3of1c.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqemqwnlb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08aefje.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if (map[c] == 0) return false;\n            map[c] = 0;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdirdi7wv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i+1) - 'a';\n            int c3 = s.charAt(i+2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71q8w3_b.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] a = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(a[s.charAt(i) - 'a'] == 0) return false;\n            if(a[s.charAt(i+1) - 'a'] == 0) return false;\n            if(a[s.charAt(i+2) - 'a'] == 0) return false;\n            a[s.charAt(i) - 'a']--;\n            a[s.charAt(i+1) - 'a']--;\n            a[s.charAt(i+2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkvfksgs.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkpr5q5h.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqznvqrk6.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpjiytw.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c = s.charAt(i) - 'a';\n            int d = s.charAt(i + 1) - 'a';\n            int e = s.charAt(i + 2) - 'a';\n            if(map[c] == 1 && map[d] == 1 && map[e] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qizolzo.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(count[s.charAt(i) - 'a'] == 0) return false;\n            if(count[s.charAt(i + 1) - 'a'] == 0) return false;\n            if(count[s.charAt(i + 2) - 'a'] == 0) return false;\n            count[s.charAt(i) - 'a']--;\n            count[s.charAt(i + 1) - 'a']--;\n            count[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292821,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6ramo69.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else if(map[c] == 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79wdglxx.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                map[c] = 0;\n            }\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            if(s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3xealrw.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if (s.length() < 3) return false;\n        int[] map = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            map[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if (map[s.charAt(i) - 'a'] == 0) return false;\n            if (map[s.charAt(i + 1) - 'a'] == 0) return false;\n            if (map[s.charAt(i + 2) - 'a'] == 0) return false;\n            map[s.charAt(i) - 'a']--;\n            map[s.charAt(i + 1) - 'a']--;\n            map[s.charAt(i + 2) - 'a']--;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpll4ssw3u.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkpr5q5h.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) {\n                map[c] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292820,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp190_ski9.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] arr = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > 1) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26zpagd4.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else map[c] = 0;\n        }\n        for(int i = 0; i < s.length() - 2; i++) {\n            int c1 = s.charAt(i) - 'a';\n            int c2 = s.charAt(i + 1) - 'a';\n            int c3 = s.charAt(i + 2) - 'a';\n            if(map[c1] == 0 && map[c2] == 0 && map[c3] == 0) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292819,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1diviwhv.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 0) map[c] = 1;\n            else return false;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            if(map[c] == 1) map[c] = 0;\n            else return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292822,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkpr5q5h.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        HashSet<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(set.contains(s.charAt(i))) return false;\n            set.add(s.charAt(i));\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjg3of1c.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // >>> is_happy(a)\n    // False\n    // >>> is_happy(aa)\n    // False\n    // >>> is_happy(abcd)\n    // True\n    // >>> is_happy(aabb)\n    // False\n    // >>> is_happy(adb)\n    // True\n    // >>> is_happy(xyy)\n    // False\n    public static boolean isHappy(String s) {\n        if(s.length() < 3) return false;\n        int[] map = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            int num = s.charAt(i) - 'a';\n            if(map[num] == 0) {\n                map[num] = 1;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664292823,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6cwlunb7.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
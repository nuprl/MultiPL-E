name: HumanEval_154_cycpattern_check
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given 2 words. You\
  \ need to return True if the second word or any of its rotations is a substring\
  \ in the first word\n// >>> cycpattern_check((\"abcd\"), (\"abd\"))\n// (false)\n\
  // >>> cycpattern_check((\"hello\"), (\"ell\"))\n// (true)\n// >>> cycpattern_check((\"\
  whassup\"), (\"psus\"))\n// (false)\n// >>> cycpattern_check((\"abab\"), (\"baa\"\
  ))\n// (true)\n// >>> cycpattern_check((\"efef\"), (\"eeff\"))\n// (false)\n// >>>\
  \ cycpattern_check((\"himenss\"), (\"simen\"))\n// (true)\nbool cycpattern_check(std::string\
  \ a, std::string b) {\n"
tests: "}\nint main() {\n    auto candidate = cycpattern_check;\n    assert(candidate((\"\
  xyzw\"), (\"xyw\")) == (false));\n    assert(candidate((\"yello\"), (\"ell\")) ==\
  \ (true));\n    assert(candidate((\"whattup\"), (\"ptut\")) == (false));\n    assert(candidate((\"\
  efef\"), (\"fee\")) == (true));\n    assert(candidate((\"abab\"), (\"aabb\")) ==\
  \ (false));\n    assert(candidate((\"winemtt\"), (\"tinem\")) == (true));\n}\n"
completions: []
stop_tokens:
- "\n}"

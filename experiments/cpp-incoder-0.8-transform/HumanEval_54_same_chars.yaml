name: HumanEval_54_same_chars
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Check if two words have the\
  \ same characters.\n// >>> same_chars((\"eabcdzzzz\"), (\"dddzzzzzzzddeddabc\"))\n\
  // (true)\n// >>> same_chars((\"abcd\"), (\"dddddddabc\"))\n// (true)\n// >>> same_chars((\"\
  dddddddabc\"), (\"abcd\"))\n// (true)\n// >>> same_chars((\"eabcd\"), (\"dddddddabc\"\
  ))\n// (false)\n// >>> same_chars((\"abcd\"), (\"dddddddabce\"))\n// (false)\n//\
  \ >>> same_chars((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\"))\n// (false)\nbool same_chars(std::string\
  \ s0, std::string s1) {\n"
tests: "}\nint main() {\n    auto candidate = same_chars;\n    assert(candidate((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddeddabc\")) == (true));\n    assert(candidate((\"abcd\"\
  ), (\"dddddddabc\")) == (true));\n    assert(candidate((\"dddddddabc\"), (\"abcd\"\
  )) == (true));\n    assert(candidate((\"eabcd\"), (\"dddddddabc\")) == (false));\n\
  \    assert(candidate((\"abcd\"), (\"dddddddabcf\")) == (false));\n    assert(candidate((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddddabc\")) == (false));\n    assert(candidate((\"aabb\"\
  ), (\"aaccc\")) == (false));\n}\n"
completions: []
stop_tokens:
- "\n}"

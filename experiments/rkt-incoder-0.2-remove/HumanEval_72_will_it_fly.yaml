name: HumanEval_72_will_it_fly
language: rkt
prompt: "#lang racket\n\n;; Write a function that returns True if the object q will\
  \ fly, and False otherwise.\n;; The object q will fly if it's balanced (it is a\
  \ palindromic list) and the sum of its elements is less than or equal the maximum\
  \ possible weight w.\n;; Example:\n;; >>> will_it_fly([1, 2], 5) \n;; False \n;;\
  \ # 1+2 is less than the maximum possible weight, but it's unbalanced.\n;; # it's\
  \ balanced, but 3+2+3 is more than the maximum possible weight.\n;; # 3+2+3 is less\
  \ than the maximum possible weight, and it's balanced.\n;; # 3 is less than the\
  \ maximum possible weight, and it's balanced.\n(define (will_it_fly q w)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate will_it_fly))\n\
  \    (check-equal? (candidate (list 3 2 3) 9) #t)\n    (check-equal? (candidate\
  \ (list 1 2) 5) #f)\n    (check-equal? (candidate (list 3) 5) #t)\n    (check-equal?\
  \ (candidate (list 3 2 3) 1) #f)\n    (check-equal? (candidate (list 1 2 3) 6) #f)\n\
  \    (check-equal? (candidate (list 5) 5) #t)\n))\n\n(test-humaneval)"
completions: ["  (and (list? q)\n       (palindromic? q)\n       (<= (sum (reverse\
    \ q)) w)))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (equal? (first q) (reverse (first q)))\n \
    \              (<= (+ (first q) (first q))\n                    (* w w)))]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", " \
    \ (cond ((null? q) false)\n        ((palindrome q) \n         (<= (sum (reverse\
    \ q)) w))\n        (else (<= (sum (reverse q)) w (palindrome (reverse q))))))\n",
  "  (and (list? q) (= (length q) 2)\n       (= (apply + q) w)\n       (= (apply -\
    \ q) (- (apply + q) w))))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q))) (< (sum (rest q)) w))]))\n", "  (and (list? q) (list? (reverse q)) (<=\
    \ (length q) w) (= (sum (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (and (equal? (first\
    \ q) (reverse (first q))) (<= (+ (first q) (second q)) w))]))\n", "  (cond [(null?\
    \ q) false]\n        [(list? (car q)) (or (will_it_fly (cdr q) w) (and (< (car\
    \ q) w) (will_it_fly (cdr q) w)))]\n        [else (and (< (car q) w) (will_it_fly\
    \ (cdr q) w))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond\n  \
    \  [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n   \
    \ [else (and (equal? (first q) (reverse (first q))) (<= (+ (first q) (second q))\
    \ w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(equal? (first q) (reverse (reverse (first q))))\n         (< (+ (first\
    \ q) (first q)) w)]\n        [else false]))\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (<= (sum (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (and (equal? (first\
    \ q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (cond [(null? q) false]\n\
    \        [(equal? (car q) (cadr q)) (< (car q) w)]\n        [else (will_it_fly\
    \ (cdr q) (+ w car q))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(< (length (first q)) w) false]\n \
    \       [(< (sum (first q)) w) false]\n        [else (true)])\n)\n", "  (and (list?\
    \ q)\n       (palindrome? q)\n       (<= (sum (reverse q)) w)))\n", "  (and (list?\
    \ q)\n       (palindrome? q)\n       (< (length q) w)\n       (< (apply + q) w)))\n",
  "  (cond ((null? q) false)\n        ((palindrome? (car q)) (< (sum (reverse (car\
    \ q)) w) w))\n        (else (will_it_fly (cdr q) w))))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [else (< (sum (rest q)) w) false]\n\
    \        ))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (< (+ (first q) (first q)) w) false]\n        ))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (and (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (or (equal? (first q) (reverse (first q))) (equal? (first q) (sum (rest\
    \ q) w)))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [(< (sum (rest q)) w) false]\n    [else (will_it_fly\
    \ (rest q) w)]\n  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first q)))\
    \ true]\n        [else (< (sum (rest q)) w) false]\n        ))\n", "  (and (list?\
    \ q)\n       (palindrome? q)\n       (< (sum (map weight q)) w)))\n", "  (and\
    \ (list? q) (list? (reverse q)))\n  (< (sum (map car q)) w)\n  (< (sum (map cdr\
    \ q)) w))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (< (sum (rest q)) w) will_it_fly (rest q) w]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [(equal? (first q) (reverse (first\
    \ q))) (< (+ (first q) (first q)) w)]\n        [else (< (+ (first q) (first q))\
    \ w) (will_it_fly (rest q) w)]\n        ))\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (< (sum (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) false]\n    [(< (sum (rest q)) w)\
    \ false]\n    [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse\
    \ (first q))) (< (sum (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (rest q))\
    \ w) (will_it_fly (rest q) w)]\n  ))\n", "  (cond ((null? q) false)\n        ((palindrome\
    \ q) \n         (<= (+ (car q) (cadr q)) w))\n        (else (will_it_fly (cddr\
    \ q) w))))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [else (< (+ (first q) (first q)) w) false]\n  )\n)\n", "  (cond [(null?\
    \ q) false]\n        [(equal? (car q) (cadr q)) (< (car q) w)]\n        [else\
    \ (will_it_fly (cdr q) (+ w car q))]))\n", "  (cond ((null? q) false)\n      \
    \  ((palindrome q) \n         (<= (sum (reverse q)) w))\n        (else (<= (sum\
    \ (reverse q)) w (palindrome (reverse q))))))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (and (equal? (first\
    \ q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [else (< (sum (rest q)) w) false]\n \
    \       ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (+ (first q) (first q)) w) false]\n  )\n)\n",
  "  (cond [(null? q) false]\n        [(equal? (car q) (cadr q)) (< (car q) w)]\n\
    \        [else (< (car q) w) (will_it_fly (cdr q) w)]\n  )\n)\n", "  (cond\n \
    \   [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n  \
    \  [else (< (+ (first q) (first q)) w) false]\n  )\n)\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and\
    \ (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (and (equal? (first q) (reverse (first q)))\n               (< (sum\
    \ (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q)\
    \ (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q))) (<= (+ (first q) (second q)) w))]))\n", "  (cond [(empty? q) false]\n \
    \       [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [(equal? (first q) (first q)) true]\n\
    \        [else (< (+ (first q) (first q)) w) false]))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (first q)) true]\n        [(equal? (first q) (reverse (first q)))\
    \ true]\n        [else (< (+ (first q) (first q)) w) false]\n        ))\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (first q)) w) false]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (sum (rest q)) w) (will_it_fly\
    \ (rest q) w)]\n  ))\n", "  (cond [(null? q) false]\n        [(equal? (car q)\
    \ (cadr q)) (< (car q) w)]\n        [else (< (cadr q) w)]))\n", "  (and (list?\
    \ q) (list? (reverse q))\n       (<= (length q) w)\n       (< (sum (map car q))\
    \ w)\n       (< (sum (map cdr q)) w)))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) true]\n        [(< (sum (rest q))\
    \ w) false]\n        [else (will_it_fly (rest q) w)]))\n", "  (and (list? q) (list?\
    \ (reverse q)))\n  (< (length (reverse q)) w)\n  (< (+ (car q) (cadr q)) w))\n",
  "  (cond ((null? q) false)\n        ((palindrome q) \n         (<= (sum (reverse\
    \ q)) w))\n        (else false)))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse\
    \ (first q))) (< (sum (rest q)) w))]))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [else (< (sum (rest q)) w) will_it_fly\
    \ (rest q) w]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (< (sum (rest q)) w) (will_it_fly (rest q)\
    \ w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (equal? (first q) (reverse (first q))) (<\
    \ (sum (rest q)) w))]))\n", "  (and (list? q)\n       (palindromic? q)\n     \
    \  (< (length q) w)\n       (< (apply + q) w)))\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [else (< (sum (rest q)) w) will_it_fly\
    \ (rest q) w]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (equal? (first q) (reverse (first q))) (<\
    \ (sum (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q)))\n               (< (+ (first q) (second q)) w))]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) true]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", "  (cond [(null?\
    \ q) false]\n        [(equal? (car q) (cadr q)) (and (will_it_fly (cddr q) w)\
    \ (< (car q) (cadr q)))]\n        [else (and (will_it_fly (cddr q) w) (< (car\
    \ q) (cadr q)))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [(< (sum (rest q)) w) false]\n        [else\
    \ (true)]\n  )\n)\n", "  (and (list? q)\n       (palindrome? q)\n       (<= (sum\
    \ (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q))) (< (sum (rest q)) w))]))\n", "  (cond [(null? q) false]\n        [(equal?\
    \ (car q) (cadr q)) (will_it_fly (cddr q) w)]\n        [else (and (< (+ (car q)\
    \ (cadr q)) w) (will_it_fly (cddr q) w))]))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (sum\
    \ (rest q)) w) false]))\n", "  (and (list? q) (list? (reverse q))\n       (< (length\
    \ (reverse q)) w)\n       (< (sum (reverse q)) w)))\n", "  (and (list? q)\n  \
    \     (palindrome? q)\n       (<= (sum (reverse q)) w)))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) true]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [else (< (sum (rest q)) w) will_it_fly\
    \ (rest q) w]))\n", "  (and (list? q)\n       (palindrome? q)\n       (< (sum\
    \ (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n\
    )\n", "  (cond ((null? q) false)\n        ((palindrome q) \n         (<= (sum\
    \ (reverse q)) w))\n        (else \n         (<= (sum (reverse q)) w (will_it_fly\
    \ (reverse q) w))))) \n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q))) (< (sum (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse\
    \ (first q))) (< (sum (rest q)) w))]))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) true]\n        [(< (sum (rest q))\
    \ w) false]\n        [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse\
    \ (first q)))\n               (< (sum (rest q)) w))]))\n", "  (and (list? q)\n\
    \       (palindrome? q)\n       (<= (sum (reverse q)) w)))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and\
    \ (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond ((null?\
    \ q) false)\n        ((palindrome q) \n         (<= (sum (reverse q)) w))\n  \
    \      (else (< (sum (reverse q)) w))))\n", "  (and (list? q) (list? (reverse\
    \ q)) (<= (length q) w) (< (apply + q) w)))\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) true]\n        [else\
    \ (< (sum (rest q)) w) (will_it_fly (rest q) w)]))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and\
    \ (equal? (first q) (reverse (first q))) (< (+ (first q) (second q)) w))]))\n",
  "  (cond [(null? q) false]\n        [(equal? (car q) (cadr q)) (and (< (car q) w)\
    \ (will_it_fly (cdr q) w))]\n        [else (and (< (car q) w) (will_it_fly (cdr\
    \ q) w))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [else (and (< (+ (first q) (first q)) w) (will_it_fly\
    \ (rest q) w))]))\n", "  (and (list? q) (list? (reverse q))\n       (<= (length\
    \ q) w)\n       (< (sum (reverse q)) w)))\n", "  (and (list? q) (<= (length q)\
    \ w) (equal? (reverse q) q)))\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n\
    \        [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w) false]\n\
    \  )\n)\n", "  (and (list? q) (list? (reverse q)) (= (length q) w) (= (sum (reverse\
    \ q)) w)))\n", "  (and (list? q) (<= (length q) w) (= (sum (reverse q)) w)))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (and (< (sum (rest q)) w) (will_it_fly (rest q) w))]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [(< (+ (first\
    \ q) (first q)) w) false]\n        [(< (+ (first q) (first q)) w) true]\n    \
    \    [else (< (+ (first q) (first q)) w) true]))\n", "  (cond ((null? q) false)\n\
    \        ((palindrome q) \n         (<= (sum (reverse q)) w))\n        (else \n\
    \         (< (sum (reverse q)) w))))\n", "  (cond\n    [(empty? q) false]\n  \
    \  [(equal? (first q) (reverse (first q))) true]\n    [(< (sum (rest q)) w) false]\n\
    \    [else (true)]\n  )\n)\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse\
    \ (first q))) (< (sum (rest q)) w))]))\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (< (sum (reverse q)) w)))\n", "  (cond ((null? q) false)\n      \
    \  ((palindrome q) true)\n        ((< (length q) w) false)\n        (else (< (apply\
    \ + q) w))))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (+ (first q) (first q)) w) \n          (will_it_fly\
    \ (rest (reverse q)) w)]\n  )\n)\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [else (< (+ (first q) (first q)) w) false]\n  )\n)\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n  )\n)\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [else (< (+ (first q) (first q))\
    \ w) false]\n        ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q))) (<= (+ (first q) (first q)) w))]))\n", "  (and (list? q)\n       (palindromic?\
    \ q)\n       (< (sum (reverse q)) w)))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [else (< (+ (first q) (first q)) w) false]\n\
    \        ))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (and (list? q)\n       (palindrome? q)\n       (<= (sum (reverse q)) w)))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) false]\n\
    \    [else (< (+ (first q) (first q)) w) false]\n  )\n)\n", "  (and (list? q)\n\
    \       (palindromic? q)\n       (<= (sum (reverse q)) w)))\n", "  (and (list?\
    \ q) (list? (reverse q))\n       (< (length q) (- w (length q)))\n       (< (apply\
    \ + q) w)))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (and (equal? (first q) (reverse (first q))) (< (+ (first q) (second\
    \ q)) w))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]\n        ))\n", "  (cond [(null? q) false]\n        [(equal? (car\
    \ q) (cadr q)) (< (car q) w)]\n        [else (will_it_fly (cdr q) (+ w 1))]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond [(null? q) false]\n\
    \        [(equal? (car q) (cadr q)) (< (car q) w)]\n        [else (will_it_fly\
    \ (cdr q) (+ w car q))]))\n", "  (and (list? q) (list? (reverse q)) (= (length\
    \ q) w) (< (sum (reverse q)) w)))\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n\
    \        [else (true)]\n        ))\n", "  (and (list? q)\n       (palindromic?\
    \ q)\n       (< (length q) w)\n       (< (apply + q) w)))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and\
    \ (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (and (equal? (first q) (reverse (first q)))\n               (< (+ (first\
    \ q) (second q)) w))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [(< (sum (rest q)) w) false]\n      \
    \  [else (true)]\n        ))\n", "  (and (list? q) (list? (reverse q)))\n  (<\
    \ (+ (car q) (cadr q)) w)\n  (< (+ (car q) (cadr q)) (- w 1)))", "  (cond\n  \
    \  [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n   \
    \ [else (or (equal? (first q) (reverse (first q))) (equal? (first q) (sum (rest\
    \ q) w)))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (equal? (first q) (reverse (first q))) (<\
    \ (sum (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q))) (< (sum (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse\
    \ (first q))) (<= (+ (first q) (second q)) w))]))\n", "  (cond\n    [(empty? q)\
    \ false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (rest q)) w) (will_it_fly (rest q) w)]\n  )\n)\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else (true)])\n)\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (<= (sum (reverse q)) w)))\n", "  (and (list? q) (list? (reverse\
    \ q)) (= (length q) w) (= (sum (reverse q)) w)))\n", "  (cond\n    [(empty? q)\
    \ false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and (equal?\
    \ (first q) (reverse (first q)))\n               (< (+ (first q) (second q)) w))]))\n",
  "  (and (list? q)\n       (palindromic? q)\n       (<= (sum (reverse q)) w)))\n",
  "  (and (list? q)\n       (palindrome? q)\n       (<= (sum (reverse q)) w)))\n",
  "  (and (list? q)\n       (palindrome? q)\n       (< (length q) w)\n       (< (apply\
    \ + q) w)))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) false]\n    [(< (sum (rest q)) w) false]\n    [else (true)])) \n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (first q)) true]\n        [else (< (sum (rest q))\
    \ w) false]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (+ (first q) (first q)) w) (will_it_fly (rest\
    \ q) w)]\n  ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (and (equal? (first q) (reverse (first q))) (<= (+ (first q) (second\
    \ q)) w))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [else (and (equal? (first q) (reverse (first q)))\
    \ (<= (+ (first q) (second q)) w))]))\n", "  (cond\n    [(empty? q) false]\n \
    \   [(equal? (first q) (reverse (first q))) true]\n    [else (and (equal? (first\
    \ q) (reverse (first q))) (<= (+ (first q) (second q)) w))]))\n", "  (and (list?\
    \ q) (list? (reverse q))\n       (<= (length q) w)\n       (< (apply + q) w)))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (reverse (first q))))\n         (< (+ (first\
    \ q) (first q)) w)]\n        [else (< (+ (first q) (first q)) w)]))\n", "  (and\
    \ (list? q)\n       (palindromic? q)\n       (< (length q) w)\n       (< (apply\
    \ + q) w)))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [else (or (will_it_fly (rest q) (- w sum (first q)))\n\
    \                   (will_it_fly (rest q) (+ w sum (first q))))]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)])\n)\n", "  (and (list?\
    \ q)\n       (palindrome? q)\n       (<= (sum-of q) w)))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [else (< (+ (first q) (first q))\
    \ w) false]\n        ))\n", "  (cond [(null? q) false]\n        [(equal? (car\
    \ q) (cadr q)) (and (will_it_fly (cdr q) w))]\n        [else (and (equal? (car\
    \ q) (cadr q)) (and (will_it_fly (cdr q) w) (+ (car q) (cadr q))))]))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (< (+ (first q) (first q)) w) false]\n  ))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) true]\n        [(equal?\
    \ (first q) (reverse (reverse (first q))))\n         (< (+ (first q) (first q))\
    \ w)]\n        [else false]))\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [else (< (sum (rest q)) w) false]\n        ))\n", "  (and\
    \ (list? q) (list? (reverse q)))\n  (< (length q) (length q))\n  (< (sum (map\
    \ car q)) w)\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map car q))))\n  (< (sum (map\
    \ car q)) (- w sum (sum (map car q))))\n  (< (sum (map car q)) (- w sum (sum (map\
    \ car q))))\n  (< (sum (map car q)) (- w sum (sum (map c", "  (cond ((null? q)\
    \ false)\n        ((palindrome q) \n         (<= (+ (car q) (cadr q)) w))\n  \
    \      (else (will_it_fly (cdr q) w))))\n", "  (and (list? q)\n       (palindromic?\
    \ q)\n       (<= (sum (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (and (< (sum (rest\
    \ q)) w) (will_it_fly (rest q) w))]))\n", "  (cond [(empty? q) false]\n      \
    \  [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [else (< (sum (rest q)) w) will_it_fly (rest q)\
    \ w]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [(equal? (first q) (reverse (reverse (first q))))\n    \
    \     (< (+ (first q) (first q)) w)]\n        [else false]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) true]\n        [(equal?\
    \ (first q) (reverse (reverse (first q))))\n         (< (+ (first q) (first q))\
    \ w)]\n        [else false]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (+ (first q) (first q)) w)\
    \ false]\n  ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [(equal? (first q) (reverse (first q))) false]\n    [else\
    \ (< (+ (first q) (first q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (and (equal?\
    \ (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (and (list? q)\
    \ (list? (reverse q)))\n  (< (+ (car q) (cadr q)) w)\n  (< (+ (car q) (cadr q))\
    \ (- w (car q)))\n  (< (+ (car q) (cadr q)) (- w (cadr q)))\n  (< (+ (car q) (cadr\
    \ q)) (- w (caddr q)))\n  (< (+ (car q) (cadr q)) (- w (cadddr q))))\n", "  (and\
    \ (list? q) (list? (reverse q)))\n  (< (sum (map car q)) w)\n  (< (sum (map cdr\
    \ q)) w))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (equal? (first q) (reverse (first q))) (<\
    \ (sum (rest q)) w))]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (and (equal? (first q) (reverse (first\
    \ q)))\n               (equal? (second q) (reverse (second q)))\n            \
    \   (< (+ (first q) (second q)) w))]))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [else (< (+ (first q) (first q)) w) will_it_fly\
    \ (drop q 1)]\n  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n     \
    \   [else true]))\n", "  (cond [(null? q) false]\n        [(equal? (car q) (cadr\
    \ q)) (< (car q) w)]\n        [else (will_it_fly (cdr q) (+ w car q))]))\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", " \
    \ (cond [(null? q) false]\n        [(> (length q) w) false]\n        [(equal?\
    \ (reverse q) q) true]\n        [else (will_it_fly (rest q) (+ w max (first q)))]))\n",
  "  (and (list? q)\n       (palindrome? q)\n       (< (length q) w)\n       (< (apply\
    \ + q) w)))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [else (< (+ (first q) (first q)) w) \n               (will_it_fly (rest\
    \ q) w)]\n        ))\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first q)))\
    \ true]\n        [else (< (+ (first q) (first q)) w) false]\n        ))\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (first q)) w) false]\n  )\n)\n", "  (and (list? q)\n       (palindrome? q)\n\
    \       (<= (sum-weight q) w)))\n", "  (and (list? q)\n       (palindromic? q)\n\
    \       (< (sum (reverse q)) w)))\n", "  (cond [(null? q) false]\n        [(equal?\
    \ (car q) (cadr q)) (< (car q) w)]\n        [else (< (car q) (+ (car q) (cadr\
    \ q)))]\n        [else (will_it_fly (cdr q) w)]\n        [else true]))\n", " \
    \ (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (and (equal? (first q) (first q)) (< (+ (first q) (second q)) w))]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(equal? (first q) (reverse (reverse (first q))))\n         (< (sum (rest\
    \ q)) w)]\n        [else false]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (+ (first q) (first q)) w)\
    \ false]\n  )\n)\n", "  (cond ((null? q) false)\n        ((palindrome q) \n  \
    \       (<= (sum (reverse q)) w))\n        (else (< (sum (reverse q)) w))))\n",
  "  (and (list? q)\n       (palindrome? q)\n       (< (length q) w)\n       (< (apply\
    \ + q) w)))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (and (equal? (first q) (reverse (first q)))\n \
    \              (< (sum (rest q)) w))]))\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (< (length q) w)\n       (< (apply + q) w)))\n", "  (cond ((null?\
    \ q) false)\n        ((palindrome q) \n         (<= (sum (reverse q)) w))\n  \
    \      (else \n         (< (sum (reverse q)) w))))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and\
    \ (equal? (first q) (reverse (first q))) (<= (+ (first q) (second q)) w))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

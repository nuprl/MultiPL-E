name: HumanEval_110_exchange
language: rkt
prompt: "#lang racket\n\n;; In this problem, you will implement a function that takes\
  \ two lists of numbers,\n;; and determines whether it is possible to perform an\
  \ exchange of elements\n;; between them to make lst1 a list of only even numbers.\n\
  ;; There is no limit on the number of exchanged elements between lst1 and lst2.\n\
  ;; If it is possible to exchange elements between the lst1 and lst2 to make\n;;\
  \ all the elements of lst1 to be even, return \"YES\".\n;; Otherwise, return \"\
  NO\".\n;; For example:\n;; It is assumed that the input lists will be non-empty.\n\
  (define (exchange lst1 lst2)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate exchange))\n\
  \    (check-equal? (candidate (list 1 2 3 4) (list 1 2 3 4)) \"YES\")\n    (check-equal?\
  \ (candidate (list 1 2 3 4) (list 1 5 3 4)) \"NO\")\n    (check-equal? (candidate\
  \ (list 1 2 3 4) (list 2 1 4 3)) \"YES\")\n    (check-equal? (candidate (list 5\
  \ 7 3) (list 2 6 4)) \"YES\")\n    (check-equal? (candidate (list 5 7 3) (list 2\
  \ 6 3)) \"NO\")\n    (check-equal? (candidate (list 3 2 6 1 8 9) (list 3 5 5 1 1\
  \ 1)) \"NO\")\n    (check-equal? (candidate (list 100 200) (list 200 200)) \"YES\"\
  )\n))\n\n(test-humaneval)"
completions: []
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

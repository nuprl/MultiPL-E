name: HumanEval_76_is_simple_power
language: rkt
prompt: "#lang racket\n\n;; Your task is to write a function that returns true if\
  \ a number x is a simple\n;; power of n and false in other cases.\n;; x is a simple\
  \ power of n if n**int=x\n;; For example:\n(define (is_simple_power x n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_simple_power))\n\
  \    (check-equal? (candidate 16 2) #t)\n    (check-equal? (candidate 143214 16)\
  \ #f)\n    (check-equal? (candidate 4 2) #t)\n    (check-equal? (candidate 9 3)\
  \ #t)\n    (check-equal? (candidate 16 4) #t)\n    (check-equal? (candidate 24 2)\
  \ #f)\n    (check-equal? (candidate 128 4) #f)\n    (check-equal? (candidate 12\
  \ 6) #f)\n    (check-equal? (candidate 1 1) #t)\n    (check-equal? (candidate 1\
  \ 12) #t)\n))\n\n(test-humaneval)"
completions: ["  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n\
    \        (else (is_simple_power (/ x n) n))))\n", "  (cond [(= n 1) (= x 1)]\n\
    \        [(= n 0) (= x 0)]\n        [(= n -1) (= x 0)]\n        [(= n 0) (= x\
    \ 0)]\n        [else (= x (* n (* n x)))]))\n", "  (cond ((= n 0) true)\n    \
    \    ((= n 1) true)\n        ((= (mod x n) 0) false)\n        (else (is_simple_power\
    \ x (sub1 n))))) ;; #lang racket\n", "  (cond [(= n 1) true]\n        [(= x 1)\
    \ true]\n        [(= x n) true]\n        [else false]))\n", "  (cond ((= n 0)\
    \ true)\n        ((= n 1) true)\n        ((= x 1) true)\n        ((= (mod x n)\
    \ 0) false)\n        (else (is_simple_power x (sub1 n)))))\n", "  (cond ((= n\
    \ 0) true)\n        ((= n 1) true)\n        ((= (mod x n) 0) false)\n        (else\
    \ (is_simple_power x (sub1 n)))))\n", "  (cond ((= n 0) (= x 1))\n        ((=\
    \ n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n    \
    \    (else false)))\n", "  (cond ((= n 0) #t)\n        ((= x 1) #t)\n        ((=\
    \ (* x x) n) #t)\n        (else #f)))\n", "  (cond\n    ((= n 1) (= x 1))\n  \
    \  ((= n 0) (= x 0))\n    ((= n -1) (= x 0))\n    ((= n 2) (= x 1))\n    ((= x\
    \ 0) (= x 1))\n    ((= x 1) (= x 1))\n    ((= x n) (= x n))\n    (else false)))\n",
  "  (cond\n    [(= n 1) (= x 1)]\n    [(= n 0) (= x 0)]\n    [else (= (* n x) x)]))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else false)))\n", "  (cond [(= n 1) true]\n        [(= x 1) true]\n      \
    \  [(= x n) true]\n        [else false]))\n", "  (cond [(= n 1) true]\n      \
    \  [(= x 1) true]\n        [(= x n) true]\n        [else false]))\n", "  (cond\
    \ ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n        (else\
    \ false)))\n", "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x\
    \ n) true)\n        (else false)))\n", "  (cond ((= n 0) true)\n        ((= x\
    \ 1) true)\n        ((= (* x x) n) true)\n        (else false)))\n", "  (cond\
    \ ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n \
    \       ((= n -2) (= x 1))\n        ((= n -3) (= x 1))\n        ((= n -4) (= x\
    \ 1))\n        ((= n -5) (= x 1))\n        ((= n -6) (= x 1))\n        ((= n -7)\
    \ (= x 1))\n        ((= n -8) (= x 1))\n        ((= n -9) (= x 1))\n        ((=\
    \ n -10) (= x 1))\n        ((= n -11) (= x 1))\n        ((= n -12) (= x 1))\n\
    \        ((= n -13) (= x 1))\n        ((= n -14) (= x 1))\n        ((= n -15)\
    \ (= x 1))\n        ((= n -16) (= x 1))\n        ((= n -17) (= x 1))\n       \
    \ ((= n -18) (= x 1))\n        ((= n -19) (= x 1))\n        ((= n -20) (= x 1))\n\
    \        ((= n -21) (= x 1))\n        ((= n -22) (= x 1))\n        ((= n -23)\
    \ (= x 1))\n        ((= n -24) (= x 1))\n        ((= n -25) (= x 1))\n       \
    \ ((= n -26) (= x 1))\n        ((= n -27) (= x 1))\n        ((= n -28) (= x 1))\n\
    \        ((= n -29) (= x 1))\n        ((= n -30) (= x 1))\n        ((= n -31)\
    \ (= x 1))\n        ((= n -32) (= x 1))\n        ((= n -33) (= x 1))\n       \
    \ ((= n -34) (= x 1))\n        ((= n -35) (= x 1))\n        ((= n -36) (= x 1))\n\
    \        ((= n -37) (= x 1))\n        ((= n -38) (= x 1))\n        ((= n -39)\
    \ (= x 1))\n        ((= n -40) (= x 1))\n        ((= n -41) (= x 1))\n       \
    \ ((= n -42) (= x 1))\n        ((= n -43) (= x 1))\n        ((= n -44) (= x 1))\n\
    \        ((= n -45) (= x 1))\n        ((= n -46) (= x 1))\n        ((= n -", " \
    \ (cond ((= n 0) true)\n        ((= n 1) true)\n        ((= (mod x n) 0) false)\n\
    \        (else (is_simple_power x (sub1 n))))) ;; #lang racket\n", "  (= (* x\
    \ n) x))\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n        ((=\
    \ n 2) (= x (* x x)))\n        (else (is_simple_power x (- n 1)))))\n", "  (cond\
    \ ((= n 1) (= x 1))\n        ((= x 0) false)\n        (else (is_simple_power (/\
    \ x n) (- n 1)))))\n", "  (= (* n (expt x n)) x))\n", "  (cond ((= n 0) (= x 1))\n\
    \        ((= n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power x (- n 1)))\n\
    \        (else false)))\n", "  (cond [(= n 1) true]\n        [(= x 0) false]\n\
    \        [(= x 1) true]\n        [else (is_simple_power (/ x n) n)]))\n", "  (cond\
    \ ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n        ((= (mod x n) 0) (= x\
    \ x))\n        (else (is_simple_power x (sub1 n))))) ;; #lang racket\n", "  (cond\
    \ ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n \
    \       ((= x 0) (= n 0))\n        ((= x 1) (= n 1)))\n  (not (= (* x n) x)))\n",
  "  (cond\n    [(= n 1) (= x 1)]\n    [else (= x (* n (is_simple_power x (sub1 n))))]))\n",
  "  (cond\n    [(= n 1) true]\n    [(= x 1) true]\n    [else (= (* x n) (* n (expt\
    \ x n))) true]))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n \
    \       ((= n -1) (= x 0))\n        ((= n -2) (= x 1))\n        ((= n -3) (= x\
    \ 1))\n        ((= n -4) (= x 1))\n        ((= n -5) (= x 1))\n        ((= n -6)\
    \ (= x 1))\n        ((= n -7) (= x 1))\n        ((= n -8) (= x 1))\n        ((=\
    \ n -9) (= x 1))\n        ((= n -10) (= x 1))\n        ((= n -11) (= x 1))\n \
    \       ((= n -12) (= x 1))\n        ((= n -13) (= x 1))\n        ((= n -14) (=\
    \ x 1))\n        ((= n -15) (= x 1))\n        ((= n -16) (= x 1))\n        ((=\
    \ n -17) (= x 1))\n        ((= n -18) (= x 1))\n        ((= n -19) (= x 1))\n\
    \        ((= n -20) (= x 1))\n        ((= n -21) (= x 1))\n        ((= n -22)\
    \ (= x 1))\n        ((= n -23) (= x 1))\n        ((= n -24) (= x 1))\n       \
    \ ((= n -25) (= x 1))\n        ((= n -26) (= x 1))\n        ((= n -27) (= x 1))\n\
    \        ((= n -28) (= x 1))\n        ((= n -29) (= x 1))\n        ((= n -30)\
    \ (= x 1))\n        ((= n -31) (= x 1))\n        ((= n -32) (= x 1))\n       \
    \ ((= n -33) (= x 1))\n        ((= n -34) (= x 1))\n        ((= n -35) (= x 1))\n\
    \        ((= n -36) (= x 1))\n        ((= n -37) (= x 1))\n        ((= n -38)\
    \ (= x 1))\n        ((= n -39) (= x 1))\n        ((= n -40) (= x 1))\n       \
    \ ((= n -41) (= x 1))\n        ((= n -42) (= x 1))\n        ((= n -43) (= x 1))\n\
    \        ((= n -44) (= x 1))\n        ((= n -45) (= x 1))\n        ((= n -46)\
    \ (= x 1))\n        ((= n -", "  (cond ((= n 1) (= x 1))\n        ((= n 2) (=\
    \ x x))\n        ((= n 3) (= x (* x x)))\n        ((= n 4) (= x (* x (* x x))))\n\
    \        ((= n 5) (= x (* x (* x (* x x))))\n        ((= n 6) (= x (* x (* x (*\
    \ x (* x x))))))\n        ((= n 7) (= x (* x (* x (* x (* x (* x x)))))) ; ...\n\
    \        (else false)))\n", "  (cond\n    [(= n 1) true]\n    [else (= (* x x)\
    \ n) true]\n  )\n)\n", "  (cond ((= n 0) #t)\n        ((= x 1) #t)\n        ((=\
    \ x n) #f)\n        (else (is_simple_power (/ x n) n))))\n", "  (cond ((= n 0)\
    \ (= x 1))\n        ((= x 0) #f) ; x is 0\n        ((= x 1) #f) ; x is 1\n   \
    \     ((= x n) (is_simple_power x (- n 1))) ; x is a power of n\n        (else\
    \ #f) ; x is not a power of n\n        ))\n", "  (cond ((= n 0) (= x 1))\n   \
    \     ((= n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n\
    \        (else false)))\n", "  (cond [(= n 1) (= x 1)]\n        [(= (mod x n)\
    \ 0) false]\n        [else (is_simple_power x (sub1 n))]\n        ))\n", "  (cond\
    \ [(= n 1) true]\n        [(= n 2) true]\n        [(= x 1) true]\n        [(=\
    \ x n) true]\n        [else false]))\n", "  (cond ((= n 1) (= x 1))\n        ((=\
    \ n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= n -2) (= x 1))\n    \
    \    ((= n -3) (= x 1))\n        ((= n -4) (= x 1))\n        ((= n -5) (= x 1))\n\
    \        ((= n -6) (= x 1))\n        ((= n -7) (= x 1))\n        ((= n -8) (=\
    \ x 1))\n        ((= n -9) (= x 1))\n        ((= n -10) (= x 1))\n        ((=\
    \ n -11) (= x 1))\n        ((= n -12) (= x 1))\n        ((= n -13) (= x 1))\n\
    \        ((= n -14) (= x 1))\n        ((= n -15) (= x 1))\n        ((= n -16)\
    \ (= x 1))\n        ((= n -17) (= x 1))\n        ((= n -18) (= x 1))\n       \
    \ ((= n -19) (= x 1))\n        ((= n -20) (= x 1))\n        ((= n -21) (= x 1))\n\
    \        ((= n -22) (= x 1))\n        ((= n -23) (= x 1))\n        ((= n -24)\
    \ (= x 1))\n        ((= n -25) (= x 1))\n        ((= n -26) (= x 1))\n       \
    \ ((= n -27) (= x 1))\n        ((= n -28) (= x 1))\n        ((= n -29) (= x 1))\n\
    \        ((= n -30) (= x 1))\n        ((= n -31) (= x 1))\n        ((= n -32)\
    \ (= x 1))\n        ((= n -33) (= x 1))\n        ((= n -34) (= x 1))\n       \
    \ ((= n -35) (= x 1))\n        ((= n -36) (= x 1))\n        ((= n -37) (= x 1))\n\
    \        ((= n -38) (= x 1))\n        ((= n -39) (= x 1))\n        ((= n -40)\
    \ (= x 1))\n        ((= n -41) (= x 1))\n        ((= n -42) (= x 1))\n       \
    \ ((= n -43) (= x 1))\n        ((= n -44) (= x 1))\n        ((= n -45) (= x 1))\n\
    \        ((= n -46) (= x 1))\n        ((= n -", "  (cond ((= n 1) (= x 1))\n \
    \       ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= x 1) (= (*\
    \ n n) x))\n        ((= x 0) (= (* n n) 0))\n        (else (is_simple_power x\
    \ (- n 1)))))\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n    \
    \    ((= n 2) (= x (* x x)))\n        ((= n 3) (= x (* x (* x x))))\n        ((=\
    \ n 4) (= x (* x (* x (* x x))))\n        ((= n 5) (= x (* x (* x (* x (* x x))))))\n\
    \        ((= n 6) (= x (* x (* x (* x (* x (* x x))))))\n        ((= n 7) (= x\
    \ (* x (* x (* x (* x (* x (* x x)))))))))\n", "  (cond ((= n 1) (= x 1))\n  \
    \      ((= n 0) (= x 0))\n        (else (= (* x n) (* n (expt x n)))))) ; n**int=x\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much! I understand it now. I'm\
    \ still a beginner at Racket so I appreciate your help.\n<|/ c |>\n<| c |>\nYou're\
    \ welcome. Don't forget to accept the answer if it solved your problem.\n<|/ c\
    \ |>\n<| c |>\nI did but it said I had to wait 5 minutes. I guess I'll have to\
    \ wait longer.\n<|/ c |>\n<| c |>\nYeah, I guess it took longer than 5 minutes.\
    \ Glad I could help.\n<|/ c |>\n<| a tags=racket,scheme |>\n<code>", "  (cond\
    \ ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n \
    \       ((= x 0) (= n 0))\n        ((= x 1) (= n 1)))\n  (not (= (* x n) x)))\n",
  "  (= (* n n) x))\n", "  (cond ((= n 0) true)\n        ((= n 1) true)\n        ((=\
    \ x 1) true)\n        ((= (* n n) x) true)\n        (else false)))\n", "  (cond\
    \ [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(= n 1) (= x 0)]\n  \
    \      [(= x 0) (= x 0)]\n        [else (= x (* n (* n x)))]))\n", "  (cond\n\
    \    [(= n 1) true]\n    [(= x 1) true]\n    [else (= (* n (expt x n)) x)]))\n",
  "  (cond ((= n 0) true)\n        ((= n 1) true)\n        ((= (mod x n) 0) false)\n\
    \        (else (is_simple_power x (sub1 n)))))\n", "  (cond ((= n 1) (= x 1))\n\
    \        ((= n 2) (= x x))\n        ((= n 3) (= x (* x x)))\n        (else (is_simple_power\
    \ x (- n 1)))))\n", "  (cond [(= n 1) true]\n        [(= x 1) true]\n        [(=\
    \ x n) true]\n        [else false]))\n", "  (cond ((= n 1) (= x 1))\n        ((=\
    \ n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= n -2) (= x 1))\n    \
    \    ((= n -3) (= x 1))\n        ((= n -4) (= x 1))\n        ((= n -5) (= x 1))\n\
    \        ((= n -6) (= x 1))\n        ((= n -7) (= x 1))\n        ((= n -8) (=\
    \ x 1))\n        ((= n -9) (= x 1))\n        ((= n -10) (= x 1))\n        ((=\
    \ n -11) (= x 1))\n        ((= n -12) (= x 1))\n        ((= n -13) (= x 1))\n\
    \        ((= n -14) (= x 1))\n        ((= n -15) (= x 1))\n        ((= n -16)\
    \ (= x 1))\n        ((= n -17) (= x 1))\n        ((= n -18) (= x 1))\n       \
    \ ((= n -19) (= x 1))\n        ((= n -20) (= x 1))\n        ((= n -21) (= x 1))\n\
    \        ((= n -22) (= x 1))\n        ((= n -23) (= x 1))\n        ((= n -24)\
    \ (= x 1))\n        ((= n -25) (= x 1))\n        ((= n -26) (= x 1))\n       \
    \ ((= n -27) (= x 1))\n        ((= n -28) (= x 1))\n        ((= n -29) (= x 1))\n\
    \        ((= n -30) (= x 1))\n        ((= n -31) (= x 1))\n        ((= n -32)\
    \ (= x 1))\n        ((= n -33) (= x 1))\n        ((= n -34) (= x 1))\n       \
    \ ((= n -35) (= x 1))\n        ((= n -36) (= x 1))\n        ((= n -37) (= x 1))\n\
    \        ((= n -38) (= x 1))\n        ((= n -39) (= x 1))\n        ((= n -40)\
    \ (= x 1))\n        ((= n -41) (= x 1))\n        ((= n -42) (= x 1))\n       \
    \ ((= n -43) (= x 1))\n        ((= n -44) (= x 1))\n        ((= n -45) (= x 1))\n\
    \        ((= n -46) (= x 1))\n        ((= n -", "  (cond [(= n 1) (= x 1)]\n \
    \       [(= n 0) (= x 0)]\n        [(= n 1) (= x 0)]\n        [(= x 0) (= x 1)]))\n",
  "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        ((= n -2) (= x 1))\n        ((= n -3) (= x 1))\n        ((= n -4) (=\
    \ x 1))\n        ((= n -5) (= x 1))\n        ((= n -6) (= x 1))\n        ((= n\
    \ -7) (= x 1))\n        ((= n -8) (= x 1))\n        ((= n -9) (= x 1))\n     \
    \   ((= n -10) (= x 1))\n        ((= n -11) (= x 1))\n        ((= n -12) (= x\
    \ 1))\n        ((= n -13) (= x 1))\n        ((= n -14) (= x 1))\n        ((= n\
    \ -15) (= x 1))\n        ((= n -16) (= x 1))\n        ((= n -17) (= x 1))\n  \
    \      ((= n -18) (= x 1))\n        ((= n -19) (= x 1))\n        ((= n -20) (=\
    \ x 1))\n        ((= n -21) (= x 1))\n        ((= n -22) (= x 1))\n        ((=\
    \ n -23) (= x 1))\n        ((= n -24) (= x 1))\n        ((= n -25) (= x 1))\n\
    \        ((= n -26) (= x 1))\n        ((= n -27) (= x 1))\n        ((= n -28)\
    \ (= x 1))\n        ((= n -29) (= x 1))\n        ((= n -30) (= x 1))\n       \
    \ ((= n -31) (= x 1))\n        ((= n -32) (= x 1))\n        ((= n -33) (= x 1))\n\
    \        ((= n -34) (= x 1))\n        ((= n -35) (= x 1))\n        ((= n -36)\
    \ (= x 1))\n        ((= n -37) (= x 1))\n        ((= n -38) (= x 1))\n       \
    \ ((= n -39) (= x 1))\n        ((= n -40) (= x 1))\n        ((= n -41) (= x 1))\n\
    \        ((= n -42) (= x 1))\n        ((= n -43) (= x 1))\n        ((= n -44)\
    \ (= x 1))\n        ((= n -45) (= x 1))\n        ((= n -46) (= x 1))\n       \
    \ ((= n -", "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n)\
    \ true)\n        (else false)))\n", "  (cond ((= n 0) true)\n        ((= x 1)\
    \ true)\n        ((= x n) true)\n        (else false)))\n", "  (cond ((= n 0)\
    \ true)\n        ((= n 1) true)\n        ((= (mod x n) 0) true)\n        (else\
    \ false)))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n       \
    \ (else (= (* x n) (* n (* x n)))\n               (is_simple_power x (- n 1)))))\n",
  "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        ((= n -2) (= x 1))\n        ((= n -3) (= x 1))\n        ((= n -4) (=\
    \ x 1))\n        ((= n -5) (= x 1))\n        ((= n -6) (= x 1))\n        ((= n\
    \ -7) (= x 1))\n        ((= n -8) (= x 1))\n        ((= n -9) (= x 1))\n     \
    \   ((= n -10) (= x 1))\n        ((= n -11) (= x 1))\n        ((= n -12) (= x\
    \ 1))\n        ((= n -13) (= x 1))\n        ((= n -14) (= x 1))\n        ((= n\
    \ -15) (= x 1))\n        ((= n -16) (= x 1))\n        ((= n -17) (= x 1))\n  \
    \      ((= n -18) (= x 1))\n        ((= n -19) (= x 1))\n        ((= n -20) (=\
    \ x 1))\n        ((= n -21) (= x 1))\n        ((= n -22) (= x 1))\n        ((=\
    \ n -23) (= x 1))\n        ((= n -24) (= x 1))\n        ((= n -25) (= x 1))\n\
    \        ((= n -26) (= x 1))\n        ((= n -27) (= x 1))\n        ((= n -28)\
    \ (= x 1))\n        ((= n -29) (= x 1))\n        ((= n -30) (= x 1))\n       \
    \ ((= n -31) (= x 1))\n        ((= n -32) (= x 1))\n        ((= n -33) (= x 1))\n\
    \        ((= n -34) (= x 1))\n        ((= n -35) (= x 1))\n        ((= n -36)\
    \ (= x 1))\n        ((= n -37) (= x 1))\n        ((= n -38) (= x 1))\n       \
    \ ((= n -39) (= x 1))\n        ((= n -40) (= x 1))\n        ((= n -41) (= x 1))\n\
    \        ((= n -42) (= x 1))\n        ((= n -43) (= x 1))\n        ((= n -44)\
    \ (= x 1))\n        ((= n -45) (= x 1))\n        ((= n -46) (= x 1))\n       \
    \ ((= n -", "  (cond ((= n 1) (= x 1))\n        ((= x 0) false)\n        ((= (mod\
    \ x n) 0) false)\n        (else (is_simple_power x (sub1 n))))) ; recurse\n",
  "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        (else (= x (* n (expt n x)))))) ; n**int=x\n", "  (cond ((= n 1) (= x\
    \ 1))\n        ((= n 0) (= x 0))\n        ((= x 0) (= n 0))\n        ((= x 1)\
    \ (= n 1))\n        (else (= (* n (expt x n)) x))))\n", "  (cond ((= n 0) #t)\n\
    \        ((= x 0) #f)\n        ((= x 1) #t)\n        ((= (mod x n) 0) #t)\n  \
    \      (else (is_simple_power (/ x n) n))))\n", "  (cond ((= n 0) (= x 1))\n \
    \       ((= n 1) (= x x))\n        ((= n 2) (= x (* x x)))\n        ((= n 3) (=\
    \ x (* x (* x x))))\n        ((= n 4) (= x (* x (* x (* x x))))\n        ((= n\
    \ 5) (= x (* x (* x (* x (* x x))))))\n        ((= n 6) (= x (* x (* x (* x (*\
    \ x (* x x))))))\n        ((= n 7) (= x (* x (* x (* x (* x (* x (* x x)))))))))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else false)))\n", "  (cond ((= n 0) true)\n        ((= n 1) true)\n      \
    \  ((= (mod x n) 0) false)\n        (else (is_simple_power x (sub1 n)))))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else false)))\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n\
    \        ((= n 2) (= x (* x x)))\n        ((= n 3) (= x (* x (* x x))))\n    \
    \    ((= n 4) (= x (* x (* x (* x x))))\n        ((= n 5) (= x (* x (* x (* x\
    \ (* x x)))))))\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n  \
    \      ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n        (else false)))\n",
  "  (cond ((= n 0) (= x 1))\n        ((= x n) (= x 1))\n        (else (= (* x n)\
    \ x))))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        (else\
    \ (= (* n x) x))))\n", "  (cond ((= n 0) true)\n        ((= n 1) true)\n     \
    \   ((= (mod x n) 0) false)\n        (else (is_simple_power x (sub1 n))))) ; recurse\n",
  "  (cond\n    [(= n 1) true]\n    [(= x 1) true]\n    [else (= (* n (expt x n))\
    \ x)]))\n", "  (cond ((= n 0) true)\n        ((= n 1) true)\n        ((= (mod\
    \ x n) 0) false)\n        (else (is_simple_power x (sub1 n)))))\n", "  (cond ((=\
    \ n 0) #t)\n        ((= x 1) #t)\n        ((= x n) #f)\n        (else (is_simple_power\
    \ (/ x n) (- n 1)))))\n", "  (= (* x n) x))\n", "  (cond ((= n 1) (= x 1))\n \
    \       ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= n -2) (= x\
    \ 1))\n        ((= n -3) (= x 1))\n        ((= n -4) (= x 1))\n        ((= n -5)\
    \ (= x 1))\n        ((= n -6) (= x 1))\n        ((= n -7) (= x 1))\n        ((=\
    \ n -8) (= x 1))\n        ((= n -9) (= x 1))\n        ((= n -10) (= x 1))\n  \
    \      ((= n -11) (= x 1))\n        ((= n -12) (= x 1))\n        ((= n -13) (=\
    \ x 1))\n        ((= n -14) (= x 1))\n        ((= n -15) (= x 1))\n        ((=\
    \ n -16) (= x 1))\n        ((= n -17) (= x 1))\n        ((= n -18) (= x 1))\n\
    \        ((= n -19) (= x 1))\n        ((= n -20) (= x 1))\n        ((= n -21)\
    \ (= x 1))\n        ((= n -22) (= x 1))\n        ((= n -23) (= x 1))\n       \
    \ ((= n -24) (= x 1))\n        ((= n -25) (= x 1))\n        ((= n -26) (= x 1))\n\
    \        ((= n -27) (= x 1))\n        ((= n -28) (= x 1))\n        ((= n -29)\
    \ (= x 1))\n        ((= n -30) (= x 1))\n        ((= n -31) (= x 1))\n       \
    \ ((= n -32) (= x 1))\n        ((= n -33) (= x 1))\n        ((= n -34) (= x 1))\n\
    \        ((= n -35) (= x 1))\n        ((= n -36) (= x 1))\n        ((= n -37)\
    \ (= x 1))\n        ((= n -38) (= x 1))\n        ((= n -39) (= x 1))\n       \
    \ ((= n -40) (= x 1))\n        ((= n -41) (= x 1))\n        ((= n -42) (= x 1))\n\
    \        ((= n -43) (= x 1))\n        ((= n -44) (= x 1))\n        ((= n -45)\
    \ (= x 1))\n        ((= n -46) (= x 1))\n        ((= n -", "  (cond ((= n 1) (=\
    \ x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= n\
    \ -2) (= x 1))\n        ((= n -3) (= x 1))\n        ((= n -4) (= x 1))\n     \
    \   ((= n -5) (= x 1))\n        ((= n -6) (= x 1))\n        ((= n -7) (= x 1))\n\
    \        ((= n -8) (= x 1))\n        ((= n -9) (= x 1))\n        ((= n -10) (=\
    \ x 1))\n        ((= n -11) (= x 1))\n        ((= n -12) (= x 1))\n        ((=\
    \ n -13) (= x 1))\n        ((= n -14) (= x 1))\n        ((= n -15) (= x 1))\n\
    \        ((= n -16) (= x 1))\n        ((= n -17) (= x 1))\n        ((= n -18)\
    \ (= x 1))\n        ((= n -19) (= x 1))\n        ((= n -20) (= x 1))\n       \
    \ ((= n -21) (= x 1))\n        ((= n -22) (= x 1))\n        ((= n -23) (= x 1))\n\
    \        ((= n -24) (= x 1))\n        ((= n -25) (= x 1))\n        ((= n -26)\
    \ (= x 1))\n        ((= n -27) (= x 1))\n        ((= n -28) (= x 1))\n       \
    \ ((= n -29) (= x 1))\n        ((= n -30) (= x 1))\n        ((= n -31) (= x 1))\n\
    \        ((= n -32) (= x 1))\n        ((= n -33) (= x 1))\n        ((= n -34)\
    \ (= x 1))\n        ((= n -35) (= x 1))\n        ((= n -36) (= x 1))\n       \
    \ ((= n -37) (= x 1))\n        ((= n -38) (= x 1))\n        ((= n -39) (= x 1))\n\
    \        ((= n -40) (= x 1))\n        ((= n -41) (= x 1))\n        ((= n -42)\
    \ (= x 1))\n        ((= n -43) (= x 1))\n        ((= n -44) (= x 1))\n       \
    \ ((= n -45) (= x 1))\n        ((= n -46) (= x 1))\n        ((= n -", "  (= (*\
    \ x n) x))\n", "  (= (* x n) x))\n", "  (cond ((= n 0) (= x 1))\n        ((= n\
    \ 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n      \
    \  (else false)))\n", "  (= (* x n) (* n (* x n))))\n", "  (cond [(= n 1) (= x\
    \ 1)]\n        [(= n 2) (= x x)]\n        [(= n 3) (= x (* x x))]\n        [else\
    \ false]))\n", "  (= (* x n) x))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n\
    \ 0) (= x 0)]\n        [(= n 1) (= x 0)]\n        [else (= x (* n (* n x)))]))\n",
  "  (cond ((= n 0) #f)\n        ((= x 1) #t)\n        (else (= (* x n) (* n (* x\
    \ n))) #t)))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n 2) (= x x)]\n     \
    \   [(= n 3) (= x (* x x))]\n        [else (= x (* n (* n x)))]))\n", "  (cond\n\
    \    ((= n 1) (= x 1))\n    ((= n 0) (= x 0))\n    ((= n -1) (= x 0))\n    ((=\
    \ n 2) (= x 1))\n    ((= n 3) (= x 1))\n    ((= n 4) (= x 1))\n    ((= n 5) (=\
    \ x 1))\n    ((= n 6) (= x 1))\n    ((= n 7) (= x 1))\n    ((= n 8) (= x 1))\n\
    \    ((= n 9) (= x 1))\n    ((= n 10) (= x 1))\n    ((= n 11) (= x 1))\n    ((=\
    \ n 12) (= x 1))\n    ((= n 13) (= x 1))\n    ((= n 14) (= x 1))\n    ((= n 15)\
    \ (= x 1))\n    ((= n 16) (= x 1))\n    ((= n 17) (= x 1))\n    ((= n 18) (= x\
    \ 1))\n    ((= n 19) (= x 1))\n    ((= n 20) (= x 1))\n    ((= n 21) (= x 1))\n\
    \    ((= n 22) (= x 1))\n    ((= n 23) (= x 1))\n    ((= n 24) (= x 1))\n    ((=\
    \ n 25) (= x 1))\n    ((= n 26) (= x 1))\n    ((= n 27) (= x 1))\n    ((= n 28)\
    \ (= x 1))\n    ((= n 29) (= x 1))\n    ((= n 30) (= x 1))\n    ((= n 31) (= x\
    \ 1))\n    ((= n 32) (= x 1))\n    ((= n 33) (= x 1))\n    ((= n 34) (= x 1))\n\
    \    ((= n 35) (= x 1))\n    ((= n 36) (= x 1))\n    ((= n 37) (= x 1))\n    ((=\
    \ n 38) (= x 1))\n    ((= n 39) (= x 1))\n    ((= n 40) (= x 1))\n    ((= n 41)\
    \ (= x 1))\n    ((= n 42) (= x 1))\n    ((= n 43) (= x 1))\n    ((= n 44) (= x\
    \ 1))\n    ((= n 45) (= x 1))\n    ((= n 46) (= x 1))\n    ((= n 47) (= x 1))\n\
    \    ((= n 48) (= x 1))\n    ((= n 49) (= x 1))\n    ((= n 50) (= x 1))\n    ((=\
    \ n 51) (= x 1))\n    ((= n 52) (= x 1))\n    ((= n 53) (= x 1))\n    ((= n 54)\
    \ (= x 1))\n    ((= ", "  (cond\n    [(= n 1) true]\n    [(= n 2) (= x 1)]\n \
    \   [else (= (* x n) (* x n))]))\n", "  (cond ((= n 1) (= x 1))\n        ((= n\
    \ 0) (= x 0))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n      \
    \  (else (is_simple_power x (sub1 n)))))\n", "  (cond [(= n 1) (= x 1)]\n    \
    \    [(= n 0) (= x 0)]\n        [(= n 1) (= x 0)]\n        [else (= (* x n) (*\
    \ n (expt x n)))]))\n", "  (cond ((= n 0) true)\n        ((= x 1) true)\n    \
    \    ((= x n) true)\n        (else false)))\n", "  (cond ((= n 0) (= x 1))\n \
    \       ((= n 1) (= x x))\n        ((= n 2) (= x (* x x)))\n        ((= n 3) (=\
    \ x (* x (* x x))))\n        ((= n 4) (= x (* x (* x (* x x))))\n        ((= n\
    \ 5) (= x (* x (* x (* x (* x x))))))\n        ((= n 6) (= x (* x (* x (* x (*\
    \ x (* x x))))))\n        ((= n 7) (= x (* x (* x (* x (* x (* x (* x x))))))\
    \ ; ...\n        ((= n 8) (= x (* x (* x (* x (* x (* x (* x (* x x)))))) ; ...\n\
    \        ((= n 9) (= x (* x (* x (* x (* x (* x (* x (* x x)))))) ; ...\n    \
    \    (else false)))\n)\n</code>\n<|/ a |>\n<| c |>\nThanks for the answer! I didn't\
    \ know about `cond` - I thought it would be a good idea to learn about it but\
    \ didn't know where to look. I'll definitely look into it.\n<|/ c |>\n<| c |>\n\
    `cond` is very useful, especially for situations like this. I recommend you read\
    \ [this answer](https://stackoverflow.com/a/477077/849891) to learn more about\
    \ it.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  (cond ((= n 0) true)\n        ((=\
    \ x 1) true)\n        ((= x n) true)\n        (else false)))\n", "  (cond ((=\
    \ n 0) (= x 1))\n        ((= n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power\
    \ x (sub1 n)))\n        (else false)))\n", "  (cond ((= n 0) (= x 1))\n      \
    \  ((= n 1) (= x x))\n        ((= n 2) (= x (* x x)))\n        ((= n 3) (= x (*\
    \ x (* x x))))\n        ((= n 4) (= x (* x (* x (* x x))))\n        ((= n 5) (=\
    \ x (* x (* x (* x (* x x)))))))\n", "  (cond ((= n 0) true)\n        ((= n 1)\
    \ true)\n        ((= x 1) true)\n        ((= x n) true)\n        (else false)))\n",
  "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        ((= x 1) (= (* n n) x))\n        ((= x 0) (= (* n n) 0))\n        (else\
    \ (is_simple_power x (- n 1)))))\n", "  (= (* x n) x))\n", "  (cond ((= n 1) (=\
    \ x 1))\n        ((= n 2) (= x x))\n        ((= n 3) (= x (* x x)))\n        ((=\
    \ n 4) (= x (* x (* x x))))\n        ((= n 5) (= x (* x (* x (* x x))))\n    \
    \    ((= n 6) (= x (* x (* x (* x (* x x))))))\n        ((= n 7) (= x (* x (*\
    \ x (* x (* x (* x x))))))\n        ((= n 8) (= x (* x (* x (* x (* x (* x x))))))\n\
    \        ((= n 9) (= x (* x (* x (* x (* x (* x (* x x)))))))))\n", "  (cond [(=\
    \ n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(= n -1) (= x 0)]\n     \
    \   [(= n 0) (= x 0)]\n        [(= n 1) (= x 1)]\n        [else (= x (* n (expt\
    \ n int)))]))\n", "  (= (* x n) (* n (* x n))))\n", "  (cond ((= n 0) (= x 1))\n\
    \        ((= n 1) (= x x))\n        ((= n 2) (= x (* x x)))\n        (else (is_simple_power\
    \ (* x x) (sub1 n)))))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n\
    \        [(= n -1) (= x 0)]\n        [(= n -2) (= x 0)]\n        [(= n -3) (=\
    \ x 0)]\n        [(= n -4) (= x 0)]\n        [(= n -5) (= x 0)]\n        [(= n\
    \ -6) (= x 0)]\n        [(= n -7) (= x 0)]\n        [(= n -8) (= x 0)]\n     \
    \   [(= n -9) (= x 0)]\n        [(= n -10) (= x 0)]\n        [(= n -11) (= x 0)]\n\
    \        [(= n -12) (= x 0)]\n        [(= n -13) (= x 0)]\n        [(= n -14)\
    \ (= x 0)]\n        [(= n -15) (= x 0)]\n        [(= n -16) (= x 0)]\n       \
    \ [(= n -17) (= x 0)]\n        [(= n -18) (= x 0)]\n        [(= n -19) (= x 0)]\n\
    \        [(= n -20) (= x 0)]\n        [(= n -21) (= x 0)]\n        [(= n -22)\
    \ (= x 0)]\n        [(= n -23) (= x 0)]\n        [(= n -24) (= x 0)]\n       \
    \ [(= n -25) (= x 0)]\n        [(= n -26) (= x 0)]\n        [(= n -27) (= x 0)]\n\
    \        [(= n -28) (= x 0)]\n        [(= n -29) (= x 0)]\n        [(= n -30)\
    \ (= x 0)]\n        [(= n -31) (= x 0)]\n        [(= n -32) (= x 0)]\n       \
    \ [(= n -33) (= x 0)]\n        [(= n -34) (= x 0)]\n        [(= n -35) (= x 0)]\n\
    \        [(= n -36) (= x 0)]\n        [(= n -37) (= x 0)]\n        [(= n -38)\
    \ (= x 0)]\n        [(= n -39) (= x 0)]\n        [(= n -40) (= x 0)]\n       \
    \ [(= n -41) (= x 0)]\n        [(= n -42) (= x 0)]\n        [(= n -43", "  (cond\
    \ [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(= n -1) (= x 0)]\n \
    \       [else (= (* n n) (* x x))]))\n", "  (cond [(= n 1) true]\n        [(=\
    \ x 1) true]\n        [else (= (* n (expt x n)) x)]))\n", "  (cond\n    [(= n\
    \ 1) true]\n    [(= n 2) true]\n    [else (= (* x x) x)]))\n", "  (cond [(= n\
    \ 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(= n -1) (= x 0)]\n       \
    \ [(= n -2) (= x 0)]\n        [(= n -3) (= x 0)]\n        [(= n -4) (= x 0)]\n\
    \        [(= n -5) (= x 0)]\n        [(= n -6) (= x 0)]\n        [(= n -7) (=\
    \ x 0)]\n        [(= n -8) (= x 0)]\n        [(= n -9) (= x 0)]\n        [(= n\
    \ -10) (= x 0)]\n        [(= n -11) (= x 0)]\n        [(= n -12) (= x 0)]\n  \
    \      [(= n -13) (= x 0)]\n        [(= n -14) (= x 0)]\n        [(= n -15) (=\
    \ x 0)]\n        [(= n -16) (= x 0)]\n        [(= n -17) (= x 0)]\n        [(=\
    \ n -18) (= x 0)]\n        [(= n -19) (= x 0)]\n        [(= n -20) (= x 0)]\n\
    \        [(= n -21) (= x 0)]\n        [(= n -22) (= x 0)]\n        [(= n -23)\
    \ (= x 0)]\n        [(= n -24) (= x 0)]\n        [(= n -25) (= x 0)]\n       \
    \ [(= n -26) (= x 0)]\n        [(= n -27) (= x 0)]\n        [(= n -28) (= x 0)]\n\
    \        [(= n -29) (= x 0)]\n        [(= n -30) (= x 0)]\n        [(= n -31)\
    \ (= x 0)]\n        [(= n -32) (= x 0)]\n        [(= n -33) (= x 0)]\n       \
    \ [(= n -34) (= x 0)]\n        [(= n -35) (= x 0)]\n        [(= n -36) (= x 0)]\n\
    \        [(= n -37) (= x 0)]\n        [(= n -38) (= x 0)]\n        [(= n -39)\
    \ (= x 0)]\n        [(= n -40) (= x 0)]\n        [(= n -41) (= x 0)]\n       \
    \ [(= n -42) (= x 0)]\n        [(= n -43", "  (cond ((= n 0) true)\n        ((=\
    \ x 1) true)\n        ((= (mod x n) 0) false)\n        (else (is_simple_power\
    \ (/ x n) n))))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 2) (= x x))\n  \
    \      ((= n 3) (= x (* x x)))\n        ((= n 4) (= x (* x (* x x))))\n      \
    \  ((= n 5) (= x (* x (* x (* x x))))\n        ((= n 6) (= x (* x (* x (* x (*\
    \ x x))))))\n        ((= n 7) (= x (* x (* x (* x (* x (* x x))))))\n        ((=\
    \ n 8) (= x (* x (* x (* x (* x (* x x))))))\n        ((= n 9) (= x (* x (* x\
    \ (* x (* x (* x (* x x)))))))))\n", "  (cond ((= n 0) true)\n        ((= x 1)\
    \ true)\n        ((= x n) true)\n        (else (is_simple_power (/ x n) n))))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else false)))\n", "  (cond [(= n 1) true]\n        [(= n 0) false]\n     \
    \   [(= (mod x n) 0) false]\n        [else (is_simple_power x (sub1 n))]))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else (is_simple_power (/ x n) (- n 1)))))\n", "  (cond ((= n 0) #t)\n    \
    \    ((= x 1) #t)\n        ((= x n) #f)\n        (else (is_simple_power (/ x n)\
    \ n))))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        (else\
    \ (= (* x n) (* n (* x n)))))\n  )\n", "  (cond [(= n 1) true]\n        [(= x\
    \ 1) true]\n        [(= x n) true]\n        [else false]))\n", "  (cond\n    [(=\
    \ n 1) (= x 1)]\n    [(= n 0) (= x 0)]\n    [else (= (* n (floor (/ x n)))\n \
    \             (floor (/ x n)))]\n  ))\n", "  (cond ((= n 1) (= x 1))\n       \
    \ ((= n 0) (= x 0))\n        (else (= (* x n) (* n (expt x n))))))\n", "  (cond\
    \ ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power\
    \ x (- n 1)))\n        (else false)))\n", "  (cond ((= n 0) (= x 1))\n       \
    \ ((= n 1) (= x x))\n        ((= (mod x n) 0) (= x x))\n        (else (= (mod\
    \ x n) 1) (is_simple_power x (sub1 n)))))\n", "  (cond ((= n 0) (= x 1))\n   \
    \     ((= n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n\
    \        (else false)))\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x\
    \ x))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n        (else false)))\n",
  "  (= (* n n) (* x x)))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n\
    \        [(= n 2) (= x 1)]\n        [else (= x (* n (* n x)))]))\n", "  (= (*\
    \ n n) (* x x)))\n", "  (= (* x n) (* n (* x n))))\n", "  (cond [(= n 1) true]\n\
    \        [(= x 0) false]\n        [(= (* x x) n) true]\n        [else false]))\n",
  "  (cond\n    [(= n 1) (= x 1)]\n    [(= n 2) (= x x)]\n    [(= n 3) (= x (* x x))]\n\
    \    [(= n 4) (= x (* x (* x x)))]\n    [(= n 5) (= x (* x (* x (* x x))))]\n\
    \    [(= n 6) (= x (* x (* x (* x (* x x))))]\n    [(= n 7) (= x (* x (* x (*\
    \ x (* x (* x x))))))]))\n", "  (cond ((= n 0) true)\n        ((= n 1) true)\n\
    \        ((= (mod x n) 0) false)\n        (else (is_simple_power x (sub1 n)))))\
    \ ; x is simple power of n\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (=\
    \ x x))\n        ((= (mod x n) 0) (is_simple_power x (sub1 n)))\n        (else\
    \ false)))\n", "  (cond ((= n 0) (= x 1))\n        ((= x 0) (= n 1))\n       \
    \ ((= x 1) (= n 0))\n        (else (= (* n (expt x n)) x))))\n", "  (cond ((=\
    \ n 0) true)\n        ((= n 1) true)\n        ((= x 1) true)\n        ((= x n)\
    \ true)\n        (else false)))\n", "  (cond ((= n 0) true)\n        ((= n 1)\
    \ true)\n        ((= x 1) true)\n        ((= x n) true)\n        (else false)))\n",
  "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        ((= x 0) (= n 0))\n        ((= x 1) (= n 1))\n        (else (= x (* n\
    \ (expt n x)))))) ; x is a simple power of n if n**int=x\n", "  (cond\n    [(=\
    \ n 1) (= x 1)]\n    [else (= (* n x) x)]))\n", "  (cond ((= n 0) #f)\n      \
    \  ((= x 1) #t)\n        ((= (mod x n) 0) #f)\n        (else (is_simple_power\
    \ (/ x n) n))))\n", "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((=\
    \ x n) true)\n        (else (is_simple_power (/ x n) n))))\n", "  (cond ((= n\
    \ 1) (= x 1))\n        ((= n 0) (= x 0))\n        (else (= (* n x) x))))\n", " \
    \ (cond [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(= n 1) (= x 0)]\n\
    \        [(= x 1) (= n (* x x))]\n        [else (= x (* n (* n x)))]))\n", " \
    \ (cond ((= n 0) #t)\n        ((= x 1) #t)\n        ((= x n) #f)\n        (else\
    \ (is_simple_power (/ x n) n))))\n", "  (cond [(= n 1) true]\n        [(= n 2)\
    \ true]\n        [else (= (* n n) x) true]))\n", "  (cond ((= n 1) (= x 1))\n\
    \        ((= x 0) false)\n        ((= (mod x n) 0) false)\n        (else (is_simple_power\
    \ x (sub1 n)))))\n", "  (cond\n    [(= n 1) (= x 1)]\n    [else (= (* x n) x)]))\n",
  "  (cond ((= n 1) (= x 1))\n        ((= x 0) false)\n        ((= (mod x n) 0) false)\n\
    \        (else (is_simple_power x (sub1 n)))))\n", "  (cond ((= n 0) true)\n \
    \       ((= x 1) true)\n        ((= x n) true)\n        (else false)))\n", " \
    \ (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        ((= x 0) (= n 0))\n        ((= x 1) (= n 1))\n        (else (= (* n x)\
    \ (* n n))))) ; n**int=x\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x\
    \ x))\n        ((= n 2) (= x (* x x)))\n        (else (is_simple_power x (- n\
    \ 1)))))\n", "  (= (* x n) x))\n", "  (cond ((= n 0) true)\n        ((= x 1) true)\n\
    \        ((= x n) true)\n        (else false)))\n", "  (cond\n    [(= n 1) true]\n\
    \    [(= x 0) false]\n    [(= x 1) true]\n    [else (is_simple_power (/ x n) (-\
    \ n 1))]))\n", "  (cond\n    [(= n 1) (= x 1)]\n    [(= n 0) false]\n    [(= x\
    \ 0) false]\n    [else (= (* x n) (* n (expt x n)))]))\n", "  (cond ((= n 0) #f)\n\
    \        ((= x 1) #t)\n        ((= (mod x n) 0) #f)\n        (else (is_simple_power\
    \ (/ x n) n))))\n", "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((=\
    \ (mod x n) 0) false)\n        (else (is_simple_power (/ x n) n))))\n", "  (cond\
    \ [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(= n -1) (= x 0)]\n \
    \       [(= n -2) (= x 0)]\n        [else (= x (* n (* n x)))]))\n", "  (cond\
    \ ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n        ((= (mod x n) 0) (is_simple_power\
    \ x (sub1 n)))\n        (else false)))\n", "  (cond\n    [(= n 1) (= x 1)]\n \
    \   [(= x 0) false]\n    [else (= (* x n) (* n (expt x n))) true]))\n", "  (cond\
    \ [(= n 1) (= x 1)]\n        [(= n 2) (= x x)]\n        [(= n 3) (= x (* x x))]\n\
    \        [else false]))\n", "  (cond ((= n 1) (= x 1))\n        ((= x 0) false)\n\
    \        ((= (mod x n) 0) false)\n        (else (is_simple_power x (sub1 n)))))\n",
  "  (cond ((= n 0) true)\n        ((= n 1) true)\n        ((= (* n n) x) true)\n\
    \        (else false)))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n 0) (= x\
    \ 0)]\n        [(= n -1) (= x 0)]\n        [(= n 2) (= x 1)]\n        [(= n 3)\
    \ (= x 1)]\n        [else (= x (* n (* n x)))]))\n", "  (cond ((= n 1) (= x 1))\n\
    \        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= n 2) (= x\
    \ 1))\n        ((= n 3) (= x 1))\n        ((= n 4) (= x 1))\n        ((= n 5)\
    \ (= x 1))\n        ((= n 6) (= x 1))\n        ((= n 7) (= x 1))\n        ((=\
    \ n 8) (= x 1))\n        ((= n 9) (= x 1))\n        ((= n 10) (= x 1))\n     \
    \   ((= n 11) (= x 1))\n        ((= n 12) (= x 1))\n        ((= n 13) (= x 1))\n\
    \        ((= n 14) (= x 1))\n        ((= n 15) (= x 1))\n        ((= n 16) (=\
    \ x 1))\n        ((= n 17) (= x 1))\n        ((= n 18) (= x 1))\n        ((= n\
    \ 19) (= x 1))\n        ((= n 20) (= x 1))\n        ((= n 21) (= x 1))\n     \
    \   ((= n 22) (= x 1))\n        ((= n 23) (= x 1))\n        ((= n 24) (= x 1))\n\
    \        ((= n 25) (= x 1))\n        ((= n 26) (= x 1))\n        ((= n 27) (=\
    \ x 1))\n        ((= n 28) (= x 1))\n        ((= n 29) (= x 1))\n        ((= n\
    \ 30) (= x 1))\n        ((= n 31) (= x 1))\n        ((= n 32) (= x 1))\n     \
    \   ((= n 33) (= x 1))\n        ((= n 34) (= x 1))\n        ((= n 35) (= x 1))\n\
    \        ((= n 36) (= x 1))\n        ((= n 37) (= x 1))\n        ((= n 38) (=\
    \ x 1))\n        ((= n 39) (= x 1))\n        ((= n 40) (= x 1))\n        ((= n\
    \ 41) (= x 1))\n        ((= n 42) (= x 1))\n        ((= n 43) (= x 1))\n     \
    \   ((= n 44) (= x 1))\n        ((= n 45) (= x 1))\n        ((= n 46) (= x 1))\n\
    \        ((= n 47) (= x 1))\n        ((= n 48) (= x 1))\n        ((= n 49) (=\
    \ x ", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1)\
    \ (= x 0))\n        ((= n -2) (= x 1))\n        ((= n -3) (= x 0))\n        ((=\
    \ n -4) (= x 1))\n        ((= n -5) (= x 0))\n        ((= n -6) (= x 1))\n   \
    \     ((= n -7) (= x 0))\n        ((= n -8) (= x 1))\n        ((= n -9) (= x 0))\n\
    \        ((= n -10) (= x 1))\n        ((= n -11) (= x 0))\n        ((= n -12)\
    \ (= x 1))\n        ((= n -13) (= x 0))\n        ((= n -14) (= x 1))\n       \
    \ ((= n -15) (= x 0))\n        ((= n -16) (= x 1))\n        ((= n -17) (= x 0))\n\
    \        ((= n -18) (= x 1))\n        ((= n -19) (= x 0))\n        ((= n -20)\
    \ (= x 1))\n        ((= n -21) (= x 0))\n        ((= n -22) (= x 1))\n       \
    \ ((= n -23) (= x 0))\n        ((= n -24) (= x 1))\n        ((= n -25) (= x 0))\n\
    \        ((= n -26) (= x 1))\n        ((= n -27) (= x 0))\n        ((= n -28)\
    \ (= x 1))\n        ((= n -29) (= x 0))\n        ((= n -30) (= x 1))\n       \
    \ ((= n -31) (= x 0))\n        ((= n -32) (= x 1))\n        ((= n -33) (= x 0))\n\
    \        ((= n -34) (= x 1))\n        ((= n -35) (= x 0))\n        ((= n -36)\
    \ (= x 1))\n        ((= n -37) (= x 0))\n        ((= n -38) (= x 1))\n       \
    \ ((= n -39) (= x 0))\n        ((= n -40) (= x 1))\n        ((= n -41) (= x 0))\n\
    \        ((= n -42) (= x 1))\n        ((= n -43) (= x 0))\n        ((= n -44)\
    \ (= x 1))\n        ((= n -45) (= x 0))\n        ((= n -46) (= x 1))\n       \
    \ ((= n -", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((=\
    \ n -1) (= x 0))\n        ((= n 2) (= x 1))\n        ((= x x) (= n 0))\n     \
    \   (else (= x (* n (* n x)))\n              (is_simple_power x (- n 1)))))\n",
  "  (cond [(= n 1) (= x 1)]\n        [(= (mod x n) 0) false]\n        [else (is_simple_power\
    \ x (sub1 n))]))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n \
    \       [(= n 1) (= x 0)]\n        [(= x 0) (= x 1)]\n        [else (= x (* n\
    \ (* n x)))]))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n   \
    \     (else (= (* n n) x))))\n", "  (cond\n    [(= n 1) (= x 1)]\n    [(= n 0)\
    \ false]\n    [else (= (* x n) (* x n))]))\n", "  (cond\n    [(= n 1) true]\n\
    \    [(= x 1) true]\n    [else (= (* n (expt x n)) x)]\n  )\n)\n", "  (cond ((=\
    \ n 0) true)\n        ((= x 0) false)\n        ((= x 1) true)\n        ((= (mod\
    \ x n) 0) (is_simple_power x (sub1 n)))\n        (else (is_simple_power x (sub1\
    \ n)))))\n", "  (cond [(= n 1) (= x 1)]\n        [(= n 0) (= x 0)]\n        [(=\
    \ n 2) (= x 1)]\n        [(= n 3) (= x 1)]\n        [(= n 4) (= x 1)]\n      \
    \  [(= n 5) (= x 1)]\n        [(= n 6) (= x 1)]\n        [(= n 7) (= x 1)]\n \
    \       [(= n 8) (= x 1)]\n        [(= n 9) (= x 1)]\n        [(= n 10) (= x 1)]\n\
    \        [(= n 11) (= x 1)]\n        [(= n 12) (= x 1)]\n        [(= n 13) (=\
    \ x 1)]\n        [(= n 14) (= x 1)]\n        [(= n 15) (= x 1)]\n        [(= n\
    \ 16) (= x 1)]\n        [(= n 17) (= x 1)]\n        [(= n 18) (= x 1)]\n     \
    \   [(= n 19) (= x 1)]\n        [(= n 20) (= x 1)]\n        [(= n 21) (= x 1)]\n\
    \        [(= n 22) (= x 1)]\n        [(= n 23) (= x 1)]\n        [(= n 24) (=\
    \ x 1)]\n        [(= n 25) (= x 1)]\n        [(= n 26) (= x 1)]\n        [(= n\
    \ 27) (= x 1)]\n        [(= n 28) (= x 1)]\n        [(= n 29) (= x 1)]\n     \
    \   [(= n 30) (= x 1)]\n        [(= n 31) (= x 1)]\n        [(= n 32) (= x 1)]\n\
    \        [(= n 33) (= x 1)]\n        [(= n 34) (= x 1)]\n        [(= n 35) (=\
    \ x 1)]\n        [(= n 36) (= x 1)]\n        [(= n 37) (= x 1)]\n        [(= n\
    \ 38) (= x 1)]\n        [(= n 39) (= x 1)]\n        [(= n 40) (= x 1)]\n     \
    \   [(= n 41) (= x 1)]\n        [(= n 42) (= x 1)]\n        [(= n 43) (= x 1)]\n\
    \        [(= n 44) (= x 1)]\n        [(= n 45) (= x 1)]\n        [(= n 46) (=\
    \ x 1)]\n        [(= n 47) (= x 1)]\n        [(= n 48) (= x 1)]\n        [(= n\
    \ 49) (= x 1)]\n        [(= n 50) (= ", "  (cond ((= n 0) true)\n        ((= x\
    \ 1) true)\n        ((= x n) true)\n        (else false)))\n", "  (cond ((= n\
    \ 0) true)\n        ((= x 0) false)\n        ((= x 1) true)\n        ((= x n)\
    \ true)\n        (else (is_simple_power (/ x n) n))))\n", "  (cond [(= n 1) true]\n\
    \        [(= n 2) (= x 1)]\n        [else false]))\n", "  (cond ((= n 1) (= x\
    \ 1))\n        ((= n 0) (= x 0))\n        (else (= (* x n) (* n (- x 1))))))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else false)))\n", "  (cond\n    [(= n 1) (= x 1)]\n    [(= n 0) false]\n \
    \   [(= x 0) false]\n    [else (= (* n (expt x n)) x)]))\n", "  (cond\n    [(=\
    \ n 1) true]\n    [(= x 1) true]\n    [else (= (* n (expt x n)) x)]))\n", "  (cond\n\
    \    ((= n 1) (= x 1))\n    ((= n 0) (= x 0))\n    ((= n -1) (= x 0))\n    ((=\
    \ n 2) (= x 1))\n    ((= n 2) (= x x))\n    ((= n 3) (= x x))\n    ((= n 4) (=\
    \ x x))\n    ((= n 5) (= x x))\n    ((= n 6) (= x x))\n    ((= n 7) (= x x))\n\
    \    ((= n 8) (= x x))\n    ((= n 9) (= x x))\n    ((= n 10) (= x x))\n    ((=\
    \ n 11) (= x x))\n    ((= n 12) (= x x))\n    ((= n 13) (= x x))\n    ((= n 14)\
    \ (= x x))\n    ((= n 15) (= x x))\n    ((= n 16) (= x x))\n    ((= n 17) (= x\
    \ x))\n    ((= n 18) (= x x))\n    ((= n 19) (= x x))\n    ((= n 20) (= x x))\n\
    \    ((= n 21) (= x x))\n    ((= n 22) (= x x))\n    ((= n 23) (= x x))\n    ((=\
    \ n 24) (= x x))\n    ((= n 25) (= x x))\n    ((= n 26) (= x x))\n    ((= n 27)\
    \ (= x x))\n    ((= n 28) (= x x))\n    ((= n 29) (= x x))\n    ((= n 30) (= x\
    \ x))\n    ((= n 31) (= x x))\n    ((= n 32) (= x x))\n    ((= n 33) (= x x))\n\
    \    ((= n 34) (= x x))\n    ((= n 35) (= x x))\n    ((= n 36) (= x x))\n    ((=\
    \ n 37) (= x x))\n    ((= n 38) (= x x))\n    ((= n 39) (= x x))\n    ((= n 40)\
    \ (= x x))\n    ((= n 41) (= x x))\n    ((= n 42) (= x x))\n    ((= n 43) (= x\
    \ x))\n    ((= n 44) (= x x))\n    ((= n 45) (= x x))\n    ((= n 46) (= x x))\n\
    \    ((= n 47) (= x x))\n    ((= n 48) (= x x))\n    ((= n 49) (= x x))\n    ((=\
    \ n 50) (= x x))\n    ((= n 51) (= x x))\n    ((= n 52) (= x x))\n    ((= n 53)\
    \ (= x x))\n    ((= ", "  (cond ((= n 0) true)\n        ((= x 1) true)\n     \
    \   ((= x n) true)\n        (else false)))\n", "  (cond [(= n 1) true]\n     \
    \   [(= x 0) false]\n        [(= (* x x) n) true]\n        [else (is_simple_power\
    \ x (- n 1))]))\n", "  (cond ((= n 0) (= x 1))\n        ((= n 1) (= x x))\n  \
    \      ((= (mod x n) 0) (is_simple_power x (- n 1)))\n        (else false)))\n",
  "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n\
    \        ((= x 0) (= n 0))\n        ((= x 1) (= n 1))\n        (else (= (* n x)\
    \ (* n (* x n))))))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n\
    \        (else (= (* x n) (* n (expt x n)))))) ; n**int=x\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThank you very much for your answer! I understand it better now.\
    \ One question: why do we need the second condition (= n 0)? I thought that if\
    \ n is 0 then n**int=x is always true.\n<|/ c |>\n<| c |>\nIf n is 0, then n**int=x\
    \ is always false. That's why we need the second condition. n**int=x is true only\
    \ if n is an integer and x is a power of n.\n<|/ c |>\n<| c |>\nI see. Thank you\
    \ very much for your help!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  (cond ((=\
    \ n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n        (else false)))\n",
  "  (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else (is_simple_power (/ x n) n))))\n", "  (cond ((= n 0) (= x 1))\n     \
    \   ((= n 1) (= x 1))\n        ((= n 2) (= x 1))\n        ((= n 3) (= x 1))\n\
    \        ((= n 4) (= x 1))\n        ((= n 5) (= x 1))\n        ((= n 6) (= x 1))\n\
    \        ((= n 7) (= x 1))\n        ((= n 8) (= x 1))\n        ((= n 9) (= x 1))\n\
    \        ((= n 10) (= x 1))\n        ((= n 11) (= x 1))\n        ((= n 12) (=\
    \ x 1))\n        ((= n 13) (= x 1))\n        ((= n 14) (= x 1))\n        ((= n\
    \ 15) (= x 1))\n        ((= n 16) (= x 1))\n        ((= n 17) (= x 1))\n     \
    \   ((= n 18) (= x 1))\n        ((= n 19) (= x 1))\n        ((= n 20) (= x 1))\n\
    \        ((= n 21) (= x 1))\n        ((= n 22) (= x 1))\n        ((= n 23) (=\
    \ x 1))\n        ((= n 24) (= x 1))\n        ((= n 25) (= x 1))\n        ((= n\
    \ 26) (= x 1))\n        ((= n 27) (= x 1))\n        ((= n 28) (= x 1))\n     \
    \   ((= n 29) (= x 1))\n        ((= n 30) (= x 1))\n        ((= n 31) (= x 1))\n\
    \        ((= n 32) (= x 1))\n        ((= n 33) (= x 1))\n        ((= n 34) (=\
    \ x 1))\n        ((= n 35) (= x 1))\n        ((= n 36) (= x 1))\n        ((= n\
    \ 37) (= x 1))\n        ((= n 38) (= x 1))\n        ((= n 39) (= x 1))\n     \
    \   ((= n 40) (= x 1))\n        ((= n 41) (= x 1))\n        ((= n 42) (= x 1))\n\
    \        ((= n 43) (= x 1))\n        ((= n 44) (= x 1))\n        ((= n 45) (=\
    \ x 1))\n        ((= n 46) (= x 1))\n        ((= n 47) (= x 1))\n        ((= n\
    \ 48) (= x 1))\n        ((= n 49) (= x 1))\n        ((= n 50) (= x ", "  (cond\n\
    \    [(= n 1) (= x 1)]\n    [else (= (* n n) x)]\n  )\n)\n", "  (cond [(= n 1)\
    \ (= x 1)]\n        [(= n 2) (= x 1)]\n        [(= n 3) (= x 1)]\n        [(=\
    \ n 4) (= x 1)]\n        [(= n 5) (= x 1)]\n        [(= n 6) (= x 1)]\n      \
    \  [(= n 7) (= x 1)]\n        [(= n 8) (= x 1)]\n        [(= n 9) (= x 1)]\n \
    \       [(= n 10) (= x 1)]\n        [(= n 11) (= x 1)]\n        [(= n 12) (= x\
    \ 1)]\n        [(= n 13) (= x 1)]\n        [(= n 14) (= x 1)]\n        [(= n 15)\
    \ (= x 1)]\n        [(= n 16) (= x 1)]\n        [(= n 17) (= x 1)]\n        [(=\
    \ n 18) (= x 1)]\n        [(= n 19) (= x 1)]\n        [(= n 20) (= x 1)]\n   \
    \     [(= n 21) (= x 1)]\n        [(= n 22) (= x 1)]\n        [(= n 23) (= x 1)]\n\
    \        [(= n 24) (= x 1)]\n        [(= n 25) (= x 1)]\n        [(= n 26) (=\
    \ x 1)]\n        [(= n 27) (= x 1)]\n        [(= n 28) (= x 1)]\n        [(= n\
    \ 29) (= x 1)]\n        [(= n 30) (= x 1)]\n        [(= n 31) (= x 1)]\n     \
    \   [(= n 32) (= x 1)]\n        [(= n 33) (= x 1)]\n        [(= n 34) (= x 1)]\n\
    \        [(= n 35) (= x 1)]\n        [(= n 36) (= x 1)]\n        [(= n 37) (=\
    \ x 1)]\n        [(= n 38) (= x 1)]\n        [(= n 39) (= x 1)]\n        [(= n\
    \ 40) (= x 1)]\n        [(= n 41) (= x 1)]\n        [(= n 42) (= x 1)]\n     \
    \   [(= n 43) (= x 1)]\n        [(= n 44) (= x 1)]\n        [(= n 45) (= x 1)]\n\
    \        [(= n 46) (= x 1)]\n        [(= n 47) (= x 1)]\n        [(= n 48) (=\
    \ x 1)]\n        [(= n 49) (= x 1)]\n        [(= n 50) (= x 1)]\n        [(= n\
    \ 51) (= ", "  (cond ((= n 0) #t)\n        ((= x 1) #f)\n        ((= (mod x n)\
    \ 0) #f)\n        (else (is_simple_power (quotient x n) (sub1 n)))))\n", "  (cond\n\
    \    [(= n 0) true]\n    [(= n 1) true]\n    [else (= (* x x) n) true])))\n",
  "  (cond\n    [(= x 1) true]\n    [(= x n) true]\n    [else false]))\n", "  (cond\
    \ ((= n 0) true)\n        ((= n 1) true)\n        ((= (mod x n) 0) false)\n  \
    \      ((= (mod x n) 1) (is_simple_power x (sub1 n)))\n        (else (is_simple_power\
    \ x (sub1 n)))))\n", "  (cond [(= n 1) true]\n        [(= x 1) true]\n       \
    \ [(= x n) true]\n        [else false]))\n", "  (cond ((= n 1) (= x 1))\n    \
    \    ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= n -2) (= x 1))\n\
    \        ((= n -3) (= x 1))\n        ((= n -4) (= x 1))\n        ((= n -5) (=\
    \ x 1))\n        ((= n -6) (= x 1))\n        ((= n -7) (= x 1))\n        ((= n\
    \ -8) (= x 1))\n        ((= n -9) (= x 1))\n        ((= n -10) (= x 1))\n    \
    \    ((= n -11) (= x 1))\n        ((= n -12) (= x 1))\n        ((= n -13) (= x\
    \ 1))\n        ((= n -14) (= x 1))\n        ((= n -15) (= x 1))\n        ((= n\
    \ -16) (= x 1))\n        ((= n -17) (= x 1))\n        ((= n -18) (= x 1))\n  \
    \      ((= n -19) (= x 1))\n        ((= n -20) (= x 1))\n        ((= n -21) (=\
    \ x 1))\n        ((= n -22) (= x 1))\n        ((= n -23) (= x 1))\n        ((=\
    \ n -24) (= x 1))\n        ((= n -25) (= x 1))\n        ((= n -26) (= x 1))\n\
    \        ((= n -27) (= x 1))\n        ((= n -28) (= x 1))\n        ((= n -29)\
    \ (= x 1))\n        ((= n -30) (= x 1))\n        ((= n -31) (= x 1))\n       \
    \ ((= n -32) (= x 1))\n        ((= n -33) (= x 1))\n        ((= n -34) (= x 1))\n\
    \        ((= n -35) (= x 1))\n        ((= n -36) (= x 1))\n        ((= n -37)\
    \ (= x 1))\n        ((= n -38) (= x 1))\n        ((= n -39) (= x 1))\n       \
    \ ((= n -40) (= x 1))\n        ((= n -41) (= x 1))\n        ((= n -42) (= x 1))\n\
    \        ((= n -43) (= x 1))\n        ((= n -44) (= x 1))\n        ((= n -45)\
    \ (= x 1))\n        ((= n -46) (= x 1))\n        ((= n -", "  (cond ((= n 1) (=\
    \ x 1))\n        ((= n 0) (= x 0))\n        ((= n -1) (= x 0))\n        ((= x\
    \ 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n       \
    \ ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n \
    \       ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n\
    \        ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x\
    \ 0))\n        ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1)\
    \ (= x 0))\n        ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((=\
    \ x -1) (= x 0))\n        ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n     \
    \   ((= x -1) (= x 0))\n        ((= x 0) (= x 1))\n        ((= x 1) (= x 0))\n\
    \        ((= x -1) (= x 0))\n        ((= x 0) (= x 1))\n        ((= x 1) (= x\
    \ 0))\n        ((= x -1) (= x 0))\n        ((= x 0) (= x 1))\n        ((= x 1)\
    \ (= x 0))\n        ((= x -1) (= x 0))\n        ((= x 0) (= x 1))\n        ((=\
    \ x 1) (= x 0))\n        ((= x -1) (= x 0))\n        ((= x 0) (= x 1))\n     \
    \   ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n        ((= x 0) (= x 1))\n\
    \        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n        ((= x 0) (= x\
    \ 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n        ((= x 0)\
    \ (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n        ((=\
    \ x 0) (= x 1))\n        ((= x 1) (= x 0))\n        ((= x -1) (= x 0))\n", " \
    \ (cond ((= n 0) true)\n        ((= x 1) true)\n        ((= (mod x n) 0) false)\n\
    \        (else (is_simple_power (/ x n) n))))\n", "  (cond ((= n 0) true)\n  \
    \      ((= n 1) true)\n        ((= x 1) true)\n        ((= x n) true)\n      \
    \  (else false)))\n", "  (cond\n    [(= n 1) true]\n    [(= x 0) false]\n    [(=\
    \ x 1) true]\n    [else (is_simple_power (/ x n) (- n 1))]))\n", "  (cond\n  \
    \  [(= n 1) (= x 1)]\n    [else (= (* n (expt x n)) x)]))\n", "  (cond ((= n 0)\
    \ #t)\n        ((= x 1) #f)\n        ((= x n) #t)\n        (else (is_simple_power\
    \ (/ x n) n))))\n", "  (cond ((= n 1) (= x 1))\n        ((= n 0) (= x 0))\n  \
    \      (else (= (* x n) (* n (* x n)))))) ; n**int=x\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>", "  (cond ((= n 0) true)\n        ((= n 1) true)\n\
    \        ((= x 1) true)\n        ((= x n) true)\n        (else false)))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

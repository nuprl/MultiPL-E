name: HumanEval_144_simplify
language: rkt
prompt: "#lang racket\n\n;; Your task is to implement a function that will simplify\
  \ the expression\n;; x * n. The function returns True if x * n evaluates to a whole\
  \ number and False\n;; otherwise. Both x and n, are string representation of a fraction,\
  \ and have the following format,\n;; <numerator>/<denominator> where both numerator\
  \ and denominator are positive whole numbers.\n;; You can assume that x, and n are\
  \ valid fractions, and do not have zero as denominator.\n(define (simplify x n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate simplify))\n\
  \    (check-equal? (candidate \"1/5\" \"5/1\") #t)\n    (check-equal? (candidate\
  \ \"1/6\" \"2/1\") #f)\n    (check-equal? (candidate \"5/1\" \"3/1\") #t)\n    (check-equal?\
  \ (candidate \"7/10\" \"10/2\") #f)\n    (check-equal? (candidate \"2/10\" \"50/10\"\
  ) #t)\n    (check-equal? (candidate \"7/2\" \"4/2\") #t)\n    (check-equal? (candidate\
  \ \"11/6\" \"6/1\") #t)\n    (check-equal? (candidate \"2/3\" \"5/2\") #f)\n   \
  \ (check-equal? (candidate \"5/2\" \"3/5\") #f)\n    (check-equal? (candidate \"\
  2/4\" \"8/4\") #t)\n    (check-equal? (candidate \"2/4\" \"4/2\") #t)\n    (check-equal?\
  \ (candidate \"1/5\" \"5/1\") #t)\n    (check-equal? (candidate \"1/5\" \"1/5\"\
  ) #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? n) true]\n    [(number? (first n)) (number? (first\
    \ x))]\n    [else (and (simplify x (rest n)) (simplify x (rest x)))]))\n", " \
    \ (cond\n    [(number? x) (number? n)]\n    [(zero? n) false]\n    [(zero? x)\
    \ false]\n    [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [else (equal? (string-length x) (string-length n))\
    \ (equal? (string-length x) (string-length n))]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [else (equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [else (equal? (string-length x) (string-length n))\
    \ (equal? (string-length x) (string-length n))]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [else (equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [else (equal? (string-length x) (string-length n))\
    \ (equal? (string-length x) (string-length n))]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [else (equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [else (equal? (string-length x) (string-length n))\
    \ (equal? (string-length x) (string-length n))]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [else (equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [else (equal? (string-length x) (string-length n))\
    \ (equal? (string-length x) (string-length n))]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (equal? (string-length ", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [(equal? (first n) 1) true]\n    [else (and (simplify (first\
    \ n) (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first\
    \ n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(number? (car n)) (number? (car x))]\n    [else (and (simplify x (cdr n))\
    \ (simplify x (cdr x)))]))\n", "  (cond\n    [(empty? n) true]\n    [(number?\
    \ (first n)) (equal? (first x) (string-append (first n) \"/\" (first n)))]\n \
    \   [else false]))\n", "  (cond\n    [(empty? n) true]\n    [(empty? (rest n))\
    \ (= (length x) 1)]\n    [else (= (length x) 2)\n          (and (= (first x) (rest\
    \ x))\n               (= (first n) (second n)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(empty? (rest n)) (= (length x) 1)]\n    [else (=\
    \ (length x) 2)\n          (and (= (first x) (rest x))\n               (= (first\
    \ n) (second n)))]\n    [else (= (length x) 3)\n          (and (= (first x) (rest\
    \ x))\n               (= (first n) (second n))\n               (= (second n) (third\
    \ n)))]\n    [else (= (length x) 4)\n          (and (= (first x) (rest x))\n \
    \              (= (first n) (second n))\n               (= (second n) (third n))\n\
    \               (= (third n) (fourth n)))]\n    [else (= (length x) 5)\n     \
    \     (and (= (first x) (rest x))\n               (= (first n) (second n))\n \
    \              (= (second n) (third n))\n               (= (third n) (fourth n))\n\
    \               (= (fourth n) (fifth n)))]\n    [else (= (length x) 6)\n     \
    \     (and (= (first x) (rest x))\n               (= (first n) (second n))\n \
    \              (= (second n) (third n))\n               (= (third n) (fourth n))\n\
    \               (= (fourth n) (fifth n))\n               (= (fifth n) (sixth n)))]\n\
    \    [else (= (length x) 7)\n          (and (= (first x) (rest x))\n         \
    \      (= (first n) (second n))\n               (= (second n) (third n))\n   \
    \            (= (third n) (fourth n))\n               (= (fourth n) (fifth n))\n\
    \               (= (fifth n) (sixth n))\n               (= (sixth n) (seventh\
    \ n)))]\n    [else (= (length x) 8)\n          (and (= (first x) (rest x))\n \
    \              (= (first n) (second n))\n               (= (second n) (third n))\n\
    \               (= (third n) (fourth n))\n               (= (fourth n) (fifth\
    \ n))\n               (= (fifth n) (sixth n))\n               (= (sixth n) (seventh\
    \ n))\n               (= (seventh n) (eighth n)))]\n    [else (= (length x) 9)\n\
    \          (and (= (first x) (rest x))\n               (= ", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (cond\n            [(equal?\
    \ (first n) 1) (equal? (second n) 0)]\n            [else (cond\n             \
    \       [(equal? (first n) 0) (equal? (second n) 0)]\n                    [else\
    \ (cond\n                            [(equal? (first n) 1) (equal? (second n)\
    \ 1)]\n                            [else (cond\n                             \
    \       [(equal? (first n) 0) (equal? (second n) 1)]\n                       \
    \             [else (cond\n                                            [(equal?\
    \ (first n) 1) (equal? (second n) 0)]\n                                      \
    \      [else (cond\n                                                    [(equal?\
    \ (first n) 0) (equal? (second n) 1)]\n                                      \
    \              [else (cond\n                                                 \
    \           [(equal? (first n) 1) (equal? (second n) 0)]\n                   \
    \                                         [else (cond\n                      \
    \                                              [(equal? (first n) 0) (equal? (second\
    \ n) 1)]\n                                                                   \
    \ [else (cond\n                                                              \
    \              [(equal? (first n) 1) (equal? (second n) 0)]\n                \
    \                                                            [else (cond\n   \
    \                                                                            \
    \     [(equal? (first n) 0) (equal? (second n) 1)]\n                         \
    \                                                           [else (cond\n    \
    \                                                                            \
    \            [(equal? (first n) 1) (equal? (second n) 0)]\n                  \
    \                                                                          [else\
    \ (cond\n                                                                    \
    \                                [(equal? (first n) 0) (equal? (second n) 1)]\n\
    \                                                                            \
    \                        [else (cond\n                                       \
    \                                                                     [(equal?\
    \ (first n) 1) (equal? (second n) 0)]\n                                      \
    \                                                                      [else (cond\n\
    \                                                                            \
    \                                        [(equal? (first n) 0) (equal? (second\
    \ n) 1)]\n                                                                   \
    \                                                 [else (cond\n              \
    \                                                                            \
    \                                  [(equal? (first n) 1) (equal? (second n) 0)]\n\
    \                                                                            \
    \                                                [else (cond\n               \
    \                                                                            \
    \                                         [(equal? (first n) 0) (equal? (second\
    \ n) 1)]\n                                                                   \
    \                                                                 [else (cond\n\
    \                                                                            \
    \                                                                [(equal? (first\
    \ n) 1) (equal? (second n) 0)]\n                                             \
    \                                                                            \
    \                   [else (cond\n                                            \
    \                                                                            \
    \            [(equal? (first n) 0) (equal? (second n) 1)]\n                  \
    \                                                                            \
    \                                      [else (cond\n                         \
    \                                                                            \
    \                                       [(equal? (first n) 1) (equal? (second\
    \ n) 0)]\n                                                                   \
    \                                                                         [else\
    \ (cond\n                                                                    \
    \                                                                [(equal? (first\
    \ n) 0) (equal? (second n) 1)]\n                                             \
    \                                                                            \
    \           [else (cond\n                                                    \
    \                                                                            \
    \            [", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (equal? (first n) 1) (simplify (first n) (sub1 (rest n)))]))\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (and (equal? (first n) '(1)) (equal? (second\
    \ n) '(1)))\n          (equal? (first x) (first n))\n          (equal? (second\
    \ x) (second n))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n)\
    \ 0) false]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n    \
    \      (simplify (first x) (rest n))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (cond\n            [(equal? (first\
    \ n) 1) true]\n            [else (cond\n                    [(equal? (first n)\
    \ 2) true]\n                    [else (cond\n                            [(equal?\
    \ (first n) 3) true]\n                            [(equal? (first n) 4) true]\n\
    \                            [(equal? (first n) 5) true]\n                   \
    \         [(equal? (first n) 6) true]\n                            [(equal? (first\
    \ n) 7) true]\n                            [(equal? (first n) 8) true]\n     \
    \                       [(equal? (first n) 9) true]\n                        \
    \    [(equal? (first n) 10) true]\n                            [(equal? (first\
    \ n) 11) true]\n                            [(equal? (first n) 12) true]\n   \
    \                         [(equal? (first n) 13) true]\n                     \
    \       [(equal? (first n) 14) true]\n                            [(equal? (first\
    \ n) 15) true]\n                            [(equal? (first n) 16) true]\n   \
    \                         [(equal? (first n) 17) true]\n                     \
    \       [(equal? (first n) 18) true]\n                            [(equal? (first\
    \ n) 19) true]\n                            [(equal? (first n) 20) true]\n   \
    \                         [(equal? (first n) 21) true]\n                     \
    \       [(equal? (first n) 22) true]\n                            [(equal? (first\
    \ n) 23) true]\n                            [(equal? (first n) 24) true]\n   \
    \                         [(equal? (first n) 25) true]\n                     \
    \       [(equal? (first n) 26) true]\n                            [(equal? (first\
    \ n) 27) true]\n                            [(equal? (first n) 28) true]\n   \
    \                         [(equal? (first n) 29) true]\n                     \
    \       [(equal? (first n) 30) true]\n                            [(equal? (first\
    \ n) 31) true]\n                            [(equal? (first n) 32) true]\n   \
    \                         [(equal? (first n) 33) true]\n                     \
    \       [(equal? (first n) 34) true]\n                            [(equal? (first\
    \ n) 35) true]\n                            [(equal? (first n) 36) true]\n   \
    \                         [(equal? (first n) 37) true]\n                     \
    \       [(equal? (first n) 38) true]\n                            [(equal? (first\
    \ n) 39) true]\n                            [(equal? (first n) 40) true]\n   \
    \                         [(equal", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n  \
    \  [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (= (first n)\
    \ (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (equal? (first n) 1) (simplify (first n) (rest n))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ ", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n \
    \         (simplify (first n) (second n))]\n    [else (and (equal? (first n) 1)\
    \ (equal? (second n) 1))\n          (and (simplify (first n) (first n)) (simplify\
    \ (second n) (second n)))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 0))\n          (and (simplify (first n) (first n)) (simplify (second n) (second\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n        \
    \  (and (simplify (first n) (first n)) (simplify (second n) (first n)))]\n   \
    \ [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (and (simplify\
    \ (first n) (first n)) (simplify (second n) (first n)))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 1))\n          (and (simplify (first n) (first\
    \ n)) (simplify (second n) (first n)))]\n    [else (and (equal? (first n) 1) (equal?\
    \ (second n) 0))\n          (and (simplify (first n) (first n)) (simplify (second\
    \ n) (first n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n\
    \          (and (simplify (first n) (first n)) (simplify (second n) (first n)))]\n\
    \    [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (and (simplify\
    \ (first n) (first n)) (simplify (second n) (first n)))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 1))\n          (and (simplify (first n) (first\
    \ n)) (simplify (second n) (first n)))]\n    [else (and (equal? (first n) 1) (equal?\
    \ (second n) 0))\n          (and (simplify (first n) (first n)) (simplify (second\
    \ n) (first n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n\
    \          (and (simplify (first n) (first n)) (simplify (second n) (first n)))]\n\
    \    [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) 1) (simplify (sub1 (first n)) (rest n))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) '(1)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(-1)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/2)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/3)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/4)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/5)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/6))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/7)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/8)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/9)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/10)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/11)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/12)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/13)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/14)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/15))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/16)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/17)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/18)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/19)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/20)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/21)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/22)) (simplify x (rest n))]", "  (cond\n    [(empty?\
    \ n) true]\n    [(number? (first n)) (equal? (first x) (string-append (simplify\
    \ (first n) (sub1 (rest n)))\n                                               \
    \    (first x)))]\n    [else false]))\n", "  (cond\n    [(empty? n) true]\n  \
    \  [(equal? (first n) 0) false]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 0))\n          (simplify (first n) (rest n))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ",
  "  (cond\n    [(empty? n) true]\n    [(empty? x) false]\n    [(equal? (first x)\
    \ '()) false]\n    [(equal? (first x) '(())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first x) '((()))\
    \ false]\n    [(equal? (first x) '((())) false]", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(empty? (rest n)) (equal? x (first n))]\n\
    \    [else (and (equal? (first n) (first x))\n               (simplify (first\
    \ x) (sub1 (rest n)))\n               (simplify (first x) (sub1 (rest x))))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(number? (first n)) (number? (first x))]\n\
    \    [else (and (simplify x (rest n)) (simplify x (rest x)))]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (= (first\
    \ n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n    [(empty?\
    \ n) true]\n    [(empty? (rest n)) (equal? (first x) (rest (first n)))]\n    [else\
    \ (and (equal? (first x) (rest (first n))) (simplify (rest (first n)) (rest (rest\
    \ n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(number? (first n)) (equal?\
    \ (first x) (string-append (first n) \"/\" (first n)))]\n    [else (equal? (first\
    \ x) (string-append (simplify (first x) (rest n)) \"/\" (first n)))]))\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) 1) (simplify (first n) (rest n))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(number? (first n)) (equal?\
    \ (first x) (string-append (first n) \"/\" (first n)))]\n    [else (equal? (first\
    \ x) (string-append (first n) \"/\" (simplify (first x) (rest n))))]))\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (equal? (first n) '(1)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(-1)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/2)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/3))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/4)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/5)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/6)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/7)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/8)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/9)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/10)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/11)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/12))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/13)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/14)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/15)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/16)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/17)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/18)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/19)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/20)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/21))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/22)) (simplify x (rest\
    \ n))]", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n \
    \   [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(empty? (rest n)) (= (length x) 1)]\n    [else (= (length x) 2)\n      \
    \    (and (= (first x) (rest x)) (= (first n) (rest n)))]))\n", "  (cond\n   \
    \ [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal? (first n)\
    \ 1) true]\n    [else (and (simplify (first n) (sub1 (first n)))\n           \
    \    (simplify (second n) (sub1 (second n))))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (simplify\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 1))\n          (simplify (first n) (second n))]\n    [else (and (equal? (first\
    \ n) 1) (equal? (second n) 0))\n          (simplify (first n) (second n))]\n \
    \   [else (and (equal? (first n) 0) (equal? (second n) 1))\n          (simplify\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 0) (equal? (second\
    \ n) 0))\n          (simplify (first n) (second n))]\n    [else (and (equal? (first\
    \ n) 0) (equal? (second n) 1))\n          (simplify (first n) (second n))]\n \
    \   [else (and (equal? (first n) 1) (equal? (second n) 1))\n          (simplify\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 0))\n          (simplify (first n) (second n))]\n    [else (and (equal? (first\
    \ n) 1) (equal? (second n) 1))\n          (simplify (first n) (second n))]\n \
    \   [else (and (equal? (first n) 0) (equal? (second n) 0))\n          (simplify\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 0) (equal? (second\
    \ n) 1))\n          (simplify (first n) (second n))]\n    [else (and (equal? (first\
    \ n) 1) (equal? (second n) 1))\n          (simplify (first n) (second n))]\n \
    \   [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (simplify\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 1))\n          (simplify (first n) (second n))]\n    [else (and (equal? (first\
    \ n) 0) (equal? (second n) 0))\n          (simplify (first n) (second n))]\n \
    \   [else (and (equal? (first n) 0) (equal? (second n) 1))\n          (simplify\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 1))\n          (simplify (first n) (", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n   \
    \ [else (equal? (first n) (quotient x n)) (simplify (quotient x n) (rest n))]\n\
    \  )\n)\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [(equal? (first n) 1) true]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ (first n) (first n)))]\n    [else (equal? (first\
    \ n) (/ (first n) (/ (first n) (first n))))]\n    [else (equal? (first n) (/ (/\
    \ (first n) (first n)) (first n)))]\n    [else (equal? (first n) (/ (/ (first\
    \ n) (/ (first n) (first n)) (first n)))]\n    [else (equal? (first n) (/ (/ (/\
    \ (first n) (first n)) (/ (first n) (first n)) (first n)))]\n    [else (equal?\
    \ (first n) (/ (/ (/ (first n) (/ (first n) (first n)) (/ (first n) (first n))\
    \ (first n)))]\n    [else (equal? (first n) (/ (/ (/ (/ (first n) (first n)) (/\
    \ (first n) (first n)) (/ (first n) (first n)) (first n)))]\n    [else (equal?\
    \ (first n) (/ (/ (/ (/ (first n) (/ (first n) (first n)) (/ (first n) (first\
    \ n)) (/ (first n) (first n)) (first n)))]\n    [else (equal? (first n) (/ (/\
    \ (/ (/ (first n) (/ (first n) (first n)) (/ (first n) (first n)) (/ (first n)\
    \ (first n)) (/ (first n) (first n)) (first n)))]\n    [else (equal? (first n)\
    \ (/ (/ (/ (/ (first n) (/ (first n) (first n)) (/ (first n) (first n)) (/ (first\
    \ n) (first n)) (/ (first n) (first n)) (/ (first n) (first n)) (first n)))]\n\
    \    [else (equal? (first n) (/ (/ (/ (/ (first n) (/ (first n) (first n)) (/\
    \ (first n) (first n)) (/ (first n) (first n)) (/ (first n) (first n)) (/ (first\
    \ n) (first n)) (/ (first n) (first n)) (first n)))]\n    [else (equal? (first\
    \ n) (/ (/ (/ (/ (first n) (/ (first n) (first n)) (/ (first n) (first n)) (/\
    \ (first n) (first n)) (/ (first n) (first n)) (", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n   \
    \ [else (and (equal? (first n) '(1)) (equal? (second n) '(1)))\n           (equal?\
    \ (first x) (first n) (second n) (second x))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) '(1/0)) false]\n    [else (equal? (first n) '(1/1))\
    \ true]\n    [else (equal? (first n) '(1/2)) true]\n    [else (equal? (first n)\
    \ '(1/3)) true]\n    [else (equal? (first n) '(1/4)) true]\n    [else (equal?\
    \ (first n) '(1/5)) true]\n    [else (equal? (first n) '(1/6)) true]\n    [else\
    \ (equal? (first n) '(1/7)) true]\n    [else (equal? (first n) '(1/8)) true]\n\
    \    [else (equal? (first n) '(1/9)) true]\n    [else (equal? (first n) '(1/10))\
    \ true]\n    [else (equal? (first n) '(1/11)) true]\n    [else (equal? (first\
    \ n) '(1/12)) true]\n    [else (equal? (first n) '(1/13)) true]\n    [else (equal?\
    \ (first n) '(1/14)) true]\n    [else (equal? (first n) '(1/15)) true]\n    [else\
    \ (equal? (first n) '(1/16)) true]\n    [else (equal? (first n) '(1/17)) true]\n\
    \    [else (equal? (first n) '(1/18)) true]\n    [else (equal? (first n) '(1/19))\
    \ true]\n    [else (equal? (first n) '(1/20)) true]\n    [else (equal? (first\
    \ n) '(1/21)) true]\n    [else (equal? (first n) '(1/22)) true]\n    [else (equal?\
    \ (first n) '(1/23)) true]\n    [else (equal? (first n) '(1/24)) true]\n    [else\
    \ (equal? (first n) '(1/25)) true]\n    [else (equal? (first n) '(1/26)) true]\n\
    \    [else (equal? (first n) '(1/27)) true]\n    [else (equal? (first n) '(1/28))\
    \ true]\n    [else (equal? (first n) '(1/29", "  (cond\n    [(empty? n) true]\n\
    \    [(number? (first n)) (number? (first x))]\n    [else (and (simplify x (rest\
    \ n)) (simplify x (rest x)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [(equal? (first\
    \ n) '(1)) true]\n    [else (equal? (first n) (/ (first n) (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (and\
    \ (equal? (first n) 1) (equal? (second n) 0))\n          (simplify (first n) (rest\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n         \
    \ (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) 1) (equal? (second n) 1))\n        \
    \  (and (simplify (first n) (first n))\n               (simplify (second n) (first\
    \ n)))]\n    [else (and (equal? (first n) ", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) (first x))\n  \
    \         (simplify (sub1 (rest n)) (rest x))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [(equal? (first n) '(-1)) false]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first ",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (equal? (first n) (/ (first n) (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (",
  "  (cond\n    [(empty? n) true]\n    [(number? (car n)) (number? (car x))]\n   \
    \ [else (and (simplify x (cdr n)) (simplify x (cdr x)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first\
    \ n)))]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) false]\n\
    \    [(zero? x) false]\n    [else (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1)]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) 0) false]\n    [else (equal? (first n) 1) (simplify (sub1 (first n))\
    \ (rest n))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0)\
    \ false]\n    [else (= (first n) (/ 1 (first n)))]\n    [else (and (simplify x\
    \ (rest n)) (simplify x (rest n)))]))\n", "  (cond\n    [(empty? n) true]\n  \
    \  [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(empty? (rest n)) (equal? x n)]\n    [else\
    \ (and (equal? (first n) (first x))\n               (simplify (first x) (rest\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n\
    \    [(equal? (first n) '(0)) false]\n    [else (= (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ ", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (= (first\
    \ n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (equal? (first n) (first x))\n           (simplify (sub1\
    \ (rest n)) (rest x))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n \
    \         (simplify (first n) (rest n))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(empty? x) false]\n    [(equal? (first x) '()) false]\n    [(equal? (first\
    \ x) '(0)) false]\n    [(equal? (first x) '(1)) false]\n    [else (equal? (first\
    \ x) '(1/2)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/3)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/4)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/5)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/6)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/7)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/8)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/9)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal? (first\
    \ x) '(1/10)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/11)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/12)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/13)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/14)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/15)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/16)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(1/17)) (simplify (sub1 (first x)) (sub1 (rest n)))]\n    [else (equal?\
    \ (first x) '(", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (simplify\
    \ (sub1 (first n)) (sub1 (second n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n   \
    \ [(equal? (first n) '(1)) false]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first ", "  (cond\n\
    \    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first\
    \ n) '(0)) false]\n    [else (equal? (first n) '(1)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(-1)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/2)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/3))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/4)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/5)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/6)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/7)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/8)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/9)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/10)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/11)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/12))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/13)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/14)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/15)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/16)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/17)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/18)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/19)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/20)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/21))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/22)) (simplify x (rest\
    \ n))]", "  (cond\n    [(empty? n) true]\n    [(empty? x) false]\n    [(equal?\
    \ (first x) '()) false]\n    [(equal? (first x) '(())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]\n    [(equal? (first\
    \ x) '((())) false]\n    [(equal? (first x) '((())) false]", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) '(1)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(-1)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/2)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/3)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/4)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/5)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/6))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/7)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/8)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/9)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/10)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/11)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/12)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/13)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/14)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/15))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/16)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/17)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/18)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/19)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/20)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/21)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/22)) (simplify x (rest n))]", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (and (equal? (first n) '(1)) (equal? (second n) '(1)))\n          (equal?\
    \ (first x) '(* 1 (first n)))\n          (equal? (second x) '(* 1 (second n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(number? (first n)) (equal? (first n) x)]\n\
    \    [else (and (simplify x (rest n)) (equal? (first n) (first x))\n         \
    \      (equal? (second n) (second x)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n   \
    \ [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1\
    \ (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [(equal? (first n) '(1)) true]\n    [else (equal?\
    \ (first n) (quotient x n)) (simplify (quotient x n) (rest n))]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(empty? (rest n)) (= (first n) 0)]\n    [else (=\
    \ (first n) (/ (first n) (first n)))]\n    [else (and (simplify x (rest n)) (simplify\
    \ x (rest n)))]))\n", "  (cond\n    [(number? x) x]\n    [(zero? n) false]\n \
    \   [else (* x (simplify x (sub1 n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify x\
    \ (rest n))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '())\
    \ false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first n) '(1))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/2)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/3)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/4)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/5)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/6)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/7)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/8)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/9)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/10))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/11)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/12)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/13)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/14)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/15)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/16)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/17)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/18)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/19))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/20)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/21)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/22)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/23)) (simplify x (", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(zero? n) false]\n    [(zero? x) false]\n    [(equal?\
    \ x n) true]\n    [else (and (simplify (/ x n) (/ n x))\n               (simplify\
    \ (/ x n) (/ n n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) (first x))\n          (simplify x (rest n))]\n  \
    \  )\n  )\n)\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n   \
    \ [else (equal? (first n) (/ (first x) (rest n)))]))\n", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(zero? n) false]\n    [(zero? x) false]\n    [else (=\
    \ (length x) 1)\n           (= (length n) 1)\n           (= (substring x 0 1)\
    \ \"/\")\n           (= (substring n 0 1) \"/\")\n           (= (substring x 0\
    \ 2) \"//\")\n           (= (substring n 0 2) \"//\")\n           (= (substring\
    \ x 0 3) \"///\")\n           (= (substring n 0 3) \"///\")\n           (= (substring\
    \ x 0 4) \"////\")\n           (= (substring n 0 4) \"////\")\n           (= (substring\
    \ x 0 5) \"/////\")\n           (= (substring n 0 5) \"/////\")\n           (=\
    \ (substring x 0 6) \"/////\")\n           (= (substring n 0 6) \"/////\")\n \
    \          (= (substring x 0 7) \"/////\")\n           (= (substring n 0 7) \"\
    /////\")\n           (= (substring x 0 8) \"/////\")\n           (= (substring\
    \ n 0 8) \"/////\")\n           (= (substring x 0 9) \"/////\")\n           (=\
    \ (substring n 0 9) \"/////\")\n           (= (substring x 0 10) \"/////\")\n\
    \           (= (substring n 0 10) \"/////\")\n           (= (substring x 0 11)\
    \ \"/////\")\n           (= (substring n 0 11) \"/////\")\n           (= (substring\
    \ x 0 12) \"/////\")\n           (= (substring n 0 12) \"/////\")\n          \
    \ (= (substring x 0 13) \"/////\")\n           (= (substring n 0 13) \"/////\"\
    )\n           (= (substring x 0 14) \"/////\")\n           (= (substring n 0 14)\
    \ \"/////\")\n           (= (substring x 0 15) \"/////\")\n           (= (substring\
    \ n 0 15) \"/////\")\n           (= (substring x 0 16) \"/////\")\n          \
    \ (= (substring n 0 16) \"/////\")\n           (= (substring x 0 17) \"/////\"\
    )\n           (= (substring n 0 17) \"/////\")\n           (= (substring x 0 18)\
    \ \"/////\")\n           (= (substring n 0 18) \"/////\")\n           (= (substring\
    \ x 0 19) \"/////\")\n           (= (substring n 0 19) \"/////\")\n          \
    \ (= (substring x 0 20) \"////", "  (cond\n    [(empty? n) true]\n    [(empty?\
    \ (rest n)) (= (length x) 1)]\n    [else (= (length x) 2)\n          (= (first\
    \ x) (first n)) (simplify (rest x) (rest n))]))\n", "  (cond\n    [(empty? n)\
    \ false]\n    [(equal? (first n) 0) true]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ ", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify x\
    \ (rest n))]\n    [else (equal? (first n) -1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 2) (simplify x (rest n))]\n    [else (equal? (first n) -2)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 3) (simplify x (rest n))]\n\
    \    [else (equal? (first n) -3) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 4) (simplify x (rest n))]\n    [else (equal? (first n) -4) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 5) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) -5) (simplify x (rest n))]\n    [else (equal? (first n) 6) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) -6) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 7) (simplify x (rest n))]\n    [else (equal? (first n) -7)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 8) (simplify x (rest n))]\n\
    \    [else (equal? (first n) -8) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 9) (simplify x (rest n))]\n    [else (equal? (first n) -9) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 10) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) -10) (simplify x (rest n))]\n    [else (equal? (first n) 11) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) -11) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 12) (simplify x (rest n))]\n    [else (equal? (first n) -12)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 13) (simplify x (rest n))]\n\
    \    [else (equal? (first n) -13) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 14) (simplify x (rest n))]\n    [else (equal? (first n) -14) (simplify x\
    \ (rest n))]\n    [else (equal? (first n) 15) (simplify x (", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (= (first n) (/ 1 (first n)))]\n  )\n)\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify x\
    \ (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 1) (simplify x (", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) '(1)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(-1)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/2)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/3)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/4)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/5)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/6))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/7)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/8)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/9)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/10)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/11)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/12)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/13)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/14)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/15))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/16)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/17)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/18)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/19)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/20)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/21)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/22)) (simplify x (rest n))]", "  (cond\n    [(empty?\
    \ n) true]\n    [(empty? (rest n)) (equal? (first n) 0)]\n    [else (and (equal?\
    \ (first n) 0)\n               (simplify x (rest n)))]))\n", "  (cond\n    [(empty?\
    \ n) false]\n    [(equal? (first n) 0) true]\n    [else (and (equal? (first n)\
    \ 1) (equal? (second n) 0))\n          (equal? (first x) (first n) (first n))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (=\
    \ (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) '(1/0)) false]\n    [else (equal? (first n) '(1/1)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/2)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/3)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/4)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/5)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/6)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/7)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/8)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/9))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/10)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/11)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/12)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/13)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/14)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/15)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/16)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/17)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/18))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/19)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/20)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/21)) false]\n    [else (equal? (first n) '(1/22)) false]\n\
    \    [else (equal? (first n) '", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n  \
    \  [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal? (first n)\
    \ 1) true]\n    [else (cond\n            [(equal? (first n) 0) true]\n       \
    \     [(equal? (first n) 1) (simplify (first n) (sub1 (rest n)))]\n          \
    \  [else (cond\n                    [(equal? (first n) 0) true]\n            \
    \        [else (cond\n                            [(equal? (first n) 1) true]\n\
    \                            [(equal? (first n) 2) (simplify (first n) (sub2 (rest\
    \ n)))]\n                            [(equal? (first n) 3) (simplify (first n)\
    \ (sub3 (rest n)))]\n                            [(equal? (first n) 4) (simplify\
    \ (first n) (sub4 (rest n)))]\n                            [(equal? (first n)\
    \ 5) (simplify (first n) (sub5 (rest n)))]\n                            [(equal?\
    \ (first n) 6) (simplify (first n) (sub6 (rest n)))]\n                       \
    \     [(equal? (first n) 7) (simplify (first n) (sub7 (rest n)))]\n          \
    \                  [(equal? (first n) 8) (simplify (first n) (sub8 (rest n)))]\n\
    \                            [(equal? (first n) 9) (simplify (first n) (sub9 (rest\
    \ n)))]\n                            [(equal? (first n) 10) (simplify (first n)\
    \ (sub10 (rest n)))]\n                            [(equal? (first n) 11) (simplify\
    \ (first n) (sub11 (rest n)))]\n                            [(equal? (first n)\
    \ 12) (simplify (first n) (sub12 (rest n)))]\n                            [(equal?\
    \ (first n) 13) (simplify (first n) (sub13 (rest n)))]\n                     \
    \       [(equal? (first n) 14) (simplify (first n) (sub14 (rest n)))]\n      \
    \                      [(equal? (first n) 15) (simplify (first n) (sub15 (rest\
    \ n)))]\n                            [(equal? (first n) 16) (simplify (first n)\
    \ (sub16 (rest n)))]\n                            [(equal? (first n) 17) (simplify\
    \ (first n) (sub17 (rest n)))]\n                            [(equal? (first n)\
    \ 18) (simplify (first n) (sub18 (rest n)))]\n                            [(equal?\
    \ (first n) 19) (simplify (first n) (sub19 (rest n)))]\n                     \
    \       [(equal? (first n) 20) (simplify (first n) (sub", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (and (equal? (first n)\
    \ 1) (equal? (second n) 0))\n           (equal? (first x) (rest (first n)))\n\
    \           (equal? (second x) (rest (second n)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(empty? (rest n)) (equal? (first x) (rest n))]\n    [else (and\
    \ (equal? (first n) (first x)) (equal? (second n) (second x)))]\n  )\n)\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (and\
    \ (equal? (first n) 1) (equal? (second n) 0))\n          (simplify (first x) (rest\
    \ n))]\n  )\n)\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '())\
    \ false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first n) '(1))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(-1)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/2)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/3)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/4)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/5)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/6)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/7)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/8)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/9))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/10)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/11)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/12)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/13)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/14)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/15)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/16)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/17)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/18))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/19)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/20)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/21)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/22)) (simplify x (rest n))]", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n  \
    \  [(empty? n) true]\n    [(number? (first n)) (equal? (first x) (string-append\
    \ (simplify (first n) (sub1 (length n))))\n                                  \
    \          (first x))]\n    [else (equal? (first x) (string-append (simplify (first\
    \ n) (sub1 (length n))))\n                              (string-append (simplify\
    \ (first x) (sub1 (length x))))]))\n</code>\n<|/ a dscore=0 |>\n<| a tags=racket,scheme\
    \ |>\n<code>", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (equal? (first n) (second n)) (simplify x (rest n))]\n  )\n)\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (equal? (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (and\
    \ (equal? (first n) 1) (equal? (second n) 0))\n           (equal? (first x) (first\
    \ n) (second x))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n)\
    \ 0) false]\n    [(equal? (first n) 1) true]\n    [else (cond\n             [(equal?\
    \ (first n) 0) true]\n             [(equal? (first n) 1) false]\n            \
    \ [(equal? (first n) 2) (simplify x (rest n))]\n             [(equal? (first n)\
    \ 3) (simplify x (rest n))]\n             [(equal? (first n) 4) (simplify x (rest\
    \ n))]\n             [(equal? (first n) 5) (simplify x (rest n))]\n          \
    \   [(equal? (first n) 6) (simplify x (rest n))]\n             [(equal? (first\
    \ n) 7) (simplify x (rest n))]\n             [(equal? (first n) 8) (simplify x\
    \ (rest n))]\n             [(equal? (first n) 9) (simplify x (rest n))]\n    \
    \         [(equal? (first n) 10) (simplify x (rest n))]\n             [(equal?\
    \ (first n) 11) (simplify x (rest n))]\n             [(equal? (first n) 12) (simplify\
    \ x (rest n))]\n             [(equal? (first n) 13) (simplify x (rest n))]\n \
    \            [(equal? (first n) 14) (simplify x (rest n))]\n             [(equal?\
    \ (first n) 15) (simplify x (rest n))]\n             [(equal? (first n) 16) (simplify\
    \ x (rest n))]\n             [(equal? (first n) 17) (simplify x (rest n))]\n \
    \            [(equal? (first n) 18) (simplify x (rest n))]\n             [(equal?\
    \ (first n) 19) (simplify x (rest n))]\n             [(equal? (first n) 20) (simplify\
    \ x (rest n))]\n             [(equal? (first n) 21) (simplify x (rest n))]\n \
    \            [(equal? (first n) 22) (simplify x (rest n))]\n             [(equal?\
    \ (first n) 23) (simplify x (rest n))]\n             [(equal? (first n) 24) (simplify\
    \ x (rest n))]\n             [(equal? (first n) 25) (simplify x (rest n))]\n \
    \            [(equal? (first n) 26) (simplify x (rest n))]\n             [(equal?\
    \ (first n) 27) (simplify x (rest n))]\n             [(equal? (first n) 28) (simplify\
    \ x (rest n))]\n             [(equal? (first n) 29) (simplify x (rest n))]\n \
    \            [(", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '())\
    \ false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first n) '(1/0))\
    \ false]\n    [else (equal? (first n) '(1/1)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/2)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/3)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/4)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/5)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/6)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/7)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/8))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/9)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/10)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/11)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/12)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/13)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/14)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/15)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/16)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/17))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/18)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/19)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/20)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/21)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/22)) (simplify\
    \ x (rest n))]", "  (cond\n    [(empty? n) true]\n    [(number? (first n)) (equal?\
    \ (first n) x)]\n    [else (and (simplify x (rest n)) (equal? (first n) x))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal?\
    \ (first n) 1) true]\n    [else (cond\n            [(equal? (first n) 2) true]\n\
    \            [else (cond\n                    [(equal? (first n) 3) true]\n  \
    \                  [else (cond\n                            [(equal? (first n)\
    \ 4) true]\n                            [else (cond\n                        \
    \            [(equal? (first n) 5) true]\n                                   \
    \ [else (cond\n                                            [(equal? (first n)\
    \ 6) true]\n                                            [else (cond\n        \
    \                                            [(equal? (first n) 7) true]\n   \
    \                                                 [else (cond\n              \
    \                                              [(equal? (first n) 8) true]\n \
    \                                                           [else (cond\n    \
    \                                                                [(equal? (first\
    \ n) 9) true]\n                                                              \
    \      [else (cond\n                                                         \
    \                   [(equal? (first n) 10) true]\n                           \
    \                                                 [else (cond\n              \
    \                                                                      [(equal?\
    \ (first n) 11) true]\n                                                      \
    \                              [else (cond\n                                 \
    \                                                           [(equal? (first n)\
    \ 12) true]\n                                                                \
    \                            [else (cond\n                                   \
    \                                                                 [(equal? (first\
    \ n) 13) true]\n                                                             \
    \                                       [else (cond\n                        \
    \                                                                            \
    \        [(equal? (first n) 14) true]\n                                      \
    \                                                                      [else (cond\n\
    \                                                                            \
    \                                        [(equal? (first n) 15) true]\n      \
    \                                                                            \
    \                                  [else (cond\n                             \
    \                                                                            \
    \                   [(equal? (first n) 16) true]\n                           \
    \                                                                            \
    \                     [else (cond\n                                          \
    \                                                                            \
    \              [(equal? (first n) 17) true]\n                                \
    \                                                                            \
    \                        [else (cond\n                                       \
    \                                                                            \
    \             [(equal? (first n) 18) true]\n                                 \
    \                                                                            \
    \                   [else (cond\n                                            \
    \                                                                            \
    \            [(equal? (first n) 19) true]\n                                  \
    \                                                                            \
    \                      [else (cond\n                                         \
    \                                                                            \
    \           [(equal? (first n) 20) true]\n                                   \
    \                                                                            \
    \                 [else (cond\n                                              \
    \                                                                            \
    \          [(equal? (first n) 21) true]\n                                    \
    \                                                                            \
    \                    [else (cond\n                                           \
    \                                                                            \
    \         [(equal? (first n) 22) true]\n                                     \
    \                                                                            \
    \               [else (cond\n                                                \
    \                                                                            \
    \        [(equal? (first n) 23) true]\n                                      \
    \                                                                            \
    \                  [else (cond\n                                             \
    \                                                                            \
    \       [(equal? (first n) 24) true]\n                                       \
    \                                                                            \
    \             [else (cond\n                                                  \
    \                                                                            \
    \      [(equal? (first n) 25) true]\n                                        \
    \                                                                            \
    \                [else (cond\n                                               \
    \                                                                            \
    \     [(equal? (first n) ", "  (cond\n    [(empty? n) true]\n    [(empty? (rest\
    \ n)) (equal? (first n) '0)]\n    [else (and (equal? (first n) '0)\n         \
    \      (not (equal? (first n) '1)))\n          (equal? (first n) (simplify x (rest\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(empty? (rest n)) (= (length\
    \ x) 1)]\n    [else (= (length x) 2)\n          (and (= (first x) 0)\n       \
    \        (= (first n) 0))\n          (and (= (second x) 0)\n               (=\
    \ (second n) 0))\n          (and (= (first n) (/ 1 (first n)))\n             \
    \  (= (second n) (/ 1 (second n))))\n          (and (= (first n) (/ 1 (first n)))\n\
    \               (= (second n) (/ 1 (second n)))\n               (= (first x) (/\
    \ 1 (first n)))\n               (= (second x) (/ 1 (second n)))]\n    [else (=\
    \ (length x) 3)\n          (and (= (first x) 0)\n               (= (first n) 0))\n\
    \          (and (= (second x) 0)\n               (= (second n) 0))\n         \
    \ (and (= (third x) 0)\n               (= (third n) 0))\n          (and (= (first\
    \ n) (/ 1 (first n)))\n               (= (second n) (/ 1 (second n)))\n      \
    \         (= (third n) (/ 1 (third n)))\n               (= (first x) (/ 1 (first\
    \ n)))\n               (= (second x) (/ 1 (second n)))\n               (= (third\
    \ x) (/ 1 (third n)))]\n    [else (= (length x) 4)\n          (and (= (first x)\
    \ 0)\n               (= (first n) 0))\n          (and (= (second x) 0)\n     \
    \          (= (second n) 0))\n          (and (= (third x) 0)\n               (=\
    \ (third n) 0))\n          (and (= (fourth x) 0)\n               (= (fourth n)\
    \ 0))\n          (and (= (first n) (/ 1 (first n)))\n               (= (second\
    \ n) (/ 1 (second n)))\n               (= (third n) (/ 1 (third n)))\n       \
    \        (= (fourth n) (/ 1 (fourth n)))\n               (= (first x) (/ 1 (first\
    \ n)))\n               (= (second x) (/ 1 (second n)))\n               (= (third\
    \ x) (/ 1 (third n)))\n               (= (fourth x) (/ 1 (fourth n)))]\n    [else\
    \ (= (length x) 5)\n          (and (= (first x) 0)\n               (= (first n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (=\
    \ (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (and (equal?\
    \ (first n) '(1)) (equal? (second n) '()))\n          (equal? (first x) (first\
    \ n) (second x) (second n))]\n  )\n)\n", "  (cond\n    [(empty? n) true]\n   \
    \ [(equal? (first n) 0) false]\n    [(equal? (first n) 1) true]\n    [else (if\
    \ (equal? (first n) (/ 1 (first n)))\n              (simplify x (rest n))\n  \
    \            (if (equal? (first n) (/ 1 (first n)))\n                  (simplify\
    \ x (rest n))\n                  (if (equal? (first n) (/ 1 (first n)))\n    \
    \                  (simplify x (rest n))\n                      (if (equal? (first\
    \ n) (/ 1 (first n)))\n                          (simplify x (rest n))\n     \
    \                     (if (equal? (first n) (/ 1 (first n)))\n               \
    \               (simplify x (rest n))\n                              (if (equal?\
    \ (first n) (/ 1 (first n)))\n                                  (simplify x (rest\
    \ n))\n                                  (if (equal? (first n) (/ 1 (first n)))\n\
    \                                      (simplify x (rest n))\n               \
    \                       (if (equal? (first n) (/ 1 (first n)))\n             \
    \                             (simplify x (rest n))\n                        \
    \                  (if (equal? (first n) (/ 1 (first n)))\n                  \
    \                            (simplify x (rest n))\n                         \
    \                     (if (equal? (first n) (/ 1 (first n)))\n               \
    \                                   (simplify x (rest n))\n                  \
    \                                (if (equal? (first n) (/ 1 (first n)))\n    \
    \                                                  (simplify x (rest n))\n   \
    \                                                   (if (equal? (first n) (/ 1\
    \ (first n)))\n                                                          (simplify\
    \ x (rest n))\n                                                          (if (equal?\
    \ (first n) (/ 1 (first n)))\n                                               \
    \               (simplify x (rest n))\n                                      \
    \                        (if (equal? (first n) (/ 1 (first n)))\n            \
    \                                                      (simplify x (rest n))\n\
    \                                                                  (if (equal?\
    \ (first n) (/ 1 (first n)))\n                                               \
    \                       (simplify x (rest n))\n                              \
    \                                        (if (equal? (first n) (/ 1 (first n)))\n\
    \                                                                          (simplify\
    \ x (rest n))\n                                                              \
    \            (if (equal? (first n) (/ 1 (first n)))\n                        \
    \                                                      (simplify x (rest n))\n\
    \                                                                            \
    \  (if (equal? (first n) (/ 1 (first n)))\n                                  \
    \                                                (simplify x (rest n))\n     \
    \                                                                            \
    \ (if (equal? (first n) (/ 1 (first n)))\n                                   \
    \                                                   (simplify x (rest n))\n  \
    \                                                                            \
    \        (if (equal? (first n) (/ 1 (first n)))\n                            \
    \                                                              (simplify x (rest\
    \ n))\n                                                                      \
    \                    (if (equal? (first n) (/ 1 (first n)))\n                \
    \                                                                            \
    \  (simplify x (rest n))\n                                                   \
    \                                           (if (", "  (cond\n    [(empty? n)\
    \ true]\n    [(number? (first n)) (equal? (first x) (string-append (first n) \"\
    /\" (first n)))]\n    [else (equal? (first x) (string-append (simplify (first\
    \ n) (sub1 (length n)))\n                                        \"/\" (simplify\
    \ (first n) (sub1 (length n)))))))])\n", "  (cond\n    [(empty? n) true]\n   \
    \ [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ ", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (equal? (first n) 1) (simplify (first n) (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify (first n) (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify (first n) (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify (first n) (rest n))]\n    [else (equal? (first n) 1) (simplify (first\
    \ n) (rest n))]\n    [else (equal? (first n) 0) (simplify (first n) (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify (first n) (rest n))]\n    [else (equal?\
    \ (first n) 0) (simplify (first n) (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify (first n) (rest n))]\n    [else (equal? (first n) 0) (simplify (first\
    \ n) (rest n))]\n    [else (equal? (first n) 1) (simplify (first n) (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify (first n) (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify (first n) (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify (first n) (rest n))]\n    [else (equal? (first n) 1) (simplify (first\
    \ n) (rest n))]\n    [else (equal? (first n) 0) (simplify (first n) (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify (first n) (rest n))]\n    [else (equal?\
    \ (first n) 0) (simplify (first n) (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify (first n) (rest n))]\n    [else (equal? (first n) 0) (simplify (first\
    \ n) (rest n))]\n    [else (equal? (first n) 1) (simplify (first n) (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify (first n) (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify (first n) (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify (first n) (rest n))]\n    [else (equal? (first n) 1) (simplify (first\
    \ n) (rest n))]\n    [else (equal? (first n) 0) (simplify (first n", "  (cond\n\
    \    [(empty? n) true]\n    [(empty? (rest n)) (equal? (first x) (rest x))]\n\
    \    [else (and (equal? (first x) (rest x)) (simplify (rest x) (rest n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(empty? (rest n)) (= (length x) 1)]\n    [else\
    \ (and (= (length x) 1)\n               (= (first x) (rest n)))]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(number? (first n)) (number? (first x))]\n    [else\
    \ (and (simplify x (rest n)) (simplify x (first n)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(empty? (rest n)) (equal? x (first n))]\n    [else (and (equal?\
    \ (first n) (first x))\n               (simplify (first x) (sub1 (rest n)))\n\
    \               (simplify (first x) (sub1 (rest x)))\n               (simplify\
    \ (first n) (sub1 (rest n)))\n               (simplify (first n) (sub1 (rest x))))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (=\
    \ (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [(equal? (first\
    \ n) '(1)) false]\n    [else (equal? (first n) '(1/0)) false]\n    [else (equal?\
    \ (first n) '(1/1)) true]\n    [else (equal? (first n) '(1/2)) true]\n    [else\
    \ (equal? (first n) '(1/3)) true]\n    [else (equal? (first n) '(1/4)) true]\n\
    \    [else (equal? (first n) '(1/5)) true]\n    [else (equal? (first n) '(1/6))\
    \ true]\n    [else (equal? (first n) '(1/7)) true]\n    [else (equal? (first n)\
    \ '(1/8)) true]\n    [else (equal? (first n) '(1/9)) true]\n    [else (equal?\
    \ (first n) '(1/10)) true]\n    [else (equal? (first n) '(1/11)) true]\n    [else\
    \ (equal? (first n) '(1/12)) true]\n    [else (equal? (first n) '(1/13)) true]\n\
    \    [else (equal? (first n) '(1/14)) true]\n    [else (equal? (first n) '(1/15))\
    \ true]\n    [else (equal? (first n) '(1/16)) true]\n    [else (equal? (first\
    \ n) '(1/17)) true]\n    [else (equal? (first n) '(1/18)) true]\n    [else (equal?\
    \ (first n) '(1/19)) true]\n    [else (equal? (first n) '(1/20)) true]\n    [else\
    \ (equal? (first n) '(1/21)) true]\n    [else (equal? (first n) '(1/22)) true]\n\
    \    [else (equal? (first n) '(1/23)) true]\n    [else (equal? (first n) '(1/24))\
    \ true]\n    [else (equal? (first n) '(1/25)) true]\n    [else (equal? (first\
    \ n) '(1/26)) true]\n    [else (equal? (first n) '(1/27)) true]\n    [else (equal?\
    \ (first n) '(1/28)) true]", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [(equal? (first n)\
    \ '(1)) false]\n    [else (equal? (first n) '(1/0)) false]\n    [else (equal?\
    \ (first n) '(1/1)) true]\n    [else (equal? (first n) '(1/2)) true]\n    [else\
    \ (equal? (first n) '(1/3)) true]\n    [else (equal? (first n) '(1/4)) true]\n\
    \    [else (equal? (first n) '(1/5)) true]\n    [else (equal? (first n) '(1/6))\
    \ true]\n    [else (equal? (first n) '(1/7)) true]\n    [else (equal? (first n)\
    \ '(1/8)) true]\n    [else (equal? (first n) '(1/9)) true]\n    [else (equal?\
    \ (first n) '(1/10)) true]\n    [else (equal? (first n) '(1/11)) true]\n    [else\
    \ (equal? (first n) '(1/12)) true]\n    [else (equal? (first n) '(1/13)) true]\n\
    \    [else (equal? (first n) '(1/14)) true]\n    [else (equal? (first n) '(1/15))\
    \ true]\n    [else (equal? (first n) '(1/16)) true]\n    [else (equal? (first\
    \ n) '(1/17)) true]\n    [else (equal? (first n) '(1/18)) true]\n    [else (equal?\
    \ (first n) '(1/19)) true]\n    [else (equal? (first n) '(1/20)) true]\n    [else\
    \ (equal? (first n) '(1/21)) true]\n    [else (equal? (first n) '(1/22)) true]\n\
    \    [else (equal? (first n) '(1/23)) true]\n    [else (equal? (first n) '(1/24))\
    \ true]\n    [else (equal? (first n) '(1/25)) true]\n    [else (equal? (first\
    \ n) '(1/26)) true]\n    [else (equal? (first n) '(1/27)) true]\n    [else (equal?\
    \ (first n) '(1/28)) true]", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n    [(empty?\
    \ n) true]\n    [(number? (first n)) (= (first n) x)]\n    [else (and (simplify\
    \ x (rest n))\n               (= (first n) (/ x n)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) (first x))\n           (simplify x (rest n))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (cond\n\
    \            [(equal? (first n) 1) true]\n            [else (cond\n          \
    \          [(equal? (first n) 2) true]\n                    [else (cond\n    \
    \                        [(equal? (first n) 3) true]\n                       \
    \     [else (cond\n                                    [(equal? (first n) 4) true]\n\
    \                                    [else (cond\n                           \
    \                 [(equal? (first n) 5) true]\n                              \
    \              [else (cond\n                                                 \
    \   [(equal? (first n) 6) true]\n                                            \
    \        [else (cond\n                                                       \
    \     [(equal? (first n) 7) true]\n                                          \
    \                  [else (cond\n                                             \
    \                       [(equal? (first n) 8) true]\n                        \
    \                                            [else (cond\n                   \
    \                                                         [(equal? (first n) 9)\
    \ true]\n                                                                    \
    \        [else (cond\n                                                       \
    \                             [(equal? (first n) 10) true]\n                 \
    \                                                                   [else (cond\n\
    \                                                                            \
    \                [(equal? (first n) 11) true]\n                              \
    \                                                              [else (cond\n \
    \                                                                            \
    \                       [(equal? (first n) 12) true]\n                       \
    \                                                                            \
    \ [else (cond\n                                                              \
    \                                              [(equal? (first n) 13) true]\n\
    \                                                                            \
    \                                [else (cond\n                               \
    \                                                                            \
    \         [(equal? (first n) 14) true]\n                                     \
    \                                                                            \
    \   [else (cond\n                                                            \
    \                                                                [(equal? (first\
    \ n) 15) true]\n                                                             \
    \                                                               [else (cond\n\
    \                                                                            \
    \                                                        [(equal? (first n) 16)\
    \ true]\n                                                                    \
    \                                                                [else (cond\n\
    \                                                                            \
    \                                                    [(equal? (first n) 17) true]\n\
    \                                                                            \
    \                                                    [else (cond\n           \
    \                                                                            \
    \                                             [(equal? (first n) 18) true]\n \
    \                                                                            \
    \                                                       [else (cond\n        \
    \                                                                            \
    \                                            [(equal? (first n) 19) true]\n  \
    \                                                                            \
    \                                                  [else (cond\n             \
    \                                                                            \
    \                                           [(equal? (first n) 20) true]\n   \
    \                                                                            \
    \                                                     [else (cond\n          \
    \                                                                            \
    \                                          [(equal? (first n) 21) true]\n    \
    \                                                                            \
    \                                                [else (cond\n               \
    \                                                                            \
    \                                         [(equal? (first n) 22) true]\n     \
    \                                                                            \
    \                                                   [else (cond\n            \
    \                                                                            \
    \                                        [(equal? (first n) 23) true]\n      \
    \                                                                            \
    \                                              [else (cond\n                 \
    \                                                                            \
    \                                       [(equal? (first n) 24) true]\n       \
    \                                                                            \
    \                                                 [else (cond\n              \
    \                                                                            \
    \                                      [(equal? (first n) 25) true]\n        \
    \                                                                            \
    \                                            [else (cond\n                   \
    \                                             ", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify (first\
    \ n) (rest n))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n)\
    \ '()) false]\n    [(equal? (first n) '(0)) false]\n    [(equal? (first n) '(1))\
    \ false]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first ", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) 0) false]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(number? n) false]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) (first x))\n          (simplify (sub1 (rest n)) (rest x))]))\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal?\
    \ (first n) 1) true]\n    [else (equal? (first n) (/ (first n) (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(empty? (rest n)) (equal? (first x) (rest\
    \ (first n)))]\n    [else (and (equal? (first x) (rest (first n)))\n         \
    \      (simplify (rest (first n)) (rest (rest n))))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (equal? (first n) 1) (simplify (first n) (sub1 (rest n)))]))\n", " \
    \ (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal?\
    \ (first n) 1) true]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))", "  (cond\n    [(empty? n) true]\n    [(empty?\
    \ (rest n)) (= (first x) (rest x))]\n    [else (and (simplify (first x) (first\
    \ n)) (simplify (rest x) (first n)))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(empty? (rest n)) (= (length x) 1)]\n    [else (= (length x) 0)]\n    [else\
    \ (= (length x) 1)]))\n", "  (cond\n    [(empty? n) true]\n    [(empty? (rest\
    \ n)) (= (first n) 0)]\n    [else (= (first n) (first x))\n          (simplify\
    \ (rest x) (rest n))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n \
    \         (simplify (first x) (rest x))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n   \
    \ [else (and (equal? (first n) '(1)) (equal? (second n) '()))\n          (and\
    \ (equal? (first n) '(1/2)) (equal? (second n) '(1)))\n          (and (equal?\
    \ (first n) '(1/3)) (equal? (second n) '(1)))\n          (and (equal? (first n)\
    \ '(1/4)) (equal? (second n) '(1)))\n          (and (equal? (first n) '(1/5))\
    \ (equal? (second n) '(1)))\n          (and (equal? (first n) '(1/6)) (equal?\
    \ (second n) '(1)))\n          (and (equal? (first n) '(1/7)) (equal? (second\
    \ n) '(1)))\n          (and (equal? (first n) '(1/8)) (equal? (second n) '(1)))\n\
    \          (and (equal? (first n) '(1/9)) (equal? (second n) '(1)))\n        \
    \  (and (equal? (first n) '(1/10)) (equal? (second n) '(1)))\n          (and (equal?\
    \ (first n) '(1/11)) (equal? (second n) '(1)))\n          (and (equal? (first\
    \ n) '(1/12)) (equal? (second n) '(1)))\n          (and (equal? (first n) '(1/13))\
    \ (equal? (second n) '(1)))\n          (and (equal? (first n) '(1/14)) (equal?\
    \ (second n) '(1)))\n          (and (equal? (first n) '(1/15)) (equal? (second\
    \ n) '(1)))\n          (and (equal? (first n) '(1/16)) (equal? (second n) '(1)))\n\
    \          (and (equal? (first n) '(1/17)) (equal? (second n) '(1)))\n       \
    \   (and (equal? (first n) '(1/18)) (equal? (second n) '(1)))\n          (and\
    \ (equal? (first n) '(1/19)) (equal? (second n) '(1)))\n          (and (equal?\
    \ (first n) '(1/20)) (equal? (second n) '(1)))\n          (and (equal? (first\
    \ n) '(1/21)) \n              (and (equal", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) (first x))\n  \
    \        (simplify (sub1 (rest n)) (rest x))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(empty? (rest n)) (equal? (first x) (rest (first n)))]\n    [else\
    \ (and (equal? (first x) (rest (first n)))\n               (simplify (rest (first\
    \ n)) (rest (rest n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(number? (first n)) (equal? (first x) (string-append (first n)\
    \ \"/\" (first n)))]\n    [else (equal? (first x) (string-append (first n) \"\
    /\" (simplify (first x) (rest n))))]))\n", "  (cond\n    [(empty? n) true]\n \
    \   [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else\
    \ (and (equal? (first n) '(1)) (equal? (second n) '(1)))\n           (equal? (first\
    \ x) (first n) (second n) (second x))]))\n", "  (cond\n    [(empty? n) true]\n\
    \    [(empty? (rest n)) (equal? (first x) (rest (first n)))]\n    [else (and (equal?\
    \ (first x) (rest (first n)))\n               (simplify (rest (first n)) (rest\
    \ (rest n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '())\
    \ false]\n    [(equal? (first n) '(0)) false]\n    [else (equal? (first n) '(1))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(-1)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/2)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/3)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/4)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/5)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/6)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/7)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/8)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/9))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/10)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/11)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/12)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/13)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/14)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/15)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/16)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/17)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/18))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/19)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/20)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/21)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/22)) (simplify x (rest n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) 0) false]\n    [(equal? (first n) 1) true]\n    [else (and (simplify\
    \ (first n) (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1\
    \ (first n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n)\
    \ 0) false]\n    [else (equal? (first n) 1) (simplify (sub1 (first n)) (sub1 (rest\
    \ n)))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(number? (first n)) (equal? (first x) (string-append (first n) \"\
    /\" (first n)))]\n    [else false]))\n", "  (cond\n    [(empty? n) true]\n   \
    \ [(equal? (first n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) 1) (simplify (first n) (rest n))]\n    [else (equal? (first n) -1)\
    \ (simplify (first n) (rest n))]\n    [else (equal? (first n) 0) (simplify (first\
    \ n) (rest n))]\n    [else (equal? (first n) 1) (simplify (first n) (first n))]\n\
    \    [else (equal? (first n) -1) (simplify (first n) (first n))]\n    [else (equal?\
    \ (first n) 0) (simplify (first n) (first n))]\n    [else (equal? (first n) 1)\
    \ (simplify (first n) (first n))]\n    [else (equal? (first n) -1) (simplify (first\
    \ n) (first n))]\n    [else (equal? (first n) 0) (simplify (first n) (first n))]\n\
    \    [else (equal? (first n) 1) (simplify (first n) (first n))]\n    [else (equal?\
    \ (first n) -1) (simplify (first n) (first n))]\n    [else (equal? (first n) 0)\
    \ (simplify (first n) (first n))]\n    [else (equal? (first n) 1) (simplify (first\
    \ n) (first n))]\n    [else (equal? (first n) -1) (simplify (first n) (first n))]\n\
    \    [else (equal? (first n) 0) (simplify (first n) (first n))]\n    [else (equal?\
    \ (first n) 1) (simplify (first n) (first n))]\n    [else (equal? (first n) -1)\
    \ (simplify (first n) (first n))]\n    [else (equal? (first n) 0) (simplify (first\
    \ n) (first n))]\n    [else (equal? (first n) 1) (simplify (first n) (first n))]\n\
    \    [else (equal? (first n) -1) (simplify (first n) (first n))]\n    [else (equal?\
    \ (first n) 0) (simplify (first n) (first n))]\n    [else (equal? (first n) 1)\
    \ (simplify (first n) (first n))]\n    [else (equal? (first n) -1) (simplify (first\
    \ n) (first n))]\n    [else (equal? (first n) 0) (simplify (first n) (first n))]\n\
    \    [else (equal? (first n) 1) (simplify (first n) (first n))]\n    [else (equal?\
    \ (first n) -1) (simplify (first n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ", "  (cond\n  \
    \  [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 0))\n           (equal? (first x) \"1/1\")\n\
    \           (equal? (second x) \"1/1\")\n           (equal? (first n) (second\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n         \
    \  (equal? (first x) \"1/1\")\n           (equal? (second x) \"1/0\")\n      \
    \     (equal? (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal?\
    \ (second n) 0))\n           (equal? (first x) \"1/0\")\n           (equal? (second\
    \ x) \"1/1\")\n           (equal? (first n) (second n))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 0))\n           (equal? (first x) \"1/0\")\n\
    \           (equal? (second x) \"1/0\")\n           (equal? (first n) (second\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n         \
    \  (equal? (first x) \"1/0\")\n           (equal? (second x) \"1/0\")\n      \
    \     (equal? (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal?\
    \ (second n) 0))\n           (equal? (first x) \"1/0\")\n           (equal? (second\
    \ x) \"1/0\")\n           (equal? (first n) (second n))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 0))\n           (equal? (first x) \"1/0\")\n\
    \           (equal? (second x) \"1/0\")\n           (equal? (first n) (second\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n         \
    \  (equal? (first x) \"1/0\")\n           (equal? (second x) \"1/0\")\n      \
    \     (equal? (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal?\
    \ (second n) 0))\n           (equal? (first x) \"1/0\")\n           (equal? (second\
    \ x) \"1/0\")\n           (equal? (first n) (second n))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 0))\n           (equal? (first x) \"1/0\")\n\
    \           (equal? (second x) \"1/0\")\n           (equal? (first n) (second\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n         \
    \  (equal? (first x) \"1/0\")\n           (equal", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/\
    \ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal?\
    \ (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n\
    \    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ ",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (",
  "  (cond\n    [(empty? n) true]\n    [(number? n) false]\n    [(equal? (first n)\
    \ 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]))\n", "  (cond\n    [(empty? n) true]\n    [(number? (first n))\
    \ (number? (first x))]\n    [else (and (simplify x (rest n)) (simplify x (rest\
    \ x)))]))\n", "  (cond\n    [(empty? n) true]\n    [(number? (first n)) (number?\
    \ (first x))]\n    [else (and (simplify x (rest n)) (simplify x (rest x)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal?\
    \ (first n) '(0)) false]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (first n)))]\n    [else (equal? (first n) (/ 1 (first n)))]\n    [else\
    \ (equal? (first n) (/ ", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n \
    \          (equal? (first x) 0)\n           (equal? (second x) 0)\n          \
    \ (equal? (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal?\
    \ (second n) 0))\n           (equal? (first x) 0)\n           (equal? (second\
    \ x) 0)\n           (equal? (first n) (second n))]\n    [else (and (equal? (first\
    \ n) 1) (equal? (second n) 0))\n           (equal? (first x) 0)\n           (equal?\
    \ (second x) 0)\n           (equal? (first n) (second n))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 0))\n           (equal? (first x) 0)\n     \
    \      (equal? (second x) 0)\n           (equal? (first n) (second n))]\n    [else\
    \ (and (equal? (first n) 1) (equal? (second n) 0))\n           (equal? (first\
    \ x) 0)\n           (equal? (second x) 0)\n           (equal? (first n) (second\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n         \
    \  (equal? (first x) 0)\n           (equal? (second x) 0)\n           (equal?\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 0))\n           (equal? (first x) 0)\n           (equal? (second x) 0)\n\
    \           (equal? (first n) (second n))]\n    [else (and (equal? (first n) 1)\
    \ (equal? (second n) 0))\n           (equal? (first x) 0)\n           (equal?\
    \ (second x) 0)\n           (equal? (first n) (second n))]\n    [else (and (equal?\
    \ (first n) 1) (equal? (second n) 0))\n           (equal? (first x) 0)\n     \
    \      (equal? (second x) 0)\n           (equal? (first n) (second n))]\n    [else\
    \ (and (equal? (first n) 1) (equal? (second n) 0))\n           (equal? (first\
    \ x) 0)\n           (equal? (second x) 0)\n           (equal? (first n) (second\
    \ n))]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n         \
    \  (equal? (first x) 0)\n           (equal? (second x) 0)\n           (equal?\
    \ (first n) (second n))]\n    [else (and (equal? (first n) 1) (equal? (second\
    \ n) 0))\n           (equal? (first x) 0)\n           (equal", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) '(1)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(-1)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/2)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/3)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/4)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/5)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/6))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/7)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/8)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/9)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/10)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/11)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/12)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/13)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/14)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/15))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/16)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/17)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/18)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/19)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/20)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/21)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/22)) (simplify x (rest n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0)\
    \ false]\n    [else (and (equal? (first n) 1) (equal? (second n) 0))\n       \
    \   (simplify (first n) (rest n))]))\n", "  (cond\n    [(empty? n) true]\n   \
    \ [(equal? (first n) 0) false]\n    [(equal? (first n) 1) true]\n    [else (cond\n\
    \            [(equal? (first n) 0) false]\n            [else (cond\n         \
    \           [(equal? (first n) 1) true]\n                    [else (cond\n   \
    \                         [(equal? (first n) 2) true]\n                      \
    \      [(equal? (first n) 3) true]\n                            [(equal? (first\
    \ n) 4) true]\n                            [(equal? (first n) 5) true]\n     \
    \                       [(equal? (first n) 6) true]\n                        \
    \    [(equal? (first n) 7) true]\n                            [(equal? (first\
    \ n) 8) true]\n                            [(equal? (first n) 9) true]\n     \
    \                       [(equal? (first n) 10) true]\n                       \
    \     [(equal? (first n) 11) true]\n                            [(equal? (first\
    \ n) 12) true]\n                            [(equal? (first n) 13) true]\n   \
    \                         [(equal? (first n) 14) true]\n                     \
    \       [(equal? (first n) 15) true]\n                            [(equal? (first\
    \ n) 16) true]\n                            [(equal? (first n) 17) true]\n   \
    \                         [(equal? (first n) 18) true]\n                     \
    \       [(equal? (first n) 19) true]\n                            [(equal? (first\
    \ n) 20) true]\n                            [(equal? (first n) 21) true]\n   \
    \                         [(equal? (first n) 22) true]\n                     \
    \       [(equal? (first n) 23) true]\n                            [(equal? (first\
    \ n) 24) true]\n                            [(equal? (first n) 25) true]\n   \
    \                         [(equal? (first n) 26) true]\n                     \
    \       [(equal? (first n) 27) true]\n                            [(equal? (first\
    \ n) 28) true]\n                            [(equal? (first n) 29) true]\n   \
    \                         [(equal? (first n) 30) true]\n                     \
    \       [(equal? (first n) 31) true]\n                            [(equal? (first\
    \ n) 32) true]\n                            [(equal? (first n) 33) true]\n   \
    \                         [(equal? (first n) 34) true]\n                     \
    \       [(equal? (first n) 35) true]\n                            [(equal? (first\
    \ n) 36) true]\n                            [(equal? (first n) 37) true]\n   \
    \                         [(equal? (first n) 38) true]\n                     \
    \       [(equal? (first ", "  (cond\n    [(empty? n) true]\n    [(equal? (first\
    \ n) 0) false]\n    [(equal? (first n) 1) true]\n    [else (cond\n           \
    \ [(equal? (first n) 0) false]\n            [(equal? (first n) 1) true]\n    \
    \        [else (cond\n                    [(equal? (first n) 2) true]\n      \
    \              [else (cond\n                            [(equal? (first n) 3)\
    \ true]\n                            [(equal? (first n) 4) true]\n           \
    \                 [(equal? (first n) 5) true]\n                            [(equal?\
    \ (first n) 6) true]\n                            [(equal? (first n) 7) true]\n\
    \                            [(equal? (first n) 8) true]\n                   \
    \         [(equal? (first n) 9) true]\n                            [(equal? (first\
    \ n) 10) true]\n                            [(equal? (first n) 11) true]\n   \
    \                         [(equal? (first n) 12) true]\n                     \
    \       [(equal? (first n) 13) true]\n                            [(equal? (first\
    \ n) 14) true]\n                            [(equal? (first n) 15) true]\n   \
    \                         [(equal? (first n) 16) true]\n                     \
    \       [(equal? (first n) 17) true]\n                            [(equal? (first\
    \ n) 18) true]\n                            [(equal? (first n) 19) true]\n   \
    \                         [(equal? (first n) 20) true]\n                     \
    \       [(equal? (first n) 21) true]\n                            [(equal? (first\
    \ n) 22) true]\n                            [(equal? (first n) 23) true]\n   \
    \                         [(equal? (first n) 24) true]\n                     \
    \       [(equal? (first n) 25) true]\n                            [(equal? (first\
    \ n) 26) true]\n                            [(equal? (first n) 27) true]\n   \
    \                         [(equal? (first n) 28) true]\n                     \
    \       [(equal? (first n) 29) true]\n                            [(equal? (first\
    \ n) 30) true]\n                            [(equal? (first n) 31) true]\n   \
    \                         [(equal? (first n) 32) true]\n                     \
    \       [(equal? (first n) 33) true]\n                            [(equal? (first\
    \ n) 34) true]\n                            [(equal? (first n) 35) true]\n   \
    \                         [(equal? (first n) 36) true]\n                     \
    \       [(equal? (first n) 37) true]\n                            [(equal? (first\
    \ n) 38) true]\n                            [(equal? (first ", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) 0) (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0)\
    \ (simplify x (rest n))]\n    [else (equal? (first n) 1) (simplify x (rest n))]\n\
    \    [else (equal? (first n) 0) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) 1) (simplify x (rest n))]\n    [else (equal? (first n) 0) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) 1) (simplify x (", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [else (equal? (first n) (first x))\n           (simplify (sub1 (rest n))\
    \ (rest x))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0)\
    \ false]\n    [else (cond\n            [(equal? (first n) 1) true]\n         \
    \   [else (cond\n                    [(equal? (first n) 2) true]\n           \
    \         [else (cond\n                            [(equal? (first n) 3) true]\n\
    \                            [else (cond\n                                   \
    \ [(equal? (first n) 4) true]\n                                    [else (cond\n\
    \                                            [(equal? (first n) 5) true]\n   \
    \                                         [else (cond\n                      \
    \                              [(equal? (first n) 6) true]\n                 \
    \                                   [else (cond\n                            \
    \                                [(equal? (first n) 7) true]\n               \
    \                                             [else (cond\n                  \
    \                                                  [(equal? (first n) 8) true]\n\
    \                                                                    [else (cond\n\
    \                                                                            [(equal?\
    \ (first n) 9) true]\n                                                       \
    \                     [else (cond\n                                          \
    \                                          [(equal? (first n) 10) true]\n    \
    \                                                                            \
    \    [else (cond\n                                                           \
    \                 [(equal? (first n) 11) true]\n                             \
    \                                               [else (cond\n                \
    \                                                                            \
    \        [(equal? (first n) 12) true]\n                                      \
    \                                                              [else (cond\n \
    \                                                                            \
    \                               [(equal? (first n) 13) true]\n               \
    \                                                                            \
    \                 [else (cond\n                                              \
    \                                      [(equal? (first n) 14) true]\n        \
    \                                                                            [else\
    \ (cond\n                                                                    \
    \                        [(equal? (first n) 15) true]\n                      \
    \                                                                      [else (cond\n\
    \                                                                            \
    \                        [(equal? (first n) 16) true]\n                      \
    \                                                                            \
    \  [else (cond\n                                                             \
    \                                               [(equal? (first n) 17) true]\n\
    \                                                                            \
    \                                [else (cond\n                               \
    \                                                                            \
    \         [(equal? (first n) 18) true]\n                                     \
    \                                                                            \
    \   [else (cond\n                                                            \
    \                                                                [(equal? (first\
    \ n) 19) true]\n                                                             \
    \                                                               [else (cond\n\
    \                                                                            \
    \                                                        [(equal? (first n) 20)\
    \ true]\n                                                                    \
    \                                                                [else (cond\n\
    \                                                                            \
    \                                                                [(equal? (first\
    \ n) 21) true]\n                                                             \
    \                                                                            \
    \   [else (cond\n                                                            \
    \                                                                        [(equal?\
    \ (first n) 22) true]\n                                                      \
    \                                                                            \
    \  [else (cond\n                                                             \
    \                                                                            \
    \   [(equal? (first n) 23) true]\n                                           \
    \                                                                            \
    \                     [else (cond\n                                          \
    \                                                                            \
    \              [(equal? (first n) 24) true]\n                                \
    \                                                                            \
    \                        [else (cond\n                                       \
    \                                                                            \
    \                         [(equal? (first n) 25) true]\n                     \
    \                                                                            \
    \                                           [else (", "  (cond\n    [(empty? n)\
    \ true]\n    [(equal? (first n) '()) false]\n    [(equal? (first n) '(0)) false]\n\
    \    [(equal? (first n) '(1)) false]\n    [else (equal? (first n) (/ 1 (first\
    \ n)))]\n    [else (equal? (first n) (/ 1 (second n)))]\n    [else (equal? (first\
    \ n) (/ 1 (third n)))]\n    [else (equal? (first n) (/ 1 (fourth n)))]\n    [else\
    \ (equal? (first n) (/ 1 (fifth n)))]\n    [else (equal? (first n) (/ 1 (sixth\
    \ n)))]\n    [else (equal? (first n) (/ 1 (seventh n)))]\n    [else (equal? (first\
    \ n) (/ 1 (eighth n)))]\n    [else (equal? (first n) (/ 1 (ninth n)))]\n    [else\
    \ (equal? (first n) (/ 1 (tenth n)))]\n    [else (equal? (first n) (/ 1 (eleventh\
    \ n)))]\n    [else (equal? (first n) (/ 1 (twelfth n)))]\n    [else (equal? (first\
    \ n) (/ 1 (thirteenth n)))]\n    [else (equal? (first n) (/ 1 (fourteenth n)))]\n\
    \    [else (equal? (first n) (/ 1 (fifteenth n)))]\n    [else (equal? (first n)\
    \ (/ 1 (sixteenth n)))]\n    [else (equal? (first n) (/ 1 (seventeenth n)))]\n\
    \    [else (equal? (first n) (/ 1 (eighteenth n)))]\n    [else (equal? (first\
    \ n) (/ 1 (nineteenth n)))]\n    [else (equal? (first n) (/ 1 (twentieth n)))]\n\
    \    [else (equal? (first n) (/ 1 (twenty-first n)))]\n    [else (equal? (first\
    \ n) (/ 1 (thirtieth n)))]\n    [else (equal? (first n) (/ 1 (thirty-first n)))]\n\
    \    [else (equal? (first n) (/ 1 (fortieth n)))]\n    [else (equal? (first n)\
    \ (/ 1 (forty-first n)))]\n    [else (equal? (first n) (/ 1 (fiftieth n)))]\n\
    \    [else (equal? (first n) (/ 1 (fifty-first n)))]\n    [else (", "  (cond\n\
    \    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first\
    \ n) '(0)) false]\n    [else (equal? (first n) '(1)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(-1)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/2)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/3))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/4)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/5)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/6)) (simplify x (rest n))]\n    [else (equal? (first n)\
    \ '(1/7)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/8)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/9)) (simplify x (rest n))]\n \
    \   [else (equal? (first n) '(1/10)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/11)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/12))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/13)) (simplify x (rest\
    \ n))]\n    [else (equal? (first n) '(1/14)) (simplify x (rest n))]\n    [else\
    \ (equal? (first n) '(1/15)) (simplify x (rest n))]\n    [else (equal? (first\
    \ n) '(1/16)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/17)) (simplify\
    \ x (rest n))]\n    [else (equal? (first n) '(1/18)) (simplify x (rest n))]\n\
    \    [else (equal? (first n) '(1/19)) (simplify x (rest n))]\n    [else (equal?\
    \ (first n) '(1/20)) (simplify x (rest n))]\n    [else (equal? (first n) '(1/21))\
    \ (simplify x (rest n))]\n    [else (equal? (first n) '(1/22)) (simplify x (rest\
    \ n))]", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n \
    \   [else (and (equal? (first n) 1) (equal? (second n) 0))\n          (simplify\
    \ (first n) (rest n))]))\n", "  (cond\n    [(number? x) x]\n    [(zero? n) false]\n\
    \    [(equal? (string-length x) (string-length n)) (simplify (string-append x\
    \ (string-to-number n)))]\n    [else (simplify (string-append x (string-to-number\
    \ n)) (string-append n (string-to-number x)))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(number? (first n)) (equal? (first x) (string-append (first n) \"\
    /\" (first n)))]\n    [else (equal? (first x) (string-append (first n) \"/\" (simplify\
    \ (first x) (rest n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(empty? (rest\
    \ n)) (equal? x (first n))]\n    [else (and (equal? (first n) (first x)) (simplify\
    \ (rest n) (sub1 (rest n))))]))\n", "  (cond\n    [(empty? n) true]\n    [(equal?\
    \ (first n) 0) false]\n    [else (= (first n) (/ 1 (first n)))]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (cond\n  \
    \          [(equal? (first n) 1) (equal? (second n) 1) (equal? (third n) 1) (equal?\
    \ (fourth n) 1) (equal? (fifth n) 1) (equal? (sixth n) 1) (equal? (seventh n)\
    \ 1) (equal? (eighth n) 1) (equal? (ninth n) 1) (equal? (tenth n) 1) (equal? (eleventh\
    \ n) 1) (equal? (twelfth n) 1) (equal? (thirteenth n) 1) (equal? (fourteenth n)\
    \ 1) (equal? (fifteenth n) 1) (equal? (sixteenth n) 1) (equal? (seventeenth n)\
    \ 1) (equal? (eighteenth n) 1) (equal? (nineteenth n) 1) (equal? (twentieth n)\
    \ 1) (equal? (thirtieth n) 1) (equal? (fourtieth n) 1) (equal? (fiftieth n) 1)\
    \ (equal? (sixtieth n) 1) (equal? (seventieth n) 1) (equal? (eightieth n) 1) (equal?\
    \ (ninetieth n) 1) (equal? (twelftieth n) 1) (equal? (thirtietieth n) 1) (equal?\
    \ (fourtietieth n) 1) (equal? (fiftietieth n) 1) (equal? (sixtietieth n) 1) (equal?\
    \ (seventieth n) 1) (equal? (eightieth n) 1) (equal? (ninetieth n) 1) (equal?\
    \ (twelftieth n) 1) (equal? (thirtietieth n) 1) (equal? (fourtietieth n) 1) (equal?\
    \ (fiftietieth n) 1) (equal? (sixtietieth n) 1) (equal? (seventieth n) 1) (equal?\
    \ (eightieth n) 1) (equal? (ninetieth n) 1) (equal? (twelftieth n) 1) (equal?\
    \ (thirtietieth n) 1) (equal? (fourtietieth n) 1) (equal? (fiftietieth n) 1) (equal?\
    \ (sixtietieth n) 1) (equal? (seventieth n) 1) (equal? (eightieth n) 1) (equal?\
    \ (nine", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n\
    \    [(equal? (first n) '(0)) false]\n    [else (equal? (first n) (/ (first n)\
    \ (first n)))]\n    [else (simplify x (rest n))]))\n", "  (cond\n    [(empty?\
    \ n) true]\n    [(equal? (first n) 0) false]\n    [else (equal? (first n) (first\
    \ x))\n          (simplify (first x) (rest n))]))\n", "  (cond\n    [(empty? n)\
    \ true]\n    [(empty? (rest n)) (equal? (first n) x)]\n    [else (and (equal?\
    \ (first n) (first x)) (simplify (first x) (sub1 (rest n)))\n             (simplify\
    \ (first n) (sub1 (rest x))))]))\n", "  (cond\n    [(empty? n) true]\n    [(empty?\
    \ (rest n)) (= (length x) 1)]\n    [(= (length x) 2) (= (parse-integer x) 0)]\n\
    \    [else (= (parse-integer x) 0)\n           (= (parse-integer n) 0)\n     \
    \      (= (parse-integer x) (parse-integer n))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? n) true]\n    [(equal? (first n) '()) false]\n    [(equal? (first\
    \ n) '(0)) false]\n    [else (equal? (first n) (/ (first x) (rest n)))]\n  )\n\
    )\n", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n  \
    \  [(equal? (first n) '(0)) false]\n    [(equal? (first n) '(1)) false]\n    [else\
    \ (equal? (first n) (quotient x n))]\n  )\n)\n", "  (cond\n    [(empty? n) true]\n\
    \    [(equal? (first n) 0) false]\n    [(equal? (first n) 1) true]\n    [else\
    \ (and (simplify (first n) (sub1 (first n)))\n               (simplify (sub1 (first\
    \ n)) (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first\
    \ n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n        \
    \       (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))\n               (simplify (sub1 (first n))\
    \ (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n\
    \               (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))\n               (simplify (sub1 (first n))\
    \ (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n\
    \               (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))\n               (simplify (sub1 (first n))\
    \ (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n\
    \               (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))\n               (simplify (sub1 (first n))\
    \ (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n\
    \               (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))\n               (simplify (sub1 (first n))\
    \ (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n\
    \               (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))\n               (simplify (sub1 (first n))\
    \ (sub1 (first n)))\n               (simplify (sub1 (first n)) (sub1 (first n)))\n\
    \               (simplify (sub1 (first n)) (sub1 (first n)))\n               (simplify\
    \ (sub1 (first n)) (sub1 (first n)))", "  (cond\n    [(empty? n) true]\n    [(empty?\
    \ (rest n)) (equal? (first x) (rest x))]\n    [else (and (equal? (first x) (rest\
    \ x)) (simplify (rest x) (rest n)))]))\n", "  (cond\n    [(empty? n) true]\n \
    \   [(equal? (first n) 0) false]\n    [else (equal? (first n) (/ 1 (first n)))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal?\
    \ (first n) 1) true]\n    [else (if (equal? (first n) (/ 1 (first n)))\n     \
    \         (simplify x (rest n))\n              (if (equal? (first n) (/ 1 (first\
    \ n)))\n                  (simplify x (rest n))\n                  (if (equal?\
    \ (first n) (/ 1 (first n)))\n                      (simplify x (rest n))\n  \
    \                    (if (equal? (first n) (/ 1 (first n)))\n                \
    \          (simplify x (rest n))\n                          (if (equal? (first\
    \ n) (/ 1 (first n)))\n                              (simplify x (rest n))\n \
    \                             (if (equal? (first n) (/ 1 (first n)))\n       \
    \                           (simplify x (rest n))\n                          \
    \        (if (equal? (first n) (/ 1 (first n)))\n                            \
    \          (simplify x (rest n))\n                                      (if (equal?\
    \ (first n) (/ 1 (first n)))\n                                          (simplify\
    \ x (rest n))\n                                          (if (equal? (first n)\
    \ (/ 1 (first n)))\n                                              (simplify x\
    \ (rest n))\n                                              (if (equal? (first\
    \ n) (/ 1 (first n)))\n                                                  (simplify\
    \ x (rest n))\n                                                  (if (equal? (first\
    \ n) (/ 1 (first n)))\n                                                      (simplify\
    \ x (rest n))\n                                                      (if (equal?\
    \ (first n) (/ 1 (first n)))\n                                               \
    \           (simplify x (rest n))\n                                          \
    \                (if (equal? (first n) (/ 1 (first n)))\n                    \
    \                                          (simplify x (rest n))\n           \
    \                                                   (if (equal? (first n) (/ 1\
    \ (first n)))\n                                                              \
    \    (simplify x (rest n))\n                                                 \
    \                 (if (equal? (first n) (/ 1 (first n)))\n                   \
    \                                                   (simplify x (rest n))\n  \
    \                                                                    (if (equal?\
    \ (first n) (/ 1 (first n)))\n                                               \
    \                           (simplify x (rest n))\n                          \
    \                                                (if (equal? (first n) (/ 1 (first\
    \ n)))\n                                                                     \
    \         (simplify x (rest n))\n                                            \
    \                                  (if (equal? (first n) (/ 1 (first n)))\n  \
    \                                                                            \
    \    (simplify x (rest n))\n                                                 \
    \                                 (if (equal? (first n) (/ 1 (first n)))\n   \
    \                                                                            \
    \       (simplify x (rest n))\n                                              \
    \                                        (if (equal? (first n) (/ 1 (first n)))\n\
    \                                                                            \
    \              (simplify x (rest n))\n                                       \
    \                                                   (if (equal? (first n) (/ 1\
    \ (first n)))\n                                                              \
    \                                (simplify x (rest n))\n                     \
    \                                                                         (if\
    \ (", "  (cond\n    [(empty? n) true]\n    [(equal? (first n) '()) false]\n  \
    \  [(equal? (first n) '(0)) false]\n    [(equal? (first n) '(1)) true]\n    [else\
    \ (equal? (first n) (quotient x n)) (simplify (quotient x n) (rest n))]))\n",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [(equal?\
    \ (first n) 1) true]\n    [else (cond\n             [(equal? (first n) (second\
    \ n)) (simplify (first n) (second n))]\n             [(equal? (first n) (second\
    \ n)) (simplify (first n) (second n))]\n             [else (cond\n           \
    \           [(equal? (first n) (second n)) (simplify (first n) (second n))]\n\
    \                      [else (cond\n                             [(equal? (first\
    \ n) (second n)) (simplify (first n) (second n))]\n                          \
    \   [else (cond\n                                      [(equal? (first n) (second\
    \ n)) (simplify (first n) (second n))]\n                                     \
    \ [else (cond\n                                               [(equal? (first\
    \ n) (second n)) (simplify (first n) (second n))]\n                          \
    \                     [else (cond\n                                          \
    \             [(equal? (first n) (second n)) (simplify (first n) (second n))]\n\
    \                                                       [else (cond\n        \
    \                                                       [(equal? (first n) (second\
    \ n)) (simplify (first n) (second n))]\n                                     \
    \                          [else (cond\n                                     \
    \                                   [(equal? (first n) (second n)) (simplify (first\
    \ n) (second n))]\n                                                          \
    \              [else (cond\n                                                 \
    \                              [(equal? (first n) (second n)) (simplify (first\
    \ n) (second n))]\n                                                          \
    \                     [else (cond\n                                          \
    \                                              [(equal? (first n) (second n))\
    \ (simplify (first n) (second n))]\n                                         \
    \                                               [else (cond\n                \
    \                                                                            \
    \   [(equal? (first n) (second n)) (simplify (first n) (second n))]\n        \
    \                                                                            \
    \           [else (cond\n                                                    \
    \                                                    [(equal? (first n) (second\
    \ n)) (simplify (first n) (second n))]\n                                     \
    \                                                                   [else (cond\n\
    \                                                                            \
    \                                   [(equal? (first n) (second n)) (simplify (first\
    \ n) (second n))]\n                                                          \
    \                                                     [else (cond\n          \
    \                                                                            \
    \                                 [(equal? (first n) (second n)) (simplify (first\
    \ n) (second n))]\n                                                          \
    \                                                             [else (cond\n  \
    \                                                                            \
    \                                                 [(equal? (first n) (second n))\
    \ (simplify (first n) (second n))]\n                                         \
    \                                                                            \
    \          [else (cond\n                                                     \
    \                                                                    [(equal?\
    \ (first n) (second n)) (simplify (first n) (second n))]\n                   \
    \                                                                            \
    \                          [else (cond\n                                     \
    \                                                                            \
    \              [(equal? (first n) (second n)) (simplify (first n) (second n))]",
  "  (cond\n    [(empty? n) true]\n    [(equal? (first n) 0) false]\n    [else (and\
    \ (simplify (first n) (sub1 (first n)))\n               (simplify (second n) (sub1\
    \ (second n))))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

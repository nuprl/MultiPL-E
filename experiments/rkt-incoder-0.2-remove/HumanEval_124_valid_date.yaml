name: HumanEval_124_valid_date
language: rkt
prompt: "#lang racket\n\n;; You have to write a function which validates a given date\
  \ string and\n;; returns True if the date is valid otherwise False.\n;; The date\
  \ is valid if all of the following rules are satisfied:\n;; 1. The date string is\
  \ not empty.\n;; 2. The number of days is not less than 1 or higher than 31 days\
  \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
  \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or\
  \ higher than 29 for the month 2.\n;; 3. The months should not be less than 1 or\
  \ higher than 12.\n;; 4. The date should be in the format: mm-dd-yyyy\n(define (valid_date\
  \ date)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate valid_date))\n\
  \    (check-equal? (candidate \"03-11-2000\") #t)\n    (check-equal? (candidate\
  \ \"15-01-2012\") #f)\n    (check-equal? (candidate \"04-0-2040\") #f)\n    (check-equal?\
  \ (candidate \"06-04-2020\") #t)\n    (check-equal? (candidate \"01-01-2007\") #t)\n\
  \    (check-equal? (candidate \"03-32-2011\") #f)\n    (check-equal? (candidate\
  \ \"\") #f)\n    (check-equal? (candidate \"04-31-3000\") #f)\n    (check-equal?\
  \ (candidate \"06-06-2005\") #t)\n    (check-equal? (candidate \"21-31-2000\") #f)\n\
  \    (check-equal? (candidate \"04-12-2003\") #t)\n    (check-equal? (candidate\
  \ \"04122003\") #f)\n    (check-equal? (candidate \"20030412\") #f)\n    (check-equal?\
  \ (candidate \"2003-04\") #f)\n    (check-equal? (candidate \"2003-04-12\") #f)\n\
  \    (check-equal? (candidate \"04-2003\") #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? date) #f]\n    [(< (length date) 3) #f]\n   \
    \ [(< (length date) 5) #f]\n    [(< (length date) 7) #f]\n    [(< (length date)\
    \ 9) #f]\n    [(< (length date) 11) #f]\n    [(< (length date) 13) #f]\n    [(<\
    \ (length date) 14) #f]\n    [(< (length date) 16) #f]\n    [(< (length date)\
    \ 18) #f]\n    [(< (length date) 20) #f]\n    [(< (length date) 21) #f]\n    [(<\
    \ (length date) 23) #f]\n    [(< (length date) 24) #f]\n    [(< (length date)\
    \ 25) #f]\n    [(< (length date) 26) #f]\n    [(< (length date) 27) #f]\n    [(<\
    \ (length date) 28) #f]\n    [(< (length date) 29) #f]\n    [(< (length date)\
    \ 30) #f]\n    [(< (length date) 31) #f]\n    [(< (length date) 32) #f]\n    [(<\
    \ (length date) 33) #f]\n    [(< (length date) 34) #f]\n    [(< (length date)\
    \ 35) #f]\n    [(< (length date) 36) #f]\n    [(< (length date) 37) #f]\n    [(<\
    \ (length date) 38) #f]\n    [(< (length date) 39) #f]\n    [(< (length date)\
    \ 40) #f]\n    [(< (length date) 41) #f]\n    [(< (length date) 42) #f]\n    [(<\
    \ (length date) 43) #f]\n    [(< (length date) 44) #f]\n    [(< (length date)\
    \ 45) #f]\n    [(< (length date) 46) #f]\n    [(< (length date) 47) #f]\n    [(<\
    \ (length date) 48) #f]\n    [(< (length date) 49) #f]\n    [(< (length date)\
    \ 50) #f]\n    [(< (length date) 51) #f]\n    [(< (length date) 52) #f]\n    [(<\
    \ (length date) 53) #f]\n    [(< (length date) 54) #f]\n    [(< (length date)\
    \ 55) #f]\n    [(< (length date) 56) #f]\n    [(< (length date) 57) #", "  (cond\n\
    \    [(empty? date) #f]\n    [(< (length (string->list date)) 3) #f]\n    [(<\
    \ (length (string->list date)) 4) #f]\n    [(< (length (string->list date)) 5)\
    \ #f]\n    [(< (length (string->list date)) 7) #f]\n    [(< (length (string->list\
    \ date)) 8) #f]\n    [(< (length (string->list date)) 9) #f]\n    [(< (length\
    \ (string->list date)) 11) #f]\n    [(< (length (string->list date)) 12) #f]\n\
    \    [(< (length (string->list date)) 13) #f]\n    [(< (length (string->list date))\
    \ 14) #f]\n    [(< (length (string->list date)) 15) #f]\n    [(< (length (string->list\
    \ date)) 16) #f]\n    [(< (length (string->list date)) 17) #f]\n    [(< (length\
    \ (string->list date)) 18) #f]\n    [(< (length (string->list date)) 19) #f]\n\
    \    [(< (length (string->list date)) 20) #f]\n    [(< (length (string->list date))\
    \ 21) #f]\n    [(< (length (string->list date)) 22) #f]\n    [(< (length (string->list\
    \ date)) 23) #f]\n    [(< (length (string->list date)) 24) #f]\n    [(< (length\
    \ (string->list date)) 25) #f]\n    [(< (length (string->list date)) 26) #f]\n\
    \    [(< (length (string->list date)) 27) #f]\n    [(< (length (string->list date))\
    \ 28) #f]\n    [(< (length (string->list date)) 29) #f]\n    [(< (length (string->list\
    \ date)) 30) #f]\n    [(< (length (string->list date)) 31) #f]\n    [(< (length\
    \ (string->list date)) 32) #f]\n    [(< (length (string->list date)) 33) #f]\n\
    \    [(< (length (string->list date)) 34) #f]\n    [(< (length (string->list date))\
    \ 35) #f]\n    [(< (length (string->list date)) 36) #f]\n    [(< (length (string->list\
    \ date)) 37) #f]\n    [(< (length (string->list date)) ", "  (cond\n    [(empty?\
    \ date) #t]\n    [(< (length (substring date 0 2)) 2) #f]\n    [(< (length (substring\
    \ date 0 2)) 3) #f]\n    [(< (length (substring date 0 2)) 4) #f]\n    [(< (length\
    \ (substring date 0 2)) 5) #f]\n    [(< (length (substring date 0 2)) 7) #f]\n\
    \    [(< (length (substring date 0 2)) 8) #f]\n    [(< (length (substring date\
    \ 0 2)) 9) #f]\n    [(< (length (substring date 0 2)) 11) #f]\n    [(< (length\
    \ (substring date 0 2)) 12) #f]\n    [(< (length (substring date 0 2)) 13) #f]\n\
    \    [(< (length (substring date 0 2)) 14) #f]\n    [(< (length (substring date\
    \ 0 2)) 15) #f]\n    [(< (length (substring date 0 2)) 16) #f]\n    [(< (length\
    \ (substring date 0 2)) 17) #f]\n    [(< (length (substring date 0 2)) 18) #f]\n\
    \    [(< (length (substring date 0 2)) 19) #f]\n    [(< (length (substring date\
    \ 0 2)) 20) #f]\n    [(< (length (substring date 0 2)) 21) #f]\n    [(< (length\
    \ (substring date 0 2)) 22) #f]\n    [(< (length (substring date 0 2)) 23) #f]\n\
    \    [(< (length (substring date 0 2)) 24) #f]\n    [(< (length (substring date\
    \ 0 2)) 25) #f]\n    [(< (length (substring date 0 2)) 26) #f]\n    [(< (length\
    \ (substring date 0 2)) 27) #f]\n    [(< (length (substring date 0 2)) 28) #f]\n\
    \    [(< (length (substring date 0 2)) 29) #f]\n    [(< (length (substring date\
    \ 0 2)) 30) #f]\n    [(< (length (substring date 0 2)) 31) #f]\n    [(< (length\
    \ (substring date 0 2)) 32) #f]\n    [(< (length (substring date 0 2)) 33) #f]\n\
    \    [(< (length (substring date 0 2)) 34) #f]\n    [(< (", "  (cond\n    [(empty?\
    \ date) #t]\n    [(< (length date) 3) #f]\n    [(< (length date) 7) #f]\n    [(<\
    \ (length date) 10) #f]\n    [(< (length date) 12) #f]\n    [(< (length date)\
    \ 14) #f]\n    [(< (length date) 16) #f]\n    [(< (length date) 19) #f]\n    [(<\
    \ (length date) 21) #f]\n    [(< (length date) 24) #f]\n    [(< (length date)\
    \ 27) #f]\n    [(< (length date) 30) #f]\n    [(< (length date) 31) #t]\n    [(<\
    \ (length date) 32) #t]\n    [(< (length date) 33) #t]\n    [(< (length date)\
    \ 34) #t]\n    [(< (length date) 35) #t]\n    [(< (length date) 36) #t]\n    [(<\
    \ (length date) 37) #t]\n    [(< (length date) 38) #t]\n    [(< (length date)\
    \ 39) #t]\n    [(< (length date) 40) #t]\n    [(< (length date) 41) #t]\n    [(<\
    \ (length date) 42) #t]\n    [(< (length date) 43) #t]\n    [(< (length date)\
    \ 44) #t]\n    [(< (length date) 45) #t]\n    [(< (length date) 46) #t]\n    [(<\
    \ (length date) 47) #t]\n    [(< (length date) 48) #t]\n    [(< (length date)\
    \ 49) #t]\n    [(< (length date) 50) #t]\n    [(< (length date) 51) #t]\n    [(<\
    \ (length date) 52) #t]\n    [(< (length date) 53) #t]\n    [(< (length date)\
    \ 54) #t]\n    [(< (length date) 55) #t]\n    [(< (length date) 56) #t]\n    [(<\
    \ (length date) 57) #t]\n    [(< (length date) 58) #t]\n    [(< (length date)\
    \ 59) #t]\n    [(< (length date) 60) #t]\n    [(< (length date) 61) #t]\n    [(<\
    \ (length date) 62) #t]\n    [(< (length date) 63) #t]\n    [(< (length date)\
    \ 64) #t]\n    [", "  (cond\n    [(empty? date) #t]\n    [(< (length (substring\
    \ date 0 2)) 2) #f]\n    [(< (length (substring date 0 2)) 3) #f]\n    [(< (length\
    \ (substring date 0 2)) 4) #f]\n    [(< (length (substring date 0 2)) 5) #f]\n\
    \    [(< (length (substring date 0 2)) 7) #f]\n    [(< (length (substring date\
    \ 0 2)) 8) #f]\n    [(< (length (substring date 0 2)) 9) #f]\n    [(< (length\
    \ (substring date 0 2)) 11) #f]\n    [(< (length (substring date 0 2)) 12) #f]\n\
    \    [(< (length (substring date 0 2)) 13) #f]\n    [(< (length (substring date\
    \ 0 2)) 14) #f]\n    [(< (length (substring date 0 2)) 15) #f]\n    [(< (length\
    \ (substring date 0 2)) 16) #f]\n    [(< (length (substring date 0 2)) 17) #f]\n\
    \    [(< (length (substring date 0 2)) 18) #f]\n    [(< (length (substring date\
    \ 0 2)) 19) #f]\n    [(< (length (substring date 0 2)) 20) #f]\n    [(< (length\
    \ (substring date 0 2)) 21) #f]\n    [(< (length (substring date 0 2)) 22) #f]\n\
    \    [(< (length (substring date 0 2)) 23) #f]\n    [(< (length (substring date\
    \ 0 2)) 24) #f]\n    [(< (length (substring date 0 2)) 25) #f]\n    [(< (length\
    \ (substring date 0 2)) 26) #f]\n    [(< (length (substring date 0 2)) 27) #f]\n\
    \    [(< (length (substring date 0 2)) 28) #f]\n    [(< (length (substring date\
    \ 0 2)) 29) #f]\n    [(< (length (substring date 0 2)) 30) #f]\n    [(< (length\
    \ (substring date 0 2)) 31) #f]\n    [(< (length (substring date 0 2)) 32) #f]\n\
    \    [(< (length (substring date 0 2)) 33) #f]\n    [(< (length (substring date\
    \ 0 2)) 34) #f]\n    [(< (", "  (cond\n    [(empty? date) #t]\n    [(< (length\
    \ (substring date 0 2)) 2) #f]\n    [(< (length (substring date 0 2)) 3) #f]\n\
    \    [(< (length (substring date 0 2)) 4) #f]\n    [(< (length (substring date\
    \ 0 2)) 5) #f]\n    [(< (length (substring date 0 2)) 7) #f]\n    [(< (length\
    \ (substring date 0 2)) 8) #f]\n    [(< (length (substring date 0 2)) 9) #f]\n\
    \    [(< (length (substring date 0 2)) 11) #f]\n    [(< (length (substring date\
    \ 0 2)) 12) #t]\n    [(< (length (substring date 0 2)) 13) #t]\n    [(< (length\
    \ (substring date 0 2)) 14) #t]\n    [(< (length (substring date 0 2)) 15) #t]\n\
    \    [(< (length (substring date 0 2)) 16) #t]\n    [(< (length (substring date\
    \ 0 2)) 17) #t]\n    [(< (length (substring date 0 2)) 18) #t]\n    [(< (length\
    \ (substring date 0 2)) 19) #t]\n    [(< (length (substring date 0 2)) 20) #t]\n\
    \    [(< (length (substring date 0 2)) 21) #t]\n    [(< (length (substring date\
    \ 0 2)) 22) #t]\n    [(< (length (substring date 0 2)) 23) #t]\n    [(< (length\
    \ (substring date 0 2)) 24) #t]\n    [(< (length (substring date 0 2)) 25) #t]\n\
    \    [(< (length (substring date 0 2)) 26) #t]\n    [(< (length (substring date\
    \ 0 2)) 27) #t]\n    [(< (length (substring date 0 2)) 28) #t]\n    [(< (length\
    \ (substring date 0 2)) 29) #t]\n    [(< (length (substring date 0 2)) 30) #t]\n\
    \    [(< (length (substring date 0 2)) 31) #t]\n    [(< (length (substring date\
    \ 0 2)) 32) #t]\n    [(< (length (substring date 0 2)) 33) #t]\n    [(< (length\
    \ (substring date 0 2)) 34) #t]\n    [(< (", "  (cond\n    [(empty? date) #t]\n\
    \    [(< 1 (string-length date)) #f]\n    [(< 31 (string-length date)) #f]\n \
    \   [(< 30 (string-length date)) #f]\n    [(< 29 (string-length date)) #f]\n \
    \   [(< 12 (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n  \
    \  [(< 4 (string-length date)) #f]\n    [(< 6 (string-length date)) #f]\n    [(<\
    \ 9 (string-length date)) #f]\n    [(< 11 (string-length date)) #f]\n    [(< 12\
    \ (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n    [(< 2 (string-length\
    \ date)) #f]\n    [(< 3 (string-length date)) #f]\n    [(< 5 (string-length date))\
    \ #f]\n    [(< 7 (string-length date)) #f]\n    [(< 8 (string-length date)) #f]\n\
    \    [(< 10 (string-length date)) #f]\n    [(< 12 (string-length date)) #f]\n\
    \    [(< 1 (string-length date)) #f]\n    [(< 2 (string-length date)) #f]\n  \
    \  [(< 3 (string-length date)) #f]\n    [(< 5 (string-length date)) #f]\n    [(<\
    \ 7 (string-length date)) #f]\n    [(< 8 (string-length date)) #f]\n    [(< 10\
    \ (string-length date)) #f]\n    [(< 12 (string-length date)) #f]\n    [(< 1 (string-length\
    \ date)) #f]\n    [(< 2 (string-length date)) #f]\n    [(< 3 (string-length date))\
    \ #f]\n    [(< 5 (string-length date)) #f]\n    [(< 7 (string-length date)) #f]\n\
    \    [(< 8 (string-length date)) #f]\n    [(< 10 (string-length date)) #f]\n \
    \   [(< 12 (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n  \
    \  [(< 2 (string-length date)) #f]\n    [(< 3 (string-length date)) #f]\n    [(<\
    \ 5 (string-length date)) #f]\n    [(< 7 (string-length ", "  (cond\n    [(empty?\
    \ date) #t]\n    [(< 1 (string-length date)) #f]\n    [(< 31 (string-length date))\
    \ #f]\n    [(< 30 (string-length date)) #f]\n    [(< 29 (string-length date))\
    \ #f]\n    [(< 12 (string-length date)) #f]\n    [(string-match \"^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$\"\
    \ (substring date 0 4)) #t]\n    [(string-match \"^[0-1][0-9]-[0-3][0-9]-[0-9]{2}$\"\
    \ (substring date 0 2)) #t]\n    [(string-match \"^[0-1][0-9]-[0-3][0-9]$\" (substring\
    \ date 0 2)) #t]\n    [(string-match \"^[0-1][0-9]$\" (substring date 0 2)) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? date) #t]\n    [(< (length (string->list\
    \ date)) 3) #f]\n    [(< (length (string->list date)) 4) #f]\n    [(< (length\
    \ (string->list date)) 5) #f]\n    [(< (length (string->list date)) 7) #f]\n \
    \   [(< (length (string->list date)) 8) #f]\n    [(< (length (string->list date))\
    \ 9) #f]\n    [(< (length (string->list date)) 11) #f]\n    [(< (length (string->list\
    \ date)) 12) #f]\n    [(< (length (string->list date)) 13) #f]\n    [(< (length\
    \ (string->list date)) 14) #f]\n    [(< (length (string->list date)) 15) #f]\n\
    \    [(< (length (string->list date)) 16) #f]\n    [(< (length (string->list date))\
    \ 17) #f]\n    [(< (length (string->list date)) 18) #f]\n    [(< (length (string->list\
    \ date)) 19) #f]\n    [(< (length (string->list date)) 20) #f]\n    [(< (length\
    \ (string->list date)) 21) #f]\n    [(< (length (string->list date)) 22) #f]\n\
    \    [(< (length (string->list date)) 23) #f]\n    [(< (length (string->list date))\
    \ 24) #f]\n    [(< (length (string->list date)) 25) #f]\n    [(< (length (string->list\
    \ date)) 26) #f]\n    [(< (length (string->list date)) 27) #f]\n    [(< (length\
    \ (string->list date)) 28) #f]\n    [(< (length (string->list date)) 29) #f]\n\
    \    [(< (length (string->list date)) 30) #f]\n    [(< (length (string->list date))\
    \ 31) #f]\n    [(< (length (string->list date)) 32) #f]\n    [(< (length (string->list\
    \ date)) 33) #f]\n    [(< (length (string->list date)) 34) #f]\n    [(< (length\
    \ (string->list date)) 35) #f]\n    [(< (length (string->list date)) 36) #f]\n\
    \    [(< (length (string->list date)) 37) #f]\n    [(< (length", "  (cond\n  \
    \  [(empty? date) #f]\n    [(< (length date) 4) #f]\n    [(< (length date) 7)\
    \ #f]\n    [(< (length date) 9) #f]\n    [(< (length date) 11) #f]\n    [(< (length\
    \ date) 13) #f]\n    [(< (length date) 15) #f]\n    [(< (length date) 17) #f]\n\
    \    [(< (length date) 19) #f]\n    [(< (length date) 21) #f]\n    [(< (length\
    \ date) 23) #f]\n    [(< (length date) 25) #f]\n    [(< (length date) 27) #f]\n\
    \    [(< (length date) 29) #f]\n    [(< (length date) 31) #f]\n    [(< (length\
    \ date) 33) #f]\n    [(< (length date) 35) #f]\n    [(< (length date) 37) #f]\n\
    \    [(< (length date) 39) #f]\n    [(< (length date) 41) #f]\n    [(< (length\
    \ date) 43) #f]\n    [(< (length date) 45) #f]\n    [(< (length date) 47) #f]\n\
    \    [(< (length date) 49) #f]\n    [(< (length date) 51) #f]\n    [(< (length\
    \ date) 53) #f]\n    [(< (length date) 55) #f]\n    [(< (length date) 57) #f]\n\
    \    [(< (length date) 59) #f]\n    [(< (length date) 61) #f]\n    [(< (length\
    \ date) 63) #f]\n    [(< (length date) 65) #f]\n    [(< (length date) 67) #f]\n\
    \    [(< (length date) 69) #f]\n    [(< (length date) 71) #f]\n    [(< (length\
    \ date) 73) #f]\n    [(< (length date) 75) #f]\n    [(< (length date) 77) #f]\n\
    \    [(< (length date) 79) #f]\n    [(< (length date) 81) #f]\n    [(< (length\
    \ date) 83) #f]\n    [(< (length date) 85) #f]\n    [(< (length date) 87) #f]\n\
    \    [(< (length date) 89) #f]\n    [(< (length date) 91) #f]\n    [(< (length\
    \ date) 93) #f]\n    [(< (length date) 95", "  (cond\n    [(empty? date) #t]\n\
    \    [(< 1 (string-length date)) #f]\n    [(< 31 (string-length date)) #f]\n \
    \   [(< 30 (string-length date)) #f]\n    [(< 29 (string-length date)) #f]\n \
    \   [(< 12 (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n  \
    \  [(< 4 (string-length date)) #f]\n    [(< 6 (string-length date)) #f]\n    [(<\
    \ 9 (string-length date)) #f]\n    [(< 11 (string-length date)) #f]\n    [(< 12\
    \ (string-length date)) #f]\n    [(< 2 (string-length date)) #f]\n    [(< 3 (string-length\
    \ date)) #f]\n    [(< 5 (string-length date)) #f]\n    [(< 7 (string-length date))\
    \ #f]\n    [(< 8 (string-length date)) #f]\n    [(< 10 (string-length date)) #f]\n\
    \    [(< 12 (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n \
    \   [(< 4 (string-length date)) #f]\n    [(< 6 (string-length date)) #f]\n   \
    \ [(< 9 (string-length date)) #f]\n    [(< 11 (string-length date)) #f]\n    [(<\
    \ 12 (string-length date)) #f]\n    [(< 2 (string-length date)) #f]\n    [(< 3\
    \ (string-length date)) #f]\n    [(< 5 (string-length date)) #f]\n    [(< 7 (string-length\
    \ date)) #f]\n    [(< 8 (string-length date)) #f]\n    [(< 10 (string-length date))\
    \ #f]\n    [(< 12 (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n\
    \    [(< 4 (string-length date)) #f]\n    [(< 6 (string-length date)) #f]\n  \
    \  [(< 9 (string-length date)) #f]\n    [(< 11 (string-length date)) #f]\n   \
    \ [(< 12 (string-length date)) #f]\n    [(< 2 (string-length date)) #f]\n    [(<\
    \ 3 (string-length date)) #f]\n    [(< ", "  (cond\n    [(empty? date) #t]\n \
    \   [(< (length date) 2) #f]\n    [(< (length date) 5) #f]\n    [(< (length date)\
    \ 7) #f]\n    [(< (length date) 9) #f]\n    [(< (length date) 11) #f]\n    [(<\
    \ (length date) 13) #f]\n    [(< (length date) 14) #f]\n    [(< (length date)\
    \ 16) #f]\n    [(< (length date) 19) #f]\n    [(< (length date) 21) #f]\n    [(<\
    \ (length date) 23) #f]\n    [(< (length date) 25) #f]\n    [(< (length date)\
    \ 27) #f]\n    [(< (length date) 29) #f]\n    [(< (length date) 31) #f]\n    [(<\
    \ (length date) 32) #f]\n    [(< (length date) 33) #f]\n    [(< (length date)\
    \ 34) #f]\n    [(< (length date) 35) #f]\n    [(< (length date) 36) #f]\n    [(<\
    \ (length date) 37) #f]\n    [(< (length date) 38) #f]\n    [(< (length date)\
    \ 39) #f]\n    [(< (length date) 40) #f]\n    [(< (length date) 41) #f]\n    [(<\
    \ (length date) 42) #f]\n    [(< (length date) 43) #f]\n    [(< (length date)\
    \ 44) #f]\n    [(< (length date) 45) #f]\n    [(< (length date) 46) #f]\n    [(<\
    \ (length date) 47) #f]\n    [(< (length date) 48) #f]\n    [(< (length date)\
    \ 49) #f]\n    [(< (length date) 50) #f]\n    [(< (length date) 51) #f]\n    [(<\
    \ (length date) 52) #f]\n    [(< (length date) 53) #f]\n    [(< (length date)\
    \ 54) #f]\n    [(< (length date) 55) #f]\n    [(< (length date) 56) #f]\n    [(<\
    \ (length date) 57) #f]\n    [(< (length date) 58) #f]\n    [(< (length date)\
    \ 59) #f]\n    [(< (length date) 60) #f]\n    [(< (length date) 61) #f]\n    [(<\
    \ (length date) 62", "  (cond\n    [(empty? date) #f]\n    [(< (length (substring\
    \ date 0 2)) 2) #f]\n    [(< (length (substring date 0 2)) 3) #f]\n    [(< (length\
    \ (substring date 0 2)) 4) #f]\n    [(< (length (substring date 0 2)) 5) #f]\n\
    \    [(< (length (substring date 0 2)) 7) #f]\n    [(< (length (substring date\
    \ 0 2)) 8) #f]\n    [(< (length (substring date 0 2)) 9) #f]\n    [(< (length\
    \ (substring date 0 2)) 11) #f]\n    [(< (length (substring date 0 2)) 12) #f]\n\
    \    [(< (length (substring date 0 2)) 13) #f]\n    [(< (length (substring date\
    \ 0 2)) 14) #f]\n    [(< (length (substring date 0 2)) 15) #f]\n    [(< (length\
    \ (substring date 0 2)) 16) #f]\n    [(< (length (substring date 0 2)) 17) #f]\n\
    \    [(< (length (substring date 0 2)) 18) #f]\n    [(< (length (substring date\
    \ 0 2)) 19) #f]\n    [(< (length (substring date 0 2)) 20) #f]\n    [(< (length\
    \ (substring date 0 2)) 21) #f]\n    [(< (length (substring date 0 2)) 22) #f]\n\
    \    [(< (length (substring date 0 2)) 23) #f]\n    [(< (length (substring date\
    \ 0 2)) 24) #f]\n    [(< (length (substring date 0 2)) 25) #f]\n    [(< (length\
    \ (substring date 0 2)) 26) #f]\n    [(< (length (substring date 0 2)) 27) #f]\n\
    \    [(< (length (substring date 0 2)) 28) #f]\n    [(< (length (substring date\
    \ 0 2)) 29) #f]\n    [(< (length (substring date 0 2)) 30) #f]\n    [(< (length\
    \ (substring date 0 2)) 31) #f]\n    [(< (length (substring date 0 2)) 32) #f]\n\
    \    [(< (length (substring date 0 2)) 33) #f]\n    [(< (length (substring date\
    \ 0 2)) 34) #f]\n    [(< (", "  (cond\n    [(empty? date) #t]\n    [(< (length\
    \ date) 3) #f]\n    [(< (length date) 6) #f]\n    [(< (length date) 9) #f]\n \
    \   [(< (length date) 12) #f]\n    [(< (length date) 13) #f]\n    [(< (length\
    \ date) 14) #f]\n    [(< (length date) 15) #f]\n    [(< (length date) 16) #f]\n\
    \    [(< (length date) 17) #f]\n    [(< (length date) 18) #f]\n    [(< (length\
    \ date) 19) #f]\n    [(< (length date) 20) #f]\n    [(< (length date) 21) #f]\n\
    \    [(< (length date) 22) #f]\n    [(< (length date) 23) #f]\n    [(< (length\
    \ date) 24) #f]\n    [(< (length date) 25) #f]\n    [(< (length date) 26) #f]\n\
    \    [(< (length date) 27) #f]\n    [(< (length date) 28) #f]\n    [(< (length\
    \ date) 29) #f]\n    [(< (length date) 30) #f]\n    [(< (length date) 31) #f]\n\
    \    [(< (length date) 32) #f]\n    [(< (length date) 33) #f]\n    [(< (length\
    \ date) 34) #f]\n    [(< (length date) 35) #f]\n    [(< (length date) 36) #f]\n\
    \    [(< (length date) 37) #f]\n    [(< (length date) 38) #f]\n    [(< (length\
    \ date) 39) #f]\n    [(< (length date) 40) #f]\n    [(< (length date) 41) #f]\n\
    \    [(< (length date) 42) #f]\n    [(< (length date) 43) #f]\n    [(< (length\
    \ date) 44) #f]\n    [(< (length date) 45) #f]\n    [(< (length date) 46) #f]\n\
    \    [(< (length date) 47) #f]\n    [(< (length date) 48) #f]\n    [(< (length\
    \ date) 49) #f]\n    [(< (length date) 50) #f]\n    [(< (length date) 51) #f]\n\
    \    [(< (length date) 52) #f]\n    [(< (length date) 53) #f]\n    [(", "  (and\
    \ (not (empty? date))\n       (not (< (length (string->list date)) 3))\n     \
    \  (not (< (length (string->list (substring date 0 2))) 1))\n       (not (< (length\
    \ (string->list (substring date 2 4))) 1))\n       (not (< (length (string->list\
    \ (substring date 4 6))) 1))\n       (not (< (length (string->list (substring\
    \ date 6 8))) 1))\n       (not (< (length (string->list (substring date 8 10)))\
    \ 1))\n       (not (< (length (string->list (substring date 10 12))) 1))\n   \
    \    (not (< (length (string->list (substring date 12 14))) 1))\n       (not (<\
    \ (length (string->list (substring date 14 16))) 1))\n       (not (< (length (string->list\
    \ (substring date 16 18))) 1))\n       (not (< (length (string->list (substring\
    \ date 18 20))) 1))\n       (not (< (length (string->list (substring date 20 22)))\
    \ 1))\n       (not (< (length (string->list (substring date 22 24))) 1))\n   \
    \    (not (< (length (string->list (substring date 24 26))) 1))\n       (not (<\
    \ (length (string->list (substring date 26 28))) 1))\n       (not (< (length (string->list\
    \ (substring date 28 30))) 1))\n       (not (< (length (string->list (substring\
    \ date 30 32))) 1))\n       (not (< (length (string->list (substring date 32 34)))\
    \ 1))\n       (not (< (length (string->list (substring date 34 36))) 1))\n   \
    \    (not (< (length (string->list (substring date 36 38))) 1))\n       (not (<\
    \ (length (string->list (substring date 38 40))) 1))\n       (not (< (length (string->list\
    \ (substring date 40 42))) 1))\n       (not (< (length (string->list (substring\
    \ date 42 44))) 1))\n       (not (< (length (string->list (substring date 44 46)))\
    \ 1))\n       (not (< (length (string->list (substring date 46 48))) 1))\n   \
    \    (not (< (length (string->list (substring date 48 50))) 1))\n       (not (<\
    \ (length (string->list (substring date 50 52))) 1))\n       (not (< (length (string->list\
    \ (substring date 52 54))) 1))\n       (not (< (length (", "  (and (not (empty?\
    \ date))\n       (and (number? (length date))\n            (not (< 1 (length date)))\n\
    \            (not (< 31 (length date)))\n            (not (< 30 (length date)))\n\
    \            (not (< 29 (length date)))\n            (not (< 12 (length date))))\n\
    \       (and (number? (substring (date 0 2) 0 1))\n            (number? (substring\
    \ (date 0 2) 1 2))\n            (number? (substring (date 0 2) 3 4))\n       \
    \     (number? (substring (date 0 2) 5 6))\n            (number? (substring (date\
    \ 0 2) 7 8))\n            (number? (substring (date 0 2) 9 10))\n            (number?\
    \ (substring (date 0 2) 11 12))\n            (number? (substring (date 0 2) 1\
    \ 2)))\n       (and (number? (substring (date 0 2) 0 2))\n            (number?\
    \ (substring (date 0 2) 3 4))\n            (number? (substring (date 0 2) 5 6))\n\
    \            (number? (substring (date 0 2) 7 8))\n            (number? (substring\
    \ (date 0 2) 9 10))\n            (number? (substring (date 0 2) 11 12))\n    \
    \        (number? (substring (date 0 2) 1 2)))\n       (and (number? (substring\
    \ (date 0 2) 0 2))\n            (number? (substring (date 0 2) 3 4))\n       \
    \     (number? (substring (date 0 2) 5 6))\n            (number? (substring (date\
    \ 0 2) 7 8))\n            (number? (substring (date 0 2) 9 10))\n            (number?\
    \ (substring (date 0 2) 11 12))\n            (number? (substring (date 0 2) 1\
    \ 2)))\n       (and (number? (substring (date 0 2) 0 2))\n            (number?\
    \ (substring (date 0 2) 3 4))\n            (number? (substring (date 0 2) 5 6))\n\
    \            (number? (substring (date 0 2) 7 8))\n            (number? (substring\
    \ (date 0 2) 9 10))\n            (number? (substring (date 0 2) 11 12))\n    \
    \        (number? (substring (date 0 2) 1 2)))\n       (and (number? (substring\
    \ (date 0 2) 0 2))\n            (number? (substring (date 0 2) 3 4))\n       \
    \     (number? (substring (date 0 2) 5 6))\n            (number? (substring (date\
    \ 0 2) 7 8))\n            (number? (substring (date 0 2) 9 10))\n            (number?\
    \ (substring (date 0 2) 11 12))\n            (number? (substring (date 0 2) 1\
    \ 2)))\n       (and (number? (substring (date 0 2) 0 2))\n            (number?\
    \ (substring (date 0 2) 3 4))\n            (number? (substring (date 0 2) 5 6))\n\
    \            (number? (substring (date 0 2) 7 8))\n", "  (and (not (empty? date))\n\
    \       (not (< (length (string->list date)) 3))\n       (not (< (length (string->list\
    \ (substring date 0 2))) 1))\n       (not (< (length (string->list (substring\
    \ date 2 2))) 1))\n       (not (< (length (string->list (substring date 4 2)))\
    \ 1))\n       (not (< (length (string->list (substring date 6 2))) 1))\n     \
    \  (not (< (length (string->list (substring date 8 2))) 1))\n       (not (< (length\
    \ (string->list (substring date 10 2))) 1))\n       (not (< (length (string->list\
    \ (substring date 12 2))) 1))\n       (not (< (length (string->list (substring\
    \ date 4 2))) 1))\n       (not (< (length (string->list (substring date 6 2)))\
    \ 1))\n       (not (< (length (string->list (substring date 8 2))) 1))\n     \
    \  (not (< (length (string->list (substring date 10 2))) 1))\n       (not (< (length\
    \ (string->list (substring date 12 2))) 1))\n       (not (< (length (string->list\
    \ (substring date 2 2))) 1))\n       (not (< (length (string->list (substring\
    \ date 6 2))) 1))\n       (not (< (length (string->list (substring date 8 2)))\
    \ 1))\n       (not (< (length (string->list (substring date 10 2))) 1))\n    \
    \   (not (< (length (string->list (substring date 12 2))) 1))\n       (not (<\
    \ (length (string->list (substring date 4 2))) 1))\n       (not (< (length (string->list\
    \ (substring date 6 2))) 1))\n       (not (< (length (string->list (substring\
    \ date 8 2))) 1))\n       (not (< (length (string->list (substring date 10 2)))\
    \ 1))\n       (not (< (length (string->list (substring date 12 2))) 1))\n    \
    \   (not (< (length (string->list (substring date 6 2))) 1))\n       (not (< (length\
    \ (string->list (substring date 8 2))) 1))\n       (not (< (length (string->list\
    \ (substring date 10 2))) 1))\n       (not (< (length (string->list (substring\
    \ date 12 2))) 1))\n       (not (< (length (string->list (substring date 8 2)))\
    \ 1))\n       (not (< (length (string->list (substring date 10 2))) 1))\n    \
    \   (not (< (length (string->list (substring date 12 2))", "  (cond\n    [(empty?\
    \ date) #f]\n    [(< (length date) 4) #f]\n    [(< (length date) 6) #f]\n    [(<\
    \ (length date) 8) #f]\n    [(< (length date) 10) #f]\n    [(< (length date) 12)\
    \ #f]\n    [(< (length date) 13) #f]\n    [(< (length date) 14) #f]\n    [(< (length\
    \ date) 15) #f]\n    [(< (length date) 16) #f]\n    [(< (length date) 17) #f]\n\
    \    [(< (length date) 18) #f]\n    [(< (length date) 19) #f]\n    [(< (length\
    \ date) 20) #f]\n    [(< (length date) 21) #f]\n    [(< (length date) 22) #f]\n\
    \    [(< (length date) 23) #f]\n    [(< (length date) 24) #f]\n    [(< (length\
    \ date) 25) #f]\n    [(< (length date) 26) #f]\n    [(< (length date) 27) #f]\n\
    \    [(< (length date) 28) #f]\n    [(< (length date) 29) #f]\n    [(< (length\
    \ date) 30) #f]\n    [(< (length date) 31) #f]\n    [(< (length date) 32) #f]\n\
    \    [(< (length date) 33) #f]\n    [(< (length date) 34) #f]\n    [(< (length\
    \ date) 35) #f]\n    [(< (length date) 36) #f]\n    [(< (length date) 37) #f]\n\
    \    [(< (length date) 38) #f]\n    [(< (length date) 39) #f]\n    [(< (length\
    \ date) 40) #f]\n    [(< (length date) 41) #f]\n    [(< (length date) 42) #f]\n\
    \    [(< (length date) 43) #f]\n    [(< (length date) 44) #f]\n    [(< (length\
    \ date) 45) #f]\n    [(< (length date) 46) #f]\n    [(< (length date) 47) #f]\n\
    \    [(< (length date) 48) #f]\n    [(< (length date) 49) #f]\n    [(< (length\
    \ date) 50) #f]\n    [(< (length date) 51) #f]\n    [(< (length date) 52) #f]\n\
    \    [(< (length date) 53) #f", "  (cond\n    [(empty? date) #f]\n    [(< (length\
    \ (string->list date)) 3) #f]\n    [(< (length (string->list date)) 4) #f]\n \
    \   [(< (length (string->list date)) 5) #f]\n    [(< (length (string->list date))\
    \ 7) #f]\n    [(< (length (string->list date)) 8) #f]\n    [(< (length (string->list\
    \ date)) 9) #f]\n    [(< (length (string->list date)) 11) #f]\n    [(< (length\
    \ (string->list date)) 12) #f]\n    [(< (length (string->list date)) 13) #f]\n\
    \    [(< (length (string->list date)) 14) #f]\n    [(< (length (string->list date))\
    \ 15) #f]\n    [(< (length (string->list date)) 16) #f]\n    [(< (length (string->list\
    \ date)) 17) #f]\n    [(< (length (string->list date)) 18) #f]\n    [(< (length\
    \ (string->list date)) 19) #f]\n    [(< (length (string->list date)) 20) #f]\n\
    \    [(< (length (string->list date)) 21) #f]\n    [(< (length (string->list date))\
    \ 22) #f]\n    [(< (length (string->list date)) 23) #f]\n    [(< (length (string->list\
    \ date)) 24) #f]\n    [(< (length (string->list date)) 25) #f]\n    [(< (length\
    \ (string->list date)) 26) #f]\n    [(< (length (string->list date)) 27) #f]\n\
    \    [(< (length (string->list date)) 28) #f]\n    [(< (length (string->list date))\
    \ 29) #f]\n    [(< (length (string->list date)) 30) #f]\n    [(< (length (string->list\
    \ date)) 31) #f]\n    [(< (length (string->list date)) 32) #f]\n    [(< (length\
    \ (string->list date)) 33) #f]\n    [(< (length (string->list date)) 34) #f]\n\
    \    [(< (length (string->list date)) 35) #f]\n    [(< (length (string->list date))\
    \ 36) #f]\n    [(< (length (string->list date)) 37) #f]\n    [(< (length (string->list\
    \ date)) ", "  (cond\n    [(empty? date) #f]\n    [(< (length date) 4) #f]\n \
    \   [(< (length date) 7) #f]\n    [(< (length date) 10) #f]\n    [(< (length date)\
    \ 12) #f]\n    [(< (length date) 13) #f]\n    [(< (length date) 14) #f]\n    [(<\
    \ (length date) 15) #f]\n    [(< (length date) 16) #f]\n    [(< (length date)\
    \ 17) #f]\n    [(< (length date) 18) #f]\n    [(< (length date) 19) #f]\n    [(<\
    \ (length date) 20) #f]\n    [(< (length date) 21) #f]\n    [(< (length date)\
    \ 22) #f]\n    [(< (length date) 23) #f]\n    [(< (length date) 24) #f]\n    [(<\
    \ (length date) 25) #f]\n    [(< (length date) 26) #f]\n    [(< (length date)\
    \ 27) #f]\n    [(< (length date) 28) #f]\n    [(< (length date) 29) #f]\n    [(<\
    \ (length date) 30) #f]\n    [(< (length date) 31) #f]\n    [(< (length date)\
    \ 32) #f]\n    [(< (length date) 33) #f]\n    [(< (length date) 34) #f]\n    [(<\
    \ (length date) 35) #f]\n    [(< (length date) 36) #f]\n    [(< (length date)\
    \ 37) #f]\n    [(< (length date) 38) #f]\n    [(< (length date) 39) #f]\n    [(<\
    \ (length date) 40) #f]\n    [(< (length date) 41) #f]\n    [(< (length date)\
    \ 42) #f]\n    [(< (length date) 43) #f]\n    [(< (length date) 44) #f]\n    [(<\
    \ (length date) 45) #f]\n    [(< (length date) 46) #f]\n    [(< (length date)\
    \ 47) #f]\n    [(< (length date) 48) #f]\n    [(< (length date) 49) #f]\n    [(<\
    \ (length date) 50) #f]\n    [(< (length date) 51) #f]\n    [(< (length date)\
    \ 52) #f]\n    [(< (length date) 53) #f]\n    [(< (length date) 54) #"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

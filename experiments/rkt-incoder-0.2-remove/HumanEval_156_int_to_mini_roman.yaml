name: HumanEval_156_int_to_mini_roman
language: rkt
prompt: "#lang racket\n\n;; Given a positive integer, obtain its roman numeral equivalent\
  \ as a string,\n;; and return it in lowercase.\n;; Restrictions: 1 <= num <= 1000\n\
  ;; Examples:\n(define (int_to_mini_roman number)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate int_to_mini_roman))\n\
  \    (check-equal? (candidate 19) \"xix\")\n    (check-equal? (candidate 152) \"\
  clii\")\n    (check-equal? (candidate 251) \"ccli\")\n    (check-equal? (candidate\
  \ 426) \"cdxxvi\")\n    (check-equal? (candidate 500) \"d\")\n    (check-equal?\
  \ (candidate 1) \"i\")\n    (check-equal? (candidate 4) \"iv\")\n    (check-equal?\
  \ (candidate 43) \"xliii\")\n    (check-equal? (candidate 90) \"xc\")\n    (check-equal?\
  \ (candidate 94) \"xciv\")\n    (check-equal? (candidate 532) \"dxxxii\")\n    (check-equal?\
  \ (candidate 900) \"cm\")\n    (check-equal? (candidate 994) \"cmxciv\")\n    (check-equal?\
  \ (candidate 1000) \"m\")\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(<\
    \ number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n \
    \   [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(= number 0) \"zero\"]\n    [(= number 1) \"\
    one\"]\n    [(= number 2) \"two\"]\n    [(= number 3) \"three\"]\n    [(= number\
    \ 4) \"four\"]\n    [(= number 5) \"five\"]\n    [(= number 6) \"six\"]\n    [(=\
    \ number 7) \"seven\"]\n    [(= number 8) \"eight\"]\n    [(= number 9) \"nine\"\
    ]\n    [else (int_to_mini_roman number-1)]))\n", "  (cond\n    [(= number 0) \"\
    \"]\n    [(< number 1000) (int_to_mini_roman number)]\n    [else (let ([remainder\
    \ (modulo number 1000)])\n              (cond\n               [(= remainder 0)\
    \ \"\"]\n               [(< remainder 100) (int_to_mini_roman remainder)]\n  \
    \             [else (cons (char->string 'M) (int_to_mini_roman remainder))]))]))\n",
  "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10)\
    \ \"V\"]\n    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [(< number\
    \ 500) \"XL\"]\n    [(< number 1000) \"L\"]\n    [(< number 5000) \"XC\"]\n  \
    \  [(< number 10000) \"C\"]\n    [(< number 50000) \"CD\"]\n    [(< number 100000)\
    \ \"D\"]\n    [(< number 500000) \"CM\"]\n    [else \"M\"]\n  )\n)\n", "  (cond\n\
    \    [(< number 1) (error \"Invalid input: number must be positive.\")]\n    [else\
    \ (cond\n            [(< number 1000) (error \"Invalid input: number must be less\
    \ than 1000.\")]\n            [else (cond\n                    [else (cond\n \
    \                           [(< number 500) (error \"Invalid input: number must\
    \ be less than 500.\")]\n                            [(< number 100) (error \"\
    Invalid input: number must be less than 100.\")]\n                           \
    \ [(< number 50) (error \"Invalid input: number must be less than 50.\")]\n  \
    \                          [(< number 10) (error \"Invalid input: number must\
    \ be less than 10.\")]\n                            [(< number 1) (error \"Invalid\
    \ input: number must be less than 1.\")]\n                            [(< number\
    \ 0) (error \"Invalid input: number must be less than 0.\")]\n               \
    \             [(< number -1) (error \"Invalid input: number must be less than\
    \ -1.\")]\n                            [(< number -10) (error \"Invalid input:\
    \ number must be less than -10.\")]\n                            [(< number -100)\
    \ (error \"Invalid input: number must be less than -100.\")]\n               \
    \             [(< number -500) (error \"Invalid input: number must be less than\
    \ -500.\")]\n                            [(< number -1000) (error \"Invalid input:\
    \ number must be less than -1000.\")]\n                            [(< number\
    \ -10000) (error \"Invalid input: number must be less than -10000.\")]\n     \
    \                       [(< number -1000000) (error \"Invalid input: number must\
    \ be less than -1000000.\")]\n                            [(< number -100000000)\
    \ (error \"Invalid input: number must be less than -100000000.\")]\n         \
    \                   [(< number -10000000000) (error \"Invalid input: number must\
    \ be less than -10000000000.\")]\n                            [(< number -1000000000000)\
    \ (error \"Invalid input: number must be less than -1000000000000.\")]\n     \
    \                       [(< number -10000000000000) (error \"Invalid input: number\
    \ must be less than -10000000000000.\")]\n                            [(< number\
    \ -100000000000000) (error \"Invalid input: number must be less than -100000000000000.\"\
    )]\n                            [(< number -1000000000000000) (error \"Invalid\
    \ input: number must be less than -1000000000000000.\")]\n                   \
    \         [(< number -10000000000000000) (error \"Invalid input: number must be\
    \ less than -10000000000000000.\")]\n                            [(< number -100000000000000000)\
    \ (error \"Invalid input: number must be less than -100000000000000000.\")]\n\
    \                            [(< number -1000000000000000000) (error \"Invalid\
    \ input: number must be less than -1000000000000000000.\")]\n                \
    \            [(< number -10000000000000000000) (error \"Invalid input: number\
    \ must be less than -10000000000000000000.\")]\n                            [(<\
    \ number -100000000000000000000) (error ", "  (cond\n    [(< number 1) \"I\"]\n\
    \    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 40) \"XL\"]\n    [(< number 50) \"\
    L\"]\n    [(< number 90) \"XC\"]\n    [(< number 100) \"C\"]\n    [else \"?\"\
    ]\n  )\n)\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n \
    \   [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"\
    ]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]\n\
    \  )\n)\n", "  (cond\n    [(< number 1) (error \"Invalid input: must be greater\
    \ than 1\")]\n    [(< number 1000) (error \"Invalid input: must be less than 1000\"\
    )]\n    [else (mini_roman (- number 1))]))\n", "  (cond\n    [(< number 1) \"\
    I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50)\
    \ \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number\
    \ 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(= number 0) \"\"]\n   \
    \ [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n\
    \    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"\
    ]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9)\
    \ \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number\
    \ 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n  \
    \  [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"\
    XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number\
    \ 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n   \
    \ [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25)\
    \ \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(=\
    \ number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"\
    XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number\
    \ 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"\
    ]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number\
    \ 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n\
    \    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"\
    LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number\
    \ 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"\
    ]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(= number 0) \"\"]\n    [(=\
    \ number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n  \
    \  [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n\
    \    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"\
    IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12)\
    \ \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(=\
    \ number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"\
    ]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number\
    \ 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n   \
    \ [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25)\
    \ \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(=\
    \ number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"\
    XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number\
    \ 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"\
    ]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number\
    \ 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n\
    \    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"\
    LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number\
    \ 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"\
    ]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(< number 1) \"\"]\n    [(<\
    \ number 1000) (int_to_mini_roman number)]\n    [else (cons (char (floor (/ number\
    \ 1000))) (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1) \"I\"\
    ]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"\
    L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000)\
    \ \"M\"]\n    [else (int_to_mini_roman number)]\n  ))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10) \"V\"]\n    [(< number\
    \ 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else \"?\"]))\n", "  (cond\n \
    \   [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n\
    \    [(< number 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n", "  (cond\n\
    \    [(< number 1) (error \"Invalid input: must be greater than 1\")]\n    [else\
    \ (let ([roman (make-array (floor (/ number 100)) #:element-type 'string)])\n\
    \            (let loop ([i 0])\n              (cond\n                [(< i number)\
    \ roman]\n                [else (loop (+ i 1))]\n                [else (set! roman\
    \ (string-append roman \"M\")\n                             (loop (+ i 1)))]))]))\n",
  "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10)\
    \ \"V\"]\n    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else (int_to_mini_roman\
    \ number)])\n  )\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"\
    V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100)\
    \ \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M')) (int_to_mini_roman\
    \ number))]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"\
    ]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(<\
    \ number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n \
    \   [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(= number 0) \"\"]\n    [(< number 1) (int_to_mini_roman\
    \ number)]\n    [else (cons (char (floor (/ number 1000))) (int_to_mini_roman\
    \ \n                                           (- number 1000)))]))\n", "  (cond\n\
    \    [(< number 1) (error \"Invalid input: number must be greater than 1.\")]\n\
    \    [else (cond\n            [(= number 2) \"II\"]\n            [(= number 3)\
    \ \"III\"]\n            [(= number 4) \"IV\"]\n            [(= number 5) \"V\"\
    ]\n            [(= number 6) \"VI\"]\n            [(= number 7) \"VII\"]\n   \
    \         [(= number 8) \"VIII\"]\n            [(= number 9) \"IX\"]\n       \
    \     [(= number 10) \"X\"]\n            [(= number 11) \"XI\"]\n            [(=\
    \ number 12) \"XII\"]\n            [(= number 13) \"XIII\"]\n            [(= number\
    \ 14) \"XIV\"]\n            [(= number 15) \"XV\"]\n            [(= number 16)\
    \ \"XVI\"]\n            [(= number 17) \"XVII\"]\n            [(= number 18) \"\
    XVIII\"]\n            [(= number 19) \"XIX\"]\n            [(= number 20) \"XX\"\
    ]\n            [(= number 21) \"XXI\"]\n            [(= number 22) \"XXII\"]\n\
    \            [(= number 23) \"XXIII\"]\n            [(= number 24) \"XXIV\"]\n\
    \            [(= number 25) \"XXV\"]\n            [(= number 26) \"XXVI\"]\n \
    \           [(= number 27) \"XXVII\"]\n            [(= number 28) \"XXVIII\"]\n\
    \            [(= number 29) \"XXIX\"]\n            [(= number 30) \"XXX\"]\n \
    \           [(= number 31) \"XXXI\"]\n            [(= number 32) \"XXXII\"]\n\
    \            [(= number 33) \"XXXIII\"]\n            [(= number 34) \"XXXIV\"\
    ]\n            [(= number 35) \"XXXV\"]\n            [(= number 36) \"XXXVI\"\
    ]\n            [(= number 37) \"XXXVII\"]\n            [(= number 38) \"XXXVIII\"\
    ]\n            [(= number 39) \"XXXIX\"]\n            [(= number 40) \"XL\"]\n\
    \            [(= number 41) \"L\"]\n            [(= number 42) \"LX\"]\n     \
    \       [(= number 43) \"LXX\"]\n            [(= number 44) \"LXXX\"]\n      \
    \      [(= number 45) \"LXXXX\"]\n            [(= number 46) \"LXXXXX\"]\n   \
    \         [(= number 47) \"LXXXII\"]\n            [(= number 48) \"LXXXIII\"]\n\
    \            [(= number 49", "  (cond\n    [(< number 1) (error \"Invalid input:\
    \ number must be greater than 1\")]\n    [(< number 1000) (error \"Invalid input:\
    \ number must be less than 1000\")]\n    [else (mini_roman_to_string number)]\n\
    \  ))\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M'))\n             \
    \   (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1) \"\"]\n   \
    \ [(< number 1000) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ (char->integer 'M')) (int_to_mini_roman number))]))\n", "  (cond\n    [(= number\
    \ 0) \"\"]\n    [(< number 1) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ (char->integer 'M))\n               (int_to_mini_roman number))]))\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(<\
    \ number 9) \"IX\"]\n    [(< number 10) \"X\"]\n    [(< number 40) \"XL\"]\n \
    \   [(< number 50) \"L\"]\n    [(< number 90) \"XC\"]\n    [(< number 100) \"\
    C\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number\
    \ 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"]\n    [(< number\
    \ 10) \"X\"]\n    [(< number 40) \"XL\"]\n    [(< number 50) \"L\"]\n    [(< number\
    \ 90) \"XC\"]\n    [(< number 100) \"C\"]\n    [else \"?\"]\n  )\n)\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(<\
    \ number 9) \"IX\"]\n    [(< number 10) \"X\"]\n    [(< number 40) \"XL\"]\n \
    \   [(< number 50) \"L\"]\n    [(< number 90) \"XC\"]\n    [(< number 100) \"\
    C\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number\
    \ 5) \"IV\"]\n    [(< number 10) \"V\"]\n    [(< number 50) \"IX\"]\n    [(< number\
    \ 100) \"X\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n   \
    \ [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n\
    \    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000)\
    \ \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number\
    \ 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number\
    \ 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else\
    \ (int_to_mini_roman number)])\n)\n", "  (cond\n    [(= number 0) \"\"]\n    [(=\
    \ number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n  \
    \  [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n\
    \    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"\
    IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12)\
    \ \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(=\
    \ number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"\
    ]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number\
    \ 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n   \
    \ [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25)\
    \ \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(=\
    \ number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"\
    XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number\
    \ 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"\
    ]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number\
    \ 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n\
    \    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"\
    LXC\"]\n    [(= number 44) \"LXCC\"]\n    [(= number 45) \"LXCCC\"]\n    [(= number\
    \ 46) \"LXCCCC\"]\n    [(= number 47) \"LXCCCCC\"]\n    [(= number 48) \"LXCCCCCC\"\
    ]\n    [(", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(=\
    \ number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n \
    \   [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"\
    ]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10)\
    \ \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number\
    \ 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n   \
    \ [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"\
    XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number\
    \ 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n\
    \    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26)\
    \ \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n \
    \   [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number\
    \ 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"\
    ]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number\
    \ 49) \"LXXXIV\"]", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M)) (int_to_mini_roman\
    \ number))]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)]\n  ))\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M')) (int_to_mini_roman\
    \ number))]))\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (let ([remainder (modulo number 1000)])\n            (cond\n\
    \              [(< remainder 100) (int_to_mini_roman remainder)]\n           \
    \   [(< remainder 500) (int_to_mini_roman remainder)]\n              [(< remainder\
    \ 1000) (int_to_mini_roman remainder)]\n              [else (int_to_mini_roman\
    \ remainder)]))]))\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000)\
    \ (int_to_mini_roman number)]\n    [else (cons (char->string (char->integer 'M'))\n\
    \                (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1)\
    \ (error \"Invalid input: number must be positive.\")]\n    [else (let ([remainder\
    \ (modulo number 1000)])\n            (cond\n              [(< remainder 0) (error\
    \ \"Invalid input: number must be positive.\")]\n              [(< remainder 100)\
    \ (cons (char 'M) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 500) (cons (char 'D) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 1000) (cons (char 'C) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 5000) (cons (char 'L) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 10000) (cons (char 'X) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 50000) (cons (char 'V) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 100000) (cons (char 'I) (int_to_mini_roman remainder))]\n              [(< remainder\
    \ 500000) (cons (char 'IV) (int_to_mini_roman remainder))]\n              [(<\
    \ remainder 1000000) (cons (char 'III) (int_to_mini_roman remainder))]\n     \
    \         [(< remainder 5000000) (cons (char 'II) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 10000000) (cons (char 'I) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 50000000) (cons (char 'V) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 100000000) (cons (char 'IV) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 500000000) (cons (char 'VI) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 1000000000) (cons (char 'IX) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 5000000000) (cons (char 'X) (int_to_mini_roman remainder))]\n\
    \              [(< remainder 10000000000) (cons (char 'XL) (int_to_mini_roman\
    \ remainder))]\n              [(< remainder 50000000000) (cons (char 'L) (int_to_mini_roman\
    \ remainder))]\n              [(< remainder 100000000000) (cons (char 'XC) (int_to_mini_roman\
    \ remainder))]\n", "  (cond\n    [(< number 1) (error \"Invalid input: must be\
    \ greater than 1\")]\n    [(< number 1000) (error \"Invalid input: must be less\
    \ than 1000\")]\n    [else (mini_roman_to_string number)]))\n", "  (cond\n   \
    \ [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n\
    \    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"\
    D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(= number\
    \ 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number\
    \ 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number\
    \ 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(=\
    \ number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n \
    \   [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14)\
    \ \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number\
    \ 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n\
    \    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"\
    XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(=\
    \ number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"\
    ]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number\
    \ 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n\
    \    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number\
    \ 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"\
    ]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number\
    \ 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(=\
    \ number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"\
    ]\n    [(= number 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number\
    \ 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", "  (cond\n\
    \    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n\
    \    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"\
    ]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"\
    VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number\
    \ 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n   \
    \ [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"\
    ]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number\
    \ 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(=\
    \ number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"\
    ]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27)\
    \ \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n \
    \   [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32)\
    \ \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n\
    \    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37)\
    \ \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n\
    \    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(= number 42) \"\
    LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number\
    \ 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"\
    ]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(<\
    \ number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n\
    \    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(= number 0) \"\"\
    ]\n    [(< number 1) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ 'M) (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1) (error \"\
    Invalid input: number must be positive.\")]\n    [else (cond\n             [(<\
    \ number 1000) (error \"Invalid input: number must be <= 1000.\")]\n         \
    \    [(< number 5000) (cond\n                                [(< number 100) (error\
    \ \"Invalid input: number must be <= 500.\")]\n                              \
    \  [(< number 500) (cond\n                                                   [(<\
    \ number 50) (error \"Invalid input: number must be <= 400.\")]\n            \
    \                                       [(< number 40) (error \"Invalid input:\
    \ number must be <= 300.\")]\n                                               \
    \    [(< number 30) (error \"Invalid input: number must be <= 200.\")]\n     \
    \                                              [(< number 20) (error \"Invalid\
    \ input: number must be <= 100.\")]\n                                        \
    \           [(< number 10) (error \"Invalid input: number must be <= 50.\")]\n\
    \                                                   [(< number 5) (error \"Invalid\
    \ input: number must be <= 40.\")]\n                                         \
    \          [(< number 4) (error \"Invalid input: number must be <= 30.\")]\n \
    \                                                  [(< number 3) (error \"Invalid\
    \ input: number must be <= 20.\")]\n                                         \
    \          [(< number 2) (error \"Invalid input: number must be <= 10.\")]\n \
    \                                                  [(< number 1) (error \"Invalid\
    \ input: number must be <= 5.\")]\n                                          \
    \         [else (error \"Invalid input: number must be <= 1.\")]\n           \
    \                                    )]\n                                [(< number\
    \ 400) (error \"Invalid input: number must be <= 500.\")]\n                  \
    \              [(< number 300) (error \"Invalid input: number must be <= 400.\"\
    )]\n                                [(< number 200) (error \"Invalid input: number\
    \ must be <= 300.\")]\n                                [(< number 100) (error\
    \ \"Invalid input: number must be <= 200.\")]\n                              \
    \  [(< number 50) (error \"Invalid input: number must be <= 100.\")]\n       \
    \                         [(< number 40) (error \"Invalid input: number must be\
    \ <= 50.\")]\n                                [(< number 30) (error \"Invalid\
    \ input: number must be <= 40.\")]\n                                [(< number\
    \ 20) (error \"Invalid input: number must be <= 30.\")]\n                    \
    \            [(< number 10) (error \"Invalid input: number must be <= 20.\")]\n\
    \                                [(< number 5) (error \"Invalid input: number\
    \ must be <= 10.\")]\n                                [(< number 4) (error \"\
    Invalid input: number must be <= 5.\")]\n                                [(< number\
    \ 3) (error \"Invalid input: number must be <= 1.\")]\n                      \
    \          [(< number 2) (error \"Invalid input: number must be <= 4.\")]\n  \
    \                              [(< number 1) (error \"Invalid input: ", "  (let\
    \ loop ((num number) (roman (make-string 1000 #\\space)))\n    (cond\n      [(=\
    \ num 0) (set! roman roman (string-append roman \"M\"))]\n      [(< num 100) (set!\
    \ roman roman (string-append roman \"D\"))]\n      [(< num 500) (set! roman roman\
    \ (string-append roman \"C\"))]\n      [(< num 1000) (set! roman roman (string-append\
    \ roman \"L\"))]\n      [(< num 5000) (set! roman roman (string-append roman \"\
    X\"))]\n      [(< num 10000) (set! roman roman (string-append roman \"V\"))]\n\
    \      [(< num 100000) (set! roman roman (string-append roman \"I\"))]\n     \
    \ [else (set! roman roman (string-append roman \"I\"))]\n      (loop (sub1 num)\
    \ (sub1 roman))]))\n  (string-lower (string-append roman \"M\")))\n", "  (let\
    \ loop ((num number) (acc '()))\n    (cond [(< num 1000) (cons num (loop (/ num\
    \ 100) (cons (mod num 100) acc)))]\n          [(< num 1000)\n           (cons\
    \ (mod num 100) (loop (/ num 100) (cons (mod num 10) acc)))]\n          [else\
    \ (cons (mod num 10) acc)])))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(<\
    \ number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n   \
    \ [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"\
    M\"]\n    [else \"?\"]))\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number\
    \ 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number\
    \ 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number\
    \ 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(=\
    \ number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n\
    \    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15)\
    \ \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(=\
    \ number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"\
    ]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23)\
    \ \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(=\
    \ number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"\
    ]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number\
    \ 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"\
    ]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number\
    \ 49) \"LXXXIV\"]", "  (cond\n    [(< number 1) (error \"Invalid number: less\
    \ than 1\")]\n    [(< number 1000) (error \"Invalid number: less than 1000\")]\n\
    \    [else (mini_roman (- number 1))]))\n", "  (cond\n    [(< number 1) \"\"]\n\
    \    [(< number 1000) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ (char->integer number)) (int_to_mini_roman number))]))\n", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(<\
    \ number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n\
    \    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) (error\
    \ \"Invalid input: number must be positive.\")]\n    [else (cond\n           \
    \  [(< number 1000) (error \"Invalid input: number must be less than 1000.\")]\n\
    \             [(< number 900) (error \"Invalid input: number must be less than\
    \ 900.\")]\n             [(< number 500) (error \"Invalid input: number must be\
    \ less than 500.\")]\n             [(< number 400) (error \"Invalid input: number\
    \ must be less than 400.\")]\n             [(< number 300) (error \"Invalid input:\
    \ number must be less than 300.\")]\n             [(< number 200) (error \"Invalid\
    \ input: number must be less than 200.\")]\n             [(< number 100) (error\
    \ \"Invalid input: number must be less than 100.\")]\n             [(< number\
    \ 50) (error \"Invalid input: number must be less than 50.\")]\n             [(<\
    \ number 40) (error \"Invalid input: number must be less than 40.\")]\n      \
    \       [(< number 30) (error \"Invalid input: number must be less than 30.\"\
    )]\n             [(< number 20) (error \"Invalid input: number must be less than\
    \ 20.\")]\n             [(< number 10) (error \"Invalid input: number must be\
    \ less than 10.\")]\n             [(< number 5) (error \"Invalid input: number\
    \ must be less than 5.\")]\n             [(< number 4) (error \"Invalid input:\
    \ number must be less than 4.\")]\n             [(< number 3) (error \"Invalid\
    \ input: number must be less than 3.\")]\n             [(< number 2) (error \"\
    Invalid input: number must be less than 2.\")]\n             [(< number 1) (error\
    \ \"Invalid input: number must be less than 1.\")]\n             [(> number 1)\
    \ (error \"Invalid input: number must be greater than 1.\")]\n             [(>\
    \ number 2) (error \"Invalid input: number must be greater than 2.\")]\n     \
    \        [(> number 3) (error \"Invalid input: number must be greater than 3.\"\
    )]\n             [(> number 4) (error \"Invalid input: number must be greater\
    \ than 4.\")]\n             [(> number 5) (error \"Invalid input: number must\
    \ be greater than 5.\")]\n             [(> number 6) (error \"Invalid input: number\
    \ must be greater than 6.\")]\n             [(> number 7) (error \"Invalid input:\
    \ number must be greater than 7.\")]\n             [(> number 8) (error \"Invalid\
    \ input: number must be greater than 8.\")]\n             [(> number 9) (error\
    \ \"Invalid input: number must be greater than 9.\")]\n             [(> number\
    \ 10) (error \"Invalid input: number must be greater than 10.\")]\n          \
    \   [(> number 11) (error \"Invalid input: number must be greater than 11.\")]\n",
  "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"\
    II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5)\
    \ \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number\
    \ 10) \"V\"]\n    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [(<\
    \ number 500) \"XL\"]\n    [(< number 1000) \"L\"]\n    [else \"M\"]\n  )\n)\n",
  "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"\
    II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5)\
    \ \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"XLI\"]\n  \
    \  [(= number 42) \"XLII\"]\n    [(= number 43) \"XLIII\"]\n    [(= number 44)\
    \ \"XLIIII\"]\n    [(= number 45) \"XLIV\"]\n    [(= number 46) \"XLV\"]\n   \
    \ [(= number 47) \"XLVI\"]\n    [(= number 48) \"XLVII\"]\n    [(= number 49)\
    \ \"", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number\
    \ 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number\
    \ 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) (error \"Invalid input: number must be greater\
    \ than 1\")]\n    [(< number 1000) (error \"Invalid input: number must be less\
    \ than 1000\")]\n    [else (mini_roman (- number 1))]))\n", "  (cond\n    [(<\
    \ number 1) (error \"Invalid input: number must be greater than 1.\")]\n    [else\
    \ (cond\n             [(= number 2) \"II\"]\n             [(= number 3) \"III\"\
    ]\n             [(= number 4) \"IV\"]\n             [(= number 5) \"V\"]\n   \
    \          [(= number 6) \"VI\"]\n             [(= number 7) \"VII\"]\n      \
    \       [(= number 8) \"VIII\"]\n             [(= number 9) \"IX\"]\n        \
    \     [(= number 10) \"X\"]\n             [(= number 11) \"XI\"]\n           \
    \  [(= number 12) \"XII\"]\n             [(= number 13) \"XIII\"]\n          \
    \   [(= number 14) \"XIV\"]\n             [(= number 15) \"XV\"]\n           \
    \  [(= number 16) \"XVI\"]\n             [(= number 17) \"XVII\"]\n          \
    \   [(= number 18) \"XVIII\"]\n             [(= number 19) \"XIX\"]\n        \
    \     [(= number 20) \"XX\"]\n             [(= number 21) \"XXI\"]\n         \
    \    [(= number 22) \"XXII\"]\n             [(= number 23) \"XXIII\"]\n      \
    \       [(= number 24) \"XXIV\"]\n             [(= number 25) \"XXV\"]\n     \
    \        [(= number 26) \"XXVI\"]\n             [(= number 27) \"XXVII\"]\n  \
    \           [(= number 28) \"XXVIII\"]\n             [(= number 29) \"XXIX\"]\n\
    \             [(= number 30) \"XXX\"]\n             [(= number 31) \"XXXI\"]\n\
    \             [(= number 32) \"XXXII\"]\n             [(= number 33) \"XXXIII\"\
    ]\n             [(= number 34) \"XXXIV\"]\n             [(= number 35) \"XXXV\"\
    ]\n             [(= number 36) \"XXXVI\"]\n             [(= number 37) \"XXXVII\"\
    ]\n             [(= number 38) \"XXXVIII\"]\n             [(= number 39) \"XXXIX\"\
    ]\n             [(= number 40) \"XL\"]\n             [(= number 41) \"L\"]\n \
    \            [(= number 42) \"LX\"]\n             [(= number 43) \"LXX\"]\n  \
    \           [(= number 44) \"LXXX\"]\n             [(= number 45) \"LXXXX\"]\n\
    \             [(= number 46) \"LXXXXX\"]\n             [(= number 47) \"LXXXII\"\
    ]\n             [(= number 48) \"LXXXIII\"]\n             [(= number 49", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(=\
    \ number 0) \"zero\"]\n    [(= number 1) \"one\"]\n    [(= number 2) \"two\"]\n\
    \    [(= number 3) \"three\"]\n    [(= number 4) \"four\"]\n    [(= number 5)\
    \ \"five\"]\n    [(= number 6) \"six\"]\n    [(= number 7) \"seven\"]\n    [(=\
    \ number 8) \"eight\"]\n    [(= number 9) \"nine\"]\n    [else (int_to_mini_roman\
    \ number-1)]\n  )\n)\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 5)\
    \ \"M\"]\n    [(< number 10) \"CM\"]\n    [(< number 50) \"D\"]\n    [(< number\
    \ 100) \"CD\"]\n    [(< number 500) \"C\"]\n    [(< number 1000) \"XC\"]\n   \
    \ [else (int_to_mini_roman number)])\n)\n", "  (cond\n    [(< number 1) \"\"]\n\
    \    [(< number 1000) (int_to_mini_roman number)]\n    [else (cons (char (floor\
    \ (/ number 1000))) (int_to_mini_roman \n                                    \
    \       (- number 1000)))]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number\
    \ 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number\
    \ 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else\
    \ \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n\
    \    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"\
    ]))\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number\
    \ 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number\
    \ 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) (error \"Invalid input: number must be positive.\"\
    )]\n    [else (let ([roman (make-array (+ 3 (- number 1))\n                  \
    \                :element-type 'string\n                                  :initial-element\
    \ 'zero))\n              (i 0)\n              (j 0)\n              (k 0)\n   \
    \           (l 0)\n              (m 0)\n              (n 0)\n              (o\
    \ 0)\n              (p 0)\n              (q 0)\n              (t 0)\n        \
    \      (f 0)\n              (g 0)\n              (a 0)\n              (b 0)\n\
    \              (c 0)\n              (d 0)\n              (e 0)\n             \
    \ (f 0)\n              (g 0)\n              (a 0)\n              (b 0)\n     \
    \         (c 0)\n              (d 0)\n              (e 0)\n              (f 0)\n\
    \              (g 0)\n              (a 0)\n              (b 0)\n             \
    \ (c 0)\n              (d 0)\n              (e 0)\n              (f 0)\n     \
    \         (g 0)\n              (a 0)\n              (b 0)\n              (c 0)\n\
    \              (d 0)\n              (e 0)\n              (f 0)\n             \
    \ (g 0)\n              (a 0)\n              (b 0)\n              (c 0)\n     \
    \         (d 0)\n              (e 0)\n              (f 0)\n              (g 0)\n\
    \              (a 0)\n              (b 0)\n              (c 0)\n             \
    \ (d 0)\n              (e 0)\n              (f 0)\n              (g 0)\n     \
    \         (a 0)\n              (b 0)\n              (c 0)\n              (d 0)\n\
    \              (e 0)\n              (f 0)\n              (g 0)\n             \
    \ (a 0)\n              (b 0)\n              (c 0)\n              (d 0)\n     \
    \         (e 0)\n              (f 0)\n              (g 0)\n              (a 0)\n\
    \              (b 0)\n              (c 0)\n              (d 0)\n             \
    \ (e 0)\n              (f 0)\n              (g 0)\n              (a 0)\n     \
    \         (b 0)\n              (c 0)\n              (d 0)\n              (e 0)\n\
    \              (f 0)\n              (g 0)\n              (a 0)\n             \
    \ (b 0)\n              (c 0)\n              (d 0)\n              (e 0)\n     \
    \         (f 0)\n              (g 0)\n              (a 0)\n              (b 0)\n\
    \              (c 0)", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"\
    V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100)\
    \ \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M'))\n             \
    \   (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1) \"\"]\n   \
    \ [(< number 1000) (int_to_mini_roman number)]\n    [else (let ([remainder (modulo\
    \ number 1000)])\n            (cond\n              [(< remainder 0) \"\"]\n  \
    \            [(< remainder 100) (int_to_mini_roman remainder)]\n             \
    \ [else (append (int_to_mini_roman remainder)\n                          (mini_roman_numeral\
    \ (- remainder 1000))\n                          \"\")]))]))\n", "  (cond\n  \
    \  [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10) \"V\"]\n\
    \    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else \"?\"]))\n",
  "  (cond\n    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5)\
    \ \"V\"]\n    [(< number 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n",
  "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"\
    II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5)\
    \ \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number\
    \ 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number\
    \ 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (let loop\
    \ ((num number) (acc '()))\n    (cond ((< num 1000) (cons num (loop (quotient\
    \ num 1000) (cons (remainder num 1000) acc))))\n          ((< num 900) (cons num\
    \ (loop (quotient num 900) (cons (remainder num 900) acc))))\n          ((< num\
    \ 500) (cons num (loop (quotient num 500) (cons (remainder num 500) acc))))\n\
    \          ((< num 400) (cons num (loop (quotient num 400) (cons (remainder num\
    \ 400) acc))))\n          ((< num 100) (cons num (loop (quotient num 100) (cons\
    \ (remainder num 100) acc))))\n          ((< num 90) (cons num (loop (quotient\
    \ num 90) (cons (remainder num 90) acc))))\n          ((< num 50) (cons num (loop\
    \ (quotient num 50) (cons (remainder num 50) acc))))\n          ((< num 40) (cons\
    \ num (loop (quotient num 40) (cons (remainder num 40) acc))))\n          ((<\
    \ num 10) (cons num (loop (quotient num 10) (cons (remainder num 10) acc))))\n\
    \          ((< num 9) (cons num (loop (quotient num 9) (cons (remainder num 9)\
    \ acc))))\n          ((< num 5) (cons num (loop (quotient num 5) (cons (remainder\
    \ num 5) acc))))\n          ((< num 4) (cons num (loop (quotient num 4) (cons\
    \ (remainder num 4) acc))))\n          ((< num 1) (cons num (loop (quotient num\
    \ 1) (cons (remainder num 1) acc))))\n          ((< num 0) (cons num (loop (quotient\
    \ num 0) (cons (remainder num 0) acc))))\n          (else (cons num (loop (quotient\
    \ num 100) (cons (remainder num 100) acc)))))))\n", "  (cond\n    [(= number 0)\
    \ \"\"]\n    [(< number 1) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ (char->integer 'M'))\n                (int_to_mini_roman number))]))\n", " \
    \ (cond\n    [(< number 1) (error \"Invalid input: must be greater than 1\")]\n\
    \    [(< number 1000) (error \"Invalid input: must be less than 1000\")]\n   \
    \ [else (mini_roman_to_string number)]))\n", "  (cond\n    [(= number 0) \"\"\
    ]\n    [(< number 1000) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ (char->integer 'M'))\n              (int_to_mini_roman number))]))\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 9) \"IX\"]\n    [(< number 10) \"X\"]\n    [else (int_to_mini_roman\
    \ number-1)]))\n", "  (cond\n    [(= number 0) \"zero\"]\n    [(= number 1) \"\
    one\"]\n    [(= number 2) \"two\"]\n    [(= number 3) \"three\"]\n    [(= number\
    \ 4) \"four\"]\n    [(= number 5) \"five\"]\n    [(= number 6) \"six\"]\n    [(=\
    \ number 7) \"seven\"]\n    [(= number 8) \"eight\"]\n    [(= number 9) \"nine\"\
    ]\n    [else (int_to_mini_roman \n            (- number 1)\n            (append\
    \ (int_to_mini_roman \n                      (/ number 10)\n                 \
    \     (list \"ten\" \"eleven\" \"twelve\"))\n                    (int_to_mini_roman\
    \ \n                      (/ number 100)\n                      (list \"hundred\"\
    \ \"thousand\" \"million\"))))))\n", "  (cond\n    [(= number 0) \"\"]\n    [(=\
    \ number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n  \
    \  [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n\
    \    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"\
    IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12)\
    \ \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(=\
    \ number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"\
    ]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number\
    \ 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n   \
    \ [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25)\
    \ \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(=\
    \ number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"\
    XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number\
    \ 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"\
    ]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number\
    \ 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n\
    \    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"\
    LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number\
    \ 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"\
    ]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(< number 1) \"I\"]\n    [(<\
    \ number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n   \
    \ [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"\
    M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number\
    \ 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"]\n    [(< number\
    \ 10) \"X\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) (error \"Invalid\
    \ input: number must be positive.\")]\n    [else (cond\n             [(< number\
    \ 1000) (error \"Invalid input: number must be less than 1000.\")]\n         \
    \    [(< number 5000) (cond\n                                [(< number 100) (error\
    \ \"Invalid input: number must be less than 500.\")]\n                       \
    \         [(< number 500) (cond\n                                            \
    \       [(< number 50) (error \"Invalid input: number must be less than 100.\"\
    )]\n                                                   [(< number 50) (error \"\
    Invalid input: number must be less than 50.\")]\n                            \
    \                       [(< number 10) (error \"Invalid input: number must be\
    \ less than 5.\")]\n                                                   [(< number\
    \ 5) (error \"Invalid input: number must be less than 1.\")]\n               \
    \                                    [(< number 1) (error \"Invalid input: number\
    \ must be less than 0.\")]\n                                                 \
    \  [else (error \"Invalid input: number must be less than 0.\")]\n           \
    \                                       )]\n                                [(<\
    \ number 500) (error \"Invalid input: number must be less than 500.\")]\n    \
    \                            [(< number 1000) (error \"Invalid input: number must\
    \ be less than 1000.\")]\n                                [(< number 5000) (error\
    \ \"Invalid input: number must be less than 5000.\")]\n                      \
    \          [(< number 10000) (error \"Invalid input: number must be less than\
    \ 10000.\")]\n                                [(< number 50000) (error \"Invalid\
    \ input: number must be less than 50000.\")]\n                               \
    \ [(< number 100000) (error \"Invalid input: number must be less than 100000.\"\
    )]\n                                [(< number 500000) (error \"Invalid input:\
    \ number must be less than 500000.\")]\n                                [(< number\
    \ 1000000) (error \"Invalid input: number must be less than 1000000.\")]\n   \
    \                             [(< number 5000000) (error \"Invalid input: number\
    \ must be less than 5000000.\")]\n                                [(< number 10000000)\
    \ (error \"Invalid input: number must be less than 10000000.\")]\n           \
    \                     [(< number 50000000) (error \"Invalid input: number must\
    \ be less than 50000000.\")]\n                                [(< number 100000000)\
    \ (error \"Invalid input: number must be less than 100000000.\")]\n          \
    \                      [(< number 500000000) (error \"Invalid input: number must\
    \ be less than 500000000.\")]\n                                [(< number 1000000000)\
    \ (error \"Invalid input: number must be less than 1000000000.\")]\n         \
    \                       [(< number 5000000000) (error \"Invalid input: number\
    \ must be less than 5000000000.\")]\n                                [(< number\
    \ 10000000000) (error \"Invalid input: number must be less than 10000000000.\"\
    )]\n                                [(< number 50000000000) (error \"Invalid input:\
    \ number must be less than 50000000000.\")]", "  (cond\n    [(< number 1) \"I\"\
    ]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"\
    L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000)\
    \ \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number\
    \ 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number\
    \ 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number\
    \ 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(=\
    \ number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n\
    \    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15)\
    \ \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(=\
    \ number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"\
    ]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23)\
    \ \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(=\
    \ number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"\
    ]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"XLI\"]\n    [(= number 42) \"XLII\"]\n    [(= number 43) \"XLIII\"]\n    [(=\
    \ number 44) \"XLIIII\"]\n    [(= number 45) \"XLIV\"]\n    [(= number 46) \"\
    XLV\"]\n    [(= number 47) \"XLVI\"]\n    [(= number 48) \"XLVII\"]\n    [(= number\
    \ 49) \"", "  (cond\n    [(= number 0) \"zero\"]\n    [(= number 1) \"one\"]\n\
    \    [(= number 2) \"two\"]\n    [(= number 3) \"three\"]\n    [(= number 4) \"\
    four\"]\n    [(= number 5) \"five\"]\n    [(= number 6) \"six\"]\n    [(= number\
    \ 7) \"seven\"]\n    [(= number 8) \"eight\"]\n    [(= number 9) \"nine\"]\n \
    \   [else (int_to_mini_roman number-1)]))\n", "  (cond\n    [(< number 1) \"\"\
    ]\n    [(< number 1000) (int_to_mini_roman number)]\n    [else (cons (int_to_mini_roman\
    \ number) (int_to_mini_roman number))]\n  ))\n", "  (cond\n    [(< number 1) \"\
    I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50)\
    \ \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number\
    \ 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", "  (cond\n    [(<\
    \ number 1) (error \"Invalid input: number must be positive.\")]\n    [(< number\
    \ 1000) (error \"Invalid input: number must be less than 1000.\")]\n    [else\
    \ (let ([roman \"M\"])\n            (cond\n              [(< number 10)\n    \
    \           (cond\n                 [(< roman \"M\")\n                   (cond\n\
    \                     [(< number 100)\n                       (cond\n        \
    \                 [(< roman \"D\")\n                         (cond\n         \
    \                    [(< number 1000)\n                               (cond\n\
    \                                 [(< roman \"C\")\n                         \
    \        (cond\n                                     [(< number 900)\n       \
    \                                (cond\n                                     \
    \    [(< roman \"X\")\n                                         (cond\n      \
    \                                       [(< number 800)\n                    \
    \                          (cond\n                                           \
    \     [(< roman \"V\")\n                                                 (cond\n\
    \                                                     [(< number 700)\n      \
    \                                                (cond\n                     \
    \                                    [(< roman \"I\")\n                      \
    \                                   (cond\n                                  \
    \                           [(< roman \"N\")\n                               \
    \                              (cond\n                                       \
    \                          [(< number 600)\n                                 \
    \                                 (cond\n                                    \
    \                                 [(< roman \"I\")\n                         \
    \                                            (cond\n                         \
    \                                                [(< roman \"V\")\n          \
    \                                                               (cond\n      \
    \                                                                       [(< roman\
    \ \"I\")\n                                                                   \
    \          (cond\n                                                           \
    \                      [(< roman \"I\")\n                                    \
    \                                             (cond\n                        \
    \                                                             [(< roman \"I\"\
    )\n                                                                          \
    \           (cond\n                                                          \
    \                               [(< roman \"I\")\n                           \
    \                                                              (cond\n       \
    \                                                                            \
    \          [(< roman \"I\")\n                                                \
    \                                             (cond\n                        \
    \                                                                         [(<\
    \ roman \"I\")\n                                                             \
    \                                    (cond\n                                 \
    \                                                                    [(< roman\
    \ \"I\")\n                                                                   \
    \                                  (cond\n                                   \
    \                                                                      [(< roman\
    \ \"I\")\n                                                                   \
    \                                      (cond\n                               \
    \                                                                            \
    \  [(< roman \"I\")\n                                                        \
    \                                                     (cond\n                \
    \                                                                            \
    \                     [(< roman \"I\")\n                                     \
    \                                                                            (cond\n\
    \                                                                            \
    \                                         [(< roman \"I\")\n                 \
    \                                                                            \
    \                        (cond\n                                             \
    \                                                                            [(<\
    \ roman \"I\")\n                                                             \
    \                                                            (cond\n         \
    \                                                                            \
    \                                        [(< roman \"I\")\n                  \
    \                                                                            \
    \                               (cond\n                                      \
    \                                                                            \
    \               [(< roman \"I\")\n                                           \
    \                                                                            \
    \          (cond\n                                                           \
    \                                                                          [(<\
    \ roman \"I\")\n                                                             \
    \                                                                        (cond\n\
    \                                                                            \
    \                                                             [(< roman \"I\"\
    )\n                                                                          \
    \                                                                            \
    \      (cond\n                                                               \
    \                                                                            \
    \                     [(< roman \"I\")\n                                     \
    \                                                                            \
    \                                               (cond\n                      \
    \                                                                            \
    \                                                                  [(< ", "  (cond\n\
    \    [(< number 1) (error \"Invalid input: number must be positive.\")]\n    [else\
    \ (cond\n            [(< number 1000) (error \"Invalid input: number must be less\
    \ than 1000.\")]\n            [else (cond\n                    [else (cond\n \
    \                           [(< number 500) (error \"Invalid input: number must\
    \ be less than 500.\")]\n                            [(< number 100) (error \"\
    Invalid input: number must be less than 100.\")]\n                           \
    \ [(< number 50) (error \"Invalid input: number must be less than 50.\")]\n  \
    \                          [(< number 10) (error \"Invalid input: number must\
    \ be less than 10.\")]\n                            [(< number 1) (error \"Invalid\
    \ input: number must be less than 1.\")]\n                            [(< number\
    \ 0) (error \"Invalid input: number must be less than 0.\")]\n               \
    \             [(< number -1) (error \"Invalid input: number must be less than\
    \ -1.\")]\n                            [(< number -10) (error \"Invalid input:\
    \ number must be less than -10.\")]\n                            [(< number -50)\
    \ (error \"Invalid input: number must be less than -50.\")]\n                \
    \            [(< number -100) (error \"Invalid input: number must be less than\
    \ -100.\")]\n                            [(< number -500) (error \"Invalid input:\
    \ number must be less than -500.\")]\n                            [(< number -1000)\
    \ (error \"Invalid input: number must be less than -1000.\")]\n              \
    \              [(< number -10000) (error \"Invalid input: number must be less\
    \ than -10000.\")]\n                            [(< number -100000) (error \"\
    Invalid input: number must be less than -100000.\")]\n                       \
    \     [(< number -1000000) (error \"Invalid input: number must be less than -1000000.\"\
    )]\n                            [(< number -10000000) (error \"Invalid input:\
    \ number must be less than -10000000.\")]\n                            [(< number\
    \ -100000000) (error \"Invalid input: number must be less than -100000000.\")]\n\
    \                            [(< number -1000000000) (error \"Invalid input: number\
    \ must be less than -1000000000.\")]\n                            [(< number -10000000000)\
    \ (error \"Invalid input: number must be less than -10000000000.\")]\n       \
    \                     [(< number -100000000000) (error \"Invalid input: number\
    \ must be less than -100000000000.\")]\n                            [(< number\
    \ -1000000000000) (error \"Invalid input: number must be less than -1000000000000.\"\
    )]\n                            [(< number -10000000000000) (error \"Invalid input:\
    \ number must be less than -10000000000000.\")]\n                            [(<\
    \ number -100000000000000) (error \"Invalid input: number must be less than -100000000000000.\"\
    )]\n                            [(< number -1000000000000000) (error \"Invalid\
    \ input: number must be ", "  (cond\n    [(< number 1) (error \"Invalid input:\
    \ number must be greater than 1.\")]\n    [else (let ([roman \"M\"])\n       \
    \     (cond\n              [(= number 2) (set! roman \"D\")]\n              [(=\
    \ number 3) (set! roman \"C\")]\n              [(= number 4) (set! roman \"L\"\
    )]\n              [(= number 5) (set! roman \"X\")]\n              [(= number\
    \ 6) (set! roman \"V\")]\n              [(= number 7) (set! roman \"I\")]\n  \
    \            [(= number 8) (set! roman \"I\")]\n              [(= number 9) (set!\
    \ roman \"X\")]\n              [(= number 10) (set! roman \"V\")]\n          \
    \    [(= number 11) (set! roman \"I\")]\n              [(= number 12) (set! roman\
    \ \"I\")]\n              [(= number 13) (set! roman \"X\")]\n              [(=\
    \ number 14) (set! roman \"V\")]\n              [(= number 15) (set! roman \"\
    I\")]\n              [(= number 16) (set! roman \"I\")]\n              [(= number\
    \ 17) (set! roman \"X\")]\n              [(= number 18) (set! roman \"V\")]\n\
    \              [(= number 19) (set! roman \"I\")]\n              [(= number 20)\
    \ (set! roman \"I\")]\n              [(= number 21) (set! roman \"X\")]\n    \
    \          [(= number 22) (set! roman \"V\")]\n              [(= number 23) (set!\
    \ roman \"I\")]\n              [(= number 24) (set! roman \"I\")]\n          \
    \    [(= number 25) (set! roman \"X\")]\n              [(= number 26) (set! roman\
    \ \"V\")]\n              [(= number 27) (set! roman \"I\")]\n              [(=\
    \ number 28) (set! roman \"I\")]\n              [(= number 29) (set! roman \"\
    X\")]\n              [(= number 30) (set! roman \"V\")]\n              [(= number\
    \ 31) (set! roman \"I\")]\n              [(= number 32) (set! roman \"I\")]\n\
    \              [(= number 33) (set! roman \"X\")]\n              [(= number 34)\
    \ (set! roman \"V\")]\n              [(= number 35) (set! roman \"I\")]\n    \
    \          ", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n\
    \    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 40) \"XL\"]\n    [(< number 50) \"L\"]\n    [(< number 90) \"\
    XC\"]\n    [(< number 100) \"C\"]\n    [else \"M\"]\n  )\n)\n", "  (cond\n   \
    \ [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n\
    \    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"\
    D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n",
  "  (cond\n    [(< number 1) (error \"Invalid input: number must be positive.\")]\n\
    \    [(< number 1000) (error \"Invalid input: number must be less than 1000.\"\
    )]\n    [else (let ([num (modulo number 1000)])\n            (cond\n         \
    \     [(= num 0) \"M\"]\n              [(= num 1) \"D\"]\n              [(= num\
    \ 2) \"C\"]\n              [(= num 3) \"L\"]\n              [(= num 4) \"X\"]\n\
    \              [(= num 5) \"V\"]\n              [(= num 6) \"I\"]\n          \
    \    [else (error \"Invalid input: number must be less than 1000.\")]))]))\n",
  "  (cond\n    [(< number 1) (error \"Invalid input: must be positive.\")]\n    [else\
    \ (cond\n            [(< number 1000) (error \"Invalid input: must be less than\
    \ 1000.\")]\n            [else (cond\n                    [else (cond\n      \
    \                      [(< number 5000) (error \"Invalid input: must be less than\
    \ 5000.\")]\n                            [(< number 10000) (error \"Invalid input:\
    \ must be less than 10000.\")]\n                            [(< number 50000)\
    \ (error \"Invalid input: must be less than 50000.\")]\n                     \
    \       [(< number 100000) (error \"Invalid input: must be less than 100000.\"\
    )]\n                            [(< number 500000) (error \"Invalid input: must\
    \ be less than 500000.\")]\n                            [(< number 1000000) (error\
    \ \"Invalid input: must be less than 1000000.\")]\n                          \
    \  [(< number 5000000) (error \"Invalid input: must be less than 5000000.\")]\n\
    \                            [(< number 10000000) (error \"Invalid input: must\
    \ be less than 10000000.\")]\n                            [(< number 50000000)\
    \ (error \"Invalid input: must be less than 50000000.\")]\n                  \
    \          [(< number 100000000) (error \"Invalid input: must be less than 100000000.\"\
    )]\n                            [(< number 500000000) (error \"Invalid input:\
    \ must be less than 500000000.\")]\n                            [(< number 1000000000)\
    \ (error \"Invalid input: must be less than 1000000000.\")]\n                \
    \            [(< number 5000000000) (error \"Invalid input: must be less than\
    \ 5000000000.\")]\n                            [(< number 10000000000) (error\
    \ \"Invalid input: must be less than 10000000000.\")]\n                      \
    \      [(< number 50000000000) (error \"Invalid input: must be less than 50000000000.\"\
    )]\n                            [(< number 100000000000) (error \"Invalid input:\
    \ must be less than 100000000000.\")]\n                            [(< number\
    \ 500000000000) (error \"Invalid input: must be less than 500000000000.\")]\n\
    \                            [(< number 1000000000000) (error \"Invalid input:\
    \ must be less than 1000000000000.\")]\n                            [(< number\
    \ 5000000000000) (error \"Invalid input: must be less than 5000000000000.\")]\n\
    \                            [(< number 10000000000000) (error \"Invalid input:\
    \ must be less than 10000000000000.\")]\n                            [(< number\
    \ 50000000000000) (error \"Invalid input: must be less than 50000000000000.\"\
    )]\n                            [(< number 100000000000000) (error \"Invalid input:\
    \ must be less than 100000000000000.\")]\n                            [(< number\
    \ 500000000000000) (error \"Invalid input: must be less than 500000000000000.\"\
    )]\n                            [(< number 1000000000000000) (error \"Invalid\
    \ input", "  (cond\n    [(= number 0) \"zero\"]\n    [(= number 1) \"one\"]\n\
    \    [(= number 2) \"two\"]\n    [(= number 3) \"three\"]\n    [(= number 4) \"\
    four\"]\n    [(= number 5) \"five\"]\n    [(= number 6) \"six\"]\n    [(= number\
    \ 7) \"seven\"]\n    [(= number 8) \"eight\"]\n    [(= number 9) \"nine\"]\n \
    \   [else (int_to_mini_roman number-1)]))\n", "  (cond\n    [(< number 1) \"I\"\
    ]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"\
    L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000)\
    \ \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) (error \"Number must\
    \ be positive.\")]\n    [else (let ([roman \"M\"])\n            (cond\n      \
    \        [(< number 100) (error \"Number must be less than or equal to 100.\"\
    )]\n              [(< number 500) (error \"Number must be less than or equal to\
    \ 500.\")]\n              [(< number 1000) (error \"Number must be less than or\
    \ equal to 1000.\")]\n              [(< number 5000) (error \"Number must be less\
    \ than or equal to 5000.\")]\n              [(< number 10000) (error \"Number\
    \ must be less than or equal to 10000.\")]\n              [(< number 50000) (error\
    \ \"Number must be less than or equal to 50000.\")]\n              [(< number\
    \ 100000) (error \"Number must be less than or equal to 100000.\")]\n        \
    \      [(< number 500000) (error \"Number must be less than or equal to 500000.\"\
    )]\n              [(< number 1000000) (error \"Number must be less than or equal\
    \ to 1000000.\")]\n              [(< number 5000000) (error \"Number must be less\
    \ than or equal to 5000000.\")]\n              [(< number 100000000) (error \"\
    Number must be less than or equal to 100000000.\")]\n              [(< number\
    \ 500000000) (error \"Number must be less than or equal to 500000000.\")]\n  \
    \            [(< number 1000000000) (error \"Number must be less than or equal\
    \ to 1000000000.\")]\n              [(< number 5000000000) (error \"Number must\
    \ be less than or equal to 5000000000.\")]\n              [(< number 10000000000)\
    \ (error \"Number must be less than or equal to 10000000000.\")]\n           \
    \   [(< number 50000000000) (error \"Number must be less than or equal to 50000000000.\"\
    )]\n              [(< number 100000000000) (error \"Number must be less than or\
    \ equal to 100000000000.\")]\n              [(< number 500000000000) (error \"\
    Number must be less than or equal to 500000000000.\")]\n              [(< number\
    \ 1000000000000) (error \"Number must be less than or equal to 1000000000000.\"\
    )]\n              [(< number 5000000000000) (error \"Number must be less than\
    \ or equal to 5000000000000.\")]\n              [(< number 10000000000000) (error\
    \ \"Number must be less than or equal to 10000000000000.\")]\n              [(<\
    \ number 50000000000000) (error \"Number must be less than or equal to 50000000000000.\"\
    )]\n              [(< number 100000000000000) (error \"Number must be less than\
    \ or equal to 100000000000000.\")]\n              [(< number 500000000000000)\
    \ (error \"Number must be less than or equal to 500000000000000.\")]\n       \
    \       [(< number 1000000000000000) (error \"Number must be less than or equal\
    \ to 100000000000000", "  (cond\n    [(< number 1) (error \"Invalid input: number\
    \ must be greater than 1.\")]\n    [(< number 1000) (error \"Invalid input: number\
    \ must be less than 1000.\")]\n    [else (mini_roman_to_string (int_to_mini_roman\
    \ number))]))\n", "  (cond\n    [(< number 1) (error \"Invalid input: number must\
    \ be greater than 1.\")]\n    [else (let ([roman (make-array '(1001 . .)))\n \
    \              (roman-index '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\
    \ 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\
    \ 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\
    \ 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\
    \ 98 99))\n             (roman-index-loop (i number)\n                       \
    \       (roman-index-loop (j number)\n                                       \
    \         (cond\n                                                  [(= (mod i\
    \ 1000) 0) (set! roman (set! roman (+ roman (roman-index (mod i 1000))) roman-index\
    \ (mod i 1000))\n                                                   roman-index-loop\
    \ (+ i 1) roman-index-loop (+ j 1)]\n                                        \
    \          [(= (mod j 1000) 0) (set! roman (set! roman (+ roman (roman-index (mod\
    \ j 1000))) roman-index (mod j 1000))\n                                      \
    \             roman-index-loop (+ i 1) roman-index-loop (+ j 1)]\n           \
    \                                       [(= (mod i 1000) 0) (set! roman (set!\
    \ roman (+ roman (roman-index (mod i 1000))) roman-index (mod i 1000))\n     \
    \                                              roman-index-loop (+ i 1) roman-index-loop\
    \ (+ j 1)]\n                                                  [(= (mod j 1000)\
    \ 0) (set! roman (set! roman (+ roman (roman-index (mod j 1000))) roman-index\
    \ (mod j 1000))\n                                                   roman-index-loop\
    \ (+ i 1) roman-index-loop (+ j 1)]\n                                        \
    \          [(= (mod i 1000) 0) (set! roman (set! roman (+ ", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(<\
    \ number 9) \"IX\"]\n    [(< number 10) \"X\"]\n    [else (int_to_mini_roman number)])\n\
    )\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number\
    \ 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number\
    \ 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10) \"V\"\
    ]\n    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [(< number 500)\
    \ \"XL\"]\n    [(< number 1000) \"L\"]\n    [else (int_to_mini_roman number)])\n\
    )\n", "  (cond\n    [(< number 1) (error \"Number must be positive.\")]\n    [else\
    \ (cond\n             [(< number 1000) (error \"Number must be less than 1000.\"\
    )]\n             [(< number 900) (error \"Number must be less than 900.\")]\n\
    \             [(< number 500) (error \"Number must be less than 500.\")]\n   \
    \          [(< number 400) (error \"Number must be less than 400.\")]\n      \
    \       [(< number 300) (error \"Number must be less than 300.\")]\n         \
    \    [(< number 200) (error \"Number must be less than 200.\")]\n            \
    \ [(< number 100) (error \"Number must be less than 100.\")]\n             [(<\
    \ number 50) (error \"Number must be less than 50.\")]\n             [(< number\
    \ 40) (error \"Number must be less than 40.\")]\n             [(< number 30) (error\
    \ \"Number must be less than 30.\")]\n             [(< number 20) (error \"Number\
    \ must be less than 20.\")]\n             [(< number 10) (error \"Number must\
    \ be less than 10.\")]\n             [(< number 5) (error \"Number must be less\
    \ than 5.\")]\n             [(< number 4) (error \"Number must be less than 4.\"\
    )]\n             [(< number 3) (error \"Number must be less than 3.\")]\n    \
    \         [(< number 2) (error \"Number must be less than 2.\")]\n           \
    \  [(< number 1) (error \"Number must be less than 1.\")]\n             [else\
    \ (cond\n                      [(< number 9) (error \"Number must be less than\
    \ 9.\")]\n                      [(< number 8) \"I\"]\n                      [(<\
    \ number 7) \"II\"]\n                      [(< number 6) \"III\"]\n          \
    \            [(< number 5) \"IV\"]\n                      [(< number 4) \"V\"\
    ]\n                      [(< number 3) \"VI\"]\n                      [(< number\
    \ 2) \"VII\"]\n                      [(< number 1) \"IX\"]\n                 \
    \     [else (error \"Number must be less than 9.\")])])]))\n", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(<\
    \ number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n\
    \    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number\
    \ 1) (error \"Invalid input: number must be positive.\")]\n    [else (let ([roman\
    \ \"M\"])\n            (cond\n              [(= number 2) (set! roman \"D\")]\n\
    \              [(= number 3) (set! roman \"CD\")]\n              [(= number 4)\
    \ (set! roman \"C\")]\n              [(= number 5) (set! roman \"XC\")]\n    \
    \          [(= number 6) (set! roman \"LX\")]\n              [(= number 7) (set!\
    \ roman \"XL\")]\n              [(= number 8) (set! roman \"X\")]\n          \
    \    [(= number 9) (set! roman \"IX\")]\n              [(= number 10) (set! roman\
    \ \"V\")]\n              [(= number 11) (set! roman \"IV\")]\n              [(=\
    \ number 12) (set! roman \"I\")]\n              [(= number 13) (set! roman \"\
    II\")]\n              [(= number 14) (set! roman \"III\")]\n              [(=\
    \ number 15) (set! roman \"VII\")]\n              [(= number 16) (set! roman \"\
    VIII\")]\n              [(= number 17) (set! roman \"IX\")]\n              [(=\
    \ number 18) (set! roman \"XII\")]\n              [(= number 19) (set! roman \"\
    XIII\")]\n              [(= number 20) (set! roman \"XIV\")]\n              [(=\
    \ number 21) (set! roman \"XV\")]\n              [(= number 22) (set! roman \"\
    XVI\")]\n              [(= number 23) (set! roman \"XVII\")]\n              [(=\
    \ number 24) (set! roman \"XVIII\")]\n              [(= number 25) (set! roman\
    \ \"XIX\")]\n              [(= number 26) (set! roman \"XX\")]\n             \
    \ [(= number 27) (set! roman \"XXI\")]\n              [(= number 28) (set! roman\
    \ \"XXII\")]\n              [(= number 29) (set! roman \"XXIII\")]\n         \
    \     [(= number 30) (set! roman \"XXIV\")]\n              [(= number 31) (set!\
    \ roman \"XXV\")]\n              [(= number 32) (set! roman \"XXVI\")]\n     \
    \         [(= number 33) (set! roman \"XXVII\")]\n", "  (let loop ((num number)\
    \ (acc '()))\n    (cond [(< num 1000) (cons num acc)]\n          [(< num 900)\
    \ (loop (/ num 100) (cons (mod num 100) acc))]\n          [(< num 500) (loop (/\
    \ num 100) (cons (mod num 10) acc))]\n          [(< num 400) (loop (/ num 10)\
    \ (cons (mod num 5) acc))]\n          [(< num 100) (loop (/ num 5) (cons (mod\
    \ num 1) acc))]\n          [(< num 90) (loop (/ num 1) (cons (mod num 1) acc))]\n\
    \          [(< num 50) (loop (/ num 1) (cons (mod num 1) acc))]\n          [(<\
    \ num 40) (loop (/ num 1) (cons (mod num 1) acc))]\n          [(< num 10) (loop\
    \ (/ num 1) (cons (mod num 1) acc))]\n          [(< num 9) (loop (/ num 1) (cons\
    \ (mod num 1) acc))]\n          [(< num 5) (loop (/ num 1) (cons (mod num 1) acc))]\n\
    \          [(< num 4) (loop (/ num 1) (cons (mod num 1) acc))]\n          [(<\
    \ num 1) (loop (/ num 1) (cons (mod num 1) acc))]\n          [else (loop (/ num\
    \ 1) (cons (mod num 1) acc))]))\n</code>\n<|/ a dscore=2 |>\n<| a tags=racket,scheme\
    \ |>\n<code>", "  (cond\n    [(= number 0) \"\"]\n    [(< number 1) \"\"]\n  \
    \  [else (int_to_mini_roman number-1)\n          (append (substring \"MCMXCIV\"\
    \ 0 number)\n                   (substring \"I\" 0 number))]))\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10) \"V\"]\n   \
    \ [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"\
    ]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"\
    IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7)\
    \ \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number\
    \ 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(=\
    \ number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"\
    ]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18)\
    \ \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(=\
    \ number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"\
    ]\n    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26)\
    \ \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n \
    \   [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"LXC\"]\n    [(= number\
    \ 44) \"LXCC\"]\n    [(= number 45) \"LXCCC\"]\n    [(= number 46) \"LXCCCC\"\
    ]\n    [(= number 47) \"LXCCCCC\"]\n    [(= number 48) \"LXCCCCCC\"]\n    [(",
  "  (cond\n    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5)\
    \ \"V\"]\n    [(< number 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n",
  "  (cond\n    [(< number 1) (error \"Invalid input: number must be greater than\
    \ 1\")]\n    [(< number 1000) (error \"Invalid input: number must be less than\
    \ 1000\")]\n    [else (mini_roman_to_string number)]))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10) \"V\"]\n    [(< number\
    \ 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else \"?\"]))\n", "  (cond\n \
    \   [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman number)]\n  \
    \  [else (cons (char->string (char->integer number)) (int_to_mini_roman number))]))\n",
  "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10)\
    \ \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number\
    \ 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n\
    \    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n\
    \    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"\
    ]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"\
    VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number\
    \ 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n   \
    \ [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"\
    ]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number\
    \ 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(=\
    \ number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"\
    ]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27)\
    \ \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n \
    \   [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32)\
    \ \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n\
    \    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37)\
    \ \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n\
    \    [(= number 40) \"XL\"]\n    [(= number 41) \"XLI\"]\n    [(= number 42) \"\
    XLII\"]\n    [(= number 43) \"XLIII\"]\n    [(= number 44) \"XLIIII\"]\n    [(=\
    \ number 45) \"XLIV\"]\n    [(= number 46) \"XLV\"]\n    [(= number 47) \"XLVI\"\
    ]\n    [(= number 48) \"XLVII\"]\n    [(= number 49) \"", "  (cond\n    [(< number\
    \ 1) (error \"Invalid input: number must be greater than 1.\")]\n    [(< number\
    \ 1000) (error \"Invalid input: number must be less than 1000.\")]\n    [else\
    \ (mini_roman_to_string number)]))\n", "  (let loop ((num number) (roman (make-string\
    \ (string-length num) #f)))\n    (cond [(< num 1000) (append roman \"M\")\n  \
    \         (< num 500) (append roman \"D\")\n           (< num 100) (append roman\
    \ \"C\")\n           (< num 50) (append roman \"L\")\n           (< num 10) (append\
    \ roman \"X\")\n           (< num 5) (append roman \"V\")\n           (< num 1)\
    \ (append roman \"I\")]\n          [(< num 0) (append roman \"I\")]\n        \
    \  [else (loop (sub1 num) (append roman \"M\"))])))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number 10) \"V\"\
    ]\n    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else \"?\"]))\n",
  "  (cond\n    [(< number 1) (error \"Invalid input: number must be greater than\
    \ 1.\")]\n    [else (let ([roman (make-array (ceiling (/ number 1000))\n     \
    \                           initial-contents '()))]\n              (loop for i\
    \ from 0 to (array-length roman)\n                    do (set! roman (array-set!\
    \ roman i (modulo (+ i number) 1000)))\n                    (cond\n          \
    \            [(< i 0) (set! roman '())]\n                      [(< roman '())\
    \ (set! roman '())]\n                      [(> roman '()) (set! roman '())]\n\
    \                      [else (set! roman '(cons roman '()))]))]))\n", "  (cond\n\
    \    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n\
    \    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"\
    ]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"\
    VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number\
    \ 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n   \
    \ [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"\
    ]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number\
    \ 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(=\
    \ number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"\
    ]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27)\
    \ \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n \
    \   [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32)\
    \ \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n\
    \    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37)\
    \ \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n\
    \    [(= number 40) \"XL\"]\n    [(= number 41) \"XLI\"]\n    [(= number 42) \"\
    XLII\"]\n    [(= number 43) \"XLIII\"]\n    [(= number 44) \"XLIIII\"]\n    [(=\
    \ number 45) \"XLIV\"]\n    [(= number 46) \"XLV\"]\n    [(= number 47) \"XLVI\"\
    ]\n    [(= number 48) \"XLVII\"]\n    [(= number 49) \"", "  (cond\n    [(= number\
    \ 0) \"zero\"]\n    [(= number 1) \"one\"]\n    [(= number 2) \"two\"]\n    [(=\
    \ number 3) \"three\"]\n    [(= number 4) \"four\"]\n    [(= number 5) \"five\"\
    ]\n    [(= number 6) \"six\"]\n    [(= number 7) \"seven\"]\n    [(= number 8)\
    \ \"eight\"]\n    [(= number 9) \"nine\"]\n    [else (int_to_mini_roman number-1)]))\n",
  "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman number)]\n\
    \    [else (cons (char->string (char->integer 'M'))\n                (int_to_mini_roman\
    \ number))]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (let loop ((num number) (str \"\"))\n    (cond [(= num 0)\
    \ str]\n          [(< num 1000) (loop (quotient num 1000) (append str (mini_roman_numeral\
    \ (quotient num 1000))))]\n          [(< num 4000) (loop (quotient num 4000) (append\
    \ str (mini_roman_numeral (quotient num 4000))))]\n          [(< num 6000) (loop\
    \ (quotient num 6000) (append str (mini_roman_numeral (quotient num 6000))))]\n\
    \          [(< num 8000) (loop (quotient num 8000) (append str (mini_roman_numeral\
    \ (quotient num 8000))))]\n          [(< num 10000) (loop (quotient num 10000)\
    \ (append str (mini_roman_numeral (quotient num 10000))))]\n          [(< num\
    \ 12000) (loop (quotient num 12000) (append str (mini_roman_numeral (quotient\
    \ num 12000))))]\n          [(< num 14000) (loop (quotient num 14000) (append\
    \ str (mini_roman_numeral (quotient num 14000))))]\n          [(< num 16000) (loop\
    \ (quotient num 16000) (append str (mini_roman_numeral (quotient num 16000))))]\n\
    \          [(< num 18000) (loop (quotient num 18000) (append str (mini_roman_numeral\
    \ (quotient num 18000))))]\n          [(< num 20000) (loop (quotient num 20000)\
    \ (append str (mini_roman_numeral (quotient num 20000))))]\n          [(< num\
    \ 21000) (loop (quotient num 21000) (append str (mini_roman_numeral (quotient\
    \ num 21000))))]\n          [(< num 22000) (loop (quotient num 22000) (append\
    \ str (mini_roman_numeral (quotient num 22000))))]\n          [(< num 23000) (loop\
    \ (quotient num 23000) (append str (mini_roman_numeral (quotient num 23000))))]\n\
    \          [(< num 24000) (loop (quotient num 24000) (append str (mini_roman_numeral\
    \ (quotient num 24000))))]\n          [(< num 25000) (loop (quotient num 25000)\
    \ (append str (mini_roman_numeral (quotient num 25000))))]\n          [(< num\
    \ 26000) (loop", "  (cond\n    [(< number 1) \"\"]\n    [(< number 5) \"I\"]\n\
    \    [(< number 10) \"V\"]\n    [(< number 50) \"X\"]\n    [(< number 100) \"\
    L\"]\n    [(< number 500) \"C\"]\n    [(< number 1000) \"D\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"\
    ]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"\
    IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7)\
    \ \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number\
    \ 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(=\
    \ number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"\
    ]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18)\
    \ \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(=\
    \ number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"\
    ]\n    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26)\
    \ \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n \
    \   [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number\
    \ 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"\
    ]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number\
    \ 49) \"LXXXIV\"]", "  (cond\n    [(< number 1) (error \"Invalid input: number\
    \ must be positive.\")]\n    [else (let ([roman \"M\"])\n            (cond\n \
    \             [(< number 100) (error \"Invalid input: number must be <= 100.\"\
    )]\n              [(< number 500) (error \"Invalid input: number must be <= 500.\"\
    )]\n              [(< number 1000) (error \"Invalid input: number must be <= 1000.\"\
    )]\n              [(< number 5000) (error \"Invalid input: number must be <= 5000.\"\
    )]\n              [(< number 10000) (error \"Invalid input: number must be <=\
    \ 10000.\")]\n              [(< number 50000) (error \"Invalid input: number must\
    \ be <= 50000.\")]\n              [(< number 100000) (error \"Invalid input: number\
    \ must be <= 100000.\")]\n              [(< number 500000) (error \"Invalid input:\
    \ number must be <= 500000.\")]\n              [(< number 1000000) (error \"Invalid\
    \ input: number must be <= 1000000.\")]\n              [(< number 5000000) (error\
    \ \"Invalid input: number must be <= 5000000.\")]\n              [(< number 10000000)\
    \ (error \"Invalid input: number must be <= 10000000.\")]\n              [(< number\
    \ 50000000) (error \"Invalid input: number must be <= 50000000.\")]\n        \
    \      [(< number 100000000) (error \"Invalid input: number must be <= 100000000.\"\
    )]\n              [(< number 500000000) (error \"Invalid input: number must be\
    \ <= 500000000.\")]\n              [(< number 1000000000) (error \"Invalid input:\
    \ number must be <= 1000000000.\")]\n              [(< number 5000000000) (error\
    \ \"Invalid input: number must be <= 5000000000.\")]\n              [(< number\
    \ 10000000000) (error \"Invalid input: number must be <= 10000000000.\")]\n  \
    \            [(< number 50000000000) (error \"Invalid input: number must be <=\
    \ 50000000000.\")]\n              [(< number 100000000000) (error \"Invalid input:\
    \ number must be <= 100000000000.\")]\n              [(< number 500000000000)\
    \ (error \"Invalid input: number must be <= 500000000000.\")]\n              [(<\
    \ number 1000000000000) (error \"Invalid input: number must be <= 1000000000000.\"\
    )]\n              [(< number 5000000000000) (error \"Invalid input: number must\
    \ be <= 5000000000000.\")]\n              [(< number 10000000000000) (error \"\
    Invalid input: number must be <= 10000000000000.\")]\n              [(< number\
    \ 50000000000000) (error \"Invalid input: number must be <= 5000000000000", " \
    \ (cond\n    [(< number 1) (error \"Invalid input: number must be greater than\
    \ 1\")]\n    [(< number 1000) (error \"Invalid input: number must be less than\
    \ 1000\")]\n    [else (mini_roman_to_string number)]))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number\
    \ 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n", "  (cond\n    [(<\
    \ number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman number)]\n    [else\
    \ (cond\n             [(< number 500) (int_to_mini_roman number)]\n          \
    \   [(< number 100) (int_to_mini_roman number)]\n             [(< number 50) (int_to_mini_roman\
    \ number)]\n             [(< number 10) (int_to_mini_roman number)]\n        \
    \     [(< number 1) (int_to_mini_roman number)]\n             [else (int_to_mini_roman\
    \ number)]\n             )]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(<\
    \ number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"]\n   \
    \ [(< number 10) \"X\"]\n    [else (int_to_mini_roman number)])\n  )\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n", " \
    \ (cond\n    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5)\
    \ \"V\"]\n    [(< number 9) \"IX\"]\n    [(< number 10) \"X\"]\n    [else (int_to_mini_roman\
    \ number-1)]))\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"\
    ]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"\
    IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7)\
    \ \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number\
    \ 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(=\
    \ number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"\
    ]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18)\
    \ \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(=\
    \ number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"\
    ]\n    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26)\
    \ \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n \
    \   [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"XLI\"]\n    [(= number 42) \"XLII\"]\n    [(= number 43) \"XLIII\"]\n    [(=\
    \ number 44) \"XLIIII\"]\n    [(= number 45) \"XLIV\"]\n    [(= number 46) \"\
    XLV\"]\n    [(= number 47) \"XLVI\"]\n    [(= number 48) \"XLVII\"]\n    [(= number\
    \ 49) \"", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string 'M) (int_to_mini_roman number))]))\n",
  "  (cond\n    [(= number 0) \"\"]\n    [(< number 1) (int_to_mini_roman number)]\n\
    \    [else (cons (char->string (char->integer 'M'))\n                (int_to_mini_roman\
    \ number))]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"\
    ]\n    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"]\n    [else (int_to_mini_roman\
    \ number-1)]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"\
    ]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(<\
    \ number 5) \"V\"]\n    [(< number 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n",
  "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"\
    II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5)\
    \ \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) (error \"Invalid input: number must be positive.\"\
    )]\n    [else (let ([roman \"M\"])\n            (cond\n              [(< number\
    \ 100) (error \"Invalid input: number must be <= 100.\")]\n              [(< number\
    \ 900) (cons roman \"CM\")]\n              [(< number 500) (cons roman \"D\")]\n\
    \              [(< number 400) (cons roman \"CD\")]\n              [(< number\
    \ 1000) (cons roman \"M\")]\n              [(< number 900) (cons roman \"CM\"\
    )]\n              [(< number 500) (cons roman \"D\")]\n              [(< number\
    \ 400) (cons roman \"CD\")]\n              [(< number 100) (cons roman \"C\")]\n\
    \              [(< number 9) (cons roman \"XC\")]\n              [(< number 5)\
    \ (cons roman \"L\")]\n              [(< number 4) (cons roman \"XL\")]\n    \
    \          [(< number 1) (cons roman \"X\")]\n              [(< number 9) (cons\
    \ roman \"IX\")]\n              [(< number 5) (cons roman \"V\")]\n          \
    \    [(< number 4) (cons roman \"IV\")]\n              [(< number 1) (cons roman\
    \ \"I\")]\n              [(< number 9) (cons roman \"IX\")]\n              [(<\
    \ number 5) (cons roman \"I\")]\n              [(< number 4) (cons roman \"V\"\
    )]\n              [(< number 1) (cons roman \"I\")]\n              [(< number\
    \ 9) (cons roman \"IX\")]\n              [(< number 5) (cons roman \"I\")]\n \
    \             [(< number 4) (cons roman \"V\")]\n              [(< number 1) (cons\
    \ roman \"I\")]\n              [(< number 9) (cons roman \"IX\")]\n          \
    \    [(< number 5) (cons roman \"I\")]\n              [(< number 4) (cons roman\
    \ \"V\")]\n              [(< number 1) (cons roman \"I\")]\n              [(<\
    \ number 9) (cons roman \"IX\")]\n              [(< number 5) (cons roman \"I\"\
    )]\n              [(< number 4) (cons roman \"V\")]\n              [(< number\
    \ 1) (cons roman \"I\")]\n              [(< number 9) (cons roman ", "  (cond\n\
    \    [(= number 0) \"\"]\n    [(< number 1) (int_to_mini_roman number)]\n    [(<\
    \ number 100) (int_to_mini_roman number)]\n    [else (int_to_mini_roman number)\
    \ (int_to_mini_roman number)]\n  ))\n", "  (cond\n    [(< number 1) \"\"]\n  \
    \  [(< number 1000) (int_to_mini_roman number)]\n    [else (cons (char->string\
    \ (char->integer 'M'))\n                (int_to_mini_roman number-100)\n     \
    \           (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1) \"\
    I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50)\
    \ \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number\
    \ 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(= number 0) \"\"]\n   \
    \ [(< number 1) (int_to_mini_roman number)]\n    [else (let ([remainder (modulo\
    \ number 10)])\n             (cond\n              [(= remainder 0) \"\"]\n   \
    \           [(= remainder 1) \"I\"]\n              [(= remainder 2) \"II\"]\n\
    \              [(= remainder 3) \"III\"]\n              [(= remainder 4) \"IV\"\
    ]\n              [(= remainder 5) \"V\"]\n              [(= remainder 6) \"VI\"\
    ]\n              [(= remainder 7) \"VII\"]\n              [(= remainder 8) \"\
    VIII\"]\n              [(= remainder 9) \"IX\"]\n              [(= remainder 10)\
    \ \"X\"]\n              [(= remainder 11) \"XI\"]\n              [(= remainder\
    \ 12) \"XII\"]\n              [(= remainder 13) \"XIII\"]\n              [(= remainder\
    \ 14) \"XIV\"]\n              [(= remainder 15) \"XV\"]\n              [(= remainder\
    \ 16) \"XVI\"]\n              [(= remainder 17) \"XVII\"]\n              [(= remainder\
    \ 18) \"XVIII\"]\n              [(= remainder 19) \"XIX\"]\n              [(=\
    \ remainder 20) \"XX\"]\n              [(= remainder 21) \"XXI\"]\n          \
    \    [(= remainder 22) \"XXII\"]\n              [(= remainder 23) \"XXIII\"]\n\
    \              [(= remainder 24) \"XXIV\"]\n              [(= remainder 25) \"\
    XXV\"]\n              [(= remainder 26) \"XXVI\"]\n              [(= remainder\
    \ 27) \"XXVII\"]\n              [(= remainder 28) \"XXVIII\"]\n              [(=\
    \ remainder 29) \"XXIX\"]\n              [(= remainder 30) \"XXX\"]\n        \
    \      [(= remainder 31) \"XXXI\"]\n              [(= remainder 32) \"XXXII\"\
    ]\n              [(= remainder 33) \"XXXIII\"]\n              [(= remainder 34)\
    \ \"XXXIV\"]\n              [(= remainder 35) \"XXXV\"]\n              [(= remainder\
    \ 36) \"XXXVI\"]\n              [(= remainder 37) \"XXXVII\"]\n              [(=\
    \ remainder 38) \"XXXVIII\"]\n              [(= remainder 39) \"XXXIX\"]\n   \
    \           [(= remainder 40) \"XL\"]\n              [(= remainder 41) \"XLI\"\
    ]\n              ", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"\
    ]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"\
    C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman\
    \ number)])\n)\n", "  (cond\n    [(< number 1) (error \"Invalid number: ~s\" number)]\n\
    \    [(< number 1000) (error \"Invalid number: ~s\" number)]\n    [else (let ([roman\
    \ (make-array (floor (/ number 100)) #:initial-element '())])\n            (loop\
    \ for i from 0 to (floor (/ number 100)) do\n                  (cond\n       \
    \             [(= (mod number 100) 0) (set! roman i (append roman \"M\"))]\n \
    \                   [else (set! roman i (append roman \"C\"))]))]))]))\n", " \
    \ (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2)\
    \ \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number\
    \ 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (let loop ((num number) (roman (make-string 1000 #\\space)))\n    (cond\n\
    \      [(= num 0) (set! roman '())]\n      [(< num 1000) (set! roman '())]\n \
    \     [(< num 900) (set! roman '(#\\M))\n        (loop (sub1 num) (append roman\
    \ '(#\\D)))]\n      [(< num 500) (set! roman '(#\\C))\n        (loop (sub1 num)\
    \ (append roman '(#\\L)))]\n      [(< num 400) (set! roman '(#\\X))\n        (loop\
    \ (sub1 num) (append roman '(#\\V)))]\n      [(< num 300) (set! roman '(#\\LX))\n\
    \        (loop (sub1 num) (append roman '(#\\IX)))]\n      [(< num 200) (set!\
    \ roman '(#\\XL))\n        (loop (sub1 num) (append roman '(#\\IV)))]\n      [(<\
    \ num 100) (set! roman '(#\\XC))\n        (loop (sub1 num) (append roman '(#\\\
    II)))]\n      [(< num 90) (set! roman '(#\\X))\n        (loop (sub1 num) (append\
    \ roman '(#\\III)))]\n      [(< num 50) (set! roman '(#\\C))\n        (loop (sub1\
    \ num) (append roman '(#\\IIII)))]\n      [(< num 40) (set! roman '(#\\L))\n \
    \       (loop (sub1 num) (append roman '(#\\IV)))]\n      [(< num 30) (set! roman\
    \ '(#\\LX))\n        (loop (sub1 num) (append roman '(#\\V)))]\n      [(< num\
    \ 20) (set! roman '(#\\XL))\n        (loop (sub1 num) (append roman '(#\\VI)))]\n\
    \      [(< num 10) (set! roman '(#\\XC))\n        (loop (sub1 num) (append roman\
    \ '(#\\VII)))]\n      [(< num 9) (set! roman '(#\\X))\n        (loop (sub1 num)\
    \ (append roman '(#\\VIII", "  (cond\n    [(< number 1) \"I\"]\n    [(< number\
    \ 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number\
    \ 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else\
    \ \"?\"]))\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n \
    \   [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"\
    ]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"\
    ]\n    [(= number 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10)\
    \ \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number\
    \ 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n   \
    \ [(= number 16) \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"\
    XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number\
    \ 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n\
    \    [(= number 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26)\
    \ \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n \
    \   [(= number 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31)\
    \ \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n \
    \   [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36)\
    \ \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n\
    \    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41)\
    \ \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number\
    \ 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"\
    ]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number\
    \ 49) \"LXXXIV\"]", "  (cond\n    [(= number 0) \"zero\"]\n    [(= number 1) \"\
    one\"]\n    [(= number 2) \"two\"]\n    [(= number 3) \"three\"]\n    [(= number\
    \ 4) \"four\"]\n    [(= number 5) \"five\"]\n    [(= number 6) \"six\"]\n    [(=\
    \ number 7) \"seven\"]\n    [(= number 8) \"eight\"]\n    [(= number 9) \"nine\"\
    ]\n    [else (int_to_mini_roman number-1)]))\n", "  (cond\n    [(= number 0) \"\
    zero\"]\n    [(= number 1) \"one\"]\n    [(= number 2) \"two\"]\n    [(= number\
    \ 3) \"three\"]\n    [(= number 4) \"four\"]\n    [(= number 5) \"five\"]\n  \
    \  [(= number 6) \"six\"]\n    [(= number 7) \"seven\"]\n    [(= number 8) \"\
    eight\"]\n    [(= number 9) \"nine\"]\n    [else (int_to_mini_roman number-1)]))\n",
  "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10)\
    \ \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number\
    \ 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n\
    )\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number\
    \ 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number\
    \ 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number\
    \ 10) \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number\
    \ 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n\
    )\n", "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number\
    \ 2) \"II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number\
    \ 5) \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"\
    ]\n    [(= number 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number\
    \ 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"\
    ]", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"IV\"]\n    [(< number\
    \ 10) \"V\"]\n    [(< number 50) \"IX\"]\n    [(< number 100) \"X\"]\n    [else\
    \ (int_to_mini_roman number)])\n)\n", "  (cond\n    [(< number 1) (error \"Invalid\
    \ input: number must be positive.\")]\n    [else (let ([roman (make-array (floor\
    \ (/ number 1000))\n                                  (lambda (x) (= (modulo number\
    \ x) 0))\n                                  (lambda (x) (= x 0))\n           \
    \                       (lambda (x) (= x 1)))])\n            (loop for i from\
    \ 0 to (array-length roman) do\n                  (cond\n                    [(=\
    \ (modulo number i) 0)\n                     (set! roman (set! roman (+ i 1) (lambda\
    \ (x) (* x roman))))]\n                    [else (set! roman (+ i 1) (lambda (x)\
    \ (* x roman)))]))\n          (apply string-append (map string->symbol (reverse\
    \ roman))\n                 #:start '(#\\M))]))\n", "  (cond\n    [(< number 1)\
    \ \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n\
    )\n", "  (cond\n    [(< number 1) \"\"]\n    [(< number 1000) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M'))\n             \
    \   (int_to_mini_roman number))]))\n", "  (cond\n    [(< number 1) \"I\"]\n  \
    \  [(< number 5) \"IV\"]\n    [(< number 10) \"V\"]\n    [(< number 50) \"IX\"\
    ]\n    [(< number 100) \"X\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", "  (cond\n\
    \    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"\
    ]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500)\
    \ \"D\"]\n    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n\
    \  )\n", "  (let loop ((num number)\n             (roman_numeral '()))\n    (cond\
    \ [(< num 1000)\n           (cond [(= num 1)\n                  (set! roman_numeral\
    \ (cons 1 roman_numeral))\n                  roman_numeral]\n                \
    \ [else\n                  (loop (sub1 num) (cons (mod num 100) roman_numeral))])]\n\
    \          [else\n           (loop (sub1 num) (cons (mod num 10) roman_numeral))]))\n\
    </code>\n<|/ a tags=racket,scheme |>\n<| a dscore=0 |>\n<code>", "  (cond\n  \
    \  [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n\
    \    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"\
    D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number\
    \ 1) (error \"Invalid input: must be greater than 1\")]\n    [else (let ([roman\
    \ (make-array '(1001 . .)))\n               (let loop ([i number])\n         \
    \        (cond\n                  [(= i 0) (set! roman '(1 . .))]\n          \
    \        [(< i 1000) (set! roman '(1 . .))]\n                  [(< i 100) (set!\
    \ roman '(10 . .))]\n                  [(< i 10) (set! roman '(100 . .))]\n  \
    \                [(< i 1) (set! roman '(1000 . .))]\n                  [else (set!\
    \ roman '(1000 . .))]))\n               (reverse roman)]))]))\n", "  (cond\n \
    \   [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n\
    \    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"\
    D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", "  (cond\n\
    \    [(= number 0) \"\"]\n    [(< number 1000) (int_to_mini_roman number)]\n \
    \   [else (cond\n             [(= (mod number 100) 0) (int_to_mini_roman number)]\n\
    \             [(= (mod number 100) 1) (cons \"M\" (int_to_mini_roman number))])]))\n",
  "  (cond\n    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"\
    II\"]\n    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5)\
    \ \"V\"]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number\
    \ 8) \"VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(=\
    \ number 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"\
    ]\n    [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16)\
    \ \"XVI\"]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(=\
    \ number 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"\
    ]\n    [(= number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number\
    \ 24) \"XXIV\"]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n \
    \   [(= number 27) \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number\
    \ 29) \"XXIX\"]\n    [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n \
    \   [(= number 32) \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number\
    \ 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n\
    \    [(= number 37) \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number\
    \ 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(=\
    \ number 42) \"LX\"]\n    [(= number 43) \"LXC\"]\n    [(= number 44) \"LXCC\"\
    ]\n    [(= number 45) \"LXCCC\"]\n    [(= number 46) \"LXCCCC\"]\n    [(= number\
    \ 47) \"LXCCCCC\"]\n    [(= number 48) \"LXCCCCCC\"]\n    [(", "  (cond\n    [(<\
    \ number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(<\
    \ number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n\
    \    [(< number 1000) \"M\"]\n    [else (int_to_mini_roman number)])\n)\n", " \
    \ (cond\n    [(< number 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10)\
    \ \"X\"]\n    [(< number 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number\
    \ 500) \"D\"]\n    [(< number 1000) \"M\"]\n    [else \"?\"]))\n", "  (cond\n\
    \    [(= number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n\
    \    [(= number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"\
    ]\n    [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"\
    VIII\"]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number\
    \ 11) \"XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n   \
    \ [(= number 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"\
    ]\n    [(= number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number\
    \ 19) \"XIX\"]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(=\
    \ number 22) \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"\
    ]\n    [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27)\
    \ \"XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n \
    \   [(= number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32)\
    \ \"XXXII\"]\n    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n\
    \    [(= number 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37)\
    \ \"XXXVII\"]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n\
    \    [(= number 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(= number 42) \"\
    LX\"]\n    [(= number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number\
    \ 45) \"LXXXX\"]\n    [(= number 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"\
    ]\n    [(= number 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n\
    \    [(< number 1) (error \"Number must be greater than 1.\")]\n    [(< number\
    \ 1000) (error \"Number must be less than 1000.\")]\n    [else (let ([roman (make-array\
    \ (floor (/ number 100)) #:element-type 'string)])\n           (loop for i from\
    \ 0 to (floor (/ number 100)) do\n               (set! roman (+ i 1) (number->string\
    \ number))\n               (set! roman (+ i 1) (substring roman 0 i) (substring\
    \ roman i #0)))]))]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(< number 4)\
    \ \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number 9) \"IX\"]\n    [(< number\
    \ 10) \"X\"]\n    [else \"?\"]))\n", "  (cond\n    [(< number 1) \"I\"]\n    [(<\
    \ number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number 50) \"L\"]\n   \
    \ [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(< number 1000) \"\
    M\"]\n    [else (int_to_mini_roman number)])\n  )\n", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 4) \"IV\"]\n    [(< number 5) \"V\"]\n    [(< number\
    \ 9) \"IX\"]\n    [else (int_to_mini_roman number-1)]))\n", "  (cond\n    [(=\
    \ number 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(=\
    \ number 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n  \
    \  [(= number 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"\
    ]\n    [(= number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"\
    XI\"]\n    [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number\
    \ 14) \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(=\
    \ number 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"\
    ]\n    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22)\
    \ \"XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n   \
    \ [(= number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"\
    XXVII\"]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(=\
    \ number 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"\
    ]\n    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number\
    \ 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"\
    ]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number\
    \ 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(=\
    \ number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"\
    ]\n    [(= number 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number\
    \ 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(= number\
    \ 0) \"\"]\n    [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number\
    \ 3) \"III\"]\n    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number\
    \ 6) \"VI\"]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(=\
    \ number 9) \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n \
    \   [(= number 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14)\
    \ \"XIV\"]\n    [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number\
    \ 17) \"XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n\
    \    [(= number 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"\
    XXII\"]\n    [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(=\
    \ number 25) \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"\
    ]\n    [(= number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number\
    \ 30) \"XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n\
    \    [(= number 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number\
    \ 35) \"XXXV\"]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"\
    ]\n    [(= number 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number\
    \ 40) \"XL\"]\n    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(=\
    \ number 43) \"LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"\
    ]\n    [(= number 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number\
    \ 48) \"LXXXIII\"]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(< number\
    \ 1) \"I\"]\n    [(< number 5) \"V\"]\n    [(< number 10) \"X\"]\n    [(< number\
    \ 50) \"L\"]\n    [(< number 100) \"C\"]\n    [(< number 500) \"D\"]\n    [(<\
    \ number 1000) \"M\"]\n    [else \"?\"]\n  )\n)\n", "  (cond\n    [(< number 1)\
    \ (error \"Invalid input: must be greater than 1\")]\n    [(< number 1000) (error\
    \ \"Invalid input: must be less than 1000\")]\n    [else (mini_roman (- number\
    \ 1))]))\n", "  (cond\n    [(= number 0) \"\"]\n    [(< number 1) (int_to_mini_roman\
    \ number)]\n    [else (cons (char->string (char->integer 'M'))\n             \
    \   (int_to_mini_roman number))]))\n", "  (cond\n    [(= number 0) \"\"]\n   \
    \ [(= number 1) \"I\"]\n    [(= number 2) \"II\"]\n    [(= number 3) \"III\"]\n\
    \    [(= number 4) \"IV\"]\n    [(= number 5) \"V\"]\n    [(= number 6) \"VI\"\
    ]\n    [(= number 7) \"VII\"]\n    [(= number 8) \"VIII\"]\n    [(= number 9)\
    \ \"IX\"]\n    [(= number 10) \"X\"]\n    [(= number 11) \"XI\"]\n    [(= number\
    \ 12) \"XII\"]\n    [(= number 13) \"XIII\"]\n    [(= number 14) \"XIV\"]\n  \
    \  [(= number 15) \"XV\"]\n    [(= number 16) \"XVI\"]\n    [(= number 17) \"\
    XVII\"]\n    [(= number 18) \"XVIII\"]\n    [(= number 19) \"XIX\"]\n    [(= number\
    \ 20) \"XX\"]\n    [(= number 21) \"XXI\"]\n    [(= number 22) \"XXII\"]\n   \
    \ [(= number 23) \"XXIII\"]\n    [(= number 24) \"XXIV\"]\n    [(= number 25)\
    \ \"XXV\"]\n    [(= number 26) \"XXVI\"]\n    [(= number 27) \"XXVII\"]\n    [(=\
    \ number 28) \"XXVIII\"]\n    [(= number 29) \"XXIX\"]\n    [(= number 30) \"\
    XXX\"]\n    [(= number 31) \"XXXI\"]\n    [(= number 32) \"XXXII\"]\n    [(= number\
    \ 33) \"XXXIII\"]\n    [(= number 34) \"XXXIV\"]\n    [(= number 35) \"XXXV\"\
    ]\n    [(= number 36) \"XXXVI\"]\n    [(= number 37) \"XXXVII\"]\n    [(= number\
    \ 38) \"XXXVIII\"]\n    [(= number 39) \"XXXIX\"]\n    [(= number 40) \"XL\"]\n\
    \    [(= number 41) \"L\"]\n    [(= number 42) \"LX\"]\n    [(= number 43) \"\
    LXX\"]\n    [(= number 44) \"LXXX\"]\n    [(= number 45) \"LXXXX\"]\n    [(= number\
    \ 46) \"LXXXXX\"]\n    [(= number 47) \"LXXXII\"]\n    [(= number 48) \"LXXXIII\"\
    ]\n    [(= number 49) \"LXXXIV\"]", "  (cond\n    [(< number 1) (error \"Invalid\
    \ input: number must be greater than 1\")]\n    [else (let ([roman (make-array\
    \ (+ 3 (* number 100)))])\n            (roman (+ 0 (* number 100)))\n        \
    \    (roman (+ 1 (* number 10)))\n            (roman (+ 2 (* number 1)))\n   \
    \         (roman (+ 3 (* number 1000))))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

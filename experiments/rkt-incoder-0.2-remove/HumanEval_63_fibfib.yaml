name: HumanEval_63_fibfib
language: rkt
prompt: "#lang racket\n\n;; The FibFib number sequence is a sequence similar to the\
  \ Fibbonacci sequnece that's defined as follows:\n;; fibfib(0) == 0\n;; fibfib(1)\
  \ == 0\n;; fibfib(2) == 1\n;; fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  ;; Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n(define (fibfib n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fibfib))\n\
  \    (check-equal? (candidate 2) 1)\n    (check-equal? (candidate 1) 0)\n    (check-equal?\
  \ (candidate 5) 4)\n    (check-equal? (candidate 8) 24)\n    (check-equal? (candidate\
  \ 10) 81)\n    (check-equal? (candidate 12) 274)\n    (check-equal? (candidate 14)\
  \ 927)\n))\n\n(test-humaneval)"
completions: ["  (if (= n 0)\n      0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n",
  "  (if (= n 0)\n      0\n      (+ (fibfib (- n 1))\n         (fibfib (- n 2))\n\
    \         (fibfib (- n 3)))))\n", "  (if (= n 0)\n      0\n      (+ (fibfib (-\
    \ n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n      0\n      (+ (fibfib (- n\
    \ 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n      0\n      (+ (fibfib (- n 1))\n\
    \         (fibfib (- n 2))\n         (fibfib (- n 3)))))\n", "  (if (= n 0)\n\
    \      0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n \
    \     0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n  \
    \    0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n   \
    \   0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n    \
    \  0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n     \
    \ 0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n      0\n\
    \      (+ (fibfib (- n 1))\n         (fibfib (- n 2))\n         (fibfib (- n 3)))))\n",
  "  (if (= n 0)\n      0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if\
    \ (= n 0)\n      0\n      (+ (fibfib (- n 1))\n         (fibfib (- n 2))\n   \
    \      (fibfib (- n 3)))))\n", "  (if (= n 0)\n      0\n      (+ (fibfib (- n\
    \ 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n      0\n      (+ (fibfib (- n 1))\n\
    \         (fibfib (- n 2))\n         (fibfib (- n 3)))))\n", "  (if (= n 0)\n\
    \      0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n \
    \     0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n  \
    \    0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n", "  (if (= n 0)\n   \
    \   0\n      (+ (fibfib (- n 1)) (fibfib (- n 2)))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

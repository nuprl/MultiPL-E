name: HumanEval_75_is_multiply_prime
language: rkt
prompt: "#lang racket\n\n;; Write a function that returns true if the given number\
  \ is the multiplication of 3 prime numbers\n;; and false otherwise.\n;; Knowing\
  \ that (a) is less then 100. \n;; Example:\n;; 30 = 2 * 3 * 5\n(define (is_multiply_prime\
  \ a)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_multiply_prime))\n\
  \    (check-equal? (candidate 5) #f)\n    (check-equal? (candidate 30) #t)\n   \
  \ (check-equal? (candidate 8) #t)\n    (check-equal? (candidate 10) #f)\n    (check-equal?\
  \ (candidate 125) #t)\n    (check-equal? (candidate 105) #t)\n    (check-equal?\
  \ (candidate 126) #f)\n    (check-equal? (candidate 729) #f)\n    (check-equal?\
  \ (candidate 891) #f)\n    (check-equal? (candidate 1001) #t)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (< (* a a) 100))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2))\
    \ (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a\
    \ 2) true]\n    [(= a 3) true]\n    [else (is_multiply_prime (- a 1))]))\n", " \
    \ (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\
    \ [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n        [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\
    \ [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n        [else\
    \ (is_multiply_prime (- a 1))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2)\
    \ true]\n    [(= a 3) true]\n    [else false]))\n", "  (< (- a 100) 0))\n", " \
    \ (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", "  (< (* a a) 100))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime\
    \ (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond [(= a 1) true]\n     \
    \   [(= a 2) true]\n        [(= a 3) true]\n        [else (is_multiply_prime (-\
    \ a 1))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3)\
    \ true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime\
    \ (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", "  (cond\n   \
    \ [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 2)) (is_multiply_prime (- a 3)))]))\n", '  (< (modulo a) 100))', "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ false]))\n", "  (cond [(= a 1) true]\n        [(= a 2) true]\n        [(= a\
    \ 3) true]\n        [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond [(= a 1) true]\n        [(= a 2) true]\n        [(=\
    \ a 3) true]\n        [else (is_multiply_prime (- a 1))]))\n", "  (cond\n    [(=\
    \ a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", " \
    \ (< (* a a) (* a 3)))\n", "  (< (* a a) 100))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", '  (< (modulo
    3 a) 100))', "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  '  (< (modulo a 3) 100))', "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n  \
    \  [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 1)) (is_multiply_prime (- a\
    \ 2))) (is_multiply_prime (- a 3))]))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond [(= a 1) true]\n        [(= a 2) true]\n        [(=\
    \ a 3) true]\n        [else (= (mod a 3) 0) (is_multiply_prime (+ a 1))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond [(= a 1) true]\n     \
    \   [(= a 2) true]\n        [(= a 3) true]\n        [else false]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", "  (cond [(= a 1)\
    \ true]\n        [(= a 2) true]\n        [(= a 3) true]\n        [else (is_multiply_prime\
    \ (- a 1))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else false]))\n", "  (cond ((= a 1) #t)\n        ((= a 2) #t)\n\
    \        ((= a 3) #t)\n        ((= a 4) #t)\n        ((= a 5) #t)\n        ((=\
    \ a 6) #t)\n        ((= a 7) #t)\n        ((= a 8) #t)\n        ((= a 9) #t)\n\
    \        ((= a 10) #t)\n        ((= a 11) #t)\n        ((= a 12) #t)\n       \
    \ ((= a 13) #t)\n        ((= a 14) #t)\n        ((= a 15) #t)\n        ((= a 16)\
    \ #t)\n        ((= a 17) #t)\n        ((= a 18) #t)\n        ((= a 19) #t)\n \
    \       ((= a 20) #t)\n        ((= a 21) #t)\n        ((= a 22) #t)\n        ((=\
    \ a 23) #t)\n        ((= a 24) #t)\n        ((= a 25) #t)\n        ((= a 26) #t)\n\
    \        ((= a 27) #t)\n        ((= a 28) #t)\n        ((= a 29) #t)\n       \
    \ ((= a 30) #t)\n        ((= a 31) #t)\n        ((= a 32) #t)\n        ((= a 33)\
    \ #t)\n        ((= a 34) #t)\n        ((= a 35) #t)\n        ((= a 36) #t)\n \
    \       ((= a 37) #t)\n        ((= a 38) #t)\n        ((= a 39) #t)\n        ((=\
    \ a 40) #t)\n        ((= a 41) #t)\n        ((= a 42) #t)\n        ((= a 43) #t)\n\
    \        ((= a 44) #t)\n        ((= a 45) #t)\n        ((= a 46) #t)\n       \
    \ ((= a 47) #t)\n        ((= a 48) #t)\n        ((= a 49) #t)\n        ((= a 50)\
    \ #t)\n        ((= a 51) #t)\n        ((= a 52) #t)\n        ((= a 53) #t)\n \
    \       ((= a 54) #t)\n        ((= a 55) #t)\n        ((= a 56) #t)\n        ((=\
    \ a 57) #t)\n        ((= a 58) #t)\n        ((= a 59) #t)\n        ((= a 60) #t)\n\
    \        ((= a 61) #t)\n        ((= a 62) #t)\n        ((= a 63) #t)\n       \
    \ ((", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", '  (< (mod
    a 3) 100))', "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and\
    \ (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n \
    \   [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 3)) (is_multiply_prime (- a 5)))]))\n", '  (< (mod a 3) 100))', "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n      \
    \  [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (is_multiply_prime (- a 1))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (< (* a a) (* a 3)))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (< (* a a) 100))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2))\
    \ (is_multiply_prime (- a 3)))]))\n", "  (cond [(= a 1) true]\n        [(= a 2)\
    \ true]\n        [(= a 3) true]\n        [else (and (is_multiply_prime (- a 2))\
    \ (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a\
    \ 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2))\
    \ (is_multiply_prime (- a 3)))]))\n", "  (< (* a a) 100))\n", "  (cond\n    [(=\
    \ a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", '  (< (mod
    a 3) 100))', "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime\
    \ (/ a 3)) (is_multiply_prime (/ a 5)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 2)) (is_multiply_prime (- a 3)))]))\n", '  (< (modulo a 3) 100))', "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 2)) (is_multiply_prime (- a 3)))]))\n", "  (< (* a a) 100))\n", "  (< (* a\
    \ a) 100))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and\
    \ (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n \
    \   [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (- a\
    \ 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (/\
    \ a 3)) (is_multiply_prime (/ a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2))\
    \ (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a\
    \ 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", '  (< (* a a a) 100))', '  (< (* a a) 100))', "  (cond\n  \
    \  [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (- a\
    \ 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", "  (cond\n   \
    \ [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3))\
    \ (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a\
    \ 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 1)) (is_multiply_prime\
    \ (- a 2))) (is_multiply_prime (- a 3))]))\n", '  (< (* a a) 100))', "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime\
    \ (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and\
    \ (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n \
    \   [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (< (*\
    \ a a) 100))\n", '  (< (modulo 3 a) 100))', '  (< (* a a) 100))', "  (cond\n \
    \   [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\
    \ [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n        [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", '  (< (* a a a) 100))', "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime (-\
    \ a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3)\
    \ true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (< (mod a 3) 0))\n", "  (cond\
    \ [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n        [else\
    \ (is_multiply_prime (- a 1))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2)\
    \ true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else\
    \ (and (is_multiply_prime (/ a 3)) (is_multiply_prime (/ a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", '  (< (modulo a) 100))', "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (< (* a a) 100))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 1)) (is_multiply_prime\
    \ (- a 2))) (is_multiply_prime (- a 3))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and\
    \ (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n \
    \   [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (- a\
    \ 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime (-\
    \ a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3)\
    \ true]\n    [else false]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n\
    \    [else (and (is_multiply_prime (/ a 3)) (is_multiply_prime (/ a 5)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime\
    \ (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (< (* a a) 100))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [(= a 3) true]\n    [else false]))\n", "  (cond\n    [(= a 1)\
    \ true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (< (* a a) 100))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(=\
    \ a 3) true]\n    [else (is_multiply_prime (- a 1))]))\n", "  (cond\n    [(= a\
    \ 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (/ a 3)) (is_multiply_prime\
    \ (/ a 5)))]))\n", "  (< (* a a) 100))\n", "  (cond\n    [(= a 1) true]\n    [(=\
    \ a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime\
    \ (- a 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (is_multiply_prime (- a 1))]))\n", '  (< (modulo 3 a) 100))',
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else\
    \ (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [else (and (is_multiply_prime (/ a 3)) (is_multiply_prime\
    \ (/ a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else\
    \ (and (is_multiply_prime (- a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n\
    \    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime (-\
    \ a 3)) (is_multiply_prime (- a 5)))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [else (and (is_multiply_prime (/ a 3)) (is_multiply_prime\
    \ (/ a 5)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n      \
    \  [else (is_multiply_prime (- a 1))]))\n", "  (cond\n    [(= a 1) true]\n   \
    \ [(= a 2) true]\n    [(= a 3) true]\n    [else false]))\n", "  (< (* a a) 100))\n",
  "  (< (* a a) 100))\n", "  (cond [(= a 1) true]\n        [(= a 2) true]\n      \
    \  [(= a 3) true]\n        [else (and (is_multiply_prime (- a 3)) (is_multiply_prime\
    \ (- a 5))) (is_multiply_prime (- a 7))]))\n", "  (cond\n    [(= a 1) true]\n\
    \    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime (-\
    \ a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond [(= a 1) true]\n        [(=\
    \ a 2) true]\n        [(= a 3) true]\n        [else false]))\n", "  (cond\n  \
    \  [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n    [else (and (is_multiply_prime\
    \ (- a 2)) (is_multiply_prime (- a 3)))]))\n", "  (cond [(= a 1) true]\n     \
    \   [(= a 2) true]\n        [(= a 3) true]\n        [else (= (mod a 3) 0) (is_multiply_prime\
    \ (+ a 1))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a\
    \ 3) true]\n    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a\
    \ 3)))]))\n", "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [(= a 3) true]\n\
    \    [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond [(= a 1) true]\n        [(= a 2) true]\n        [(= a 3) true]\n      \
    \  [else (and (is_multiply_prime (- a 2)) (is_multiply_prime (- a 3)))]))\n",
  "  (cond\n    [(= a 1) true]\n    [(= a 2) true]\n    [else (and (is_multiply_prime\
    \ (- a 3)) (is_multiply_prime (- a 5)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

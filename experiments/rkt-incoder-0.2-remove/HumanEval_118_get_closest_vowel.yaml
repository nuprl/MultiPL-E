name: HumanEval_118_get_closest_vowel
language: rkt
prompt: "#lang racket\n\n;; You are given a word. Your task is to find the closest\
  \ vowel that stands between \n;; two consonants from the right side of the word\
  \ (case sensitive).\n;; Vowels in the beginning and ending doesn't count. Return\
  \ empty string if you didn't\n;; find any vowel met the above condition. \n;; You\
  \ may assume that the given string contains English letter only.\n;; Example:\n\
  (define (get_closest_vowel word)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate get_closest_vowel))\n\
  \    (check-equal? (candidate \"yogurt\") \"u\")\n    (check-equal? (candidate \"\
  full\") \"u\")\n    (check-equal? (candidate \"easy\") \"\")\n    (check-equal?\
  \ (candidate \"eAsy\") \"\")\n    (check-equal? (candidate \"ali\") \"\")\n    (check-equal?\
  \ (candidate \"bad\") \"a\")\n    (check-equal? (candidate \"most\") \"o\")\n  \
  \  (check-equal? (candidate \"ab\") \"\")\n    (check-equal? (candidate \"ba\")\
  \ \"\")\n    (check-equal? (candidate \"quick\") \"\")\n    (check-equal? (candidate\
  \ \"anime\") \"i\")\n    (check-equal? (candidate \"Asia\") \"\")\n    (check-equal?\
  \ (candidate \"Above\") \"o\")\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'u) (get_closest_vowel (rest word))]\n    [else (cons (first word) (get_closest_vowel\
    \ (rest word)))]))\n", "  (define (vowel-check word)\n    (cond\n      [(empty?\
    \ word) \"\"]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'a) 'a]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'e) 'e]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'i) 'i]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'o) 'o]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'u) 'u]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'A) 'A]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'E) 'E]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'I) 'I]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'O) 'O]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'U) 'U]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'Y) 'Y]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'Y) 'Y]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'a) 'a]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'a) 'a]\n      [(char-equal? (char-after (char-before (char-after word)\
    \ 'a) 'a) 'a) 'a]\n      [(char-equal? (char-after (char-before (", "  (cond\n\
    \    [(empty? word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel (rest\
    \ word))]\n    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n  \
    \  [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal? (first\
    \ word) 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel\
    \ (rest word))]\n    [else (get_closest_vowel (rest word))]\n  )\n)\n", "  (cond\
    \ [(empty? word) \"\"]\n        [(equal? (first word) 'a) (get_closest_vowel (rest\
    \ word))]\n        [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n\
    \        [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n        [(equal?\
    \ (first word) 'o) (get_closest_vowel (rest word))]\n        [(equal? (first word)\
    \ 'u) (get_closest_vowel (rest word))]\n        [else (get_closest_vowel (rest\
    \ word))]))\n", "  (cond\n    [(empty? word) \"\"]\n    [(equal? (first word)\
    \ 'a) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'u) (get_closest_vowel (rest word))]\n    [else (get_closest_vowel\
    \ (rest word))]\n  )\n)\n", "  (cond\n    [(empty? word) \"\"]\n    [(equal? (first\
    \ word) 'a) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'u) (get_closest_vowel (rest word))]\n    [else (cons (first word)\
    \ (get_closest_vowel (rest word)))]))\n", "  (cond\n    [(empty? word) \"\"]\n\
    \    [(equal? (first word) 'a) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'e) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'i) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'o) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel (rest word))]\n\
    \    [else (get_closest_vowel (rest word))]\n  )\n)\n", "  (cond\n    [(empty?\
    \ word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel\
    \ (rest word))]\n    [else (cons (first word) (get_closest_vowel (rest word)))]))\n",
  "  (cond\n    [(empty? word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'u) (get_closest_vowel (rest word))]\n    [else (get_closest_vowel (rest word))]))\n",
  "  (cond\n    [(empty? word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'u) (get_closest_vowel (rest word))]\n    [else (get_closest_vowel (rest word))]\n\
    \  )\n)\n", "  (cond [(empty? word) \"\"]\n        [(vowel? (car word)) (car word)]\n\
    \        [else (get_closest_vowel (cdr word))]))\n", "  (cond\n    [(empty? word)\
    \ \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'e) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'i) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'o) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel (rest word))]\n\
    \    [else (cons (first word) (get_closest_vowel (rest word)))]))\n", "  (define\
    \ (helper word vowel)\n    (cond\n      [(empty? word) \"\"]\n      [(equal? (first\
    \ word) vowel) (helper (rest word) vowel)]\n      [else (helper (rest word) (cons\
    \ (first word) vowel))]))\n  (helper (reverse word) 'a))\n", "  (cond [(empty?\
    \ word) \"\"]\n        [(equal? (first word) 'a) (get_closest_vowel (rest word))]\n\
    \        [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n        [(equal?\
    \ (first word) 'i) (get_closest_vowel (rest word))]\n        [(equal? (first word)\
    \ 'o) (get_closest_vowel (rest word))]\n        [(equal? (first word) 'u) (get_closest_vowel\
    \ (rest word))]\n        [else (get_closest_vowel (rest word))]))\n", "  (cond\n\
    \    [(empty? word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel (rest\
    \ word))]\n    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n  \
    \  [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal? (first\
    \ word) 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel\
    \ (rest word))]\n    [else (get_closest_vowel (rest word))]))\n", "  (cond\n \
    \   [(empty? word) \"\"]\n    [(equal? (first word) 'a) (get_closest_vowel (rest\
    \ word))]\n    [(equal? (first word) 'e) (get_closest_vowel (rest word))]\n  \
    \  [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n    [(equal? (first\
    \ word) 'o) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel\
    \ (rest word))]\n    [else (get_closest_vowel (rest word))]))\n", "  (define (vowel-check\
    \ vowel)\n    (cond\n      [(string=? (vowel-char vowel) 'a) (vowel-check 'b)]\n\
    \      [(string=? (vowel-char vowel) 'e) (vowel-check 'f)]\n      [(string=? (vowel-char\
    \ vowel) 'i) (vowel-check 'g)]\n      [(string=? (vowel-char vowel) 'o) (vowel-check\
    \ 'h)]\n      [(string=? (vowel-char vowel) 'u) (vowel-check 'j)]\n      [(string=?\
    \ (vowel-char vowel) 'y) (vowel-check 'k)]\n      [(string=? (vowel-char vowel)\
    \ 'A) (vowel-check 'B)]\n      [(string=? (vowel-char vowel) 'E) (vowel-check\
    \ 'F)]\n      [(string=? (vowel-char vowel) 'I) (vowel-check 'G)]\n      [(string=?\
    \ (vowel-char vowel) 'O) (vowel-check 'H)]\n      [(string=? (vowel-char vowel)\
    \ 'U) (vowel-check 'J)]\n      [(string=? (vowel-char vowel) 'Y) (vowel-check\
    \ 'K)]\n      [else (vowel-check 'L)]\n    )\n  )\n  (define (vowel-char vowel)\n\
    \    (string->char (string->string vowel)))\n  (define (vowel-check vowel)\n \
    \   (cond\n      [(string=? (vowel-char vowel) 'a) (vowel-check 'b)]\n      [(string=?\
    \ (vowel-char vowel) 'e) (vowel-check 'f)]\n      [(string=? (vowel-char vowel)\
    \ 'i) (vowel-check 'g)]\n      [(string=? (vowel-char vowel) 'o) (vowel-check\
    \ 'h)]\n      [(string=? (vowel-char vowel) 'u) (vowel-check 'j)]\n      [(string=?\
    \ (vowel-char vowel) 'y) (vowel-check 'k)]\n      [(string=? (vowel-char vowel)\
    \ 'A) (vowel-check 'B)]\n      [(string=? (vowel-char vowel) 'E) (vowel-check\
    \ 'F)]\n      [(string=? (vowel-char vowel) 'I) (vowel-check 'G)]\n      [(string=?\
    \ (vowel-char vowel) 'O) (vowel-check 'H)]\n      [(string=? (vowel-char vowel)\
    \ 'U) (vowel", "  (cond\n    [(empty? word) \"\"]\n    [(equal? (first word) 'a)\
    \ (get_closest_vowel (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'u) (get_closest_vowel (rest word))]\n    [else (get_closest_vowel\
    \ (rest word))]\n  )\n)\n", "  (cond\n    [(empty? word) \"\"]\n    [(equal? (first\
    \ word) 'a) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'e) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'i) (get_closest_vowel (rest word))]\n\
    \    [(equal? (first word) 'o) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'u) (get_closest_vowel (rest word))]\n    [else (cons (first word)\
    \ (get_closest_vowel (rest word)))]))\n", "  (cond\n    [(empty? word) \"\"]\n\
    \    [(equal? (first word) 'a) (get_closest_vowel (rest word))]\n    [(equal?\
    \ (first word) 'e) (get_closest_vowel (rest word))]\n    [(equal? (first word)\
    \ 'i) (get_closest_vowel (rest word))]\n    [(equal? (first word) 'o) (get_closest_vowel\
    \ (rest word))]\n    [(equal? (first word) 'u) (get_closest_vowel (rest word))]\n\
    \    [else (cons (first word) (get_closest_vowel (rest word)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

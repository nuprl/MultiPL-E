name: HumanEval_154_cycpattern_check
language: rkt
prompt: "#lang racket\n\n;; You are given 2 words. You need to return True if the\
  \ second word or any of its rotations is a substring in the first word\n(define\
  \ (cycpattern_check a b)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cycpattern_check))\n\
  \    (check-equal? (candidate \"xyzw\" \"xyw\") #f)\n    (check-equal? (candidate\
  \ \"yello\" \"ell\") #t)\n    (check-equal? (candidate \"whattup\" \"ptut\") #f)\n\
  \    (check-equal? (candidate \"efef\" \"fee\") #t)\n    (check-equal? (candidate\
  \ \"abab\" \"aabb\") #f)\n    (check-equal? (candidate \"winemtt\" \"tinem\") #t)\n\
  ))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first\
    \ a) (first b)) #t]\n    [else (or (cycpattern_check (rest a) b)\n           \
    \   (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [else (or (equal? (substring b 0) (substring a 0))\n\
    \               (equal? (substring b 1) (substring a 1)))]))\n", "  (or (string=?\
    \ a b)\n      (substring a 0 (string-length a) b)))\n", "  (or (string=? a b)\n\
    \      (substring a (b-length a) (b-length b))))\n", "  (cond\n    [(empty? a)\
    \ true]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (first a) (first b))]))\n", "  (or (string=? a b)\n      (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                (or (string=? (substring b 0 a) (substring a 0 b))\n        \
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                      (or (string=? (substring b 0\
    \ a) (substring a 0 b))\n                                          (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \         (or (string=? (substring b 0 a) (substring a 0 b))\n               \
    \                                   (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                      (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \                     (or (string=? (substring b 0 a) (substring a 0 b))\n   \
    \                                                           (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                                                                (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \                                     (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \            (or (string=? (substring b 0 a) (substring a 0 b))\n            \
    \                                                                      (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \                                                 (or (string=? (substring b 0\
    \ a) (substring a 0 b))\n                                                    \
    \                                      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                            (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                      (or (string=? (substring b 0 a) (substring a 0 b))\n  \
    \                                                                            \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                              (or (string=? (substring b 0 a) (substring a 0\
    \ b))\n                                                                      \
    \                                        (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                                                (or (string=? (substring ", " \
    \ (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [else (or (equal?\
    \ (substring a 0 1) (substring b 0 1))\n               (equal? (substring a 0\
    \ 2) (substring b 0 2))\n               (equal? (substring a 0 3) (substring b\
    \ 0 3))\n               (equal? (substring a 0 4) (substring b 0 4))\n       \
    \        (equal? (substring a 0 5) (substring b 0 5))\n               (equal?\
    \ (substring a 0 6) (substring b 0 6))\n               (equal? (substring a 0\
    \ 7) (substring b 0 7))\n               (equal? (substring a 0 8) (substring b\
    \ 0 8))\n               (equal? (substring a 0 9) (substring b 0 9))\n       \
    \        (equal? (substring a 0 10) (substring b 0 10))\n               (equal?\
    \ (substring a 0 11) (substring b 0 11))\n               (equal? (substring a\
    \ 0 12) (substring b 0 12))\n               (equal? (substring a 0 13) (substring\
    \ b 0 13))\n               (equal? (substring a 0 14) (substring b 0 14))\n  \
    \             (equal? (substring a 0 15) (substring b 0 15))\n               (equal?\
    \ (substring a 0 16) (substring b 0 16))\n               (equal? (substring a\
    \ 0 17) (substring b 0 17))\n               (equal? (substring a 0 18) (substring\
    \ b 0 18))\n               (equal? (substring a 0 19) (substring b 0 19))\n  \
    \             (equal? (substring a 0 20) (substring b 0 20))\n               (equal?\
    \ (substring a 0 21) (substring b 0 21))\n               (equal? (substring a\
    \ 0 22) (substring b 0 22))\n               (equal? (substring a 0 23) (substring\
    \ b 0 23))\n               (equal? (substring a 0 24) (substring b 0 24))\n  \
    \             (equal? (substring a 0 25) (substring b 0 25))\n               (equal?\
    \ (substring a 0 26) (substring b 0 26))\n               (equal? (substring a\
    \ 0 27) (substring b 0 27))\n               (equal? (substring a 0 28) (substring\
    \ b 0 28))\n               (equal? (substring a 0 29) (substring b 0 29))\n  \
    \             (equal? (substring ", "  (or (string=? a b)\n      (or (string=?\
    \ (string-append a b) a)\n          (string=? (string-append a b) b))))\n", " \
    \ (or (string=? a b)\n      (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b)))))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-append a b) a)\n          (string=? (string-append\
    \ a b) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n  \
    \  [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b)))]\n  ))\n", "  (or\
    \ (string=? a b)\n      (or (string=? (string-append a b) a)\n          (string=?\
    \ (string-append b (string-append a b)) a))))\n", "  (cond\n    [(empty? a) true]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (first a) (first b))]\n  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b))]\n  ))\n", " \
    \ (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first\
    \ b)) #t]\n    [else (or (cycpattern_check (rest a) b)\n               (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n  \
    \  [(equal? (first a) (first b)) #t]\n    [else (or (cycpattern_check (rest a)\
    \ b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (equal? (second a) (second b)) (cycpattern_check (rest a) (rest b))]\n \
    \   [else (equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest\
    \ a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a)\
    \ (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest\
    \ b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest b))\
    \ (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest\
    \ a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a)\
    \ (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest\
    \ b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest b))\
    \ (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest\
    \ a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a)\
    \ (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest\
    \ b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest b))\
    \ (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check",
  "  (or (string=? a b)\n      (or (string=? (substring a 0 b) b)\n          (string=?\
    \ (substring a (b 0 a) b) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest\
    \ a) (rest b)) (cycpattern_check (first a) (first b))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n\
    \    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n   \
    \ [else (cycpattern_check (rest a) (rest b)) (or (equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n    [(empty? a) true]\n\
    \    [(empty? b) false]\n    [else (or (substring b 0 (- (length a) 1))\n    \
    \          (cycpattern_check (substring a 0 (- (length a) 1)) b))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (cycpattern_check (rest a) (rest b))]\n  ))\n", "  (or\
    \ (string=? a b)\n      (or (string=? (substring a 0 b) b)\n          (string=?\
    \ (substring a b 0) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b)\
    \ false]\n    [(equal? (first a) (first b)) true]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  )\n)\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (substring a 0 b) b)\n          (string=? (substring\
    \ a (b 0 a) b) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty?\
    \ a) true]\n    [(empty? b) false]\n    [else (or (equal? (substring b 0) (substring\
    \ a 0))\n               (equal? (substring b 1) (substring a 1))\n           \
    \    (equal? (substring b 2) (substring a 2)))]))\n", "  (cond\n    [(empty? a)\
    \ false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n  \
    \  [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check (rest\
    \ b) a))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n   \
    \ [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest a)\
    \ b)\n              (cycpattern_check (rest b) a))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal?\
    \ (second a) (second b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n  \
    \  [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (or (string=?\
    \ a b)\n      (substring a (cycpattern_length a b) (cycpattern_length a (cycpattern_length\
    \ b a))))\n)\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n  \
    \  [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a))]))\n", "  (cond\n    [(empty?\
    \ a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first b)) #t]\n    [else\
    \ (or (cycpattern_check (rest a) b)\n              (cycpattern_check (rest b)\
    \ a))]))\n", "  (cond\n    [(empty? a) true]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (first a) (first b))]\n  )\n)\n", "  (cond\n\
    \    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first b)) #t]\n\
    \    [else (or (cycpattern_check (rest a) b)\n               (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n   \
    \ [else (cycpattern_check (rest a) (rest b))]\n  )\n)\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n\
    \    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n   \
    \ [(equal? (first a) (first b)) #t]\n    [else (or (equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b)))]))\n", "  (or (string=? a b)\n      (or\
    \ (string=? (substring a 0 b) b)\n          (string=? (substring a (b length)\
    \ b) b)\n          (string=? (substring a (b length) (b length)) b)\n        \
    \  (string=? (substring a (b length) (b length)) (b length))\n          (string=?\
    \ (substring a (b length) (b length)) (b length))\n          (string=? (substring\
    \ a (b length) (b length)) (b length))\n          (string=? (substring a (b length)\
    \ (b length)) (b length))\n          (string=? (substring a (b length) (b length))\
    \ (b length))\n          (string=? (substring a (b length) (b length)) (b length))\n\
    \          (string=? (substring a (b length) (b length)) (b length))\n       \
    \   (string=? (substring a (b length) (b length)) (b length))\n          (string=?\
    \ (substring a (b length) (b length)) (b length))\n          (string=? (substring\
    \ a (b length) (b length)) (b length))\n          (string=? (substring a (b length)\
    \ (b length)) (b length))\n          (string=? (substring a (b length) (b length))\
    \ (b length))\n          (string=? (substring a (b length) (b length)) (b length))\n\
    \          (string=? (substring a (b length) (b length)) (b length))\n       \
    \   (string=? (substring a (b length) (b length)) (b length))\n          (string=?\
    \ (substring a (b length) (b length)) (b length))\n          (string=? (substring\
    \ a (b length) (b length)) (b length))\n          (string=? (substring a (b length)\
    \ (b length)) (b length))\n          (string=? (substring a (b length) (b length))\
    \ (b length))\n          (string=? (substring a (b length) (b length)) (b length))\n\
    \          (string=? (substring a (b length) (b length)) (b length))\n       \
    \   (string=? (substring a (b length) (b length)) (b length))\n          (string=?\
    \ (substring a (b length) (b length)) (b length))", "  (or (string=? a b)\n  \
    \    (or (string=? (substring b 0) (substring a 0))\n          (string=? (substring\
    \ b 0) (substring a 1))\n          (string=? (substring b 1) (substring a 0))\n\
    \          (string=? (substring b 1) (substring a 1)))))\n", "  (cond\n    [(empty?\
    \ a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first b)) #t]\n    [else\
    \ (or (cycpattern_check (rest a) b)\n              (cycpattern_check (rest b)\
    \ a))]))\n", "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n\
    \          (string=? (string-append b a ) a))))\n", "  (cond\n    [(empty? a)\
    \ false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (or (equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (rest b) (rest a)))]))\n", "  (cond\n \
    \   [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest\
    \ a) (rest b)) (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) true]\n    [else (cycpattern_check (rest a) (rest b))]\n\
    \  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n  \
    \  [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a))]))\n", "  (cond\n    [(empty?\
    \ a) true]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (first a) (first b))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b)\
    \ false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n\
    \    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check (first a) (first\
    \ b))]\n  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n  \
    \  [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n\
    \    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) true]\n    [else (cycpattern_check (rest a)\
    \ (rest b))]))\n", "  (or (string=? a b)\n      (or (string=? (substring a 0 b)\
    \ b)\n          (string=? (substring a (b 0 a) b) b))))\n", "  (or (equal? (string-match\
    \ a b) true)\n      (equal? (string-match a (reverse b)) true)))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n               (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n\
    \    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) (equal? (second a) (second b))]\n    [else\
    \ (or (cycpattern_check (rest a) b)\n              (cycpattern_check (rest b)\
    \ a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (first a) (first b))]\n  ))\n", "  (or\
    \ (string=? a b)\n      (or (string=? (substring a 0 1) b)\n          (string=?\
    \ (substring a 1 0) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b)\
    \ false]\n    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (equal? (second a) (second b))]\n    [else (or (equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (or (string=? a b)\n   \
    \   (or (string=? (string-reverse a) b)\n          (string=? (string-reverse b)\
    \ a))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  )\n)\n", "  (or (string=? a b)\n      (substring a (cycpattern_check\
    \ b (substring a (cycpattern_check b (substring a b)))))))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal?\
    \ (second a) (second b)) (cycpattern_check (rest a) (rest b))]\n    [else (or\
    \ (equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (rest b) (rest a)))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n\
    \    [(equal? (first a) (first b)) #t]\n    [else (or (equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)))]\n  )\n)\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-append a b) a)\n          (string-contains-rotations\
    \ b a))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) true]\n    [else (cycpattern_check (rest a) b)]))\n", " \
    \ (or (string=? a b)\n      (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b)))))\n", "  (cond\n  \
    \  [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first b)) #t]\n\
    \    [else (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n",
  "  (or (string=? a b)\n      (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              (or\
    \ (string=? (substring b 0 a) (substring a 0 b))\n                  (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                      (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                          (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                              (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                  (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                      (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \     (or (string=? (substring b 0 a) (substring a 0 b))\n                   \
    \                           (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                  (or (string=? (substring b\
    \ 0 a) (substring a 0 b))\n                                                  \
    \    (or (string=? (substring b 0 a) (substring a 0 b))\n                    \
    \                                      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                              (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \                             (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                      (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \                                     (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \            (or (string=? (substring b 0 a) (substring a 0 b))\n            \
    \                                                                      (or (string=?\
    \ (substring b 0 a) (substring a 0 b))\n                                     \
    \                                                 (or (string=? (substring b 0\
    \ a) (substring a 0 b))\n                                                    \
    \                                      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                            (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                      (or (string=? (substring b 0 a) (substring a 0 b))\n  \
    \                                                                            \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                              (or (string=? (substring b 0 a) (substring a 0\
    \ b))\n                                                                      \
    \                                        (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                                                (or (string=? (substring ", " \
    \ (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first\
    \ b)) #t]\n    [else (or (equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b)))]))\n", "  (cond\n    [(empty? b) false]\n    [(equal? (first b)\
    \ a) (equal? (second b) (cycpattern_check (rest b) a))]\n    [else (equal? (first\
    \ b) (cycpattern_check (rest b) a)) (cycpattern_check a (rest b))]\n  )\n)\n",
  "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n          (string=?\
    \ (string-append a b) b))))\n", "  (cond\n    [(empty? b) #t]\n    [(empty? a)\
    \ #f]\n    [(equal? (first b) (cycpattern_check (rest b) a)) #t]\n    [else (or\
    \ (equal? (first a) (cycpattern_check (rest a) b)) (cycpattern_check (rest a)\
    \ (rest b)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n   \
    \ [else (cycpattern_check (rest a) (rest b)) (equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n  ))\n", "  (or (string=? a b)\n      (or (string=? (string-append\
    \ a b) a)\n          (string=? (string-append a b) b))))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal?\
    \ (second a) (second b))]\n    [else (cycpattern_check (rest a) b)]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n               (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) true]\n    [(empty? b) false]\n\
    \    [else (or (substring b 0 (- (length a) 1))\n               (substring b 0\
    \ (- (length a) 2))\n               (substring b 0 (- (length a) 3))\n       \
    \        (substring b 0 (- (length a) 4))\n               (substring b 0 (- (length\
    \ a) 5))\n               (substring b 0 (- (length a) 6))\n               (substring\
    \ b 0 (- (length a) 7))\n               (substring b 0 (- (length a) 8))\n   \
    \            (substring b 0 (- (length a) 9))\n               (substring b 0 (-\
    \ (length a) 10))\n               (substring b 0 (- (length a) 11))\n        \
    \       (substring b 0 (- (length a) 12))\n               (substring b 0 (- (length\
    \ a) 13))\n               (substring b 0 (- (length a) 14))\n               (substring\
    \ b 0 (- (length a) 15))\n               (substring b 0 (- (length a) 16))\n \
    \              (substring b 0 (- (length a) 17))\n               (substring b\
    \ 0 (- (length a) 18))\n               (substring b 0 (- (length a) 19))\n   \
    \            (substring b 0 (- (length a) 20))\n               (substring b 0\
    \ (- (length a) 21))\n               (substring b 0 (- (length a) 22))\n     \
    \          (substring b 0 (- (length a) 23))\n               (substring b 0 (-\
    \ (length a) 24))\n               (substring b 0 (- (length a) 25))\n        \
    \       (substring b 0 (- (length a) 26))\n               (substring b 0 (- (length\
    \ a) 27))\n               (substring b 0 (- (length a) 28))\n               (substring\
    \ b 0 (- (length a) 29))\n               (substring b 0 (- (length a) 30))\n \
    \              (substring b 0 (- (length a) 31))\n               (substring b\
    \ 0 (- (length a) 32))\n               (substring b 0 (- (length a) 33))\n   \
    \            (substring b 0 (- (length a) 34))\n               (substring b 0\
    \ (- (length a) 35))\n               (substring b 0 (- (length a) 36))\n     \
    \          (substring b 0 (- (length a) 37))\n               (substring b 0 (-\
    \ (length a) 38))\n               (substring b 0 (", "  (cond\n    [(empty? a)\
    \ false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal? (second\
    \ a) (second b))]\n    [else (cycpattern_check (rest a) b)]))\n", "  (cond\n \
    \   [(empty? a) false]\n    [(empty? b) false]\n    [else (or (string=? (substring\
    \ b 0) (substring a 0))\n              (string=? (substring b 0) (substring a\
    \ 1))\n              (string=? (substring b 1) (substring a 0))\n            \
    \  (string=? (substring b 1) (substring a 1))\n              (cycpattern_check\
    \ (substring b 2) (substring a 2)))]))\n", "  (or (string=? a b)\n      (or (string=?\
    \ (string-rotate b 1) a)\n          (string=? (string-rotate b 2) a)\n       \
    \   (string=? (string-rotate b 3) a)\n          (string=? (string-rotate b 4)\
    \ a)\n          (string=? (string-rotate b 5) a)\n          (string=? (string-rotate\
    \ b 6) a)\n          (string=? (string-rotate b 7) a)\n          (string=? (string-rotate\
    \ b 8) a)\n          (string=? (string-rotate b 9) a)\n          (string=? (string-rotate\
    \ b 10) a)\n          (string=? (string-rotate b 11) a)\n          (string=? (string-rotate\
    \ b 12) a)\n          (string=? (string-rotate b 13) a)\n          (string=? (string-rotate\
    \ b 14) a)\n          (string=? (string-rotate b 15) a)\n          (string=? (string-rotate\
    \ b 16) a)\n          (string=? (string-rotate b 17) a)\n          (string=? (string-rotate\
    \ b 18) a)\n          (string=? (string-rotate b 19) a)\n          (string=? (string-rotate\
    \ b 20) a)\n          (string=? (string-rotate b 21) a)\n          (string=? (string-rotate\
    \ b 22) a)\n          (string=? (string-rotate b 23) a)\n          (string=? (string-rotate\
    \ b 24) a)\n          (string=? (string-rotate b 25) a)\n          (string=? (string-rotate\
    \ b 26) a)\n          (string=? (string-rotate b 27) a)\n          (string=? (string-rotate\
    \ b 28) a)\n          (string=? (string-rotate b 29) a)\n          (string=? (string-rotate\
    \ b 30) a)\n          (string=? (string-rotate b 31) a)\n          (string=? (string-rotate\
    \ b 32) a)\n          (string=? (string-rotate b 33) a)\n          (string=? (string-rotate\
    \ b 34) a)\n          (string=? (string-rotate b 35) a)\n          (string=? (string-rotate\
    \ b 36) a)\n          (string=? (string-rotate b 37) a)\n          (string=? (string-rotate\
    \ b 38) a)\n          (string=? (string-rotate b 39) a)\n          (string=? (string-rotate\
    \ b 40) a)\n          (string=? (string-rotate b 41) a)\n          (string=? (string-rotate\
    \ b 42) a)\n          (string=? (string-rotate b 43) a)\n          (string=? (string-rotate\
    \ b 44) a)\n          (string=? (string-rotate b 45) a)\n          (string=? (string-rotate\
    \ b 46) a)\n          (string=? (string-rotate ", "  (cond\n    [(empty? a) true]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (first a) (first b))]\n  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (or (string=? a b)\n   \
    \   (or (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b ", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b))]\n  ))\n", "  (cond\n   \
    \ [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest a)\
    \ (rest b)) (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal?\
    \ (first a) (first b)) #t]\n    [else (or (cycpattern_check (rest a) b)\n    \
    \          (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty? a) #t]\n\
    \    [(empty? b) #t]\n    [(equal? (first a) (first b)) #t]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n   \
    \ [(equal? (first a) (first b)) #t]\n    [else (or (equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n    [(empty? a) #t]\n\
    \    [(empty? b) #t]\n    [(equal? (car a) (car b)) #t]\n    [else (or (cycpattern_check\
    \ (cdr a) b)\n              (cycpattern_check (cdr (cdr a)) b))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest\
    \ a) (rest b)) (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n\
    \          (string-contains-rotations b a))))\n", "  (cond\n    [(empty? a) true]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (or (string=?\
    \ a b)\n      (substring a 0 (string-length a) b)\n      (substring b (string-length\
    \ a) 0 a)))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n   \
    \ [else (or (equal? (substring b 0) (substring a 0))\n               (equal? (substring\
    \ b 1) (substring a 1)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-append\
    \ a b) a)\n          (string=? (string-append a b) (string-append b (string-append\
    \ a b))))))\n", "  (or (string=? a b)\n      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (or (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              \
    \    (or (string=? (substring b 0 a) (substring a 0 b))\n                    \
    \  (or (string=? (substring b 0 a) (substring a 0 b))\n                      \
    \    (or (string=? (substring b 0 a) (substring a 0 b))\n                    \
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              \
    \                    (or (string=? (substring b 0 a) (substring a 0 b))\n    \
    \                                  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                          (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                              (or\
    \ (string=? (substring b 0 a) (substring a 0 b))\n                           \
    \                       (or (string=? (substring b 0 a) (substring a 0 b))\n \
    \                                                     (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              \
    \                                                (or (string=? (substring b 0\
    \ a) (substring a 0 b))\n                                                    \
    \              (or (string=? (substring b 0 a) (substring a 0 b))\n          \
    \                                                            (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \                          (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \  (or (string=? (substring b 0 a) (substring a 0 b))\n                      \
    \                                                            (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \                                      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                                                                            \
    \                (or (string=? (substring b 0 a) (substring a 0 b))\n        \
    \                                                                            \
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                                                                            \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                                  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                                                (or (string=? (substring ", " \
    \ (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) (equal? (second a) (second b)) (cycpattern_check (rest a) (rest b))]\n\
    \    [else (cycpattern_check (rest a) (rest b)) (equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n  )\n)\n", "  (or (string=? a b)\n      (substring a 0\
    \ (string-length a) b)\n      (substring b (string-length a) 0 a)))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (equal? (second a) (second b))]\n    [else (cycpattern_check (rest a) b)]))\n",
  "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) true]\n    [else (or (cycpattern_check (rest a) b)\n            \
    \  (cycpattern_check (rest b) a)))]))\n", "  (or (string=? a b)\n      (or (string=?\
    \ (substring a 0 1) b)\n          (string=? (substring a 1 0) b))))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest\
    \ a) (rest b)) (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  )\n)\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check (first\
    \ a) (first b))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n  \
    \  [(equal? (car a) (car b)) #t]\n    [else (or (cycpattern_check (cdr a) b)\n\
    \              (cycpattern_check (cdr b) a))]))\n", "  (cond\n    [(empty? a)\
    \ false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n  \
    \  [(equal? (car a) (car b)) #t]\n    [else (or (cycpattern_check (cdr a) b)\n\
    \              (cycpattern_check (cdr b) a))]))\n", "  (or (string=? a b)\n  \
    \    (or (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b)))))\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [else (or (substring a 0 (string-length a)) (cycpattern_check\
    \ (substring a 0 (string-length a)) b))]))\n", "  (or (string=? a b)\n      (or\
    \ (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b)))))\n", "  (or (string=? a b)\n      (or (string=?\
    \ (string-rotate b 1) a)\n          (string=? (string-rotate b 2) a)\n       \
    \   (string=? (string-rotate b 3) a)\n          (string=? (string-rotate b 4)\
    \ a)\n          (string=? (string-rotate b 5) a)\n          (string=? (string-rotate\
    \ b 6) a)\n          (string=? (string-rotate b 7) a)\n          (string=? (string-rotate\
    \ b 8) a)\n          (string=? (string-rotate b 9) a)\n          (string=? (string-rotate\
    \ b 10) a)\n          (string=? (string-rotate b 11) a)\n          (string=? (string-rotate\
    \ b 12) a)\n          (string=? (string-rotate b 13) a)\n          (string=? (string-rotate\
    \ b 14) a)\n          (string=? (string-rotate b 15) a)\n          (string=? (string-rotate\
    \ b 16) a)\n          (string=? (string-rotate b 17) a)\n          (string=? (string-rotate\
    \ b 18) a)\n          (string=? (string-rotate b 19) a)\n          (string=? (string-rotate\
    \ b 20) a)\n          (string=? (string-rotate b 21) a)\n          (string=? (string-rotate\
    \ b 22) a)\n          (string=? (string-rotate b 23) a)\n          (string=? (string-rotate\
    \ b 24) a)\n          (string=? (string-rotate b 25) a)\n          (string=? (string-rotate\
    \ b 26) a)\n          (string=? (string-rotate b 27) a)\n          (string=? (string-rotate\
    \ b 28) a)\n          (string=? (string-rotate b 29) a)\n          (string=? (string-rotate\
    \ b 30) a)\n          (string=? (string-rotate b 31) a)\n          (string=? (string-rotate\
    \ b 32) a)\n          (string=? (string-rotate b 33) a)\n          (string=? (string-rotate\
    \ b 34) a)\n          (string=? (string-rotate b 35) a)\n          (string=? (string-rotate\
    \ b 36) a)\n          (string=? (string-rotate b 37) a)\n          (string=? (string-rotate\
    \ b 38) a)\n          (string=? (string-rotate b 39) a)\n          (string=? (string-rotate\
    \ b 40) a)\n          (string=? (string-rotate b 41) a)\n          (string=? (string-rotate\
    \ b 42) a)\n          (string=? (string-rotate b 43) a)\n          (string=? (string-rotate\
    \ b 44) a)\n          (string=? (string-rotate b 45) a)\n          (string=? (string-rotate\
    \ b 46) a)\n          (string=? (string-rotate ", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n    [else (or\
    \ (cycpattern_check (rest a) b)\n              (cycpattern_check (rest b) a))]))\n",
  "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) true]\n    [else (or (cycpattern_check (rest a) b)\n            \
    \  (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n \
    \   [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n    [else (or\
    \ (cycpattern_check (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n",
  "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) true]\n    [else (or (cycpattern_check (rest a) b)\n            \
    \  (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n \
    \   [(empty? b) false]\n    [else (or (equal? (substring b 0) (substring a 0))\n\
    \              (equal? (substring b 0) (substring a 1))\n              (equal?\
    \ (substring b 0) (substring a 2))\n              (equal? (substring b 0) (substring\
    \ a 3))\n              (equal? (substring b 0) (substring a 4))\n            \
    \  (equal? (substring b 0) (substring a 5))\n              (equal? (substring\
    \ b 0) (substring a 6))\n              (equal? (substring b 0) (substring a 7))\n\
    \              (equal? (substring b 0) (substring a 8))\n              (equal?\
    \ (substring b 0) (substring a 9))\n              (equal? (substring b 0) (substring\
    \ a 10))\n              (equal? (substring b 0) (substring a 11))\n          \
    \    (equal? (substring b 0) (substring a 12))\n              (equal? (substring\
    \ b 0) (substring a 13))\n              (equal? (substring b 0) (substring a 14))\n\
    \              (equal? (substring b 0) (substring a 15))\n              (equal?\
    \ (substring b 0) (substring a 16))\n              (equal? (substring b 0) (substring\
    \ a 17))\n              (equal? (substring b 0) (substring a 18))\n          \
    \    (equal? (substring b 0) (substring a 19))\n              (equal? (substring\
    \ b 0) (substring a 20))\n              (equal? (substring b 0) (substring a 21))\n\
    \              (equal? (substring b 0) (substring a 22))\n              (equal?\
    \ (substring b 0) (substring a 23))\n              (equal? (substring b 0) (substring\
    \ a 24))\n              (equal? (substring b 0) (substring a 25))\n          \
    \    (equal? (substring b 0) (substring a 26))\n              (equal? (substring\
    \ b 0) (substring a 27))\n              (equal? (substring b 0) (substring a 28))\n\
    \              (equal? (substring b 0) (substring a 29))\n              (equal?\
    \ (substring b 0) (substring a 30))\n              (equal? (substring b 0) (substring\
    \ a 31))\n              (equal? (substring b 0) (substring a 32))\n          \
    \    (equal? (substring ", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-append a b) a)\n          (string=? (string-append\
    \ a b) (string-append b a)))))\n", "  (cond\n    [(empty? a) #t]\n    [(empty?\
    \ b) #t]\n    [(equal? (car a) (car b)) #t]\n    [else (or (cycpattern_check (cdr\
    \ a) b)\n              (cycpattern_check (cdr b) a))]))\n", "  (or (string=? a\
    \ b)\n      (substring a (cycpattern_check b (substring a (cycpattern_check a\
    \ b))))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (equal? (second a) (second b))]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (or (cycpattern_check (rest\
    \ a) (rest b)) (cycpattern_check (first a) (first b)))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [else (or (equal? (substring b 0) (substring\
    \ a 0))\n               (equal? (substring b 0) (substring a 1))\n           \
    \    (equal? (substring b 0) (substring a 2))\n               (equal? (substring\
    \ b 0) (substring a 3))\n               (equal? (substring b 0) (substring a 4))\n\
    \               (equal? (substring b 0) (substring a 5))\n               (equal?\
    \ (substring b 0) (substring a 6))\n               (equal? (substring b 0) (substring\
    \ a 7))\n               (equal? (substring b 0) (substring a 8))\n           \
    \    (equal? (substring b 0) (substring a 9))\n               (equal? (substring\
    \ b 0) (substring a 10))\n               (equal? (substring b 0) (substring a\
    \ 11))\n               (equal? (substring b 0) (substring a 12))\n           \
    \    (equal? (substring b 0) (substring a 13))\n               (equal? (substring\
    \ b 0) (substring a 14))\n               (equal? (substring b 0) (substring a\
    \ 15))\n               (equal? (substring b 0) (substring a 16))\n           \
    \    (equal? (substring b 0) (substring a 17))\n               (equal? (substring\
    \ b 0) (substring a 18))\n               (equal? (substring b 0) (substring a\
    \ 19))\n               (equal? (substring b 0) (substring a 20))\n           \
    \    (equal? (substring b 0) (substring a 21))\n               (equal? (substring\
    \ b 0) (substring a 22))\n               (equal? (substring b 0) (substring a\
    \ 23))\n               (equal? (substring b 0) (substring a 24))\n           \
    \    (equal? (substring b 0) (substring a 25))\n               (equal? (substring\
    \ b 0) (substring a 26))\n               (equal? (substring b 0) (substring a\
    \ 27))\n               (equal? (substring b 0) (substring a 28))\n           \
    \    (equal? (substring b 0) (substring a 29))\n               (equal? (substring\
    \ b 0) (substring a 30))\n               (equal? (substring b 0) (substring a\
    \ 31))\n               (equal? (substring b 0) (substring a 32))\n           \
    \    (equal? (substring ", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) true]\n    [else (cycpattern_check (rest a)\
    \ b)]))\n", "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n\
    \          (string=? (string-append a b) b))))\n", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal? (second a)\
    \ (second b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (equal? (first a) (first b)) (equal? (second a) (second b))\
    \ (cycpattern_check (rest a) (rest b))]\n  ))\n", "  (cond\n    [(empty? b) true]\n\
    \    [(equal? (first b) a) true]\n    [else (or (cycpattern_check (first b) (substring\
    \ b (+ 1 a)))\n              (cycpattern_check (first b) (substring b (- 1 a))))]))\n",
  "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) true]\n    [else (or (cycpattern_check (rest a) b)\n            \
    \  (cycpattern_check (rest b) a))]))\n", "  (cond\n    [(empty? a) false]\n  \
    \  [(empty? b) false]\n    [(equal? (first a) (first b)) true]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  ))\n", "  (or (string=? a b)\n      (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (string=? (substring b 0 a) (substring a 0 b))\n              (string=?\
    \ (substring b 0 a) (substring a 0 b))\n              (string=? (substring b 0\
    \ a) (substring a 0 b))\n              (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (string=? (substring b 0 a) (substring a 0 b))\n              (string=?\
    \ (substring b 0 a) (substring a 0 b))\n              (string=? (substring b 0\
    \ a) (substring a 0 b))\n              (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (string=? (substring b 0 a) (substring a 0 b))\n              (string=?\
    \ (substring b 0 a) (substring a 0 b))\n              (string=? (substring b 0\
    \ a) (substring a 0 b))\n              (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (string=? (substring b 0 a) (substring a 0 b))\n              (string=?\
    \ (substring b 0 a) (substring a 0 b))\n              (string=? (substring b 0\
    \ a) (substring a 0 b))\n              (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (string=? (substring b 0 a) (substring a 0 b))\n              (string=?\
    \ (substring b 0 a) (substring a 0 b))\n              (string=? (substring b 0\
    \ a) (substring a 0 b))\n              (string=? (substring b 0 a) (substring\
    \ a 0 b))\n              (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (string=? (substring b 0 a) (substring a 0 b))\n              (string=?\
    \ (substring b 0 a) (substring a 0 b))\n              (string=? (substring b 0\
    \ a) (substring a 0 b))\n              (string=? (sub", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b))]\n  ))\n",
  "  (cond\n    [(empty? a) true]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (first a) (first b))]\n  )\n)\n", "  (cond\n\
    \    [(empty? b) false]\n    [(equal? (first b) a) true]\n    [else (cycpattern_check\
    \ (first b) (rest b))]))\n", "  (or (string=? a b)\n      (or (string=? (substring\
    \ a 0 1) b)\n          (string=? (substring a 1 0) b))))\n", "  (cond\n    [(empty?\
    \ a) true]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (cycpattern_check\
    \ (first a) (first b))]\n  ))\n", "  (cond\n    [(empty? a) #t]\n    [(empty?\
    \ b) #t]\n    [(equal? (first a) (first b)) #t]\n    [else (or (equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-rotate b 1) a)\n          (string=? (string-rotate\
    \ b 2) a)\n          (string=? (string-rotate b 3) a)\n          (string=? (string-rotate\
    \ b 4) a)\n          (string=? (string-rotate b 5) a)\n          (string=? (string-rotate\
    \ b 6) a)\n          (string=? (string-rotate b 7) a)\n          (string=? (string-rotate\
    \ b 8) a)\n          (string=? (string-rotate b 9) a)\n          (string=? (string-rotate\
    \ b 10) a)\n          (string=? (string-rotate b 11) a)\n          (string=? (string-rotate\
    \ b 12) a)\n          (string=? (string-rotate b 13) a)\n          (string=? (string-rotate\
    \ b 14) a)\n          (string=? (string-rotate b 15) a)\n          (string=? (string-rotate\
    \ b 16) a)\n          (string=? (string-rotate b 17) a)\n          (string=? (string-rotate\
    \ b 18) a)\n          (string=? (string-rotate b 19) a)\n          (string=? (string-rotate\
    \ b 20) a)\n          (string=? (string-rotate b 21) a)\n          (string=? (string-rotate\
    \ b 22) a)\n          (string=? (string-rotate b 23) a)\n          (string=? (string-rotate\
    \ b 24) a)\n          (string=? (string-rotate b 25) a)\n          (string=? (string-rotate\
    \ b 26) a)\n          (string=? (string-rotate b 27) a)\n          (string=? (string-rotate\
    \ b 28) a)\n          (string=? (string-rotate b 29) a)\n          (string=? (string-rotate\
    \ b 30) a)\n          (string=? (string-rotate b 31) a)\n          (string=? (string-rotate\
    \ b 32) a)\n          (string=? (string-rotate b 33) a)\n          (string=? (string-rotate\
    \ b 34) a)\n          (string=? (string-rotate b 35) a)\n          (string=? (string-rotate\
    \ b 36) a)\n          (string=? (string-rotate b 37) a)\n          (string=? (string-rotate\
    \ b 38) a)\n          (string=? (string-rotate b 39) a)\n          (string=? (string-rotate\
    \ b 40) a)\n          (string=? (string-rotate b 41) a)\n          (string=? (string-rotate\
    \ b 42) a)\n          (string=? (string-rotate b 43) a)\n          (string=? (string-rotate\
    \ b 44) a)\n          (string=? (string-rotate b 45) a)\n          (string=? (string-rotate\
    \ b 46) a)\n          (string=? (string-rotate ", "  (cond\n    [(empty? a) false]\n\
    \    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal? (second a)\
    \ (second b)) (cycpattern_check (rest a) (rest b))]\n    [else (or (equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)) (cycpattern_check (rest b)\
    \ (rest a)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate\
    \ b 1) a)\n          (string-contains-rotations b a))))\n", "  (or (string=? a\
    \ b)\n      (substring a (b-length a) (b-length b))))\n", "  (or (string=? a b)\n\
    \      (or (string=? (substring a 0 b) b)\n          (string=? (substring a (b\
    \ 0 a) b) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n   \
    \ [else (cycpattern_check (rest a) (rest b)) (or (equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b)))]))\n", "  (or (string=? a b)\n      (or\
    \ (string=? (string-reverse a) b)\n          (string=? (string-reverse b) a))))\n",
  "  (or (string=? a b)\n      (or (string=? (substring b 0 a) a)\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))))) ;; #lang racket\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n  ))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? b) true]\n    [(equal? (first b)\
    \ a) true]\n    [else (or (cycpattern_check (first b) (substring b (+ 1 a)))\n\
    \              (cycpattern_check (first b) (substring b (- a 1))))]))\n", "  (cond\n\
    \    [(empty? b) false]\n    [(equal? (first b) a) (equal? (second b) (cycpattern_check\
    \ (rest b) a))]\n    [else (equal? (first b) (cycpattern_check (rest b) a)) (cycpattern_check\
    \ (rest b) (cycpattern_check (first b) a))]\n  )\n)\n", "  (cond\n    [(empty?\
    \ b) false]\n    [(equal? (first b) a) true]\n    [else (cycpattern_check (first\
    \ b) (substring b (+ 1 a)))]))\n", "  (or (string=? a b)\n      (or (string=?\
    \ (string-append a b) a)\n          (string=? (string-append a b) b))))\n", " \
    \ (or (string=? a b)\n      (or (string=? (string-append a b) a)\n          (string=?\
    \ (string-append a b) b))))\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest\
    \ a) (rest b))]\n  )\n)\n", "  (or (string=? a b)\n      (substring a 0 (string-length\
    \ a) b)))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [else\
    \ (or (equal? (substring a 0 1) (substring b 0 1)) (cycpattern_check (substring\
    \ a 1 ) (substring b 1 )))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty?\
    \ b) false]\n    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [else (or (substring b 0 (string-length a)) (cycpattern_check (substring\
    \ a 0 (string-length b)) b))]))\n", "  (cond\n    [(empty? a) #t]\n    [(empty?\
    \ b) #t]\n    [(equal? (first a) (first b)) #t]\n    [else (or (equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (equal?\
    \ (second a) (second b))]\n    [else (or (equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate\
    \ b 1) a)\n          (string=? (string-rotate b 2) a)\n          (string=? (string-rotate\
    \ b 3) a)\n          (string=? (string-rotate b 4) a)\n          (string=? (string-rotate\
    \ b 5) a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (cond\n    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first\
    \ b)) #t]\n    [else (or (equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b)))]))\n", "  (or (string=? a b)\n      (substring a 0 (string-length\
    \ a) b)\n      (substring b (string-length a) 0 (string-length b))))\n", "  (cond\n\
    \    [(empty? a) #t]\n    [(empty? b) #t]\n    [(equal? (first a) (first b)) #t]\n\
    \    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [else (or (equal? (substring b 0) (substring\
    \ a 0))\n               (equal? (substring b 0) (substring a 1))\n           \
    \    (equal? (substring b 0) (substring a 2))\n               (equal? (substring\
    \ b 0) (substring a 3))\n               (equal? (substring b 0) (substring a 4))\n\
    \               (equal? (substring b 0) (substring a 5))\n               (equal?\
    \ (substring b 0) (substring a 6))\n               (equal? (substring b 0) (substring\
    \ a 7))\n               (equal? (substring b 0) (substring a 8))\n           \
    \    (equal? (substring b 0) (substring a 9))\n               (equal? (substring\
    \ b 0) (substring a 10))\n               (equal? (substring b 0) (substring a\
    \ 11))\n               (equal? (substring b 0) (substring a 12))\n           \
    \    (equal? (substring b 0) (substring a 13))\n               (equal? (substring\
    \ b 0) (substring a 14))\n               (equal? (substring b 0) (substring a\
    \ 15))\n               (equal? (substring b 0) (substring a 16))\n           \
    \    (equal? (substring b 0) (substring a 17))\n               (equal? (substring\
    \ b 0) (substring a 18))\n               (equal? (substring b 0) (substring a\
    \ 19))\n               (equal? (substring b 0) (substring a 20))\n           \
    \    (equal? (substring b 0) (substring a 21))\n               (equal? (substring\
    \ b 0) (substring a 22))\n               (equal? (substring b 0) (substring a\
    \ 23))\n               (equal? (substring b 0) (substring a 24))\n           \
    \    (equal? (substring b 0) (substring a 25))\n               (equal? (substring\
    \ b 0) (substring a 26))\n               (equal? (substring b 0) (substring a\
    \ 27))\n               (equal? (substring b 0) (substring a 28))\n           \
    \    (equal? (substring b 0) (substring a 29))\n               (equal? (substring\
    \ b 0) (substring a 30))\n               (equal? (substring b 0) (substring a\
    \ 31))\n               (equal? (substring b 0) (substring a 32))\n           \
    \    (equal? (substring ", "  (or (string=? a b)\n      (or (string=? (string-append\
    \ a b) a)\n          (string=? (string-append a b) b))))\n", "  (cond\n    [(empty?\
    \ a) true]\n    [(empty? b) false]\n    [else (or (cycpattern_check (cdr a) b)\n\
    \               (or (cycpattern_check (cdr a) (car b))\n                   (or\
    \ (cycpattern_check (cdr b) (car a))\n                       (cycpattern_check\
    \ (cdr b) (cdr a))))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b)\
    \ false]\n    [(equal? (first a) (first b)) true]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b)\
    \ false]\n    [(equal? (first a) (first b)) true]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n               (cycpattern_check (rest b) a)))]))\n", "  (cond\n\
    \    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n\
    \    [(equal? (first a) (first b)) (equal? (second a) (second b))]\n    [else\
    \ (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n",
  "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n          (string=?\
    \ (string-append a b) (string-append b (substring a 0 1))))))\n", "  (cond\n \
    \   [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check (rest\
    \ a) (rest b)) (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n\
    \          (string=? (string-rotate b 2) a)\n          (string=? (string-rotate\
    \ b 3) a)\n          (string=? (string-rotate b 4) a)\n          (string=? (string-rotate\
    \ b 5) a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (cond\n    [(empty? b) true]\n    [(equal? (first b) a) true]\n    [else (or\
    \ (cycpattern_check (first b) (append (rest b) (list (first b)))) (cycpattern_check\
    \ (first b) (append (rest b) (list (first b) (rest b))))]))\n", "  (cond\n   \
    \ [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b))\
    \ true]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (or (string=? a b)\n      (or (string=? (substring b\
    \ 0 a) a)\n          (string=? (substring b 0 a) (substring a 0 b))))) ;; #lang\
    \ racket\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n  ))\n", "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n  \
    \  [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else\
    \ (cycpattern_check (rest a) (rest b)) (or (equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b)))]))\n", "  (cond\n    [(empty? b) false]\n    [(equal? (first\
    \ b) a) true]\n    [else (or (cycpattern_check (first b) (substring b 1))\n  \
    \            (cycpattern_check (first b) (substring b (+ 1 length (first b)))))))\n",
  "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (cycpattern_check (first a) (first b))]\n  ))\n", "  (cond\n\
    \    [(empty? a) #t]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n\
    \    [else (or (equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n",
  "  (cond\n    [(empty? a) false]\n    [(empty? b) false]\n    [(equal? (first a)\
    \ (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b)) (equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n  ))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a)\
    \ b)\n          (string=? (string-reverse b) a))))\n", "  (cond\n    [(empty?\
    \ a) false]\n    [(empty? b) false]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b)) (or (equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

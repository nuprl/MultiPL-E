name: HumanEval_35_max_element
language: rkt
prompt: "#lang racket\n\n;; Return maximum element in the list.\n(define (max_element\
  \ l)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_element))\n\
  \    (check-equal? (candidate (list 1 2 3)) 3)\n    (check-equal? (candidate (list\
  \ 5 3 -5 2 -3 3 9 0 124 1 -10)) 124)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? l) empty]\n    [(> (first l) (first l)) (max_element\
    \ (rest l))]\n    [else (max_element (rest l))]\n  )\n)\n", "  (if (null? l)\n\
    \      null\n      (if (> (car l) (cadr l))\n          (cadr l)\n          (max_element\
    \ (cdr l)))))\n", "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]))\n",
  "  (cond\n    [(empty? l) '()]\n    [(< (first l) (first l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  ))\n", "  (cond\n    ((null? l) '())\n\
    \    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car l) (max_element\
    \ (cdr l))))))\n", "  (cond\n    [(empty? l) empty]\n    [else (cons (car l) (max_element\
    \ (cdr l)))]))\n", "  (if (null? l)\n      '()\n      (if (> (car l) (cadr l))\n\
    \          (cadr l)\n          (max_element (cdr l)))))\n", "  (cond\n    ((null?\
    \ l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car\
    \ l) (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) empty]\n    [(> (first\
    \ l) (second l)) (max_element (rest l))]\n    [else (max_element (rest l))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (max_element (cdr l)))))\n", "  (if (null? l)\n      '()\n      (let\
    \ ([m (first l)]\n            [rest (rest l)])\n        (if (> m (rest m))\n \
    \           m\n            (max_element rest)))))\n", "  (cond\n    [(empty? l)\
    \ 0]\n    [(< (first l) (max_element (rest l)))\n     (first l)]\n    [else (max_element\
    \ (rest l))]))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (cons (car l) (max_element (cdr l))))))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) '()]\n    [(< (first l) (first l)) (max_element (rest l))]\n\
    \    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty? l) empty]\n\
    \    [(< (first l) (first l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  )\n)\n", "  (if (null? l)\n      '()\n      (if (> (car l) (cadr\
    \ l))\n          (car l)\n          (max_element (cdr l)))))\n", "  (cond\n  \
    \  [(empty? l) empty]\n    [(< (first l) (first l)) (max_element (rest l))]\n\
    \    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty? l) '()]\n\
    \    [(< (first l) (second l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  ))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n\
    \        (if (> (first l) m)\n            (max_element (rest l))\n           \
    \ m))))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      null\n      (let ((m (first l)))\n\
    \        (if (> (first l) m)\n            (max_element (rest l))\n           \
    \ m))))\n", "  (cond\n    [(empty? l) 0]\n    [(< (first l) (max_element (rest\
    \ l)))\n     (max_element (rest l))]\n    [else (first l)]))\n", "  (cond\n  \
    \  [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (if (null? l)\n   \
    \   '()\n      (let ((m (first l)))\n        (if (> (first l) m)\n           \
    \ (max_element (rest l))\n            m))))\n", "  (if (null? l)\n      null\n\
    \      (let ((m (first l)))\n        (if (> (first l) m)\n            (max_element\
    \ (rest l))\n            m))))\n", "  (cond\n    [(empty? l) 0]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) '()]\n  \
    \  [(< (first l) (first l)) (max_element (rest l))]\n    [else (max_element (rest\
    \ l))]\n  ))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n\
    \        (if (> (first l) m)\n            (max_element (rest l))\n           \
    \ m))))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n \
    \       (if (> (first l) m)\n            (max_element (rest l))\n            m))))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (if (null? l)\n      '()\n      (let ((m (car l)))\n        (if (> (car l) m)\n\
    \            (max_element (cdr l))\n            m))))\n", "  (if (null? l)\n \
    \     '()\n      (let ((m (first l)))\n        (if (> (first l) m)\n         \
    \   (max_element (rest l))\n            m))))\n", "  (if (null? l)\n      '()\n\
    \      (let ([m (first l)]\n            [rest (rest l)])\n        (if (> m (rest\
    \ m))\n            (max_element rest)\n            m))))\n", "  (if (null? l)\n\
    \      null\n      (let ((m (first l)))\n        (if (> (first l) m)\n       \
    \     (max_element (rest l))\n            m))))\n", "  (cond\n    [(empty? l)\
    \ empty]\n    [(> (first l) (second l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  )\n)\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n\
    \        (if (> (first l) m)\n            (max_element (rest l))\n           \
    \ m))))\n", "  (cond\n    [(empty? l) '()]\n    [(< (first l) (first l)) (max_element\
    \ (rest l))]\n    [else (max_element (rest l))]\n  ))\n", "  (cond\n    ((null?\
    \ l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (max_element\
    \ (cdr l)))))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]\n\
    \  ))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (car l) (max_element (cdr\
    \ l)))]))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n      \
    \  (if (> (first l) m)\n            (max_element (rest l))\n            m))))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) empty]\n    [else (cons (max (car l)) (max_element (cdr\
    \ l)))]))\n", "  (cond\n    [(empty? l) '()]\n    [(> (first l) (first (rest l)))\n\
    \     (max_element (rest l))]\n    [else (max_element (rest l))]\n    )\n  )\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) empty]\n    [(> (first l) (second l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty? l)\
    \ 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n  \
    \  [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (if (null? l)\n   \
    \   '()\n      (let ([m (first l)]\n            [rest (rest l)])\n        (if\
    \ (> m (rest m))\n            (max_element rest)\n            m))))\n", "  (if\
    \ (null? l)\n      (error \"max_element: empty list\")\n      (let ((max (car\
    \ l)))\n        (if (> (car l) max)\n            (max_element (cdr l))\n     \
    \       max)))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (max_element (cdr l)))))\n", "  (cond\n    ((null? l) '())\n\
    \    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car l) (max_element\
    \ (cdr l))))))\n", "  (if (null? l)\n      '()\n      (let ((m (car l)))\n   \
    \     (if (> (car l) m)\n            (max_element (cdr l))\n            m))))\n",
  "  (if (null? l)\n      '()\n      (let ((m (first l)))\n        (if (> (first l)\
    \ m)\n            (max_element (rest l))\n            m))))\n", "  (cond\n   \
    \ [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else\
    \ (max_element (cdr l))))\n  )\n", "  (cond\n    [(empty? l) 0]\n    [else (max\
    \ (car l) (max_element (cdr l)))]))\n", "  (if (null? l)\n      '()\n      (let\
    \ ((m (first l)))\n        (if (> (first l) m)\n            (max_element (rest\
    \ l))\n            m))))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr\
    \ l)) (max_element (cdr l)))\n    (else (cons (car l) (max_element (cdr l))))))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (cond\n  \
    \  [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (if\
    \ (null? l)\n      '()\n      (if (> (car l) (cadr l))\n          (car l)\n  \
    \        (max_element (cdr l)))))\n", "  (cond\n    [(empty? l) empty]\n    [(>\
    \ (first l) (second l)) (max_element (rest l))]\n    [else (max_element (rest\
    \ l))]\n  ))\n", "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n",
  "  (if (null? l)\n      '()\n      (let ((m (first l)))\n        (if (> (first l)\
    \ m)\n            (max_element (rest l))\n            m))))\n", "  (cond\n   \
    \ ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else\
    \ (max_element (cdr l))))\n  )\n", "  (if (null? l)\n      '()\n      (let ([m\
    \ (first l)]\n            [m (max_element (rest l))])\n        (if (> m (first\
    \ l))\n            m\n            (max_element (rest l)))))\n", "  (cond\n   \
    \ ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else\
    \ (max_element (cdr l)))))\n", "  (cond\n    [(empty? l) 0]\n    [(< (first l)\
    \ (max_element (rest l)))\n     (first l)]\n    [else (max_element (rest l))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max 0 (first l))]\n  ))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (if (null? l)\n      (error \"\
    Empty list\")\n      (let ((m (first l)))\n        (if (> (first l) m)\n     \
    \       (max_element (rest l))\n            m)))\n", "  (if (null? l)\n      '()\n\
    \      (let ((m (first l)))\n        (if (> (first l) m)\n            (max_element\
    \ (rest l))\n            m))))\n", "  (if (null? l)\n      '()\n      (let ((m\
    \ (first l)))\n        (if (> (first l) m)\n            (max_element (rest l))\n\
    \            m))))\n", "  (cond\n    [(empty? l) 0]\n    [else (max 0 (first l))]))\n",
  "  (cond\n    [(empty? l) '()]\n    [(> (first l) (first l)) (first l)]\n    [else\
    \ (max_element (rest l))]))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) empty]\n    [(>\
    \ (first l) (second l)) (second l)]\n    [else (max_element (rest l))]))\n", " \
    \ (cond\n    [(empty? l) empty]\n    [(> (first l) (second l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  ))\n", "  (cond\n    ((null? l) '())\n\
    \    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr\
    \ l)))))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n       \
    \ (if (> (first l) m)\n            (max_element (rest l))\n            m))))\n",
  "  (cond\n    [(empty? l) '()]\n    [(> (first l) (second l)) (second l)]\n    [else\
    \ (max_element (rest l))]))\n", "  (if (null? l)\n      null\n      (let ((m (first\
    \ l)))\n        (if (> (first l) m)\n            (max_element (rest l))\n    \
    \        m))))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (max_element (cdr l)))))\n", "  (cond\n    ((null? l) '())\n\
    \    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car l) (max_element\
    \ (cdr l))))))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (max_element (cdr l))))\n  )\n", "  (cond\n    [(empty?\
    \ l) empty]\n    [(> (first l) (first l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  ))\n", "  (if (null? l)\n      '()\n      (let ((m (car l)))\n\
    \        (if (> (car l) m)\n            (max_element (cdr l))\n            m))))\n",
  "  (if (null? l)\n      '()\n      (let ((max (car l)))\n        (if (> (car l)\
    \ max)\n            (max_element (cdr l))\n            max))))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) '()]\n    [(> (first l) (first l)) (max_element (rest l))]\n\
    \    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty? l) empty]\n\
    \    [(> (first l) (first l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  ))\n", "  (cond\n    ((null? l) '())\n    ((< (first l) (first\
    \ l)) (max_element (rest l)))\n    (else (max_element (rest l)))))\n", "  (cond\n\
    \    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else\
    \ (max_element (cdr l)))))\n", "  (if (null? l)\n      '()\n      (let ((m (first\
    \ l)))\n        (if (> (first l) m)\n            (max_element (rest l))\n    \
    \        m))))\n", "  (if (null? l)\n      '()\n      (let ([m (car l)])\n   \
    \     (if (> (car l) m)\n            (max_element (cdr l))\n            m))))\n",
  "  (if (null? l)\n      (error \"Empty list\")\n      (let ((x (car l)))\n     \
    \   (if (> (car l) x)\n            (max_element (cdr l))\n            x))))\n",
  "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (max_element (cdr l)))))\n", "  (cond\n    [(empty? l) '()]\n    [(<\
    \ (first l) (first l)) (max_element (rest l))]\n    [else (max_element (rest l))]\n\
    \  ))\n", "  (if (null? l)\n      '()\n      (let ([m (first l)]\n           \
    \ [l (rest l)])\n        (if (> m (first l))\n            (max_element l)\n  \
    \          (max_element l))))\n", "  (cond\n    [(empty? l) 0]\n    [(> (first\
    \ l) (max_element (rest l)))\n     (max_element (rest l))]\n    [else (first l)]))\n",
  "  (if (null? l)\n      '()\n      (let ((m (first l)))\n        (if (> (first l)\
    \ m)\n            (max_element (rest l))\n            m))))\n", "  (if (null?\
    \ l)\n      '()\n      (let ((m (first l)))\n        (if (> (first l) m)\n   \
    \         (max_element (rest l))\n            m))))\n", "  (if (null? l)\n   \
    \   null\n      (let ((max (car l)))\n        (if (> (car l) max)\n          \
    \  (max_element (cdr l))\n            max))))\n", "  (cond\n    ((null? l) '())\n\
    \    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr\
    \ l)))))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (cons (car l) (max_element (cdr l))))))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [(< (first l) (max_element (rest l)))\n     (first l)]\n\
    \    [else (max_element (rest l))]))\n", "  (cond\n    ((null? l) '())\n    ((<\
    \ (car l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr l)))))\n",
  "  (cond\n    [(empty? l) empty]\n    [(> (first l) (first l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  ))\n", "  (if (null? l)\n      '()\n\
    \      (let ((m (first l)))\n        (if (> (first l) m)\n            (max_element\
    \ (rest l))\n            m))))\n", "  (cond\n    [(empty? l) empty]\n    [(< (first\
    \ l) (first l)) (max_element (rest l))]\n    [else (max_element (rest l))]\n \
    \ ))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]))\n", " \
    \ (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (cond\n \
    \   ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else\
    \ (cons (car l) (max_element (cdr l))))))\n", "  (if (null? l)\n      '()\n  \
    \    (let ((m (first l)))\n        (if (> (first l) m)\n            (max_element\
    \ (rest l))\n            m))))\n", "  (if (null? l)\n      '()\n      (let ((m\
    \ (first l)))\n        (if (> (first l) m)\n            (max_element (rest l))\n\
    \            m))))\n", "  (cond\n    [(empty? l) empty]\n    [else (max_element\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(empty? l) '()]\n    [(> (first l) (first l))\
    \ (first l)]\n    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n  \
    \  [(empty? l) empty]\n    [(> (first l) (second l)) (first l)]\n    [else (max_element\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]))\n",
  "  (cond\n    [(empty? l) empty]\n    [(< (first l) (first l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty? l)\
    \ empty]\n    [(> (first l) (first l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  ))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l))\
    \ (max_element (cdr l)))\n    (else (cons (car l) (max_element (cdr l))))))\n",
  "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (max_element (cdr l))))\n  )\n", "  (cond\n    ((null? l) '())\n  \
    \  ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car l) (max_element\
    \ (cdr l))))))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (max_element (cdr l)))))\n", "  (cond\n    [(empty? l)\
    \ '()]\n    [(< (first l) (second l)) (max_element (rest l))]\n    [else (max_element\
    \ (rest l))]\n  ))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l))\
    \ (max_element (cdr l)))\n    (else (max_element (cdr l)))))\n", "  (if (null?\
    \ l)\n      '()\n      (let ((m (car l)))\n        (if (> (car l) m)\n       \
    \     (max_element (cdr l))\n            m))))\n", "  (cond\n    ((null? l) '())\n\
    \    ((< (first l) (max_element (rest l)))\n     (first l))\n    (else (max_element\
    \ (rest l)))))\n", "  (if (null? l)\n      null\n      (if (> (car l) (cadr l))\n\
    \          (car l)\n          (max_element (cdr l)))))\n", "  (if (null? l)\n\
    \      '()\n      (let ((m (first l))\n            (l (rest l)))\n        (if\
    \ (> m (first l))\n            (max_element l)\n            (max_element (cons\
    \ m l)))))\n", "  (cond\n    [(empty? l) empty]\n    [else (cons (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    ((null? l) '())\n    ((< (first l) (second l))\
    \ (max_element (rest l)))\n    (else (max_element (rest l)))))\n", "  (cond\n\
    \    [(empty? l) empty]\n    [else (cons (max (car l)) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) empty]\n    [(> (first l) (second l)) (first l)]\n   \
    \ [else (max_element (rest l))]))\n", "  (cond\n    ((null? l) '())\n    ((< (car\
    \ l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr l)))))\n",
  "  (cond\n    [(empty? l) empty]\n    [(< (first l) (first l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  ))\n", "  (if (null? l)\n      '()\n\
    \      (let ((m (car l)))\n        (if (> (car l) m)\n            (max_element\
    \ (cdr l))\n            m))))\n", "  (cond\n    ((null? l) '())\n    ((< (car\
    \ l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr l)))))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (cond\n  \
    \  ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else\
    \ (cons (car l) (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) empty]\n\
    \    [else (cons (car l)\n                (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n", " \
    \ (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (cons (car l) (max_element (cdr l))))))\n", "  (cond\n    [(empty?\
    \ l) '()]\n    [(> (first l) (first l)) (first l)]\n    [else (max_element (rest\
    \ l))]\n  )\n)\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (cons (car l) (max_element (cdr l))))))\n", "  (cond\n\
    \    [(empty? l) '()]\n    [(< (first l) (first l)) (max_element (rest l))]\n\
    \    [else (max_element (rest l))]\n  ))\n", "  (cond\n    ((null? l) '())\n \
    \   ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car l) (max_element\
    \ (cdr l))))))\n", "  (if (null? l)\n      '()\n      (let ((m (car l)))\n   \
    \     (if (> (car l) m)\n            (max_element (cdr l))\n            m))))\n",
  "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (cons (car l) (max_element (cdr l))))))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(< (first l) (max_element (rest l)))\n     (first l)]\n    [else\
    \ (max_element (rest l))]))\n", "  (cond\n    [(empty? l) empty]\n    [(> (first\
    \ l) (first l)) (max_element (rest l))]\n    [else (max_element (rest l))]\n \
    \ ))\n", "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element\
    \ (cdr l)))\n    (else (cons (car l) (max_element (cdr l))))))\n", "  (if (null?\
    \ l)\n      '()\n      (let ((m (first l)))\n        (if (> (first l) m)\n   \
    \         (max_element (rest l))\n            m))))\n", "  (if (null? l)\n   \
    \   '()\n      (let ((m (car l)))\n        (if (> (car l) m)\n            (max_element\
    \ (cdr l))\n            m))))\n", "  (if (null? l)\n      '()\n      (let ([max\
    \ (car l)]\n            [rest (cdr l)])\n        (if (> (max_element rest) max)\n\
    \            (max_element rest)\n            max))))\n", "  (if (null? l)\n  \
    \    '()\n      (let ([m (first l)]\n            [rest (rest l)])\n        (if\
    \ (< m (rest m))\n            (max_element rest)\n            (max_element m)))))\n",
  "  (cond\n    [(empty? l) empty]\n    [(> (first l) (second l)) (first l)]\n   \
    \ [else (max_element (rest l))]))\n", "  (cond\n    ((null? l) '())\n    ((< (car\
    \ l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr l))))\n  )\n",
  "  (cond\n    [(empty? l) empty]\n    [(> (first l) (second l)) (max_element (rest\
    \ l))]\n    [else (max_element (rest l))]\n  )\n)\n", "  (cond\n    [(empty? l)\
    \ empty]\n    [(> (first l) (second l)) (first l)]\n    [else (max_element (rest\
    \ l))]))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n       \
    \ (if (> (first l) m)\n            (max_element (rest l))\n            m))))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (cons (car l) (max_element (cdr l))))))\n", "  (cond\n    ((null? l)\
    \ '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n    (else (cons (car\
    \ l) (max_element (cdr l))))))\n", "  (if (null? l)\n      '()\n      (let ((m\
    \ (first l)))\n        (if (> (first l) m)\n            (max_element (rest l))\n\
    \            m))))\n", "  (cond\n    [(empty? l) empty]\n    [(< (first l) (first\
    \ l)) (max_element (rest l))]\n    [else (max_element (rest l))]\n  ))\n", " \
    \ (if (null? l)\n      '()\n      (let ((m (first l)))\n        (if (> (first\
    \ l) m)\n            (max_element (rest l))\n            m))))\n", "  (cond\n\
    \    [(empty? l) empty]\n    [(> (first l) (first l)) (max_element (rest l))]\n\
    \    [else (max_element (rest l))]\n  )\n)\n", "  (cond\n    [(empty? l) 0]\n\
    \    [else (max 0 (car l))]\n  ))\n", "  (cond\n    ((null? l) '())\n    ((< (car\
    \ l) (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr l)))))\n",
  "  (cond\n    [(empty? l) 0]\n    [else (max 0 (car l))]\n  ))\n", "  (cond\n  \
    \  [(empty? l) 0]\n    [(> (first l) (max_element (rest l)))\n     (max_element\
    \ (rest l))]\n    [else (first l)]))\n", "  (cond\n    [(empty? l) empty]\n  \
    \  [(< (first l) (second l)) (max_element (rest l))]\n    [else (max_element (rest\
    \ l))]\n  ))\n", "  (cond\n    [(empty? l) empty]\n    [else (cons (car l)\n \
    \               (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) 0]\n \
    \   [else (max 0 (car l))]))\n", "  (cond\n    ((null? l) '())\n    ((< (car l)\
    \ (cadr l)) (max_element (cdr l)))\n    (else (max_element (cdr l))))\n  )\n",
  "  (cond\n    ((null? l) '())\n    ((< (car l) (cadr l)) (max_element (cdr l)))\n\
    \    (else (cons (car l) (max_element (cdr l))))))\n", "  (if (null? l)\n    \
    \  '()\n      (let ((m (first l)))\n        (if (> (first l) m)\n            (max_element\
    \ (rest l))\n            m))))\n", "  (cond\n    [(empty? l) empty]\n    [(> (first\
    \ l) (second l)) (first l)]\n    [else (max_element (rest l))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [else (max (first l) (max_element (rest l)))]))\n", " \
    \ (if (null? l)\n      '()\n      (let ((m (first l)))\n        (if (> (first\
    \ l) m)\n            (max_element (rest l))\n            m))))\n", "  (cond\n\
    \    [(empty? l) '()]\n    [(< (first l) (first l)) (max_element (rest l))]\n\
    \    [else (max_element (rest l))]\n  ))\n", "  (cond\n    [(empty? l) 0]\n  \
    \  [(> (first l) (max_element (rest l)))\n     (max_element (rest l))]\n    [else\
    \ (first l)]))\n", "  (if (null? l)\n      '()\n      (let ((m (first l)))\n \
    \       (if (> (first l) m)\n            (max_element (rest l))\n            m))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

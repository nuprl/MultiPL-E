name: HumanEval_33_sort_third
language: rkt
prompt: "#lang racket\n\n;; This function takes a list l and returns a list l' such\
  \ that\n;; l' is identical to l in the indicies that are not divisible by three,\
  \ while its values at the indicies that are divisible by three are equal\n;; to\
  \ the values of the corresponding indicies of l, but sorted.\n(define (sort_third\
  \ l)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sort_third))\n\
  \    (check-equal? (candidate (list 5 6 3 4 8 9 2)) (list 2 6 3 4 8 9 5))\n    (check-equal?\
  \ (candidate (list 5 8 3 4 6 9 2)) (list 2 8 3 4 6 9 5))\n    (check-equal? (candidate\
  \ (list 5 6 9 4 8 3 2)) (list 2 6 9 4 8 3 5))\n    (check-equal? (candidate (list\
  \ 5 6 3 4 8 9 2 1)) (list 2 6 3 4 8 9 5 1))\n))\n\n(test-humaneval)"
completions: []
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

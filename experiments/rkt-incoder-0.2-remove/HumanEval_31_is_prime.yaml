name: HumanEval_31_is_prime
language: rkt
prompt: "#lang racket\n\n;; Return true if a given number is prime, and false otherwise.\n\
  (define (is_prime n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_prime))\n\
  \    (check-equal? (candidate 6) #f)\n    (check-equal? (candidate 101) #t)\n  \
  \  (check-equal? (candidate 11) #t)\n    (check-equal? (candidate 13441) #t)\n \
  \   (check-equal? (candidate 61) #t)\n    (check-equal? (candidate 4) #f)\n    (check-equal?\
  \ (candidate 1) #f)\n    (check-equal? (candidate 5) #t)\n    (check-equal? (candidate\
  \ 11) #t)\n    (check-equal? (candidate 17) #t)\n    (check-equal? (candidate 85)\
  \ #f)\n    (check-equal? (candidate 77) #f)\n    (check-equal? (candidate 255379)\
  \ #f)\n))\n\n(test-humaneval)"
completions: ["  (= (modulo n 2) 0))\n", "  (= (modulo n 2) 0))\n", "  (cond [(= n\
    \ 1) #t]\n        [(= n 2) #t]\n        [(= n 3) #t]\n        [else (or (is_prime\
    \ (- n 1)) (is_prime (- n 2)))))\n", "  (cond [(= n 1) #t]\n        [else (or\
    \ (is_prime (/ n 2))\n                  (is_prime (/ n 3)))]))\n", "  (cond [(=\
    \ n 1) #t]\n        [(= n 2) #t]\n        [(= n 3) #t]\n        [else (let ([a\
    \ (* 2 n)]\n                    [b (* 3 n)]\n                    [c (* 5 n)]\n\
    \                    [d (* 7 n)]\n                    [e (* 11 n)]\n         \
    \           [f (* 13 n)]\n                    [g (* 17 n)]\n                 \
    \   [h (* 19 n)]\n                    [i (* 23 n)]\n                    [j (*\
    \ 29 n)]\n                    [k (* 31 n)]\n                    [l (* 37 n)]\n\
    \                    [m (* 41 n)]\n                    [n (* 43 n)]\n        \
    \            [o (* 47 n)]\n                    [p (* 51 n)]\n                \
    \    [q (* 53 n)]\n                    [r (* 59 n)]\n                    [s (*\
    \ 61 n)]\n                    [t (* 67 n)]\n                    [u (* 71 n)]\n\
    \                    [v (* 73 n)]\n                    [w (* 79 n)]\n        \
    \            [x (* 81 n)]\n                    [y (* 83 n)]\n                \
    \    [z (* 89 n)]\n                    [a (* 97 n)]\n                    [b (*\
    \ 101 n)]\n                    [c (* 103 n)]\n                    [d (* 107 n)]\n\
    \                    [e (* 111 n)]\n                    [f (* 113 n)]\n      \
    \              [g (* 117 n)]\n                    [h (* 121 n)]\n            \
    \        [i (* 127 n)]\n                    [j (* 131 n)]\n                  \
    \  [k (* 137 n)]\n                    [l (* 143 n)]\n                    [m (*\
    \ 149 n)]\n                    [n (* 151 n)]\n                    [o (* 157 n)]\n\
    \                    [p (* 163 n)]\n                    [q (* 167 n)]\n      \
    \              [r (* 173 n)]\n                    [s (* 179 n)]\n            \
    \        [t (* 181 n)]\n                    [u (* 187 n)]\n                  \
    \  [v (* 191 n)]\n                    [w (* 193 n)]\n                    [x (*\
    \ 197 n)]\n                    [y (* 201 n)]\n                    [z (* 203 n)]\n\
    \                    [a (* 209 n)]\n                    [b (* 211 n)]\n      \
    \              [c (* 213 n)]\n                    [d (* 217 n)]\n            \
    \        [e (* 221 ", "  (= (modulo n 2) 0))\n", "  (cond [(= n 1) #t]\n     \
    \   [(= n 2) #t]\n        [(= n 3) #t]\n        [else (let ([a (* 2 n)]\n    \
    \                [b (* 3 n)]\n                    [c (* 5 n)]\n              \
    \      [d (* 7 n)]\n                    [e (* 11 n)]\n                    [f (*\
    \ 13 n)]\n                    [g (* 17 n)]\n                    [h (* 19 n)]\n\
    \                    [i (* 23 n)]\n                    [j (* 29 n)]\n        \
    \            [k (* 31 n)]\n                    [l (* 37 n)]\n                \
    \    [m (* 41 n)]\n                    [n (* 43 n)]\n                    [o (*\
    \ 47 n)]\n                    [p (* 53 n)]\n                    [q (* 59 n)]\n\
    \                    [r (* 61 n)]\n                    [s (* 67 n)]\n        \
    \            [t (* 71 n)]\n                    [u (* 73 n)]\n                \
    \    [v (* 79 n)]\n                    [w (* 83 n)]\n                    [x (*\
    \ 89 n)]\n                    [y (* 97 n)]\n                    [z (* 101 n)]\n\
    \                    [a (* 103 n)]\n                    [b (* 107 n)]\n      \
    \              [c (* 111 n)]\n                    [d (* 117 n)]\n            \
    \        [e (* 121 n)]\n                    [f (* 127 n)]\n                  \
    \  [g (* 131 n)]\n                    [h (* 137 n)]\n                    [i (*\
    \ 143 n)]\n                    [j (* 149 n)]\n                    [k (* 151 n)]\n\
    \                    [l (* 157 n)]\n                    [m (* 163 n)]\n      \
    \              [n (* 167 n)]\n                    [o (* 173 n)]\n            \
    \        [p (* 179 n)]\n                    [q (* 181 n)]\n                  \
    \  [r (* 187 n)]\n                    [s (* 191 n)]\n                    [t (*\
    \ 197 n)]\n                    [u (* 203 n)]\n                    [v (* 209 n)]\n\
    \                    [w (* 211 n)]\n                    [x (* 217 n)]\n      \
    \              [y (* 223 n)]\n                    [z (* 229 n)]\n            \
    \        [a (* 231 n)]\n                    [b (* 237 n)]\n                  \
    \  [c (* 241 n)]\n                    [d (* 247 n)]\n                    [e (*\
    \ 253 ", "  (cond [(= n 1) #t]\n        [(= n 2) #t]\n        [(= n 3) #t]\n \
    \       [else (or (is_prime (- n 2)) (is_prime (- n 3)))))\n", "  (cond [(= n\
    \ 1) #t]\n        [else (or (is_prime (- n 1))\n                  (or (= (modulo\
    \ n 2) 1)\n                      (is_prime (/ n 2))))]))\n", "  (cond [(= n 1)\
    \ #t]\n        [else (or (is_prime (- n 1))\n                  (= (modulo n n)\
    \ 0))]))\n", "  (cond [(= n 1) true]\n        [else (or (is_prime (/ n 2))\n \
    \                 (is_prime (/ n 3)))]))\n", "  (cond [(= n 1) true]\n       \
    \ [else (or (is_prime (/ n 2))\n                  (is_prime (* 3 n)))]))\n", " \
    \ (cond [(= n 1) true]\n        [else (or (is_prime (- n 1))\n               \
    \    (= (mod n n) 0))]))\n", "  (define (is-prime? n)\n    (if (= n 1)\n     \
    \   #t\n        (or (is-prime? (- n 1))\n            (or (= (modulo n n) 0)\n\
    \                (is-prime? (- n 2))))))\n  (is-prime? n))\n", "  (cond [(= n\
    \ 1) #t]\n        [(= n 2) #t]\n        [(= n 3) #t]\n        [else (let ([a (*\
    \ 2 n)]\n                    [b (* 3 n)]\n                    [c (* 5 n)]\n  \
    \                  [d (* 7 n)]\n                    [e (* 11 n)]\n           \
    \         [f (* 13 n)]\n                    [g (* 17 n)]\n                   \
    \ [h (* 19 n)]\n                    [i (* 23 n)]\n                    [j (* 29\
    \ n)]\n                    [k (* 31 n)]\n                    [l (* 37 n)]\n  \
    \                  [m (* 41 n)]\n                    [n (* 43 n)]\n          \
    \          [o (* 47 n)]\n                    [p (* 51 n)]\n                  \
    \  [q (* 53 n)]\n                    [r (* 59 n)]\n                    [s (* 61\
    \ n)]\n                    [t (* 67 n)]\n                    [u (* 71 n)]\n  \
    \                  [v (* 73 n)]\n                    [w (* 79 n)]\n          \
    \          [x (* 81 n)]\n                    [y (* 83 n)]\n                  \
    \  [z (* 89 n)]\n                    [a (* 97 n)]\n                    [b (* 101\
    \ n)]\n                    [c (* 103 n)]\n                    [d (* 107 n)]\n\
    \                    [e (* 111 n)]\n                    [f (* 113 n)]\n      \
    \              [g (* 117 n)]\n                    [h (* 121 n)]\n            \
    \        [i (* 127 n)]\n                    [j (* 131 n)]\n                  \
    \  [k (* 137 n)]\n                    [l (* 143 n)]\n                    [m (*\
    \ 149 n)]\n                    [n (* 151 n)]\n                    [o (* 157 n)]\n\
    \                    [p (* 163 n)]\n                    [q (* 167 n)]\n      \
    \              [r (* 173 n)]\n                    [s (* 179 n)]\n            \
    \        [t (* 181 n)]\n                    [u (* 187 n)]\n                  \
    \  [v (* 191 n)]\n                    [w (* 193 n)]\n                    [x (*\
    \ 197 n)]\n                    [y (* 201 n)]\n                    [z (* 203 n)]\n\
    \                    [a (* 209 n)]\n                    [b (* 211 n)]\n      \
    \              [c (* 213 n)]\n                    [d (* 217 n)]\n            \
    \        [e (* 221 ", "  (define (helper n primes)\n    (cond ((= n 1) (= (length\
    \ primes) 0))\n          ((null? primes) #f)\n          ((= (modulo n primes)\
    \ 0) (helper (sub1 n) (cons n primes)))\n          (else (helper (sub1 n) (append\
    \ (cons n primes) primes)))))\n  (helper n '()))\n", "  (= (modulo n 2) 0))\n",
  "  (define (is-prime n)\n    (cond ((= n 1) #t)\n          ((= n 2) #f)\n      \
    \    ((odd? n) (is-prime (/ n 2)))\n          (else (is-prime (+ n 1)))))\n  (is-prime\
    \ n))\n", "  (= (modulo n 2) 0))\n", "  (cond [(= n 1) #t]\n        [(= n 2) #t]\n\
    \        [(= n 3) #t]\n        [else (let ([a (* 2 n)]\n                    [b\
    \ (* 3 n)]\n                    [c (* 5 n)]\n                    [d (* 7 n)]\n\
    \                    [e (* 11 n)]\n                    [f (* 13 n)]\n        \
    \            [g (* 17 n)]\n                    [h (* 19 n)]\n                \
    \    [i (* 23 n)]\n                    [j (* 29 n)]\n                    [k (*\
    \ 31 n)]\n                    [l (* 37 n)]\n                    [m (* 41 n)]\n\
    \                    [n (* 43 n)]\n                    [o (* 47 n)]\n        \
    \            [p (* 51 n)]\n                    [q (* 53 n)]\n                \
    \    [r (* 59 n)]\n                    [s (* 61 n)]\n                    [t (*\
    \ 67 n)]\n                    [u (* 71 n)]\n                    [v (* 73 n)]\n\
    \                    [w (* 79 n)]\n                    [x (* 81 n)]\n        \
    \            [y (* 83 n)]\n                    [z (* 89 n)]\n                \
    \    [a (* 97 n)]\n                    [b (* 101 n)]\n                    [c (*\
    \ 103 n)]\n                    [d (* 107 n)]\n                    [e (* 111 n)]\n\
    \                    [f (* 113 n)]\n                    [g (* 117 n)]\n      \
    \              [h (* 121 n)]\n                    [i (* 127 n)]\n            \
    \        [j (* 131 n)]\n                    [k (* 137 n)]\n                  \
    \  [l (* 143 n)]\n                    [m (* 149 n)]\n                    [n (*\
    \ 151 n)]\n                    [o (* 157 n)]\n                    [p (* 163 n)]\n\
    \                    [q (* 167 n)]\n                    [r (* 173 n)]\n      \
    \              [s (* 179 n)]\n                    [t (* 181 n)]\n            \
    \        [u (* 187 n)]\n                    [v (* 191 n)]\n                  \
    \  [w (* 193 n)]\n                    [x (* 197 n)]\n                    [y (*\
    \ 203 n)]\n                    [z (* 209 n)]\n                    [a (* 211 n)]\n\
    \                    [b (* 217 n)]\n                    [c (* 223 n)]\n      \
    \              [d (* 229 n)]\n                    [e (* 233 "]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

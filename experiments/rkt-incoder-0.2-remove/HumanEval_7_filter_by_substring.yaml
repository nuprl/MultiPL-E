name: HumanEval_7_filter_by_substring
language: rkt
prompt: "#lang racket\n\n;; Filter an input list of strings only for ones that contain\
  \ given substring\n(define (filter_by_substring strings substring)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate filter_by_substring))\n\
  \    (check-equal? (candidate (list ) \"john\") (list ))\n    (check-equal? (candidate\
  \ (list \"xxx\" \"asd\" \"xxy\" \"john doe\" \"xxxAAA\" \"xxx\") \"xxx\") (list\
  \ \"xxx\" \"xxxAAA\" \"xxx\"))\n    (check-equal? (candidate (list \"xxx\" \"asd\"\
  \ \"aaaxxy\" \"john doe\" \"xxxAAA\" \"xxx\") \"xx\") (list \"xxx\" \"aaaxxy\" \"\
  xxxAAA\" \"xxx\"))\n    (check-equal? (candidate (list \"grunt\" \"trumpet\" \"\
  prune\" \"gruesome\") \"run\") (list \"grunt\" \"prune\"))\n))\n\n(test-humaneval)"
completions: ["  (filter (lambda (s) (member s substring)) strings))\n", "  (filter\
    \ (lambda (s) (string-contains? s substring)) strings))\n", "  (filter (lambda\
    \ (s) (contains s substring)) strings))\n", "  (filter (lambda (s) (string-contains\
    \ s substring))\n          strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring))\n          strings))\n", "  (filter (lambda (s) (string-contains\
    \ s substring))\n          strings))\n", "  (filter (lambda (s) (string-contains\
    \ s substring)) strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (string-contains? s substring))\n          strings))\n", "  (filter (lambda\
    \ (s) (string-contains s substring))\n          strings))\n", "  (filter (lambda\
    \ (s) (member substring s)) strings))\n", "  (filter (lambda (s) (contains s substring))\n\
    \          strings))\n", "  (filter (lambda (s) (member substring s)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (contains s substring)) strings))\n", "  (filter (lambda (s) (= (length\
    \ s) (length substring))) (map string strings)))\n", "  (filter (lambda (x) (string-contains\
    \ x substring)) strings))\n", "  (filter (lambda (s) (string-contains s substring))\
    \ strings))\n", "  (filter strings-contains-substring strings substring))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (string-contains? s substring)) strings))\n", "  (filter (lambda (s) (member\
    \ s substring)) strings))\n", "  (filter (lambda (str)\n            (string=?\
    \ substring str))\n          strings))\n", "  (filter (lambda (str)\n        \
    \    (string=? substring str))\n          strings))\n", "  (filter strings-containing-substring\
    \ strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n     \
    \     strings))\n", "  (filter (lambda (s) (string-contains? s substring)) strings))\n",
  "  (filter (lambda (x) (substring x 0))\n          strings))\n", "  (filter (lambda\
    \ (s) (member s substring)) strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring)) strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter strings-contains-substring strings substring))\n", "  (filter (lambda\
    \ (s) (string-contains s substring))\n          strings))\n", "  (filter (lambda\
    \ (s) (member s substring)) strings))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (s) (string-contains s substring))\n      \
    \    strings))\n", "  (filter (lambda (str)\n            (string-contains str\
    \ substring))\n          strings))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n", " \
    \ (filter strings-contains-substring strings substring))\n", "  (filter (lambda\
    \ (x) (string=? x substring)) strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring))\n         strings))\n", "  (cond [(empty? strings) '()]\n    \
    \    [(equal? (first strings) substring) (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (x) (string=? substring\
    \ x))\n          strings))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (filter (lambda (str)\n            (string-contains str substring))\n\
    \          strings))\n", "  (filter strings-containing-substring strings substring))\n",
  "  (filter (lambda (x) (substring x 0))\n          strings))\n", "  (filter (lambda\
    \ (s) (member s substring)) strings))\n", "  (filter (lambda (x) (equal? (substring\
    \ x) substring)) strings))\n", "  (filter (lambda (string)\n            (string-contains\
    \ string substring))\n          strings))\n", "  (filter (lambda (str)\n     \
    \       (string-match substring str))\n          strings))\n", "  (filter (lambda\
    \ (s) (string-contains s substring))\n          strings))\n", "  (cond [(empty?\
    \ strings) empty]\n        [(equal? (first strings) substring) (cons (first strings)\
    \ (filter_by_substring (rest strings) substring))]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda\
    \ (s) (string-contains s substring))\n          strings))\n", "  (filter (lambda\
    \ (s) (string-contains? s substring))\n          strings))\n", "  (filter (lambda\
    \ (s) (string-contains? s substring))\n          strings))\n", "  (cond [(empty?\
    \ strings) empty]\n        [(equal? (first strings) substring) (cons (first strings)\
    \ (filter_by_substring (rest strings) substring))]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda\
    \ (str)\n            (string=? substring str))\n          strings))\n", "  (filter\
    \ (lambda (s) (string-contains? s substring))\n          strings))\n", "  (filter\
    \ (lambda (x) (string-contains x substring)) strings))\n", "  (filter (lambda\
    \ (x) (string-contains x substring)) strings))\n", "  (filter (lambda (s) (contains\
    \ s substring)) strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (filter strings (lambda (s) (= (length s) (length\
    \ substring)))))\n", "  (filter (lambda (s) (member substring s))\n          strings))\n",
  "  (filter (lambda (str)\n            (string-contains str substring))\n       \
    \   strings))\n", "  (filter (lambda (s) (member substring s)) strings))\n", " \
    \ (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (member s substring)) strings))\n", "  (filter (lambda (string) (substring\
    \ string 0))\n          strings))\n", "  (filter strings-contains-substring strings\
    \ substring))\n", "  (filter (lambda (s) (string-contains s substring))\n    \
    \      strings))\n", "  (cond [(empty? strings) '()]\n        [(equal? (first\
    \ strings) substring) (cons (first strings) (filter_by_substring (rest strings)\
    \ substring))]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (s) (string-contains? s substring))\n          strings))\n",
  "  (filter (lambda (s) (= (length s) (length substring))) (map string strings)))\n",
  "  (filter strings-contains-substring strings substring))\n", "  (filter (lambda\
    \ (s) (contains s substring)) strings))\n", "  (filter (lambda (x) (string-contains\
    \ x substring)) strings))\n", "  (filter strings? (lambda (s) (substring s in\
    \ strings))))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (str)\n           (string=? substring str))\n         strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (member s substring)) strings))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (filter string? strings (lambda (string) (string-contains string\
    \ substring))))\n", "  (filter (lambda (s) (string-contains? s substring))\n \
    \         strings))\n", "  (filter (lambda (x) (contains x substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (x)\
    \ (string-contains x substring)) strings))\n", "  (filter (lambda (s) (contains\
    \ s substring)) strings))\n", "  (filter (lambda (x) (contains x substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings)\
    \ '()]\n        [(equal? (first strings) substring) (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n     \
    \    strings))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (contains s substring)) strings))\n", "  (filter (lambda (s) (contains s\
    \ substring)) strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n\
    \          strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (x) (string-contains x substring)) strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring))\n          strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring)) strings))\n", "  (filter (lambda (x) (equal? (string-ref x 0)\
    \ substring)) strings))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (cons (first strings) strings)]\n        [else (filter_by_substring\
    \ (rest strings) substring)]))\n", "  (filter (lambda (s) (string-contains? s\
    \ substring))\n          strings))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (filter (lambda (x) (equal? (string-ref x 0) substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (member s substring)) strings))\n", "  (filter (lambda (s) (string-contains\
    \ s substring)) strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n\
    \          strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (filter (lambda (x) (substring x strings))\n     \
    \     strings))\n", "  (filter (lambda (s) (= (length s) (length substring)))\
    \ (map string strings)))\n", "  (filter (lambda (s) (string-contains? s substring))\n\
    \         strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (filter (lambda (x) (string=? substring x))\n    \
    \      strings))\n", "  (filter (lambda (s) (string-contains s substring))\n \
    \         strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (member s substring)) strings))\n", "  (cond [(empty? strings) '()]\n      \
    \  [(equal? (first strings) substring) (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]\n        [else (filter_by_substring (rest strings)\
    \ substring)]))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (member s substring)) strings))\n", "  (filter (lambda (x) (string=? substring\
    \ x))\n          strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (contains s substring)) strings))\n", "  (filter (lambda (s) (member substring\
    \ s)) strings))\n", "  (filter (lambda (s) (member substring s)) strings))\n",
  "  (filter (lambda (str)\n            (string=? substring str))\n          strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (contains s substring)) strings))\n", "  (filter (lambda (str)\n           \
    \ (string=? substring str))\n          strings))\n", "  (filter (lambda (s) (member\
    \ s substring)) strings))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (str)\n            (string-contains str substring))\n          strings))\n",
  "  (cond [(empty? strings) '()]\n        [(equal? (first strings) substring) (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]\n        [else\
    \ (filter_by_substring (rest strings) substring)]))\n", "  (filter (lambda (s)\
    \ (string-contains? s substring))\n          strings))\n", "  (filter (lambda\
    \ (x) (string=? x substring)) strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring))\n         strings))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter strings-contains-substring strings substring))\n",
  "  (filter (lambda (str)\n            (string-contains str substring))\n       \
    \   strings))\n", "  (filter (lambda (x) (contains x substring)) strings))\n",
  "  (filter (lambda (s) (string-contains? s substring)) strings))\n", "  (filter\
    \ (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda (s) (member\
    \ s substring)) strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (filter strings-contains-substring strings substring))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (cons (first strings)\
    \ strings)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (s) (contains s substring)) strings))\n", " \
    \ (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (x)\
    \ (string-contains x substring)) strings))\n", "  (filter (lambda (s) (contains\
    \ s substring)) strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (str)\n\
    \            (string-contains str substring))\n          strings))\n", "  (filter\
    \ (lambda (s) (string-contains? s substring)) strings))\n", "  (filter (lambda\
    \ (str)\n            (string-contains? str substring))\n          strings))\n",
  "  (filter string? strings (lambda (string)\n                          (equal? (string-ref\
    \ string 0) substring))))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (cond [(empty? strings) '()]\n        [(equal? (first strings) substring) (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]\n        [else\
    \ (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (cond [(empty? strings)\
    \ '()]\n        [(equal? (first strings) substring) (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (cond [(empty? strings) '()]\n        [(equal?\
    \ (first strings) substring) (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]\n        [else (filter_by_substring (cons (first strings)\
    \ (rest strings)) (substring substring))]))\n", "  (filter (lambda (str)\n   \
    \         (string=? substring str))\n          strings))\n", "  (filter (lambda\
    \ (s) (contains s substring)) strings))\n", "  (filter (lambda (x) (substring\
    \ x 0))\n          strings))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (x) (substring x 0))\n          strings))\n",
  "  (filter (lambda (str)\n            (string-contains str substring))\n       \
    \   strings))\n", "  (filter (lambda (s) (contains s substring))\n          strings))\n",
  "  (filter (lambda (s) (= (length s) (length substring))) (map string strings)))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (member substring s)) strings))\n", "  (filter (lambda (str)\n         \
    \   (string=? substring str))\n          strings))\n", "  (filter (lambda (s)\
    \ (contains s substring)) strings))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (s) (contains s substring)) strings))\n", " \
    \ (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (member substring s))\n          strings))\n", "  (filter (lambda (s) (member\
    \ s substring)) strings))\n", "  (filter strings-contains-substring strings substring))\n",
  "  (filter (lambda (str)\n            (string-match substring str))\n          strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter strings-contains-substring\
    \ strings substring))\n", "  (filter string? strings (lambda (string)\n      \
    \                     (string-match substring string))))\n", "  (filter (lambda\
    \ (s) (contains s substring)) strings))\n", "  (cond [(empty? strings) empty]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (rest strings) substring))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

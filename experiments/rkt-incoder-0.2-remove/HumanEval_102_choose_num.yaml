name: HumanEval_102_choose_num
language: rkt
prompt: "#lang racket\n\n;; This function takes two positive numbers x and y and returns\
  \ the\n;; biggest even integer number that is in the range [x, y] inclusive. If\
  \ \n;; there's no such number, then the function should return -1.\n;; For example:\n\
  (define (choose_num x y)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate choose_num))\n\
  \    (check-equal? (candidate 12 15) 14)\n    (check-equal? (candidate 13 12) -1)\n\
  \    (check-equal? (candidate 33 12354) 12354)\n    (check-equal? (candidate 5234\
  \ 5233) -1)\n    (check-equal? (candidate 6 29) 28)\n    (check-equal? (candidate\
  \ 27 10) -1)\n    (check-equal? (candidate 7 7) -1)\n    (check-equal? (candidate\
  \ 546 546) 546)\n))\n\n(test-humaneval)"
completions: ["  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond\n    [(and (< x y) \n          (even? (- x y)))\n\
    \      (- x y)]\n    [(< x y)\n      -1]))\n", "  (cond ((or (< x y) (- (- x y)\
    \ y))\n         (if (= x y)\n             (- x y)\n             (- y x)))\n  \
    \      (else -1)))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (= x\
    \ y)\n             x\n             (if (even? (- x y))\n                 (- x\
    \ y)\n                 (- x y)))\n         (if (even? (- x y))\n             (-\
    \ x y)\n             (- x y)))\n        (else -1)))\n", "  (cond\n    [(= x y)\
    \ -1]\n    [(= x 0) -1]\n    [(= y 0) -1]\n    [(even? (modulo x 2)) (cons x y)]))\n",
  "  (cond [(< x y) -1]\n        [(< x y) x]\n        [(< y x) -1]\n        [(< y\
    \ x) y]\n        [else (+ x (choose_num (- x y) y))]\n  )\n)\n", "  (cond ((and\
    \ (integer? x) (integer? y)) (if (even? (- x y)) (- x y) (- x y)))\n        ((and\
    \ (integer? x) (not (integer? y))) (if (even? (- x y)) (- x y) (- x y)))\n   \
    \     ((and (integer? y) (not (integer? x))) (if (even? (- x y)) (- x y) (- x\
    \ y)))\n        (else -1)))\n", "  (cond ((< x y) -1)\n        ((even? x) (+ x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(> x y) -1]\n\
    \    [(= x y) x]\n    [(= y 0) -1]\n    [(even? x) (max (+ x y) -1)]\n    [else\
    \ (max (+ x y) -1)]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n     \
    \   ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\n\
    \    [(and (integer? x) (integer? y)) x]\n    [(and (integer? x) (not (integer?\
    \ y))) y]\n    [(and (not (integer? x)) (integer? y)) x]\n    [(and (not (integer?\
    \ x)) (not (integer? y))) -1]))\n", "  (cond ((= x y) -1)\n        ((even? x)\
    \ (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n\
    \    [(and (>= x y) \n          (even? x))\n     (+ x 2)]\n    [(and (>= x y)\
    \ \n          (even? y))\n     (+ y 2)]\n    [else\n     (- 1)]))\n", "  (cond\
    \ ((or (< x y) (- (- x y) y))\n         (if (= x y)\n             x\n        \
    \     (if (even? (- x y))\n                 (- x y)\n                 (- x y)))\n\
    \         (if (even? (- x y))\n             (- x y)\n             (- x y)))\n\
    \        (else -1)))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (=\
    \ x y)\n             x\n             (if (even? (- x y))\n                 (-\
    \ x y)\n                 (- x y))))\n        (else -1)))\n", "  (cond [(= x y)\
    \ -1]\n        [(even? x) (+ x y)]\n        [else (choose_num (+ x 1) y)]))\n",
  "  (cond\n    [(= x y) -1]\n    [(even? (- x y)) (- x y)]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) -1]\n    [(= (modulo x 2) 0) (+ x 2)]\n\
    \    [else (choose_num (+ x 2) y)]))\n", "  (cond [(= x y) -1]\n        [(= (mod\
    \ x 2) 0) (* x 2)\n         (+ x 1)\n         (choose_num (+ x 1) y)]\n      \
    \  [else (* x 2)]))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n \
    \       (else (choose_num (+ x 1) y))))\n", "  (cond ((or (= x y) (- (+ x y) y))\n\
    \         (if (= x y)\n             (+ x y)\n             (- x y)))\n        (else\
    \ -1)))\n", "  (cond ((and (= x 0) (= y 0)) -1)\n        ((and (= x 0) (= y 1))\
    \ 0)\n        ((and (= x 1) (= y 0)) 0)\n        ((and (= x 1) (= y 1)) 1)\n \
    \       (else (max (choose_num (- x 1) y)\n                   (choose_num (- x\
    \ 0) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even? y)\
    \ y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\n    ((> x y)\
    \ -1)\n    ((= x y) x)\n    ((even? x) x)\n    ((even? y) y)\n    ((< x y) -1)))\n",
  "  (cond ((or (= x y) (- (- x y) y))\n         (- x y))\n        ((= x 0)\n    \
    \     (- y x))\n        ((= y 0)\n         (- x y)))\n  (if (= (mod x 2) 0)\n\
    \      (+ x y)\n      (choose_num (- x y) (- y x))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else\
    \ (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((and (<= x y)\
    \ \n             (= (modulo x 2) 0))\n         (modulo x 2))\n        ((and (<=\
    \ x y) \n             (= (modulo x 3) 0))\n         (modulo x 3))\n        ((and\
    \ (<= x y) \n             (= (modulo x 4) 0))\n         (modulo x 4))\n      \
    \  ((and (<= x y) \n             (= (modulo x 5) 0))\n         (modulo x 5))\n\
    \        ((and (<= x y) \n             (= (modulo x 6) 0))\n         (modulo x\
    \ 6))\n        ((and (<= x y) \n             (= (modulo x 7) 0))\n         (modulo\
    \ x 7))\n        ((and (<= x y) \n             (= (modulo x 8) 0))\n         (modulo\
    \ x 8))\n        ((and (<= x y) \n             (= (modulo x 9) 0))\n         (modulo\
    \ x 9))\n        ((and (<= x y) \n             (= (modulo x 10) 0))\n        \
    \ (modulo x 10))\n        ((and (<= x y) \n             (= (modulo x 11) 0))\n\
    \         (modulo x 11))\n        ((and (<= x y) \n             (= (modulo x 12)\
    \ 0))\n         (modulo x 12))\n        ((and (<= x y) \n             (= (modulo\
    \ x 13) 0))\n         (modulo x 13))\n        ((and (<= x y) \n             (=\
    \ (modulo x 14) 0))\n         (modulo x 14))\n        ((and (<= x y) \n      \
    \       (= (modulo x 15) 0))\n         (modulo x 15))\n        ((and (<= x y)\
    \ \n             (= (modulo x 16) 0))\n         (modulo x 16))\n        ((and\
    \ (<= x y) \n             (= (modulo x 17) 0))\n         (modulo x 17))\n    \
    \    ((and (<= x y) \n             (= (modulo x 18) 0))\n         (modulo x 18))\n\
    \        ((and (<= x y) \n             (= (modulo x 19) 0))\n         (modulo\
    \ x 19))\n        ((and (<= x y) \n             (= (modulo x 20) 0))\n       \
    \  (modulo x 20))\n        ((and (<= x y) \n             (= (modulo x 21) 0))\n\
    \         (modulo x 21))\n        ((and (<= x y) \n             (= (modulo x 22)\
    \ 0))\n         (modulo x 22))\n        ((and (<= x y) \n             (= (modulo\
    \ x 23) 0))\n         (modulo x 23))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond [(= x y) -1]\n        [(even? (modulo x 2)) (* x 2)]\n\
    \        [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) -1]\n    [(even?\
    \ x) (+ x 2)]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond ((or (< x y) (-\
    \ (+ x y) y))\n         (if (< x y) (- (+ x y) y) -1))\n        ((= x y)\n   \
    \      (if (< x y) (- (+ x y) y) -1))\n        ((= x y)\n         (if (< x y)\
    \ (- (+ x y) y) -1))\n        (else\n         (if (< x y) (- (+ x y) y) -1))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n\
    \        [(= x y) x]\n        [(= y x) y]\n        [else (max (+ x y) 2)]))\n",
  "  (cond\n    [(= x y) -1]\n    [(even? x) x]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond\n    [(> x y) -1]\n    [(even? (modulo x 2)) (* x 2)]\n    [else (* x 3)]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond\n    [(and (< x y) \n          (even? (- x y)))\n     (-\
    \ x y)]\n    [(and (< x y) \n          (odd? (- x y)))\n     (- x y)]\n    [(and\
    \ (> x y) \n          (even? (- x y)))\n     (- x y)]\n    [(and (> x y) \n  \
    \        (odd? (- x y)))\n     (- x y)]))\n", "  (cond\n    [(= x y) -1]\n   \
    \ [(= x 0) -1]\n    [(= y 0) -1]\n    [(= x y) 0]\n    [(= y y) 0]\n    [else\
    \ (max (max (max (min x y) y) x) (min x y))]\n  )\n)\n", "  (cond\n    ((and (positive?\
    \ x) (positive? y)) (max (floor (/ x y)) (floor (/ y x))))\n    ((and (positive?\
    \ x) (negative? y)) -1)\n    ((and (negative? x) (positive? y)) -1)\n    ((and\
    \ (negative? x) (negative? y)) -1)\n    ((and (positive? x) (negative? y)) -1)\n\
    \    ((and (positive? x) (positive? y)) (max (floor (/ x y)) (floor (/ y x))))\n\
    \    ((and (negative? x) (positive? y)) -1)\n    ((and (negative? x) (negative?\
    \ y)) -1)\n    ((and (negative? x) (positive? y)) -1)\n    ((and (positive? x)\
    \ (positive? y)) (max (floor (/ x y)) (floor (/ y x))))\n    ((and (positive?\
    \ x) (negative? y)) -1)\n    ((and (positive? x) (positive? y)) (max (floor (/\
    \ x y)) (floor (/ y x))))\n    ((and (negative? x) (negative? y)) -1)\n    ((and\
    \ (negative? x) (positive? y)) -1)\n    ((and (negative? x) (negative? y)) -1)\n\
    \    ((and (positive? x) (positive? y)) (max (floor (/ x y)) (floor (/ y x))))\n\
    \    ((and (negative? x) (positive? y)) -1)\n    ((and (negative? x) (negative?\
    \ y)) -1)\n    ((and (negative? x) (positive? y)) -1)\n    ((and (positive? x)\
    \ (negative? y)) -1)\n    ((and (positive? x) (positive? y)) (max (floor (/ x\
    \ y)) (floor (/ y x))))\n    ((and (negative? x) (positive? y)) -1)\n    ((and\
    \ (negative? x) (negative? y)) -1)\n    ((and (negative? x) (positive? y)) -1)\n\
    \    ((and (positive? x) (negative? y)) -1)\n    ((and (positive? x) (positive?\
    \ y)) (max (floor (/ x y)) (floor (/ y x))))\n    ((and (negative? x) (negative?\
    \ y)) -1)\n    ((and (negative? x) (positive? y)) -1)\n    ((and (negative? x)\
    \ (negative? y)) -1)\n    ((and (negative? x) (positive? y)) -1)\n    ((and (positive?\
    \ x) (positive? y)) (max (floor (/ x y)) (floor (/ y x))))\n    ((and (negative?\
    \ x) (positive? y)) -1)\n    ((and (negative? x", "  (cond ((or (< x y) (- (-\
    \ x y) y))\n         (if (< x y)\n             (- x y)\n             (- y x)))\n\
    \        (else -1)))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n       \
    \ [(= x y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ x y)) (floor\
    \ (/ y x))) ]))\n", "  (cond\n    [(> x y) -1]\n    [(= x y) x]\n    [(= x y)\
    \ y]\n    [else (cond \n             [(even? (modulo x 2)) (cons x y)]\n     \
    \        [(even? (modulo y 2)) (cons y x)]\n             [else (choose_num (+\
    \ x 2) (+ y 2))])]))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n\
    \        (else (max (choose_num (+ x 1) y) (choose_num (+ x 1) (+ y 1))))))\n",
  "  (cond ((and (= x 0) (= y 0)) -1)\n        ((and (= x 0) (= y 1)) 0)\n       \
    \ ((and (= x 1) (= y 0)) 0)\n        ((and (= x 1) (= y 1)) 1)\n        (else\
    \ (max (choose_num (- x 1) y)\n                   (choose_num (- x 0) y))))\n",
  "  (cond\n    [(= x y) -1]\n    [(even? x) (* x y)]\n    [else (choose_num (+ x\
    \ 1) y)]))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n       \
    \  (if (< x y) -1 x))\n        ((< x y)\n         (if (even? x)\n            \
    \ (if (even? y)\n                 (if (even? (- x y))\n                     (-\
    \ x y)\n                     (- x y))\n                 (if (even? (- y x))\n\
    \                     (- y x)\n                     (- y x))))\n        (else\n\
    \         (if (even? (- x y))\n             (if (even? (- y x))\n            \
    \     (if (even? (- x y))\n                     (- x y)\n                    \
    \ (- x y))\n                 (if (even? (- y x))\n                     (- y x)\n\
    \                     (- y x))))))\n", "  (cond\n    [(= x y) -1]\n    [(even?\
    \ x) (* x y)]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond ((or (< x y) (-\
    \ (+ x y) y)) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x\
    \ y) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (< x y)\n  \
    \           (- x y)\n             -1)))\n        ((even? x)\n         (if (even?\
    \ y)\n             (- x y)\n             x))\n        (else\n         (if (even?\
    \ (- x y))\n             (- x y)\n             x))))\n", "  (cond\n    [(= x y)\
    \ -1]\n    [(even? x) (* x 2)]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n\
    \    [(and (<= x y) \n          (even? x))\n     (+ x 2)]\n    [(and (<= x y)\
    \ \n          (even? y))\n     (+ y 2)]\n    [else\n     (- 1)]))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n\
    \        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((< x y) -1)\n   \
    \     ((even? x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1)\
    \ (+ y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even?\
    \ y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (even? y))\n        (else (max (choose_num (+ x 1) y) \n \
    \                  (choose_num (+ x 1) (- y 1))))))\n", "  (cond ((or (= x y)\
    \ (= x 0))\n         -1)\n        ((even? x)\n         x)\n        (else\n   \
    \      (choose_num (- x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< x y) x]\n\
    \        [(< y x) -1]\n        [(< y x) y]\n        [else (max (+ x y) 2)]))\n",
  "  (cond [(= x y) -1]\n        [(even? x) (+ x 2)]\n        [else (choose_num (+\
    \ x 1) y)]))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even?\
    \ y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (even? y))\n        (else (max (+ x y) (- (+ x y) y))))) \n",
  "  (cond ((or (= x y) (- (+ x y) y)) -1)\n        ((= x 0) -1)\n        ((= y 0)\
    \ -1)\n        ((even? x) (max (+ x y) x))\n        (else (choose_num (- x y)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond\n    [(and (< x y) \n           (< y\
    \ x)) x]\n    [(and (< y x) \n           (< x y)) y]\n    [else -1]))\n", "  (cond\
    \ ((or (< x y) (- (- x y) y)) -1)\n        ((even? x) (cons x x))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond\n    [(and (> x y) \n          (even?\
    \ x))\n     (+ x 2)]\n    [(and (> y x) \n          (even? y))\n     (+ y 2)]\n\
    \    [else\n     (- x 1)]))\n", "  (cond\n    [(and (>= x y) \n          (even?\
    \ (modulo x 2)))\n     (modulo x 2)]\n    [(and (>= x y) \n          (even? (modulo\
    \ x 3)))\n     (modulo x 3)]\n    [(and (>= x y) \n          (even? (modulo x\
    \ 4)))\n     (modulo x 4)]\n    [(and (>= x y) \n          (even? (modulo x 5)))\n\
    \     (modulo x 5)]\n    [(and (>= x y) \n          (even? (modulo x 6)))\n  \
    \   (modulo x 6)]\n    [(and (>= x y) \n          (even? (modulo x 7)))\n    \
    \ (modulo x 7)]\n    [(and (>= x y) \n          (even? (modulo x 8)))\n     (modulo\
    \ x 8)]\n    [(and (>= x y) \n          (even? (modulo x 9)))\n     (modulo x\
    \ 9)]\n    [(and (>= x y) \n          (even? (modulo x 10)))\n     (modulo x 10)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 11)))\n     (modulo x 11)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 12)))\n     (modulo x 12)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 13)))\n     (modulo x 13)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 14)))\n     (modulo x 14)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 15)))\n     (modulo x 15)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 16)))\n     (modulo x 16)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 17)))\n     (modulo x 17)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 18)))\n     (modulo x 18)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 19)))\n     (modulo x 19)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 20)))\n     (modulo x 20)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 21)))\n     (modulo x 21)]\n\
    \    [(and (>= x y) \n          (even? (modulo x 22)))\n     (modulo x 22)]\n\
    \    [(and (>= x y) \n          (", "  (cond ((= x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n    \
    \    ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (even? y))\n        (else (max (choose_num\
    \ (+ x 1) y) x))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n  \
    \      (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(= x y) -1]\n\
    \    [(even? (modulo x 2)) (modulo x 2)]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond\n    [(= x y) -1]\n    [(even? (modulo x 2)) (* x 2)]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond [(= x y) -1]\n        [(even? x) (+ x 2)]\n     \
    \   [else (choose_num (+ x 1) y)]))\n", "  (cond ((and (<= x y) \n           \
    \  (= (modulo x 2) 0))\n         (modulo x 2))\n        ((and (<= x y) \n    \
    \         (= (modulo x 2) 1))\n         (modulo x 2))\n        ((and (<= x y)\
    \ \n             (= (modulo x 2) 2))\n         (modulo x 2))\n        ((and (<=\
    \ x y) \n             (= (modulo x 2) 3))\n         (modulo x 2))\n        ((and\
    \ (<= x y) \n             (= (modulo x 2) 4))\n         (modulo x 2))\n      \
    \  ((and (<= x y) \n             (= (modulo x 2) 5))\n         (modulo x 2))\n\
    \        ((and (<= x y) \n             (= (modulo x 2) 6))\n         (modulo x\
    \ 2))\n        ((and (<= x y) \n             (= (modulo x 2) 7))\n         (modulo\
    \ x 2))\n        ((and (<= x y) \n             (= (modulo x 2) 8))\n         (modulo\
    \ x 2))\n        ((and (<= x y) \n             (= (modulo x 2) 9))\n         (modulo\
    \ x 2))\n        ((and (<= x y) \n             (= (modulo x 2) 10))\n        \
    \ (modulo x 2))\n        ((and (<= x y) \n             (= (modulo x 2) 11))\n\
    \         (modulo x 2))\n        ((and (<= x y) \n             (= (modulo x 2)\
    \ 12))\n         (modulo x 2))\n        ((and (<= x y) \n             (= (modulo\
    \ x 2) 13))\n         (modulo x 2))\n        ((and (<= x y) \n             (=\
    \ (modulo x 2) 14))\n         (modulo x 2))\n        ((and (<= x y) \n       \
    \      (= (modulo x 2) 15))\n         (modulo x 2))\n        ((and (<= x y) \n\
    \             (= (modulo x 2) 16))\n         (modulo x 2))\n        ((and (<=\
    \ x y) \n             (= (modulo x 2) 17))\n         (modulo x 2))\n        ((and\
    \ (<= x y) \n             (= (modulo x 2) 18))\n         (modulo x 2))\n     \
    \   ((and (<= x y) \n             (= (modulo x 2) 19))\n         (modulo x 2))\n\
    \        ((and (<= x y) \n             (= (modulo x 2) 20))\n         (modulo\
    \ x 2))\n        ((and (<= x y) \n             (= (modulo x 2) 21))\n        \
    \ (modulo x 2))\n        ((and (<= x y) \n             (= (modulo x 2) 22))",
  "  (cond\n    ((= x y) -1)\n    ((even? x) (cons x y))\n    ((even? y) (cons y x))\n\
    \    (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((or (< x y) (- (- x y)\
    \ y))\n         (if (< x y)\n             (- x y)\n             (- y x)))\n  \
    \      (else -1)))\n", "  (cond ((< x y) -1)\n        ((even? x) (+ x y))\n  \
    \      (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n",
  "  (cond [(= x y) -1]\n        [(even? x) (* x y)]))\n", "  (cond\n    [(= x y)\
    \ -1]\n    [(even? x) x]\n    [(even? y) y]\n    [else (max (choose_num (+ x 1)\
    \ y) (choose_num (+ x 1) (+ y 1)))]))\n", "  (cond ((and (>= x y) \n         \
    \    (= (mod x 2) 0)\n             (= (mod y 2) 0))\n         (/ x 2))\n     \
    \   ((and (>= x y) \n             (= (mod x 2) 0)\n             (= (mod y 2) 1))\n\
    \         (/ x 2))\n        ((and (>= x y) \n             (= (mod x 2) 1)\n  \
    \           (= (mod y 2) 0))\n         (/ x 2))\n        ((and (>= x y) \n   \
    \          (= (mod x 2) 1)\n             (= (mod y 2) 1))\n         (/ x 2))\n\
    \        ((and (>= x y) \n             (= (mod x 2) 0)\n             (= (mod y\
    \ 2) 1))\n         (/ x 2))\n        ((and (>= x y) \n             (= (mod x 2)\
    \ 1)\n             (= (mod y 2) 0))\n         (/ x 2))\n        ((and (>= x y)\
    \ \n             (= (mod x 2) 0)\n             (= (mod y 2) 0))\n         (/ x\
    \ 2))\n        ((and (>= x y) \n             (= (mod x 2) 1)\n             (=\
    \ (mod y 2) 1))\n         (/ x 2))\n        ((and (>= x y) \n             (= (mod\
    \ x 2) 0)\n             (= (mod y 2) 0))\n         (/ x 2))\n        ((and (>=\
    \ x y) \n             (= (mod x 2) 1)\n             (= (mod y 2) 1))\n       \
    \  (/ x 2))\n        ((and (>= x y) \n             (= (mod x 2) 0)\n         \
    \    (= (mod y 2) 0))\n         (/ x 2))\n        ((and (>= x y) \n          \
    \   (= (mod x 2) 1)\n             (= (mod y 2) 0))\n         (/ x 2))\n      \
    \  ((and (>= x y) \n             (= (mod x 2) 0)\n             (= (mod y 2) 1))\n\
    \         (/ x 2))\n        ((and (>= x y) \n             (= (mod x 2) 1)\n  \
    \           (= (mod y 2) 0))\n         (/ x 2))\n        ((and (>= x y) \n   \
    \          (= (mod x 2) 0)\n             (= (mod y 2) 1))\n         (/ x 2))\n\
    \        ((and (>= x y) \n             (= (mod x 2) 1)\n             (= (mod y\
    \ 2) 1))\n         (/ x 2))\n        ((and (>= x y) \n             (= (mod x 2)\
    \ 0)\n             (= (mod y 2) 0))\n         (/ x 2))\n        ((and (>= x y)\
    \ \n             (= (mod x 2) 1)\n             (= (mod y 2) 0))\n         (/ x\
    \ 2))\n        ((and (>= x y) ", "  (cond ((or (< x y) (- (+ x y) y)) -1)\n  \
    \      ((even? x) (+ x y))\n        (else (choose_num (+ x y) y))))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (even? x)\n   \
    \          (- x y)\n             (- y x)))\n        (else -1)))\n", "  (cond [(=\
    \ x y) -1]\n        [(even? (modulo x 2)) (modulo x 2)]\n        [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) -1]\n    [(= x 0) -1]\n    [(= y 0)\
    \ -1]\n    [else (cond \n             [(even? (modulo x 2)) (cons x y)]\n    \
    \         [else (choose_num (- x 1) (- y 1))]))]))\n", "  (cond\n    [(and (<\
    \ x y) \n           (even? x))\n     (- x)]\n    [(and (< y x) \n           (even?\
    \ y))\n     (- y)]\n    [else\n     (- -1)]))\n", "  (cond ((= x y) -1)\n    \
    \    ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((and (number? x) (number? y)) \n         (if (even? (- x y)) (- x y) (- x y)))\n\
    \        ((and (number? x) (not (number? y)))\n         (if (even? (- x y)) (-\
    \ x y) (- x y)))\n        ((and (not (number? x)) (number? y))\n         (if (even?\
    \ (- x y)) (- x y) (- x y)))\n        ((and (not (number? x)) (not (number? y)))\n\
    \         (if (even? (- x y)) (- x y) (- x y)))\n        ((and (not (number? x))\
    \ (not (number? y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n       \
    \ ((and (not (number? x)) (not (number? y)))\n         (if (even? (- x y)) (-\
    \ x y) (- x y)))\n        ((and (not (number? x)) (not (number? y)))\n       \
    \  (if (even? (- x y)) (- x y) (- x y)))\n        ((and (not (number? x)) (not\
    \ (number? y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n        ((and\
    \ (not (number? x)) (not (number? y)))\n         (if (even? (- x y)) (- x y) (-\
    \ x y)))\n        ((and (not (number? x)) (not (number? y)))\n         (if (even?\
    \ (- x y)) (- x y) (- x y)))\n        ((and (not (number? x)) (not (number? y)))\n\
    \         (if (even? (- x y)) (- x y) (- x y)))\n        ((and (not (number? x))\
    \ (not (number? y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n       \
    \ ((and (not (number? x)) (not (number? y)))\n         (if (even? (- x y)) (-\
    \ x y) (- x y)))\n        ((and (not (number? x)) (not (number? y)))\n       \
    \  (if (even? (- x y)) (- x y) (- x y)))\n        ((and (not (number? x)) (not\
    \ (number? y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n        ((and\
    \ (not (number? x", "  (cond ((= x y) (if (even? x) x -1))\n        ((even? (-\
    \ x y)) (- x y))\n        (else -1)))\n", "  (cond [(= x y) -1]\n        [(= x\
    \ 0) -1]\n        [(= y 0) -1]\n        [(even? x) (max (+ x y) -1)]\n       \
    \ [(even? y) (max (+ x y) -1)]\n        [else (max (+ x y) -1)]))\n", "  (cond\
    \ ((= x y) (if (even? x) x -1))\n        ((even? (- x y)) (- x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond\n    ((and (integer? x) (integer? y))\
    \ \n     (cond\n       ((even? x) (+ x y))\n       ((even? y) (+ y x))\n     \
    \  (else -1)))\n    ((and (integer? x) (odd? y)) \n     (cond\n       ((even?\
    \ x) (+ x y))\n       ((even? y) (+ y x))\n       (else -1)))\n    ((and (odd?\
    \ x) (integer? y)) \n     (cond\n       ((even? x) (+ x y))\n       ((even? y)\
    \ (+ y x))\n       (else -1)))\n    ((and (odd? x) (odd? y)) \n     (cond\n  \
    \     ((even? x) (+ x y))\n       ((even? y) (+ y x))\n       (else -1)))\n  \
    \  ((and (odd? x) (even? y)) \n     (cond\n       ((even? x) (+ x y))\n      \
    \ ((even? y) (+ y x))\n       (else -1)))\n    ((and (even? x) (integer? y)) \n\
    \     (cond\n       ((even? x) (+ x y))\n       ((even? y) (+ y x))\n       (else\
    \ -1)))\n    ((and (even? x) (odd? y)) \n     (cond\n       ((even? x) (+ x y))\n\
    \       ((even? y) (+ y x))\n       (else -1)))\n    ((and (even? x) (even? y))\
    \ \n     (cond\n       ((even? x) (+ x y))\n       ((even? y) (+ y x))\n     \
    \  (else -1)))\n    ((and (integer? x) (odd? y)) \n     (cond\n       ((even?\
    \ x) (+ x y))\n       ((even? y) (+ y x))\n       (else -1)))\n    ((and (integer?\
    \ x) (even? y)) \n     (cond\n       ((even? x) (+ x y))\n       ((even? y) (+\
    \ y x))\n       (else -1)))\n    ((and (odd? x) (integer? y)) \n     (cond\n \
    \      ((even? x) (+ x y))\n       ((even? y) (+ y x))\n       (else -1)))\n \
    \   ((and (odd? x) (odd? y)) \n     (cond\n       ((even? x) (+ x y))\n      \
    \ ((even? y) (+ y x))\n       (else -1)))\n    ((and (odd? x) (even? y)) \n  \
    \   (cond\n       ((even? x) (+ x y))\n       ((even? y) (+ y x))\n       (else\
    \ -1)))\n    ((and (", "  (cond ((or (< x y) (- (+ x y) y))\n         (if (even?\
    \ (- x y))\n             (- x y)\n             -1))\n        (else (if (even?\
    \ (- y x))\n                 (- y x)\n                 -1))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num\
    \ (+ x 1) (+ y 1)))))\n", "  (cond\n    [(or (= x y) (= y 0)) -1]\n    [(= (mod\
    \ x 2) 0) (* x y)]\n    [else (* x y)]))\n", "  (cond ((or (< x y) (- (+ x y)\
    \ y))\n         (if (= x y)\n             x\n             (if (even? (modulo x\
    \ y))\n                 (- x y)\n                 (- y x))))\n        (else -1)))\n",
  "  (cond [(< x y) -1]\n        [(< x y) x]\n        [(< y x) -1]\n        [(< y\
    \ x) y]\n        [else (max (+ x y) 1)]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (* x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond\n    [(= x y) -1]\n    [(= (mod x 2) 0) (+ x y)]\n \
    \   [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(and (integer? x) (integer?\
    \ y)) (max x y)]\n    [(and (integer? x) (not (integer? y))) (max x y)]\n    [(and\
    \ (not (integer? x)) (integer? y)) (max x y)]\n    [else -1]))\n", "  (cond\n\
    \    [(and (integer? x) (integer? y)) (max (min x y) -1)]\n    [(and (integer?\
    \ x) (not (integer? y))) (max (min x y) -1)]\n    [(and (not (integer? x)) (integer?\
    \ y)) (max (min x y) -1)]\n    [(and (not (integer? x)) (not (integer? y))) (max\
    \ (min x y) -1)]\n    [else (max (min x y) -1)]))\n", "  (cond [(= x y) -1]\n\
    \        [(= (mod x 2) 0) (* x 2)\n         (if (= (mod y 2) 0) (* y 2)\n    \
    \       (if (= (mod x y) 0) (* x y)\n               (if (= (mod y x) 0) (* y x)\n\
    \                   (if (= (mod x y) 0) (* x y)\n                     (if (= (mod\
    \ y x) 0) (* y x))\n                     (if (= (mod x y) 0) (* x y))))))]))\n",
  "  (cond ((or (< x y) (- (+ x y) y))\n         (if (< x y)\n             (- x y)\n\
    \             (- y x)))\n        (else -1)))\n", "  (cond\n    [(and (<= x y)\
    \ \n          (even? x))\n     (- x 2)]\n    [(and (<= x y) \n          (even?\
    \ y))\n     (- y 2)]\n    [else\n     (- x 1)]))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1)\
    \ (+ y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x) (+ x y))\n       \
    \ (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x)\
    \ -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/ x y)) (floor\
    \ (/ y x)))]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even?\
    \ y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond [(< x y) -1]\n\
    \        [(= x y) x]\n        [(= y x) y]\n        [else (max (+ x y) \n     \
    \              (choose_num (+ x 1) (+ y 1)))]))\n", "  (cond\n    [(> x y) -1]\n\
    \    [(= x y) x]\n    [(= x y) y]\n    [else (cond \n             [(even? (modulo\
    \ x 2)) (cons x y)]\n             [(even? (modulo y 2)) (cons y x)]\n        \
    \     [else (choose_num (+ x 1) (+ y 1))]))]))\n", "  (cond\n    [(and (integer?\
    \ x) (integer? y)) (max x y)]\n    [else -1]))\n", "  (cond\n    [(= x y) -1]\n\
    \    [(= x 0) -1]\n    [(= y 0) -1]\n    [(even? x) (max (+ x y) -1)]\n    [else\
    \ (max (+ x y) -1)]))\n", "  (cond [(= x y) -1]\n        [(even? x) (max (+ x\
    \ y) -1)]\n        [else (max (+ x y) -1)]))\n", "  (cond ((= x y) -1)\n     \
    \   ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    ((and\
    \ (number? x) (number? y)) (cond\n      ((or (= x 0) (= y 0)) -1)\n      ((and\
    \ (= x 0) (< y 0)) -1)\n      (else (cond \n        ((= (mod x 2) 0) (cond \n\
    \          ((= x y) 0)\n          ((= y 0) (cond \n            ((= x 0) 0)\n \
    \           (else (+ 1 (choose_num (- x 1) (- y 1))))))))\n      (else (cond \n\
    \        ((= (mod x 2) 0) (cond \n          ((= x y) 0)\n          ((= y 0) (cond\
    \ \n            ((= x 0) 0)\n            (else (+ 1 (choose_num (- x 1) (- y 1))))))))\n\
    \      (else (cond \n        ((= (mod x 2) 0) (cond \n          ((= x y) 0)\n\
    \          ((= y 0) (cond \n            ((= x 0) 0)\n            (else (+ 1 (choose_num\
    \ (- x 1) (- y 1))))))))\n      (else (cond \n        ((= (mod x 2) 0) (cond \n\
    \          ((= x y) 0)\n          ((= y 0) (cond \n            ((= x 0) 0)\n \
    \           (else (+ 1 (choose_num (- x 1) (- y 1))))))))\n      (else (cond \n\
    \        ((= (mod x 2) 0) (cond \n          ((= x y) 0)\n          ((= y 0) (cond\
    \ \n            ((= x 0) 0)\n            (else (+ 1 (choose_num (- x 1) (- y 1))))))))\n\
    \      (else (cond \n        ((= (mod x 2) 0) (cond \n          ((= x y) 0)\n\
    \          ((= y 0) (cond \n            ((= x 0) 0)\n            (else (+ 1 (choose_num\
    \ (- x 1) (- y 1))))))))\n      (else (cond \n        ((= (mod x 2) 0) (cond \n\
    \          ((= x y) 0)\n          ((= y 0) (cond \n            ((= x 0) 0)\n \
    \           (else (+ 1 (choose_num (- x 1) (- y 1))))))))\n      (else (cond \n\
    \        ((= (mod x 2) 0) (cond \n          ((= x y) 0)\n          ((= y 0) (cond\
    \ \n            ((= x 0) 0)\n            (else (+ 1 (choose_num (- x ", "  (cond\
    \ ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else\
    \ (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\n    [(= x y) -1]\n    [(= x 0)\
    \ -1]\n    [(= y 0) -1]\n    [(even? x) (max (+ x y) -1)]\n    [(even? y) (max\
    \ (+ x y) -1)]\n    [else (max (+ x y) -1)]))\n", "  (cond ((< x y) -1)\n    \
    \    ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ [(= x y) -1]\n        [(even? x) (+ x y)]\n        [else (choose_num (+ x 1)\
    \ y)]))\n", "  (cond\n    [(< x y) -1]\n    [(< y 0) -1]\n    [(< x y) x]\n  \
    \  [(< y 0) y]\n    [else (max (floor (/ x y)) (floor (/ y x))) ]\n  ))\n", " \
    \ (cond [(< x y) -1]\n        [(< x y) 0]\n        [(< y x) -1]\n        [(< y\
    \ x) 0]\n        [else (max (+ x y) 0)]))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y) -1]\n\
    \        [(even? x) (max (+ x y) -1)]\n        [else (max (+ x y) -1)]))\n", " \
    \ (cond ((or (< x y) (- (- x y) y))\n         (if (< x y)\n             (- x y)\n\
    \             (- y x)))\n        (else -1)))\n", "  (cond ((= x y) -1)\n     \
    \   ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond [(= x y) -1]\n        [(even? x) (* x y)]\n        [else\
    \ (choose_num (+ x 1) y)]))\n", "  (cond ((= x y) (if (even? x) (+ x y) -1))\n\
    \        (else (if (even? y) (+ y x) -1))))\n", "  (cond ((and (= x y) \n    \
    \         (= (modulo x 2) 0))\n         (modulo x 2))\n        ((and (= x y) \n\
    \             (= (modulo x 2) 1))\n         (modulo x 2))\n        ((and (= x\
    \ y) \n             (= (modulo x 2) 2))\n         (modulo x 2))\n        ((and\
    \ (= x y) \n             (= (modulo x 2) 3))\n         (modulo x 2))\n       \
    \ ((and (= x y) \n             (= (modulo x 2) 4))\n         (modulo x 2))\n \
    \       ((and (= x y) \n             (= (modulo x 2) 5))\n         (modulo x 2))\n\
    \        ((and (= x y) \n             (= (modulo x 2) 6))\n         (modulo x\
    \ 2))\n        ((and (= x y) \n             (= (modulo x 2) 7))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 8))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 9))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 10))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 11))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 12))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 13))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 14))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 15))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 16))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 17))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 18))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 19))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 20))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 21))\n         (modulo\
    \ x 2))\n        ((and (= x y) \n             (= (modulo x 2) 22))", "  (cond\
    \ ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= (modulo x y) 0)\n     \
    \    (if (= (modulo y x) 0)\n             (+ x y)\n             (choose_num (+\
    \ x y) y))]))\n", "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (+ x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (-\
    \ x y) y))\n         (if (= x y)\n             x\n             (if (even? x)\n\
    \                 (- x y)\n                 (- y x))))\n        (else -1)))\n",
  "  (cond [(= x y) -1]\n        [(even? x) (+ x y)]\n        [else (choose_num (+\
    \ x 1) y)]))\n", "  (cond ((or (= x y) (- (+ x y) y))\n         (if (= x y)\n\
    \             x\n             (if (even? (- x y))\n                 (- x y)\n\
    \                 (- x y)))\n         (if (even? (- x y))\n             (- x y)\n\
    \             (- x y)))\n        (else -1)))\n", "  (cond ((= x y) -1)\n     \
    \   ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x\
    \ y) -1]\n        [(even? x) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n",
  "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(< x y) x]\n        [(< y\
    \ x) y]\n        [else (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond [(<\
    \ x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n \
    \       [else (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num (+ x\
    \ 1) (+ y 1)))))\n", "  (cond [(= x y) -1]\n        [(even? x) (+ x 2)]\n    \
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(and (integer? x) (integer?\
    \ y)) x]\n    [(and (integer? x) (not (integer? y))) y]\n    [(and (not (integer?\
    \ x)) (integer? y)) x]\n    [(and (not (integer? x)) (not (integer? y))) -1]))\n",
  "  (cond\n    [(= x y) -1]\n    [(= x 0) -1]\n    [(= y 0) -1]\n    [(= x y) 0]\n\
    \    [(= y y) 0]\n    [else (max (max (min x y) y) \n               (max (min\
    \ x y) x))]))\n", "  (cond ((and (number? x) (number? y)) \n         (if (even?\
    \ (- x y)) (- x y) (- x y)))\n        ((and (number? x) (not (number? y)))\n \
    \        (if (even? x) x -1)\n         (if (even? y) y -1)))\n        ((and (not\
    \ (number? x)) (number? y))\n         (if (even? x) x -1)\n         (if (even?\
    \ y) y -1)))\n        ((and (not (number? x)) (not (number? y)))\n         (if\
    \ (even? (- x y)) (- x y) (- x y)))\n        ((and (not (number? x)) (not (number?\
    \ y)))\n         (if (even? x) x -1)\n         (if (even? y) y -1)))\n       \
    \ ((and (not (number? x)) (not (number? y)))\n         (if (even? (- x y)) (-\
    \ x y) (- x y)))\n        ((and (not (number? x)) (not (number? y)))\n       \
    \  (if (even? x) x -1)\n         (if (even? y) y -1)))\n        ((and (not (number?\
    \ x)) (not (number? y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n   \
    \     ((and (not (number? x)) (not (number? y)))\n         (if (even? x) x -1)\n\
    \         (if (even? y) y -1)))\n        ((and (not (number? x)) (not (number?\
    \ y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n        ((and (not (number?\
    \ x)) (not (number? y)))\n         (if (even? x) x -1)\n         (if (even? y)\
    \ y -1)))\n        ((and (not (number? x)) (not (number? y)))\n         (if (even?\
    \ (- x y)) (- x y) (- x y)))\n        ((and (not (number? x)) (not (number? y)))\n\
    \         (if (even? x) x -1)\n         (if (even? y) y -1)))\n        ((and (not\
    \ (number? x)) (not (number? y)))\n         (if (even? (- x y)) (- x y) (- x y)))\n\
    \        ((and (not (number? x)) (not (number? y)))\n         (if (even? x) x\
    \ -1)\n         (if (even? y) y -1)))\n        ((and (not (number? x)) (not (number?\
    \ y)))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= (modulo x\
    \ 2) (modulo y 2)) -1]\n        [else (+ x y)]))\n", "  (cond ((> x y) -1)\n \
    \       ((even? x) (even? y))\n        (else (max (+ x y) (- (+ x y) y))))) \n",
  "  (cond\n    [(and (integer? x) (integer? y)) (max x y)]\n    [(and (integer? x)\
    \ (not (integer? y))) (max x -1)]\n    [(and (not (integer? x)) (integer? y))\
    \ (max -1 y)]\n    [(and (not (integer? x)) (not (integer? y))) (max -1 -1)]\n\
    \    [else -1]))\n", "  (cond\n    [(and (>= x y) \n          (even? x))\n   \
    \  (- x 2)]\n    [(and (>= y x) \n          (even? y))\n     (- y 2)]\n    [else\n\
    \     (- x 1)]))\n", "  (cond ((< x y) -1)\n        ((even? x) (+ x y))\n    \
    \    (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(=\
    \ x y) -1]\n        [(= (mod x 2) 0) (+ x 2)\n         (choose_num (+ x 2) y)]\n\
    \        [else x]))\n", "  (cond ((> x y) -1)\n        ((even? x) (even? y))\n\
    \        (else (max (min x y) x))))\n", "  (cond\n    [(> x y) -1]\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else (choose_num (+ x 1) (+ y 1))]))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond\n    [(= x y) -1]\n    [(even? x) (* x 2)]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        ((even?\
    \ y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond [(< x y) -1]\n\
    \        [(= x y) x]\n        [(= y x) y]\n        [(even? x) (max (+ x y) 2)]\n\
    \        [(even? y) (max (+ x y) 2)]\n        [else (max (+ x y) 2)]))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else\
    \ (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((or (< x y) (- (- x y) y))\n \
    \        (if (= x y)\n             x\n             (if (even? (- x y))\n     \
    \            (- x y)\n                 (- y x)))))\n        (else -1)))\n", " \
    \ (cond ((or (< x y) (- (- x y) y))\n         (if (= x y)\n             (- x y)\n\
    \             (- x y)))\n        (else -1)))\n", "  (cond [(= x y) -1]\n     \
    \   [(even? (modulo x 2)) (* x 2)\n         (even? (modulo y 2)) (* y 2)]\n  \
    \      [else (choose_num (+ x 1) (+ y 1))]))\n", "  (cond [(< x y) -1]\n     \
    \   [(< y x) -1]\n        [(even? x) (max (+ x y) -1)]\n        [(even? y) (max\
    \ (+ x y) -1)]\n        [else (max (+ x y) -1)]))\n", "  (cond\n    [(and (positive?\
    \ x) (positive? y)) (max x y)]\n    [else -1]))\n", "  (cond ((< x y) -1)\n  \
    \      ((even? x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1)\
    \ (+ y 1)))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n       \
    \ (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n \
    \        (if (even? x)\n             (- x y)\n             (- y x)))\n       \
    \ (else -1)))\n", "  (cond\n    [(and (integer? x) (integer? y)) x]\n    [(and\
    \ (integer? x) (not (integer? y))) y]\n    [(and (not (integer? x)) (integer?\
    \ y)) x]\n    [(and (not (integer? x)) (not (integer? y))) -1]\n    [else (error\
    \ \"choose_num: bad arguments\")]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n",
  "  (cond ((or (< x y) (- (+ x y) y))\n         (if (even? (- x y))\n           \
    \  (- x y)\n             (- y x)))\n        ((< x y) -1)\n        (else 0)))\n",
  "  (cond\n    [(< x y) -1]\n    [(< y 0) -1]\n    [(< x y) 0]\n    [(< y 0) 0]\n\
    \    [else (max (floor (/ x y)) (floor (/ y x))) ]\n  )\n)\n", "  (cond ((= x\
    \ y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(even? x) x]\n        [(even?\
    \ y) y]\n        [else (choose_num (+ x 1) (+ y 1))]))\n", "  (cond\n    [(and\
    \ (positive? x) (positive? y)) (max x y)]\n    [else -1]))\n", "  (cond ((< x\
    \ y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num\
    \ (+ x 1) (+ y 1)))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num\
    \ (+ x 1) (+ y 1)))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (- x y)\
    \ y))\n         (if (= x y)\n             x\n             (if (even? (- x y))\n\
    \                 (- x y)\n                 (- x y)))\n         (if (even? (-\
    \ x y))\n             (- x y)\n             (- x y)))\n        (else -1)))\n",
  "  (cond\n    [(and (integer? x) (integer? y)) (max x y)]\n    [(and (integer? x)\
    \ (not (integer? y))) (max x -1)]\n    [(and (not (integer? x)) (integer? y))\
    \ (max -1 y)]\n    [(and (not (integer? x)) (not (integer? y))) (max -1 -1)]\n\
    \    [else -1]))\n", "  (cond [(= x y) -1]\n        [(= (modulo x 2) 0) (+ x 2)]\n\
    \        [else (choose_num (+ x 2) y)]))\n", "  (cond\n    [(< x y) -1]\n    [(<\
    \ y 0) -1]\n    [(= x y) 0]\n    [(= y 0) 0]\n    [else (max (floor (/ (- x y)\
    \ 2)) (floor (/ (- y 2) 2)))]))\n", "  (cond\n    [(= x y) -1]\n    [(= x 0) -1]\n\
    \    [(= y 0) -1]\n    [(even? x) (max (+ x y) -1)]\n    [else (max (+ x y) -1)]))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_147_get_max_triples
language: rkt
prompt: "#lang racket\n\n;; You are given a positive integer n. You have to create\
  \ an integer array a of length n.\n;; For each i (1 \u2264 i \u2264 n), the value\
  \ of a[i] = i * i - i + 1.\n;; Return the number of triples (a[i], a[j], a[k]) of\
  \ a where i < j < k, \n;; and a[i] + a[j] + a[k] is a multiple of 3.\n;; Example\
  \ :\n;; Explanation: \n;; a = [1, 3, 7, 13, 21]\n;; The only valid triple is (1,\
  \ 7, 13).\n(define (get_max_triples n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate get_max_triples))\n\
  \    (check-equal? (candidate 5) 1)\n    (check-equal? (candidate 6) 4)\n    (check-equal?\
  \ (candidate 10) 36)\n    (check-equal? (candidate 100) 53361)\n))\n\n(test-humaneval)"
completions: ["  (define (helper a i j k)\n    (cond\n      [(< i j) (+ 1 (helper\
    \ (cdr a) i (+ j 1) k))]\n      [(< j k) (+ 1 (helper (cdr a) (+ i 1) j (+ k 1)))]\n\
    \      [(< k n) (+ 1 (helper (cdr a) i (+ j 1) (+ k 1)))]\n      [else 0]))\n\
    \  (helper (list 1 3 7 13 21) 0 1 2))\n", "  (define (helper i j k)\n    (if (<\
    \ i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n  \
    \          0))\n    (if (< i k)\n        (if (< j n)\n            (helper (+ i\
    \ 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n\
    \        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+\
    \ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n     \
    \       (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n \
    \       (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n          \
    \  0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j\
    \ 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n       \
    \     (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n   \
    \     (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n\
    \    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n            (helper\
    \ (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i\
    \ n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (<\
    \ i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n  \
    \          0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i\
    \ 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n\
    \        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ ", "  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n  \
    \    [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (helper\
    \ (+ 1 n) n n))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (=\
    \ (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i\
    \ j))]\n      [(< k n) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if (=\
    \ (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper2 i j k)\n    (cond\n     \
    \ [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [(< k n) (if (= (+ i j) k) (+ i j) (+ i j))]\n \
    \     [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper3 i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k n) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper4\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k n) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define\
    \ (helper5 i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k n) (if (= (+\
    \ i j) k) (+ i j) (+ i j))]\n      [else (if (= ", "  (define (helper i j k)\n\
    \    (if (< i j)\n        (if (< k n)\n            (if (= (+ i j k) 3)\n     \
    \           (+ 1 (helper (+ i 1) j k) (helper (+ i 1) (+ j 1) k) (helper (+ i\
    \ 1) (+ j 1) (+ k 1)))\n                0))\n        0))\n  (helper 1 2 n))\n",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper\
    \ (+ i 1) j k)) 0)]\n      [(< j k) (if (= (+ i j) k) (+ 1 (helper (+ i 1) k (+\
    \ j 1))) 0)]\n      [(< k n) (if (= (+ i j) k) (+ 1 (helper (+ i k) j (+ j 1)))\
    \ 0)]\n      [else (+ 1 (helper (+ i k) j (+ j k)))]))\n  (helper 1 2 n))\n",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper\
    \ (+ i 1) j k)) 0)]\n      [(< j k) (if (= (+ i j) k) (+ 1 (helper i (+ j 1) k))\
    \ 0)]\n      [(< k n) (if (= (+ i j) k) (+ 1 (helper i (+ j k) n)) 0)]\n     \
    \ [else (+ 1 (helper i (+ j k) n))]\n      ))\n  (helper 1 2 3))\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper (+\
    \ i 1) j k) (helper (+ i 1) k (+ j k)))\n                  (helper (+ i 1) j (+\
    \ j k)))]\n      [(< j k) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j (+ j k)) (helper\
    \ (+ i 1) k (+ j k)))\n                  (helper (+ i 1) j (+ j k)))]\n      [(<\
    \ i k) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j k)))\n\
    \                  (helper (+ i 1) j (+ j k)))]\n      [else 0]))\n  (if (= n\
    \ 0)\n      0\n      (+ 1 (helper (+ n 1) 0 0) (helper (+ n 1) 0 0))))\n", " \
    \ (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+\
    \ i j k))\n          ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j\
    \ k) (+ k i))))\n  (helper 1 2 3))\n", "  (let loop ((i 1)\n             (a #(list\
    \ 1 3 7))\n             (count 0))\n    (if (< i n)\n        (loop (+ i 1)\n \
    \             (cons (* i i i)\n                    (cons (+ i j) (cons (+ i k)\
    \ a)))\n              (+ count 1))\n        count)))\n", "  (define (helper i\
    \ j k)\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) j k)\n\
    \            0))\n    (if (< i k)\n        (if (< j n)\n            (helper (+\
    \ i 1) (+ j 1) k)\n            0))\n    (if (< j k)\n        (if (< i n)\n   \
    \         (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n\
    \        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+\
    \ j 1) k)\n            0))\n    (if (< i j)\n        (if (< k n)\n           \
    \ (helper (+ i 1) j k)\n            0))\n    (if (< j k)\n        (if (< i n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n\
    \        (if (< k n)\n            (helper (+ i 1) (+ j 1) k)\n            0))\n\
    \    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) j k)\n    \
    \        0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1)\
    \ (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n  \
    \          (helper (+ i 1) (+ j 1) k)\n            0))\n    (if (< i j)\n    \
    \    (if (< k n)\n            (helper (+ i 1) j k)\n            0))\n    (if (<\
    \ j k)\n        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n  \
    \          0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i\
    \ 1) (+ j 1) k)\n            0))\n    (if (< j k)\n        (if (< i n)\n     \
    \       (helper (+ i 1) j k)\n            0))\n    (if (< i j)\n        (if (<\
    \ k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if\
    \ (< j k)\n        (if (< i n)\n            (helper (+ i 1) j k)\n           \
    \ 0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j\
    \ 1) k)\n            0))\n    (if (< j k)\n        (if (< i n)\n            (helper\
    \ (+ i 1) ", "  (define (helper i j k)\n    (if (< i j)\n        (if (< k n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i k)\n\
    \        (if (< j n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+\
    \ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n     \
    \       (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n \
    \       (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n          \
    \  0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j\
    \ 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n       \
    \     (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n   \
    \     (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n\
    \    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n            (helper\
    \ (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i\
    \ n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (<\
    \ i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n  \
    \          0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i\
    \ 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n\
    \        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+\
    \ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n     \
    \       (helper (+ i 1) (+ j 1) (+ ", "  (define (helper a i j k)\n    (cond\n\
    \      [(= i j) (+ a k)]\n      [(= i k) (+ a j)]\n      [(= j k) (+ a i)]\n \
    \     [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n  (helper 0 1 2 n))\n", " \
    \ (define (helper i j k)\n    (if (< i j)\n        (if (< i k)\n            (if\
    \ (< j k)\n                (if (= (+ (* i i) (* j j) (* k k)) 3)\n           \
    \         (helper i (+ j 1) k)\n                    (helper i (+ j 1) j))\n  \
    \              (helper i (+ j 1) k))\n            (if (= (+ (* i i) (* j j) (*\
    \ k k)) 3)\n                (helper i (+ j 1) j)\n                (helper i (+\
    \ j 1) k))\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n              \
    \  (helper i (+ j 1) j)\n                (helper i (+ j 1) k))\n            (if\
    \ (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper i (+ j 1) j)\n  \
    \              (helper i (+ j 1) k))\n            (if (= (+ (* i i) (* j j) (*\
    \ k k)) 3)\n                (helper i (+ j 1) j)\n                (helper i (+\
    \ j 1) k))\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n              \
    \  (helper i (+ j 1) j)\n                (helper i (+ j 1) k))\n            (if\
    \ (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper i (+ j 1) j)\n  \
    \              (helper i (+ j 1) k))\n            (if (= (+ (* i i) (* j j) (*\
    \ k k)) 3)\n                (helper i (+ j 1) j)\n                (helper i (+\
    \ j 1) k))\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n              \
    \  (helper i (+ j 1) j)\n                (helper i (+ j 1) k))\n            (if\
    \ (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper i (+ j 1) j)\n  \
    \              (helper i (+ j 1) k))\n            (if (= (+ (* i i) (* j j) (*\
    \ k k)) 3)\n                (helper i (+ j 1) j)\n                (helper i (+\
    \ j 1) k))\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n              \
    \  (helper i (+ j 1) j)\n                (helper i (+ j 1) k))\n            (if\
    \ (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper i (+ j 1) j)\n  \
    \              (helper i (+ j 1) k))\n            (if (= (+ (* i i) (* j j) (*\
    \ k k)) 3)\n                (helper i (", "  (let loop ((i 1)\n             (a\
    \ #(list 1 3 7))\n             (count 0))\n    (if (< i n)\n        (loop (+ i\
    \ 1)\n              (cons (* i i i)\n                    (cons (+ i j) (+ i j)\
    \ (+ i k)))\n              (+ count 1))\n        count)))\n", "  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (helper (+ i 1) j k)] \n      [(< j k) (helper\
    \ (+ j 1) i k)]\n      [(< k i) (helper (+ k 1) j i)]\n      [else (+ i j k)]))\n\
    \  (helper (+ 1 n) n n))\n", "  (let ((a (ref (make-array n :initial-element 0))))\n\
    \    (define (helper i j k)\n      (if (< i j)\n          (if (< k i)\n      \
    \        (if (< k j)\n                  (set! a\n                        (+ (*\
    \ a a) (* i i) (* j j)))\n                  (set! a\n                        (+\
    \ (* a a) (* i i) (* j k)))\n              (set! a\n                        (+\
    \ (* a a) (* i k) (* j j)))\n          (set! a\n                (+ (* a a) (*\
    \ i j) (* k k))))\n      (set! a\n            (+ (* a a) (* i j) (* k k))))\n\
    \    (helper 1 2 3)\n    (set! a\n          (+ (* a a) (* 1 1) (* 2 2) (* 3 3))))\n\
    \  (ref a))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (helper (+\
    \ i 1) j k)] \n      [(< j k) (helper (+ i 1) (+ j 1) k)]\n      [(< k n) (helper\
    \ (+ i 1) (+ j 1) (+ k 1))]\n      [else (+ i j k)]))\n  (helper 1 2 3))\n", " \
    \ (define (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if\
    \ (= (+ i j k) 3)\n                (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k\
    \ (+ j 1))\n                    (helper (+ i k) j (+ k 1))\n                 \
    \   (helper (+ i k) k (+ j 1)))\n                0))\n        0))\n  (helper 1\
    \ 1 1))\n", "  (define (helper i j k)\n    (if (< i j)\n        (if (< k n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            (helper (+ i 1) (+\
    \ j 1) k))\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) k)\n    \
    \        (helper (+ i 1) j k))))\n  (helper 1 1 1))\n", "  (define (helper i j\
    \ k)\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1)\
    \ (+ k 1))\n            (helper (+ i 1) (+ j 1) k)\n        )\n        (if (<\
    \ k n)\n            (helper (+ i 1) j k)\n            (helper (+ i 1) (+ j 1)\
    \ (+ k 1))\n        )\n    )\n    (if (< i j)\n        (if (= (+ i j) (+ k n))\n\
    \            (+ i j k)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n       \
    \ )\n        (if (= (+ i j) (+ k n))\n            (+ i j k)\n            (helper\
    \ (+ i 1) j k)\n        )\n    )\n  )\n  (helper 1 2 n))\n", "  (define (helper\
    \ i j k)\n    (cond ((= i j) (+ k 1))\n          ((= i k) (+ j 1))\n         \
    \ ((= j k) (+ i 1))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define\
    \ (helper i j k)\n    (cond ((= i j) (+ k 1))\n          ((= i k) (+ j 1))\n \
    \         ((= j k) (+ i 1))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n\
    \  (define (helper i j k)\n    (cond ((= i j) (+ k 1))\n          ((= i k) (+\
    \ j 1))\n          ((= j k) (+ i 1))\n          (else (helper (+ i 1) (+ j 1)\
    \ (+ k 1)))))\n  (define (helper i j k)\n    (cond ((= i j) (+ k 1))\n       \
    \   ((= i k) (+ j 1))\n          ((= j k) (+ i 1))\n          (else (helper (+\
    \ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n    (cond ((= i j) (+ k\
    \ 1))\n          ((= i k) (+ j 1))\n          ((= j k) (+ i 1))\n          (else\
    \ (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n    (cond ((=\
    \ i j) (+ k 1))\n          ((= i k) (+ j 1))\n          ((= j k) (+ i 1))\n  \
    \        (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n\
    \    (cond ((= i j) (+ k 1))\n          ((= i k) (+ j 1))\n          ((= j k)\
    \ (+ i 1))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define (helper\
    \ i j k)\n    (cond ((= i j) (+ k 1))\n          ((= i k) (+ j 1))\n         \
    \ ((= j k) (+ i 1))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define\
    \ (helper i j k)\n    (cond ((= i j) (+ k 1))\n          ((= i k) (+ j 1))\n \
    \         ((= j k) (+ i 1))\n", "  (define (helper i j k)\n    (if (< i j)\n \
    \       (if (< k n)\n            (helper (+ i 1) (+ j 1) k)\n            (helper\
    \ (+ i 1) j k))\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) k)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (helper 1 1 n))\n</code>\n\
    <|/ a tags=racket,scheme |>\n<| c |>\nThanks for the answer. I am not allowed\
    \ to use any built-in procedures. I tried to implement it myself but I am getting\
    \ a stack overflow error. Can you please help me with that?\n<|/ c |>\n<| c |>\n\
    I edited my answer to include a solution that does not use any built-in procedures.\
    \ I hope it helps.\n<|/ c |>\n<| c |>\nThanks a lot! It helped me a lot!\n<|/\
    \ c |>\n<| a dscore=1 |>\n<code>", "  (define (helper i j k)\n    (cond ((= i\
    \ j) (+ 1 (* i k)))\n          ((= i k) (+ 1 (* j k)))\n          ((= j k) (+\
    \ 1 (* i k)))\n          (else (+ 1 (* i j) (* j k) (* i k))))\n    (helper i\
    \ j k)))\n", "  (let loop ((i 1)\n             (a #(list i i i))\n           \
    \  (count 0))\n    (if (< i n)\n        (loop (+ i 1) (cons (+ a i) a) (+ count\
    \ 1))\n        count)))\n", "  (define (helper i j k)\n    (cond\n      [(< i\
    \ j) (helper (+ i 1) j k)] \n      [(< j k) (helper (+ j 1) i k)]\n      [(< k\
    \ i) (helper (+ k 1) i j)]\n      [else (+ i j k)]))\n  (helper 1 1 n))\n", " \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< i k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (+ i j k)]))\n  (cond\n   \
    \ [(= n 0) 0]\n    [else (+ 1 (apply (lambda (x y z) (helper (+ x 1) (+ y 1) (+\
    \ z 1))) 0 1 2 n))]))\n", "  (define (helper i j k)\n    (if (< i j)\n       \
    \ (if (< j k)\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n           \
    \     (helper (+ i 1) (+ j 1) k)\n                (helper (+ i 1) (+ j k) k))\n\
    \            (helper (+ i k) (+ j 1) k))\n        0))\n  (if (= n 0)\n      0\n\
    \      (helper (+ 1 1) 0 0)))\n", "  (define (helper i j k)\n    (cond\n     \
    \ [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\n              \
    \    (+ 1 (helper (+ i 1) j k))\n                  (+ 1 (helper (+ i 1) k (+ j\
    \ k))))]\n      [(= i j) (+ 1 (helper (+ i 1) j k))]))\n  (helper 1 n n))\n",
  "  (define (helper a i j k)\n    (cond\n      [(= i j) (+ a k)] \n      [(= i k)\
    \ (+ a j)]\n      [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n  (define (helper\
    \ a i j k)\n    (cond\n      [(= i j) (+ a k)] \n      [(= i k) (+ a j)]\n   \
    \   [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n  (define (helper a i j k)\n\
    \    (cond\n      [(= i j) (+ a k)] \n      [(= i k) (+ a j)]\n      [else (helper\
    \ (+ a i) i (+ j 1) (+ k 1))]))\n  (define (helper a i j k)\n    (cond\n     \
    \ [(= i j) (+ a k)] \n      [(= i k) (+ a j)]\n      [else (helper (+ a i) i (+\
    \ j 1) (+ k 1))]))\n  (define (helper a i j k)\n    (cond\n      [(= i j) (+ a\
    \ k)] \n      [(= i k) (+ a j)]\n      [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n\
    \  (define (helper a i j k)\n    (cond\n      [(= i j) (+ a k)] \n      [(= i\
    \ k) (+ a j)]\n      [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n  (define (helper\
    \ a i j k)\n    (cond\n      [(= i j) (+ a k)] \n      [(= i k) (+ a j)]\n   \
    \   [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n  (define (helper a i j k)\n\
    \    (cond\n      [(= i j) (+ a k)] \n      [(= i k) (+ a j)]\n      [else (helper\
    \ (+ a i) i (+ j 1) (+ k 1))]))\n  (define (helper a i j k)\n    (cond\n     \
    \ [(= i j) (+ a k)] \n      [(= i k) (+ a j)]\n      [else (helper (+ a i) i (+\
    \ j 1) (+ k 1))]))\n  (define (helper a i j k)\n    (cond\n      [(= i j) (+ a\
    \ k)] \n      [(= i k) (+ a j)]\n      [else (helper (+ a i) i (+ ", "  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (helper (+\
    \ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i k)\n        (if (< j n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n\
    \        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+\
    \ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n     \
    \       (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n \
    \       (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n          \
    \  0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+ j\
    \ 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n       \
    \     (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n   \
    \     (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n\
    \    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n            (helper\
    \ (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k\
    \ n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (<\
    \ j k)\n        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n  \
    \          0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i\
    \ 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n\
    \        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+\
    \ j 1) (+ ", "  (define (helper a i j k)\n    (cond\n      [(< i j) (+ 1 (helper\
    \ (+ a i) i (+ j 1) k))]\n      [(< j k) (+ 1 (helper (+ a i) i (+ j k) k))]\n\
    \      [(< i k) (+ 1 (helper (+ a i) i (+ j k) j))]\n      [(< k j) (+ 1 (helper\
    \ (+ a i) i (+ k j) j))]\n      [else (+ 1 (helper (+ a i) i (+ j k) k))]\n  \
    \  )\n  )\n  (helper '() 1 n n)\n)\n", "  (define (helper i j k)\n    (cond ((=\
    \ i j) (+ i j k))\n          ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n\
    \          (else (helper (+ i j) (+ j k) (+ k i))))\n  (helper 1 2 3))\n", " \
    \ (define (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if\
    \ (= (+ i j k) 3)\n                (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k\
    \ (+ j 1)))\n                (+ 1 (helper (+ i 1) j (+ k 1))))\n            0))\n\
    \    (if (< i k)\n        (if (< j n)\n            (if (= (+ i j k) 3)\n     \
    \           (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n          \
    \      (+ 1 (helper (+ i 1) j (+ k 1))))\n            0))\n    (if (< j k)\n \
    \       (if (< i n)\n            (if (= (+ i j k) 3)\n                (+ 1 (helper\
    \ (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n                (+ 1 (helper (+ i\
    \ 1) j (+ k 1))))\n            0))\n    (if (= i j)\n        (if (= k n)\n   \
    \         (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n            0))\n\
    \    (if (= i k)\n        (if (= j n)\n            (+ 1 (helper (+ i 1) j k) (helper\
    \ (+ i 1) k (+ j 1)))\n            0))\n    (if (= j k)\n        (if (= i n)\n\
    \            (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n         \
    \   0))\n    (if (= i j)\n        (if (= k n)\n            (+ 1 (helper (+ i 1)\
    \ j k) (helper (+ i 1) k (+ j 1)))\n            0))\n    (if (= j k)\n       \
    \ (if (= i n)\n            (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n\
    \            0))\n    (if (= i j)\n        (if (= k n)\n            (+ 1 (helper\
    \ (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n            0))\n    (if (= j k)\n\
    \        (if (= i n)\n            (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k\
    \ (+ j 1)))\n            0))\n    (if (= i j)\n        (if (= k n)\n         \
    \   (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j 1)))\n            0))\n \
    \   (if (= j k)\n        (if (= i n)\n            (+ 1 (helper (+ i ", "  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))\n        0))\n  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) 3)\n                (+ i j k)\n                0))", "  (define (helper\
    \ i j k)\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+\
    \ j 1) (+ k 1))\n            (helper (+ i 1) (+ j 1) k))\n        (if (< k n)\n\
    \            (helper (+ i 1) (+ j 1) k)\n            (helper (+ i 1) j k))))\n\
    \  (helper 1 2 3))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (if\
    \ (= (+ i j) k)\n                  (+ 1 (helper (+ i 1) j k))\n              \
    \    (+ 1 (helper (+ i 1) k (+ j k))))]\n      [(< j k) (if (= (+ i j) k)\n  \
    \                (+ 1 (helper (+ i k) j k))\n                  (+ 1 (helper (+\
    \ i k) k (+ j k))))]\n      [(< k i) (if (= (+ i j) k)\n                  (+ 1\
    \ (helper (+ i k) j k))\n                  (+ 1 (helper (+ i k) k (+ j k))))]\n\
    \      [else 0]))\n  (if (= n 0)\n      0\n      (+ 1 (helper (+ 1 n) n (+ n n))))\n\
    )\n", "  (let loop ((i 1) (a #(list 1 3 7)))\n    (if (< i n)\n        (loop (+\
    \ i 1) a)\n        (if (= (+ (car a) (car a)) 3)\n            (+ 1 (loop (+ i\
    \ 1) (cdr a)))\n            0))))\n", "  (define (helper i j k)\n    (cond\n \
    \     [(< i j) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+\
    \ j 1)))\n                  (helper (+ i 1) j (+ j 1)))]\n      [(< j k) (if (=\
    \ (+ i j) k) (+ 1 (helper (+ i 1) j (+ j 1))\n                  (helper (+ i 1)\
    \ k (+ j 1)))]\n      [(< k i) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j (+ j 1))\n\
    \                  (helper (+ i 1) k (+ j 1)))]\n      [else 0]))\n  (if (= n\
    \ 0)\n      0\n      (+ 1 (helper (+ n 1) 0 0) (helper (+ n 1) 0 0))))\n", " \
    \ (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+\
    \ i j k))\n          ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j\
    \ k) (+ k i))))\n  (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n   \
    \       ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n          (else (helper\
    \ (+ i j) (+ j k) (+ k i))))\n  (define (helper i j k)\n    (cond ((= i j) (+\
    \ i j k))\n          ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n    \
    \      (else (helper (+ i j) (+ j k) (+ k i))))\n  (define (helper i j k)\n  \
    \  (cond ((= i j) (+ i j k))\n          ((= i k) (+ i j k))\n          ((= j k)\
    \ (+ i j k))\n          (else (helper (+ i j) (+ j k) (+ k i))))\n  (define (helper\
    \ i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+ i j k))\n     \
    \     ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j k) (+ k i))))\n\
    \  (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+\
    \ i j k))\n          ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j\
    \ k) (+ k i))))\n  (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n   \
    \       ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n          (else (helper\
    \ (+ i j) (+ j k) (+ k i))))\n  (define (helper i j k)\n    (cond ((= i j) (+\
    \ i j k))\n          ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n    \
    \      (else (helper (+ i j) (+ j k) (+ k i))))\n  (define (helper i j k)\n  \
    \  (cond ((= i j) (", "  (define (helper a i j k)\n    (cond\n      [(< i j) (+\
    \ 0 (helper (+ a i) j k))]\n      [(< j k) (+ 0 (helper (+ a i) j k))]\n     \
    \ [(< k i) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a i) 3) (+ 0 (helper (+ a\
    \ i) j k))]\n      [(= (+ a j) 3) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a\
    \ k) 3) (+ 0 (helper (+ a i) j k))]\n      [(= i j) (+ 0 (helper (+ a i) j k))]\n\
    \      [(= j k) (+ 0 (helper (+ a i) j k))]\n      [(= k i) (+ 0 (helper (+ a\
    \ i) j k))]\n      [(= (+ a i) 3) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a\
    \ j) 3) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a k) 3) (+ 0 (helper (+ a i)\
    \ j k))]\n      [(= i j) (+ 0 (helper (+ a i) j k))]\n      [(= j k) (+ 0 (helper\
    \ (+ a i) j k))]\n      [(= k i) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a i)\
    \ 3) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a j) 3) (+ 0 (helper (+ a i) j\
    \ k))]\n      [(= (+ a k) 3) (+ 0 (helper (+ a i) j k))]\n      [(= i j) (+ 0\
    \ (helper (+ a i) j k))]\n      [(= j k) (+ 0 (helper (+ a i) j k))]\n      [(=\
    \ k i) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a i) 3) (+ 0 (helper (+ a i)\
    \ j k))]\n      [(= (+ a j) 3) (+ 0 (helper (+ a i) j k))]\n      [(= (+ a k)\
    \ 3) (+ 0 (helper (+ a i) j k))]\n      [(= i j) (+ 0 (helper (+ a i) j k))]\n\
    \      [(= j k) (+ 0 (helper (+ a i) j k))]\n      [(= k i) (+ 0 (helper (+ a\
    \ i) j ", "  (let ([a (make-array n initial-contents '())])\n    (define (helper\
    \ i j k)\n      (cond [(< i j) (helper (+ i 1) j k)]\n            [(< j k) (helper\
    \ (+ i 1) (+ j 1) k)]\n            [(< k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n\
    \            [else (set! a\n                       (cons (+ i j) (+ a i) (+ a\
    \ j) (+ a k)))]))\n    (helper 1 1 1)\n    (length a)))\n", "  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n \
    \   (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n \
    \     [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i\
    \ j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (+\
    \ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n \
    \     [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (+ i j k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i ", "  (let loop ((i 1) (a #(list\
    \ 1)))\n    (if (< i n)\n        (loop (+ i 1) (cons a (list i)))\n        (loop\
    \ (+ i 1) a))))\n", "  (define (helper i j k)\n    (if (< i j)\n        (if (<\
    \ j k)\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper\
    \ i (+ j 1) k)\n                (helper i (+ j 1) (+ k 1))))\n        (if (< k\
    \ j)\n            (if (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper\
    \ i (+ j 1) (+ k 1))\n                (helper i (+ j 1) k))))\n  (if (= n 0)\n\
    \      0\n      (helper 1 0 0)))\n", "  (define (helper i j k)\n    (cond\n  \
    \    [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n\
    \      [(= i j) (helper i (- j k) k)]\n", "  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k)\
    \ 0 (+ j k))]\n      [(< k i) (if (= (+ k i) k) 0 (+ k i))]\n      [else (if (=\
    \ (+ i j) (+ k k)) 0 (+ i j))]))\n  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j\
    \ k))]\n      [(< k i) (if (= (+ k i) k) 0 (+ k i))]\n      [else (if (= (+ i\
    \ j) (+ k k)) 0 (+ i j))]))\n  (define (helper i j k)\n    (cond\n      [(< i\
    \ j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n\
    \      [(< k i) (if (= (+ k i) k) 0 (+ k i))]\n      [else (if (= (+ i j) (+ k\
    \ k)) 0 (+ i j))]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (=\
    \ (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n     \
    \ [(< k i) (if (= (+ k i) k) 0 (+ k i))]\n      [else (if (= (+ i j) (+ k k))\
    \ 0 (+ i j))]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+\
    \ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(<\
    \ k i) (if (= (+ k i) k) 0 (+ k i))]\n      [else (if (= (+ i j) (+ k k)) 0 (+\
    \ i j))]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j)\
    \ k) 0 (+ i j))]\n      [(< j k) (if (= (+ ", "  (define (helper i j k)\n    (if\
    \ (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n\
    \            0))\n    (if (< i k)\n        (if (< j n)\n            (helper (+\
    \ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n\
    \        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n         \
    \   0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+\
    \ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n     \
    \       (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n \
    \       (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n          \
    \  0))\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j\
    \ 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i n)\n       \
    \     (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n   \
    \     (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n\
    \    (if (< j k)\n        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n            (helper\
    \ (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n        (if (< i\
    \ n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (<\
    \ i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n  \
    \          0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+ i\
    \ 1) (+ j 1) (+ k 1))\n            0))\n    (if (< i j)\n        (if (< k n)\n\
    \            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (< j k)\n\
    \        (if (< i n)\n            (helper (+ i 1) (+ j 1) (+ ", "  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n  \
    \    [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n", "  (define (helper i j k)\n    (cond\n      [(=\
    \ i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i k) j k)]\n\
    \    )\n  )\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [else (helper (+ i k) j k)]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [else (helper (+ i k) j k)]\n    )\n  )\n  (define (helper i j k)\n\
    \    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else\
    \ (helper (+ i k) j k)]\n    )\n  )\n  (define (helper i j k)\n    (cond\n   \
    \   [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i k)\
    \ j k)]\n    )\n  )\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i\
    \ j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i k) j k)]\n    )\n\
    \  )\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(=\
    \ i k) (+ i j k)]\n      [else (helper (+ i k) j k)]\n    )\n  )\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n  \
    \    [else (helper (+ i k) j k)]\n    )\n  )\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+\
    \ i k) j k)]\n    )\n  )\n  (define (helper i j k)\n    (cond\n      [(= i j)\
    \ (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i k) ", "  (define\
    \ (helper a i j k)\n    (cond\n      [(= i j) (+ 1 (* k 3))]\n      [(= i k) (+\
    \ 1 (* j 3))]\n      [(= j k) (+ 1 (* i 3))]\n      [else (+ 1 (* a 3))]))\n \
    \ (define (helper2 a i j k)\n    (cond\n      [(= i j) (+ 1 (* k 3))]\n      [(=\
    \ i k) (+ 1 (* j 3))]\n      [(= j k) (+ 1 (* i 3))]\n      [else (+ 1 (* a 3))]))\n\
    \  (define (helper3 a i j k)\n    (cond\n      [(= i j) (+ 1 (* k 3))]\n     \
    \ [(= i k) (+ 1 (* j 3))]\n      [(= j k) (+ 1 (* i 3))]\n      [else (+ 1 (*\
    \ a 3))]))\n  (define (helper4 a i j k)\n    (cond\n      [(= i j) (+ 1 (* k 3))]\n\
    \      [(= i k) (+ 1 (* j 3))]\n      [(= j k) (+ 1 (* i 3))]\n      [else (+\
    \ 1 (* a 3))]))\n  (define (helper5 a i j k)\n    (cond\n      [(= i j) (+ 1 (*\
    \ k 3))]\n      [(= i k) (+ 1 (* j 3))]\n      [(= j k) (+ 1 (* i 3))]\n     \
    \ [else (+ 1 (* a 3))]))\n  (define (helper6 a i j k)\n    (cond\n      [(= i\
    \ j) (+ 1 (* k 3))]\n      [(= i k) (+ 1 (* j 3))]\n      [(= j k) (+ 1 (* i 3))]\n\
    \      [else (+ 1 (* a 3))]))\n  (define (helper7 a i j k)\n    (cond\n      [(=\
    \ i j) (+ 1 (* k 3))]\n      [(= i k) (+ 1 (* j 3))]\n      [(= j k) (+ 1 (* i\
    \ 3))]\n      [else (+ 1 (* a 3))]))\n  (define (helper8 a i j k)\n    (cond\n\
    \      [(= i j) (+ 1 (* k 3))]\n      [(= i k) (+ 1 (* j 3))]\n      [(= j k)\
    \ (+ 1 (* i 3))]\n      [else (+ 1 (* a 3))]))\n  (define (helper9 a i j k)\n\
    \    (cond\n      [(= i ", "  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (helper (+ i 1) j k)] \n      [(< j k) (helper (+ i 1) (+ j 1) k)]\n      [(<\
    \ i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [else (+ i (+ j (+ k 1))) (helper\
    \ (+ i 1) (+ j 1) k)]\n    )\n  )\n  (helper 1 n n)\n)\n", "  (define (helper\
    \ i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+ i j k))\n     \
    \     ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j k) (+ k i))))\n\
    \  (helper 1 2 3))\n", "  (define (helper i j k)\n    (if (< i j)\n        (if\
    \ (< k n)\n            (helper (+ i 1) j k)\n            (helper (+ i 1) (+ j\
    \ 1) (+ k 1)))\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) k)\n\
    \            (helper (+ i 1) j k))))\n  (helper 1 1 1))\n", "  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j k)\
    \ (helper (+ i 1) k (+ j 1))) (helper (+ i 1) j (+ j 1)))]\n      [(= i j) (+\
    \ 1 (helper (+ i 1) j k) (helper (+ i 1) k (+ j 1)))]\n      [(< i k) (+ 1 (helper\
    \ (+ i 1) j k) (helper (+ i 1) k (+ j 1)))]\n      [(= i k) (+ 1 (helper (+ i\
    \ 1) j k) (helper (+ i 1) k (+ j 1)))]\n      [else 0]))\n  (helper 1 1 n))\n",
  "  (let ([a (make-array n #:initial-contents '())])\n    (define (helper i j k)\n\
    \      (if (< i j)\n          (if (< k j)\n              (helper (+ i 1) j k)\n\
    \              (helper (+ i 1) k (+ j 1)))\n          (if (< i k)\n          \
    \    (helper (+ i 1) j (+ k 1))\n              (helper (+ i 1) k (+ j 1)))))\n\
    \    (helper 1 1 n)))\n", "  (define (helper i j k)\n    (cond\n      [(= i j)\
    \ (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else\
    \ (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n      [(=\
    \ i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n    \
    \  [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper (+\
    \ i 1) j k)) 0)]\n      [(< j k) (if (= (+ j k) n) (+ 1 (helper (+ j 1) i k))\
    \ 0)]\n      [else (+ 1 (helper (+ i j) k (+ j k)))]))\n  (helper 1 1 1))\n",
  "  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n", "  (define (helper a i j k)\n    (cond\n      [(=\
    \ i j) (+ 1 (* i k))]\n      [(= i k) (+ 1 (* j k))]\n      [else (+ 1 (helper\
    \ (+ a i) j (+ a j) k))]))\n  (helper '() 1 n n))\n", "  (define (helper i j k)\n\
    \    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            (helper (+ i 1) (+ j 1) k)\n        )\n        (if (< k n)\n\
    \            (helper (+ i 1) j k)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n\
    \        )\n    )\n    (if (= i j)\n        (if (= k n)\n            (helper (+\
    \ i 1) (+ j 1) (+ k 1))\n            (helper (+ i 1) (+ j 1) k)\n        )\n \
    \       (if (= k n)\n            (helper (+ i 1) j k)\n            (helper (+\
    \ i 1) (+ j 1) (+ k 1))\n        )\n    )\n  )\n  (helper 1 2 n))\n", "  (let\
    \ loop ((i 1) (a #(list 1 3 7 13 21 ))\n             (count 0))\n    (if (< i\
    \ n)\n        (loop (+ i 1) (conj a (* i i i )) (+ count 1))\n        count)))\n",
  "  (define (helper a i j k)\n    (cond\n      [(< i j) (+ 0 (helper (cdr a) i (cdr\
    \ j) k))] \n      [(< j k) (+ 0 (helper (cdr a) i (cdr j) k))]\n      [(< k i)\
    \ (+ 0 (helper (cdr a) i (cdr j) k))]\n      [else (+ 0 (helper (cdr a) i (cdr\
    \ j) k))]\n    )\n  )\n  (define (helper a i j k)\n    (cond\n      [(< i j) (+\
    \ 0 (helper (cdr a) i (cdr j) k))] \n      [(< j k) (+ 0 (helper (cdr a) i (cdr\
    \ j) k))]\n      [(< k i) (+ 0 (helper (cdr a) i (cdr j) k))]\n      [else (+\
    \ 0 (helper (cdr a) i (cdr j) k))]\n    )\n  )\n  (cond\n    [(< n 0) 0]\n   \
    \ [else (helper (list n) 0 1 0)]\n  )\n)\n", "  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i k k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (+ i j k)]))\n  (cond\n    [(= n 0) 0]\n    [else (helper (- n 1)\
    \ (- n 1) (- n 1))]))\n", "  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (if (= (+ i j) k)\n                  (helper (+ i j) k 0)\n                \
    \  (helper (+ i j) k (+ j k)))]\n      [(= i j) (if (= (+ i j) k)\n          \
    \        (helper (+ i j) k (+ j k))\n                  (helper (+ i j) k 0))]\n\
    \      [(= i k) (if (= (+ i j) k)\n                  (helper (+ i j) k (+ j k))\n\
    \                  (helper (+ i j) k 0))]\n      [else (if (= (+ i j) k)\n   \
    \              (helper (+ i j) k (+ j k))\n                 (helper (+ i j) k\
    \ 0))]))\n  (helper 1 n 0))\n", "  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (helper (+ i 1) j k)] \n      [(< j k) (helper (+ i 1) (+ j 1) k)]\n  \
    \    [(< k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [else (+ i j k)]))\n  (helper\
    \ 1 2 3))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i\
    \ j) k) (+ i j) 0)]\n      [(< j k) (if (= (+ i j) k) (+ i j) 0)]\n      [(< k\
    \ i) (if (= (+ i j) k) (+ i j) 0)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) 0)]\n      [(< j\
    \ k) (if (= (+ i j) k) (+ i j) 0)]\n      [(< k i) (if (= (+ i j) k) (+ i j) 0)]\n\
    \      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (if (= (+ i j) k) (+ i j) 0)]\n      [(< j k) (if (= (+ i j) k) (+ i j) 0)]\n\
    \      [(< k i) (if (= (+ i j) k) (+ i j) 0)]\n      [else (+ i j k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) 0)]\n  \
    \    [(< j k) (if (= (+ i j) k) (+ i j) 0)]\n      [(< k i) (if (= (+ i j) k)\
    \ (+ i j) 0)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (if (= (+ i j) k) (+ i j) 0)]\n      [(< j k) (if (= (+ i j) k)\
    \ (+ i j) 0)]\n      [(< k i) (if (= (+ i j) k) (+ i j) 0)]\n      [else (+ i\
    \ j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j)\
    \ k) (+ i j) 0)]\n      [(< j k) (if (= (+ i j) k) (+ i j) 0)]\n      [(< k i)\
    \ (if (= (+ i j) k) (+ i j) 0)]\n      [else (+ i ", "  (define (helper i j k)\n\
    \    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            (helper (+ i 1) (+ j 1) k))\n        (if (< k n)\n      \
    \      (helper (+ i 1) (+ j 1) k)\n            (helper (+ i 1) j k))))\n  (helper\
    \ 1 2 3))\n", "  (define (helper a i j k)\n    (cond\n      [(= i j) (+ 1 (* i\
    \ k))]\n      [(= i k) (+ 1 (* j k))]\n      [(= j k) (+ 1 (* i k))]\n      [else\
    \ (+ 1 (* a i j k))]\n    )\n  )\n  (define (helper a i j k)\n    (cond\n    \
    \  [(= i j) (+ 1 (* i k))]\n      [(= i k) (+ 1 (* j k))]\n      [(= j k) (+ 1\
    \ (* i k))]\n      [else (+ 1 (* a i j k))]\n    )\n  )\n  (define (helper a i\
    \ j k)\n    (cond\n      [(= i j) (+ 1 (* i k))]\n      [(= i k) (+ 1 (* j k))]\n\
    \      [(= j k) (+ 1 (* i k))]\n      [else (+ 1 (* a i j k))]\n    )\n  )\n \
    \ (define (helper a i j k)\n    (cond\n      [(= i j) (+ 1 (* i k))]\n      [(=\
    \ i k) (+ 1 (* j k))]\n      [(= j k) (+ 1 (* i k))]\n      [else (+ 1 (* a i\
    \ j k))]\n    )\n  )\n  (define (helper a i j k)\n    (cond\n      [(= i j) (+\
    \ 1 (* i k))]\n      [(= i k) (+ 1 (* j k))]\n      [(= j k) (+ 1 (* i k))]\n\
    \      [else (+ 1 (* a i j k))]\n    )\n  )\n  (define (helper a i j k)\n    (cond\n\
    \      [(= i j) (+ 1 (* i k))]\n      [(= i k) (+ 1 (* j k))]\n      [(= j k)\
    \ (+ 1 (* i k))]\n      [else (+ 1 (* a i j k))]\n    )\n  )\n  (define (helper\
    \ a i j k)\n    (cond\n      [(= i j) (+ 1 (* i k))]\n      [(= i k) (+ 1 (* j\
    \ k))]\n      [(= j k) (+ 1 (* i k))]\n      [else (+ 1 (* a i j k))]\n    )\n\
    \  )\n  (define (helper a i j k)\n    (cond\n      [(= i j) (+ 1 (* i k))]\n \
    \     [(= i k) (+ 1 (* j k))]\n      [(= j k", "  (define (helper i j k)\n   \
    \ (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k)\
    \ (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper2 i\
    \ j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n    \
    \  [(= j k) (+ i j k)]\n      [else (helper2 (+ i j) (+ j k) k)]))\n  (define\
    \ (helper3 i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [else (helper3 (+ i j) (+ j k) k)]))\n\
    \  (define (helper4 i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i\
    \ k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper4 (+ i j) (+ j\
    \ k) k)]))\n  (define (helper5 i j k)\n    (cond\n      [(= i j) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper5 (+\
    \ i j) (+ j k) k)]))\n  (define (helper6 i j k)\n    (cond\n      [(= i j) (+\
    \ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper6\
    \ (+ i j) (+ j k) k)]))\n  (define (helper7 i j k)\n    (cond\n      [(= i j)\
    \ (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else\
    \ (helper7 (+ i j) (+ j k) k)]))\n  (define (helper8 i j k)\n    (cond\n     \
    \ [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper8 (+ i j) (+ j k", "  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (helper (+ i 1) j k)]\n      [(< j k) (helper (+ i 1) k (+ j 1))]\n\
    \      [(< k n) (helper (+ i 1) (+ j 1) k)]\n      [(= i j) (helper (+ i 1) (+\
    \ j 1) (+ k 1))]\n      [(= j k) (helper (+ i 1) k (+ k 1))]\n      [(= k n) (helper\
    \ (+ i 1) j (+ k 1))]\n      [else (helper (+ i 1) j (+ k 1))]))\n  (helper 1\
    \ 2 3))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j)\
    \ k) (+ 1 (helper (+ i 1) j k) \n                                          (helper\
    \ (+ i 1) (+ j 1) k) \n                                          (helper (+ i\
    \ 1) (+ j 1) (+ k 1))))\n       (if (= i k) (+ 1 (helper (+ i 1) j k) \n     \
    \                 (helper (+ i 1) (+ j 1) k) \n                      (helper (+\
    \ i 1) (+ j 1) (+ k 1))))]\n      [(< j k) (if (= (+ i j) k) (+ 1 (helper (+ i\
    \ 1) j k) \n                                          (helper (+ i 1) (+ j 1)\
    \ k) \n                                          (helper (+ i 1) (+ j 1) (+ k\
    \ 1))))\n       (if (= j k) (+ 1 (helper (+ i 1) j k) \n                     \
    \ (helper (+ i 1) (+ j 1) k) \n                      (helper (+ i 1) (+ j 1) (+\
    \ k 1))))]\n      [(< i k) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j k) \n    \
    \                                      (helper (+ i 1) (+ j 1) k) \n         \
    \                                 (helper (+ i 1) (+ j 1) (+ k 1))))\n       (if\
    \ (= i j) (+ 1 (helper (+ i 1) j k) \n                      (helper (+ i 1) (+\
    \ j 1) k) \n                      (helper (+ i 1) (+ j 1) (+ k 1))))]))\n  (helper\
    \ 1 2 n))\n", "  (define (helper i j k)\n    (cond ((= i j) (+ 1 (* i k)))\n \
    \         ((= j k) (+ 1 (* j k)))\n          ((= i k) (+ 1 (* i k)))\n       \
    \   (else (+ 1 (helper (+ i 1) (+ j 1) k))))\n  (if (= n 0)\n      0\n      (+\
    \ 1 (helper (- n 1) 0 0))))\n", "  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (helper (+ i 1) j k)] \n      [(< j k) (helper (+ i 1) (+ j 1) k)]\n  \
    \    [(< i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= i j) (helper (+ i 1)\
    \ (+ j 1) (+ k 1))]\n      [(= j k) (helper (+ i 1) j k)]\n      [(= i k) (helper\
    \ (+ i 1) (+ j 1) k)]\n      [(= i j) (helper (+ i 1) (+ j 1) (+ k 1))]\n    \
    \  [(= j k) (helper (+ i 1) (+ j 1) k)]\n      [(= i k) (helper (+ i 1) (+ j 1)\
    \ k)]\n      [(= i j) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= j k) (helper\
    \ (+ i 1) (+ j 1) k)]\n      [(= i k) (helper (+ i 1) (+ j 1) k)]\n      [(= i\
    \ j) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= j k) (helper (+ i 1) (+ j 1)\
    \ k)]\n      [(= i k) (helper (+ i 1) (+ j 1) k)]\n      [(= i j) (helper (+ i\
    \ 1) (+ j 1) (+ k 1))]\n      [(= j k) (helper (+ i 1) (+ j 1) k)]\n      [(=\
    \ i k) (helper (+ i 1) (+ j 1) k)]\n      [(= i j) (helper (+ i 1) (+ j 1) (+\
    \ k 1))]\n      [(= j k) (helper (+ i 1) (+ j 1) k)]\n      [(= i k) (helper (+\
    \ i 1) (+ j 1) k)]\n      [(= i j) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(=\
    \ j k) (helper (+ i 1) (+ j 1) k)]\n      [(= i k) (helper (+ i 1) (+ j 1) k)]\n\
    \      [(= i j) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= j k) (helper (+ i\
    \ 1) (+ j 1) k)]\n      [(= i k) (helper (+ i 1) (", "  (define (helper i j k)\n\
    \    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j\
    \ k) (+ i j k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- k j) k)]\n      [(= j k) (helper\
    \ i (- k j) k)]\n      [(= i k) (helper i (- j k) j)]\n      [(= j k) (helper\
    \ i (- j k) j)]\n      [(= i j) (helper i (- k j) j)]\n      [(= j k) (helper\
    \ i (- k j) j)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- k j) j)]\n      [(= j k) (helper\
    \ i (- k j) j)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- k j) j)]\n      [(= j k) (helper\
    \ i (- k j) j)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- k j) j)]\n      [(= j k) (helper\
    \ i (- k j) j)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- k j) j)]\n      [(= j k) (helper\
    \ i (- k j) j)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- k j) j)]\n      [(= j k) (helper\
    \ i (- k j) j)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- k j) j)]\n", "  (define (helper i\
    \ j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n    \
    \  [else (helper (+ i j) (+ j k) k)]\n    )\n  )\n  (helper 1 2 n)\n)\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (helper 1 2 n))\n", "  (define (helper a i j k)\n    (cond\n      [(= i j)\
    \ (+ a k)] \n      [(= i k) (+ a j)]\n      [else (helper (+ a i) i (+ j 1) (+\
    \ k 1))]))\n  (helper 0 1 2 n))\n", "  (define (helper i j k)\n    (cond\n   \
    \   [(= i j) 0]\n      [(= i k) 1]\n      [(= j k) 2]\n      [else (+ (* i i j)\
    \ (* j j k) (* k k k)) (helper i (+ j 1) k) (helper j (+ i 1) k) (helper k (+\
    \ i j) k)]))\n  (helper 1 2 n))\n", "  (define (helper i j k)\n    (cond\n   \
    \   [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i j)\
    \ (+ j k) k)]))\n  (helper 1 2 3))\n", "  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i k) (helper i (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n\
    \      [(= i j) (helper i (+ j k) k)]\n", "  (define (helper i j k)\n    (if (<\
    \ i j)\n        (if (< i k)\n            (if (< j k)\n                (if (= (+\
    \ (* i i) (* j j) (* k k)) 3)\n                    (helper i j (+ k 1))\n    \
    \                (helper i (+ j 1) k))\n                (helper i (+ j 1) k))\n\
    \            (if (< k j)\n                (if (= (+ (* i i) (* j j) (* k k)) 3)\n\
    \                    (helper i (+ k 1) j)\n                    (helper i (+ j\
    \ 1) k))\n                (helper i (+ j 1) j))\n            (if (= (+ (* i i)\
    \ (* j j) (* k k)) 3)\n                (helper i (+ k 1) j)\n                (helper\
    \ i (+ j 1) k))\n            (helper i (+ j 1) j)))\n        (if (< i k)\n   \
    \         (if (< j k)\n                (if (= (+ (* i i) (* j j) (* k k)) 3)\n\
    \                    (helper i (+ j 1) k)\n                    (helper i (+ k\
    \ 1) k))\n                (if (< k j)\n                    (if (= (+ (* i i) (*\
    \ j j) (* k k)) 3)\n                        (helper i (+ k 1) j)\n           \
    \             (helper i (+ j 1) k))\n                    (helper i (+ j 1) j))\n\
    \                (if (= (+ (* i i) (* j j) (* k k)) 3)\n                    (helper\
    \ i (+ j 1) k)\n                    (helper i (+ k 1) j))\n                (helper\
    \ i (+ k 1) k))\n            (if (< j k)\n                (if (= (+ (* i i) (*\
    \ j j) (* k k)) 3)\n                    (helper i (+ j 1) j)\n               \
    \     (helper i (+ k 1) k))\n                (if (< k j)\n                   \
    \ (if (= (+ (* i i) (* j j) (* k k)) 3)\n                        (helper i (+\
    \ k 1) j)\n                        (helper i (+ j 1) k))\n                   \
    \ (helper i (+ j 1) j))\n                (if (= (+ (* i i) (* j j) (* k k)) 3)\n\
    \                    (helper i (+ k 1) j)\n                    (helper i (+ j\
    \ 1) k))\n                (helper i (+ k 1) j))\n            (if (= (+ (* i i)\
    \ (* j j) (* k k)) 3)\n                (helper i (+ j 1) j)\n                (helper\
    \ i (+ k 1) k))\n            (helper i (+ j 1) k))\n        (if (< i k)\n    \
    \        (if (< j k)\n                (if (= (+ (* i i) (* j j) (* k k)) ", " \
    \ (let loop ((i 1) (a #(list 1 3 7 13 21)))\n    (if (< i n)\n        (loop (+\
    \ i 1) a)\n        (if (= (+ (car a) (car a)) 3)\n            (+ 1 (loop (+ i\
    \ 1) (cdr a)))\n            (loop (+ i 1) (cdr a)))))) ; #lang racket\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* i i j) (* j j k) (* k k k))]\n    )\n  )\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j\
    \ k) 0]\n      [else (+ (* ", "  (define (helper a i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k)\n                  (+ 1 (helper (+ i k) j k (+ i j)))\n\
    \                  (+ 1 (helper (+ i k) j k (+ i j) (+ i k)))]\n      [(= i j)\
    \ (+ 1 (helper (+ i k) j k (+ i j)))]\n      [(= i k) (+ 1 (helper (+ i k) j k\
    \ (+ i j) (+ i k)))]\n      [else 0]))\n  (if (= n 0)\n      0\n      (+ 1 (helper\
    \ (+ n 1) 0 0 (+ n 1)))))\n", "  (define (helper i j k)\n    (cond\n      [(=\
    \ i j) 0]\n      [(= i k) (+ 1 (helper (+ i 1) j k))] \n      [(= j k) (+ 1 (helper\
    \ (+ i 1) k (+ j 1)))]\n      [(= i k) (+ 1 (helper (+ i 1) j (+ k 1)))]\n   \
    \   [else (+ 1 (helper (+ i 1) j (+ k 1)))]))\n  (helper 1 2 n))\n", "  (define\
    \ (helper a i j k)\n    (cond\n      [(= i j) (+ 1 (* a a))]\n      [(= i k) (+\
    \ 1 (* a a))]\n      [else (helper (+ a a) (+ i 1) (+ j 1) (+ k 1))]))\n  (helper\
    \ 0 1 2 n))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+\
    \ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(=\
    \ i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(= j k) (if (= (+ j k) k) 0 (+ j\
    \ k))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j\
    \ k))]\n      [(= i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(= j k) (if (= (+\
    \ j k) k) 0 (+ j k))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n  \
    \  (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (=\
    \ (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k) 0 (+ i j))]\n     \
    \ [(= j k) (if (= (+ j k) k) 0 (+ j k))]\n      [else (+ i j k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n  \
    \    [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [(= j k) (if (= (+ j k) k) 0 (+ j k))]\n      [else (+ i\
    \ j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j)\
    \ k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j)\
    \ (if (= (+ i j) k) 0 (+ i j))]\n      [(= j k) (if (= (+ j k) k) 0 (+ j k))]\n\
    \      [", "  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n \
    \     [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [(= i k) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n      [(= j k) (helper i (+ j k) k)]\n      [(= i j) (helper i\
    \ (+ j k) k)]\n", "  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j\
    \ k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (helper 1 2 n))\n", "  (define (helper i j k)\n    (cond\n      [(= i j) (+\
    \ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper\
    \ (+ i j) (+ j k) k)]))\n  (helper 1 2 n))\n", "  (define (helper i j k)\n   \
    \ (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k)\
    \ (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (helper 1 2 n))\n",
  "  (define (helper i j k)\n    (if (< i j)\n        (if (< k i)\n            (if\
    \ (< k j)\n                (if (= (+ i j k) (* 3 i))\n                    (+ 1\
    \ (helper i k (+ j 1 k)))\n                    (+ 1 (helper i (+ j 1 k) k)))\n\
    \                (if (= (+ i j k) (* 3 j))\n                    (+ 1 (helper i\
    \ (+ j 1 k) k))\n                    (+ 1 (helper i k (+ j 1 k)))\n          \
    \      )\n            )\n            (if (< k j)\n                (if (= (+ i\
    \ j k) (* 3 k))\n                    (+ 1 (helper i (+ j 1 k) k))\n          \
    \          (+ 1 (helper i k (+ j 1 k)))\n                )\n                (if\
    \ (= (+ i j k) (* 3 i))\n                    (+ 1 (helper i (+ j 1 k) k))\n  \
    \                  (+ 1 (helper i k (+ j 1 k)))\n                )\n         \
    \   )\n        )\n        (if (< i k)\n            (if (< j k)\n             \
    \   (if (= (+ i j k) (* 3 i))\n                    (+ 1 (helper i (+ j 1 k) k))\n\
    \                    (+ 1 (helper i (+ j 1 k) k))\n                )\n       \
    \         (if (= (+ i j k) (* 3 j))\n                    (+ 1 (helper i (+ j 1\
    \ k) k))\n                    (+ 1 (helper i (+ j 1 k) k))\n                )\n\
    \            )\n            (if (< j k)\n                (if (= (+ i j k) (* 3\
    \ k))\n                    (+ 1 (helper i (+ j 1 k) k))\n                    (+\
    \ 1 (helper i (+ j 1 k) k))\n                )\n                (if (= (+ i j\
    \ k) (* 3 i))\n                    (+ 1 (helper i (+ j 1 k) k))\n            \
    \        (+ 1 (helper i (+ j 1 k) k))\n                )\n            )\n    \
    \    )\n    )\n    (helper 1 n 1)\n)\n", "  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n\
    \      [(= i j) (+ i j k)]\n      [(= i j) (+ i j k)]\n      [(= i j) (+ i j ",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper\
    \ (+ i 1) j k)) 0)]\n      [(< j k) (if (= (+ j k) k) (+ 1 (helper i (+ j 1) k))\
    \ 0)]\n      [(< k n) (if (= (+ k n) k) (+ 1 (helper i (+ k 1) k)) 0)]\n     \
    \ [else 0]))\n  (helper 1 1 n))\n", "  (define (helper i j k)\n    (cond ((= i\
    \ j) (+ i j k))\n          ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n\
    \          (else (helper (+ i j) (+ j k) (+ k i))))\n  (helper 1 2 3))\n", " \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (helper (+ i 1) j k)]\n  \
    \    [(< j k) (helper (+ i 1) (+ j 1) k)]\n      [(< k n) (helper (+ i 1) (+ j\
    \ 1) (+ k 1))]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j k) (helper\
    \ (+ i 1) j k)]\n      [(= k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= i\
    \ j) (helper (+ i 1) (+ j 1) k)]\n      [(= j k) (helper (+ i 1) j k)]\n     \
    \ [(= k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= i j) (helper (+ i 1) (+\
    \ j 1) k)]\n      [(= j k) (helper (+ i 1) j k)]\n      [(= k n) (helper (+ i\
    \ 1) (+ j 1) (+ k 1))]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(=\
    \ j k) (helper (+ i 1) j k)]\n      [(= k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n\
    \      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j k) (helper (+ i 1) j\
    \ k)]\n      [(= k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= i j) (helper\
    \ (+ i 1) (+ j 1) k)]\n      [(= j k) (helper (+ i 1) j k)]\n      [(= k n) (helper\
    \ (+ i 1) (+ j 1) (+ k 1))]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n    \
    \  [(= j k) (helper (+ i 1) j k)]\n      [(= k n) (helper (+ i 1) (+ j 1) (+ k\
    \ 1))]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j k) (helper (+\
    \ i 1) j k)]\n      [(= k n) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(= i j)\
    \ (helper (+ i 1) (+ j 1) ", "  (define (helper i j k)\n    (if (< i j)\n    \
    \    (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            (helper\
    \ (+ i 1) (+ j 1) k))\n        (if (< k n)\n            (helper (+ i 1) (+ j 1)\
    \ k)\n            (helper (+ i 1) j k))))\n  (helper 1 1 1))\n", "  (define (helper\
    \ a i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ 1 (helper (+ i k) j\
    \ k) 0))]\n      [(= i j) (+ 1 (helper (+ i j) j k) 0)]\n      [(= i k) (+ 1 (helper\
    \ (+ i k) j k) 0)]\n      [(< i k) (+ 1 (helper (+ i k) j k) 0)]))\n  (helper\
    \ (make-array n :initial-element 0) 1 n n))\n", "  (define (helper a i j k)\n\
    \    (cond\n      [(= i j) (+ 1 (* k 3))]\n      [(= i k) (+ 1 (* j 3))]\n   \
    \   [else (+ 1 (helper (conj a) i (+ j 1) k))]))\n  (helper '() 1 0 n))\n", " \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (helper (+ i 1) j k)] \n \
    \     [(< j k) (helper (+ j 1) i k)]\n      [(< i k) (helper (+ i 1) k (+ j 1))]\n\
    \      [(= i j) (helper (+ i 1) k (+ j 1))]\n      [(= j k) (helper (+ j 1) i\
    \ (+ k 1))]\n      [(= i k) (helper (+ i 1) j (+ k 1))]\n      [(= i j) (helper\
    \ (+ i 1) k (+ j 1))]\n      [(= j k) (helper (+ j 1) i (+ k 1))]\n      [(= i\
    \ k) (helper (+ i 1) j (+ k 1))]\n      [(= i j) (helper (+ i 1) k (+ j 1))]\n\
    \      [(= j k) (helper (+ j 1) i (+ k 1))]\n      [(= i k) (helper (+ i 1) j\
    \ (+ k 1))]\n      [(= i j) (helper (+ i 1) k (+ j 1))]\n      [(= j k) (helper\
    \ (+ j 1) i (+ k 1))]\n      [(= i k) (helper (+ i 1) j (+ k 1))]\n      [(= i\
    \ j) (helper (+ i 1) k (+ j 1))]\n      [(= j k) (helper (+ j 1) i (+ k 1))]\n\
    \      [(= i k) (helper (+ i 1) j (+ k 1))]\n      [(= i j) (helper (+ i 1) k\
    \ (+ j 1))]\n      [(= j k) (helper (+ j 1) i (+ k 1))]\n      [(= i k) (helper\
    \ (+ i 1) j (+ k 1))]\n      [(= i j) (helper (+ i 1) k (+ j 1))]\n      [(= j\
    \ k) (helper (+ j 1) i (+ k 1))]\n      [(= i k) (helper (+ i 1) j (+ k 1))]\n\
    \      [(= i j) (helper (+ i 1) k (+ j 1))]\n      [(= j k) (helper (+ j 1) i\
    \ (+ k 1))]\n      [(= i k) (helper (+ i 1) j (+ k 1))]\n      [(= i j) (helper\
    \ (+ i 1) k (+ j 1))]\n      [(= j k) (helper (+ j 1) ", "  (define (helper i\
    \ j k)\n    (cond\n      [(< i j) (helper (+ i 1) j k)] \n      [(< j k) (helper\
    \ (+ j 1) i k)]\n      [(< i k) (helper (+ i 1) j (+ k 1))]\n      [else (+ i\
    \ (+ j (+ k 1)))]))\n  (helper 1 n 1))\n", "  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j k)\n", "  (define\
    \ (helper i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+ i j k))\n\
    \          ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j k) (+ k i))))\n\
    \  (helper 1 2 n))\n", "  (define (helper i j k)\n    (if (< i j)\n        (if\
    \ (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            0))\n   \
    \ (if (< i k)\n        (if (< j n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n\
    \            0))\n    (if (< j k)\n        (if (< i n)\n            (helper (+\
    \ i 1) (+ j 1) (+ k 1))\n            0))\n    (if (= (+ i j) (+ k n))\n      \
    \  (+ i j k)\n        0)))\n  (helper 1 1 1))\n", "  (define (helper i j k)\n\
    \    (cond\n      [(= i j) 0]\n      [(= i k) (+ 1 (helper (+ i 1) j k))]\n  \
    \    [(= j k) (+ 1 (helper (+ i 1) j (+ k 1)))]\n      [(= i k) (+ 1 (helper (+\
    \ i 1) j (+ k 1)))]\n      [else (+ 1 (helper (+ i 1) j (+ k 1)))]))\n  (helper\
    \ 1 2 n))\n", "  (define (helper i j k)\n    (if (< i j)\n        (if (< i k)\n\
    \            (if (< j k)\n                (if (= (+ i j k) 3)\n              \
    \      (+ 1 (helper i j (+ k 1)))\n                    (+ 1 (helper i (+ j 1)\
    \ k)))\n                (if (= (+ i j k) 3)\n                    (+ 1 (helper\
    \ i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1) k)))\n           \
    \     (if (= (+ i j k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n  \
    \                  (+ 1 (helper i (+ j 1) k)))\n                (if (= (+ i j\
    \ k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n                    (+\
    \ 1 (helper i (+ j 1) k)))\n                (if (= (+ i j k) 3)\n            \
    \        (+ 1 (helper i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1)\
    \ k)))\n                (if (= (+ i j k) 3)\n                    (+ 1 (helper\
    \ i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1) k)))\n           \
    \     (if (= (+ i j k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n  \
    \                  (+ 1 (helper i (+ j 1) k)))\n                (if (= (+ i j\
    \ k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n                    (+\
    \ 1 (helper i (+ j 1) k)))\n                (if (= (+ i j k) 3)\n            \
    \        (+ 1 (helper i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1)\
    \ k)))\n                (if (= (+ i j k) 3)\n                    (+ 1 (helper\
    \ i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1) k)))\n           \
    \     (if (= (+ i j k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n  \
    \                  (+ 1 (helper i (+ j 1) k)))\n                (if (= (+ i j\
    \ k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n                    (+\
    \ 1 (helper i (+ j 1) k)))\n                (if (= (+ i j k) 3)\n            \
    \        (+ 1 (helper i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1)\
    \ k)))\n                (if (= (+ i j k) 3)\n                    (+ 1 (helper\
    \ i (+ j 1) k))\n                    (+ 1 (helper i (+ j 1) k)))\n           \
    \     (if (= (+ i j k) 3)\n                    (+ 1 (helper i (+ j 1) k))\n  \
    \                  (+ 1 (helper i (+ j 1) k)))\n                (if (= (+ ", " \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j)\
    \ 0)]\n      [(< j k) (if (= (+ j k) k) (+ j k) 0)]\n      [else (if (= (+ i j)\
    \ (+ j k)) (+ i j) (+ j k))]))\n  (cond\n    [(< n 1) 0]\n    [else (helper (+\
    \ 1 n) (+ 1 n) (+ 1 n))]))\n", "  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+\
    \ i j) (+ i j))]\n      [(< i k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+\
    \ i j) k) (+ i j) (+ i j))]\n      [(< i k) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< i k) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< i k) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< i k) (if (= (+\
    \ i j) k) (+ i j) (+ i j))]\n      [else (if (= (+ i j", "  (define (helper i\
    \ j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n    \
    \  [(= j k) (+ i j k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= i k) (helper\
    \ i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n      [(= i j) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= i k) (helper\
    \ i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n      [(= i j) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= i k) (helper\
    \ i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n      [(= i j) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= i k) (helper\
    \ i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n      [(= i j) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= i k) (helper\
    \ i (- j k) k)]\n      [(= j k) (helper i (- j k) k)]\n      [(= i j) (helper\
    \ i (- j k) k)]\n      [(= i k) (helper i (- j k) k)]\n", "  (define (helper i\
    \ j k)\n    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j\
    \ 1) (+ k 1))\n            (helper (+ i 1) (+ k 1) (+ j 1)))\n        (if (< k\
    \ n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n            (helper (+ i 1)\
    \ (+ j 1) (+ k 1)))))\n  (helper 1 2 n))\n", "  (define (helper i j k)\n    (if\
    \ (< i j)\n        (if (< j k)\n            (if (= (+ i j k) (* 3 i))\n      \
    \          (helper i (+ j 1) k)\n                (helper i (+ j 1) (+ k 1))))\n\
    \        (if (< i k)\n            (if (< j k)\n                (if (= (+ i j k)\
    \ (* 3 j))\n                    (helper i (+ j 1) k)\n                    (helper\
    \ i (+ j 1) (+ k 1))))\n        (if (= (+ i j k) (* 3 k))\n            (helper\
    \ i (+ j 1) k)\n            (helper i (+ j 1) (+ k 1))))))\n  (helper 1 n 1))\n",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\n       \
    \           (+ 1 (helper (+ i 1) j k))\n                  (+ 1 (helper (+ i 1)\
    \ k (+ j k))))]\n      [(< j k) (if (= (+ i j) k)\n                  (+ 1 (helper\
    \ (+ i k) j k))\n                  (+ 1 (helper (+ i k) k (+ j k))))]\n      [(<\
    \ k i) (if (= (+ i j) k)\n                  (+ 1 (helper (+ i k) j k))\n     \
    \             (+ 1 (helper (+ i k) k (+ j k))))]\n      [else 0]))\n  (if (= n\
    \ 0)\n      0\n      (+ 1 (helper (- n 1) 0 0))))\n", "  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(= i j)\
    \ (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n      [else (+ i k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(= i j) (+ i j)]\n      [(= i k) (+ i k)]\n", "  (define (helper i j k)\n\
    \    (if (< i j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+\
    \ k 1))\n            (helper (+ i 1) (+ j 1) k))\n        (if (< k n)\n      \
    \      (helper (+ i 1) (+ j 1) k)\n            (helper (+ i 1) j k))))\n  (helper\
    \ 1 2 n))\n", "  (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n     \
    \     ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n          (else (helper\
    \ (+ i j) (+ j k) (+ k i))))\n  (helper 1 2 n))\n", "  (define (helper i j k)\n\
    \    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j k) 0]\n      [(=\
    \ (mod (aref a i) 3) (mod (aref a j) 3)) (+ 1 (helper (+ i 1) (+ j 1) k))]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n \
    \     [(= j k) 0]\n      [(= (mod (aref a i) 3) (mod (aref a j) 3)) (+ 1 (helper\
    \ (+ i 1) (+ j 1) k))]))\n  (define (helper i j k)\n    (cond\n      [(= i j)\
    \ 0]\n      [(= i k) 0]\n      [(= j k) 0]\n      [(= (mod (aref a i) 3) (mod\
    \ (aref a j) 3)) (+ 1 (helper (+ i 1) (+ j 1) k))]))\n  (define (helper i j k)\n\
    \    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j k) 0]\n      [(=\
    \ (mod (aref a i) 3) (mod (aref a j) 3)) (+ 1 (helper (+ i 1) (+ j 1) k))]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n \
    \     [(= j k) 0]\n      [(= (mod (aref a i) 3) (mod (aref a j) 3)) (+ 1 (helper\
    \ (+ i 1) (+ j 1) k))]))\n  (define (helper i j k)\n    (cond\n      [(= i j)\
    \ 0]\n      [(= i k) 0]\n      [(= j k) 0]\n      [(= (mod (aref a i) 3) (mod\
    \ (aref a j) 3)) (+ 1 (helper (+ i 1) (+ j 1) k))]))\n  (define (helper i j k)\n\
    \    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n      [(= j k) 0]\n      [(=\
    \ (mod (aref a i) 3) (mod (aref a j) 3)) (+ 1 (helper (+ i 1) (+ j 1) k))]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) 0]\n      [(= i k) 0]\n \
    \     [(", "  (define (helper i j k)\n    (cond\n      [(< i j) (helper (+ i 1)\
    \ j k)]\n      [(< j k) (helper (+ i 1) (+ j 1) k)]\n      [(< k n) (helper (+\
    \ i 1) (+ j 1) (+ k 1))]\n      [else (+ 1 (* i (* i j) (* i k)))]))\n  (helper\
    \ 1 2 3))\n", "  (define (helper i j k)\n    (cond ((= i j) (+ k 0))\n       \
    \   ((= i k) (+ j 0))\n          ((= j k) (+ i 0))\n          (else (helper (+\
    \ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n    (cond ((= i j) (+ k\
    \ 0))\n          ((= i k) (+ j 0))\n          ((= j k) (+ i 0))\n          (else\
    \ (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n    (cond ((=\
    \ i j) (+ k 0))\n          ((= i k) (+ j 0))\n          ((= j k) (+ i 0))\n  \
    \        (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n\
    \    (cond ((= i j) (+ k 0))\n          ((= i k) (+ j 0))\n          ((= j k)\
    \ (+ i 0))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define (helper\
    \ i j k)\n    (cond ((= i j) (+ k 0))\n          ((= i k) (+ j 0))\n         \
    \ ((= j k) (+ i 0))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n  (define\
    \ (helper i j k)\n    (cond ((= i j) (+ k 0))\n          ((= i k) (+ j 0))\n \
    \         ((= j k) (+ i 0))\n          (else (helper (+ i 1) (+ j 1) (+ k 1)))))\n\
    \  (define (helper i j k)\n    (cond ((= i j) (+ k 0))\n          ((= i k) (+\
    \ j 0))\n          ((= j k) (+ i 0))\n          (else (helper (+ i 1) (+ j 1)\
    \ (+ k 1)))))\n  (define (helper i j k)\n    (cond ((= i j) (+ k 0))\n       \
    \   ((= i k) (+ j 0))\n          ((= j k) (+ i 0))\n          (else (helper (+\
    \ i 1) (+ j 1) (+ k 1)))))\n  (define (helper i j k)\n    (cond ((= i j) (+ k\
    \ 0))\n          ((= i k) (+ j 0))\n          ((= j k) (+ i 0))\n", "  (define\
    \ (helper i j k)\n    (if (< i j)\n        (if (< k n)\n            (if (= (+\
    \ i j k) (* 3 i))\n                (helper i (+ j 1) k)\n                (helper\
    \ i (+ j 1) (+ k 1)))\n            (helper i (+ j 1) k))\n        (if (< k n)\n\
    \            (if (= (+ i j k) (* 3 i))\n                (helper i (+ j 1) (+ k\
    \ 1))\n                (helper i (+ j 1) k))\n            (helper i (+ j 1) k)))\n\
    \  (helper 1 0 1))\n</code>\n<|/ a tags=racket,scheme |>\n<| a dscore=0 |>\n<code>",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+\
    \ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if\
    \ (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ i\
    \ j))]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\
    \ (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if (= (+ i j) k)\
    \ (+ i j) (+ i j))]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if\
    \ (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+\
    \ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if\
    \ (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper i j k)\n    (cond\n   \
    \   [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n \
    \     [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [else (if (= (+ i j", "  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (+ i (+ j k))]\n      [(< j k) (+ j (+ i k))]\n      [(< k i)\
    \ (+ k (+ i j))]\n      [(= i j) (+ i (+ j k))]\n      [(= j k) (+ j (+ i k))]\n\
    \      [(= k i) (+ k (+ i j))]\n      [else 0]))\n  (define (helper i j k)\n \
    \   (cond\n      [(< i j) (+ i (+ j k))]\n      [(< j k) (+ j (+ i k))]\n    \
    \  [(< k i) (+ k (+ i j))]\n      [(= i j) (+ i (+ j k))]\n      [(= j k) (+ j\
    \ (+ i k))]\n      [(= k i) (+ k (+ i j))]\n      [else 0]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i (+ j k))]\n      [(< j k) (+ j (+ i k))]\n\
    \      [(< k i) (+ k (+ i j))]\n      [(= i j) (+ i (+ j k))]\n      [(= j k)\
    \ (+ j (+ i k))]\n      [(= k i) (+ k (+ i j))]\n      [else 0]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i (+ j k))]\n      [(< j k) (+ j (+ i k))]\n\
    \      [(< k i) (+ k (+ i j))]\n      [(= i j) (+ i (+ j k))]\n      [(= j k)\
    \ (+ j (+ i k))]\n      [(= k i) (+ k (+ i j))]\n      [else 0]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i (+ j k))]\n      [(< j k) (+ j (+ i k))]\n\
    \      [(< k i) (+ k (+ i j))]\n      [(= i j) (+ i (+ j k))]\n      [(= j k)\
    \ (+ j (+ i k))]\n      [(= k i) (+ k (+ i j))]\n      [else 0]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i (+ j k", "  (define (helper i j k)\n\
    \    (if (< i j)\n        (if (< k n)\n            (if (= (+ i j k) (* 3 i))\n\
    \                (helper i (+ j 1) k)\n                (helper i (+ j 1) (+ k\
    \ 1)))\n            (helper i (+ j 1) k))\n        0))\n  (helper 1 0 1))\n",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n\
    \      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ j k))]\n    )\n  )\n \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n\
    \      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ j k))]\n    )\n  )\n \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n\
    \      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ j k))]\n    )\n  )\n \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n\
    \      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ j k))]\n    )\n  )\n \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n\
    \      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ j k))]\n    )\n  )\n \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (", "  (define (helper a i\
    \ j k)\n    (cond\n      [(= i j) (+ a k)]\n      [(= i k) (+ a j)]\n      [(=\
    \ j k) (+ a i)]\n      [else (helper (+ a i) i (+ j 1) (+ k 1))]))\n  (helper\
    \ 0 1 2 n))\n", "  (define (helper a i j k)\n    (cond\n      [(< i j) (+ 1 (helper\
    \ (cdr a) i (+ j 1) k))]\n      [(< j k) (+ 1 (helper (cdr a) (+ i 1) j (+ k 1)))]\n\
    \      [(< k i) (+ 1 (helper (cdr a) i (+ j 1) (+ k 1)))]\n      [(= (+ i j k)\
    \ n) (+ 1 (helper (cdr a) i (+ j 1) k))]\n      [(= (+ j k i) n) (+ 1 (helper\
    \ (cdr a) (+ i 1) j (+ k 1)))]\n      [(= (+ k i j) n) (+ 1 (helper (cdr a) i\
    \ (+ j 1) (+ k 1)))]\n      [(= (+ i j k) (+ n n)) (+ 1 (helper (cdr a) i (+ j\
    \ 1) k))]\n      [(= (+ j k i) n) (+ 1 (helper (cdr a) (+ i 1) j (+ k 1)))]\n\
    \      [(= (+ k i j) (+ n n)) (+ 1 (helper (cdr a) i (+ j 1) (+ k 1)))]\n    \
    \  [(= (+ i j k) (+ n n)) (+ 1 (helper (cdr a) i (+ j 1) k))]\n      [(= (+ j\
    \ k i) n) (+ 1 (helper (cdr a) (+ i 1) j (+ k 1)))]\n      [(= (+ k i j) (+ n\
    \ n)) (+ 1 (helper (cdr a) i (+ j 1) (+ k 1)))]\n      [(= (+ i j k) (+ n n))\
    \ (+ 1 (helper (cdr a) i (+ j 1) k))]\n      [(= (+ j k i) n) (+ 1 (helper (cdr\
    \ a) (+ i 1) j (+ k 1)))]\n      [(= (+ k i j) (+ n n)) (+ 1 (helper (cdr a) i\
    \ (+ j 1) (+ k 1)))]\n      [(= (+ i j k) (+ n n)) (+ 1 (helper (cdr a) i (+ j\
    \ 1) k))]\n      [(= (+ j k i) n) (+ 1 (helper (cdr a) (+ i 1) j (+ k 1)))]\n\
    \      [(= (+ k i j) (+ n n)) (+ 1 (helper (cdr a) (+ i ", "  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) 0)]\n      [(< j\
    \ k) (if (= (+ i j) k) (+ i j) 0)]\n      [(< k n) (if (= (+ i j) k) (+ i j) 0)]\n\
    \      [else (+ 1 (helper (+ i 1) (+ j 1) k))]))\n  (helper 1 1 1))\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (helper (+ i 1) j k)]\n      [(< j\
    \ k) (helper (+ i 1) (+ j 1) k)]\n      [(< i k) (helper (+ i 1) (+ j 1) (+ k\
    \ 1))]\n      [(< i j) (helper (+ i 1) (+ j 1) k)]\n      [(< j k) (helper (+\
    \ i 1) j k)]\n      [(< i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(< i j)\
    \ (helper (+ i 1) (+ j 1) k)]\n      [(< j k) (helper (+ i 1) j k)]\n      [(<\
    \ i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(< i j) (helper (+ i 1) (+ j\
    \ 1) k)]\n      [(< j k) (helper (+ i 1) j k)]\n      [(< i k) (helper (+ i 1)\
    \ (+ j 1) (+ k 1))]\n      [(< i j) (helper (+ i 1) (+ j 1) k)]\n      [(< j k)\
    \ (helper (+ i 1) j k)]\n      [(< i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n  \
    \    [(< i j) (helper (+ i 1) (+ j 1) k)]\n      [(< j k) (helper (+ i 1) j k)]\n\
    \      [(< i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(< i j) (helper (+ i\
    \ 1) (+ j 1) k)]\n      [(< j k) (helper (+ i 1) j k)]\n      [(< i k) (helper\
    \ (+ i 1) (+ j 1) (+ k 1))]\n      [(< i j) (helper (+ i 1) (+ j 1) k)]\n    \
    \  [(< j k) (helper (+ i 1) j k)]\n      [(< i k) (helper (+ i 1) (+ j 1) (+ k\
    \ 1))]\n      [(< i j) (helper (+ i 1) (+ j 1) k)]\n      [(< j k) (helper (+\
    \ i 1) j k)]\n      [(< i k) (helper (+ i 1) (+ j 1) (+ k 1))]\n      [(< i j)\
    \ (helper (+ i 1) (+ j 1) ", "  (define (helper i j k)\n    (cond ((= i j) (+\
    \ i j k))\n          ((= i k) (+ i j k))\n          ((= j k) (+ i j k))\n    \
    \      (else (helper (+ i j) (+ j k) (+ k i))))\n  (helper 1 2 3))\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper\
    \ (+ i j) (+ j k) k)]\n    )\n  )\n  (define (helper i j k)\n    (cond\n     \
    \ [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]\n    )\n \
    \ )\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(=\
    \ i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [(= i k) (+ i j k)]\n    \
    \  [else (helper (+ i j) (+ j k) k)]\n    )\n  )\n  (define (helper i j k)\n \
    \   (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k)\
    \ (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]\n\
    \    )\n  )\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [(= i k) (+ i j k)]\n\
    \      [else (helper (+ i j) (+ j k) k)]\n    )\n  )\n  (define (helper i j k)\n\
    \    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j\
    \ k) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [else (helper (+ i j) (+ j k)\
    \ k)]\n    )\n  )\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j\
    \ k)]\n      [(= i k) (+ i j k)]\n      [(= ", "  (define (helper i j k)\n   \
    \ (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+\
    \ j k) k) 0 (+ j k))]\n      [(< k n) (if (= (+ k n) k) 0 (+ k n))]\n      [else\
    \ (if (= (+ i j) (+ j k) (+ k n)) (+ i j) (+ j k) (+ k n))]\n    )\n  )\n  (define\
    \ (helper-helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n\
    \      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(< k n) (if (= (+ k n) k)\
    \ 0 (+ k n))]\n      [else (if (= (+ i j) (+ j k) (+ k n)) (+ i j) (+ j k) (+\
    \ k n))]\n    )\n  )\n  (define (helper-helper-helper i j k)\n    (cond\n    \
    \  [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0\
    \ (+ j k))]\n      [(< k n) (if (= (+ k n) k) 0 (+ k n))]\n      [else (if (=\
    \ (+ i j) (+ j k) (+ k n)) (+ i j) (+ j k) (+ k n))]\n    )\n  )\n  (define (helper-helper-helper-helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j\
    \ k) (if (= (+ j k) k) 0 (+ j k))]\n      [(< k n) (if (= (+ k n) k) 0 (+ k n))]\n\
    \      [else (if (= (+ i j) (+ j k) (+ k n)) (+ i j) (+ j k) (+ k n))]\n    )\n\
    \  )\n  (define (helper-helper-helper-helper-helper i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j\
    \ k))]", "  (define (helper i j k)\n    (if (< i j)\n        (if (< j k)\n   \
    \         (if (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper i (+\
    \ j 1) k)\n                (helper i (+ j 1) (+ k 1))))\n        (if (< k j)\n\
    \            (if (= (+ (* i i) (* j j) (* k k)) 3)\n                (helper i\
    \ (+ j 1) (+ k 1))\n                (helper i (+ j 1) k))))\n  (helper 1 n 1))\n\
    </code>\n<|/ a tags=racket,scheme |>\n<| c |>\nI like your solution. However I\
    \ do not understand how it works. Can you please explain how it works?\n<|/ c\
    \ |>\n<| c |>\nI added some explanation to the answer.\n<|/ c |>\n<| c |>\nThank\
    \ you for your explanation. Now I understand how it works. But I still do not\
    \ understand why it works. I do not understand how it works. Can you please explain\
    \ how it works?\n<|/ c |>\n<| c |>\nI added some explanation to the answer.\n\
    <|/ c |>\n<| c |>\nThank you for your explanation. Now I understand how it works.\
    \ But I still do not understand why it works. I do not understand how it works.\
    \ Can you please explain how it works?\n<|/ c |>\n<| a tags=racket,scheme |>\n\
    <code>", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\
    \ (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if (= (+ i j) k)\
    \ (+ i j) (+ i j))]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if\
    \ (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+\
    \ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if\
    \ (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper i j k)\n    (cond\n   \
    \   [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n \
    \     [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+ i j))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [else (if (= (+ i j", "  (define (helper a i j k)\n\
    \    (cond\n      [(= i j) (+ 1 (* k 3))]\n      [(= i k) (+ 1 (* j 3))]\n   \
    \   [else (+ 1 (helper (+ a i) j (+ a j) (+ a k)))]))\n  (helper '() 1 n n))\n",
  "  (define (helper i j k)\n    (cond ((= i j) (+ i j k))\n          ((= i k) (+\
    \ i j k))\n          ((= j k) (+ i j k))\n          (else (helper (+ i j) (+ j\
    \ k) (+ k i))))\n  (helper 1 2 3))\n", "  (define (helper i j k)\n    (if (< i\
    \ j)\n        (if (< k n)\n            (helper (+ i 1) (+ j 1) (+ k 1))\n    \
    \        (helper (+ i 1) (+ j 1) k))\n        (if (< k n)\n            (helper\
    \ (+ i 1) (+ j 1) k)\n            (helper (+ i 1) j k))))\n  (helper 1 2 n))\n",
  "  (define (helper i j k)\n    (cond\n      [(= i j) (+ i k k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ i k k)]\n      [(= i k) (+ i j k)]\n  \
    \    [(= j k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n\
    \    (cond\n      [(= i j) (+ i k k)]\n      [(= i k) (+ i j k)]\n      [(= j\
    \ k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(= i j) (+ i k k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(= i j)\
    \ (+ i k k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else\
    \ (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(= i j) (+ i k k)]\n\
    \      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (+ i j k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i k k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ i k k)]\n      [(= i k) (+ i j k)]\n  \
    \    [(= j k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n\
    \    (cond\n      [(= i j) (+ i k k)]\n      [(= i k) (+ i j k)]\n      [(= j\
    \ k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\n              \
    \    (helper (+ i j) k 0)\n                  (helper (+ i j) k (+ j k)))]\n  \
    \    [(< j k) (if (= (+ i j) k)\n                  (helper (+ i j) k (+ j k))\n\
    \                  (helper (+ i j) k 0))]\n      [(< i k) (if (= (+ i j) k)\n\
    \                  (helper (+ i j) k (+ j k))\n                  (helper (+ i\
    \ j) k 0))]\n      [else (+ 1 (helper (+ i j) k (+ j k)))]))\n  (helper 1 n 0))\n",
  "  (let loop ((i 1)\n             (a #(list 1 3 7 13 21)))\n    (if (< i n)\n  \
    \      (loop (+ i 1)\n              (cons (* i i i)\n                    (loop\
    \ (+ i 1)\n                          (cons (* i i j)\n                       \
    \         (loop (+ i 1)\n                                      (cons (* i j k)\n\
    \                                            (loop (+ i 1)\n                 \
    \                                 (cons (* j j k)\n                          \
    \                                (loop (+ i 1)\n                             \
    \                                   (cons (* j k k)\n                        \
    \                                            (loop (+ i 1)\n                 \
    \                                                         (cons (* k k k)\n  \
    \                                                                          (loop\
    \ (+ i 1)\n                                                                  \
    \                (cons (* k k k)\n                                           \
    \                                               (loop (+ i 1)\n              \
    \                                                                            \
    \      (cons (* k k k)\n                                                     \
    \                                                 (loop (+ i 1)\n            \
    \                                                                            \
    \                     (cons (* k k k)\n                                      \
    \                                                                            (loop\
    \ (+ i 1)\n                                                                  \
    \                                                      (cons (* k k k)\n     \
    \                                                                            \
    \                                             (loop (+ i 1)\n                \
    \                                                                            \
    \                                        (cons (* k k k)\n                   \
    \                                                                            \
    \                                           (loop (+ i 1)\n                  \
    \                                                                            \
    \                                  (cons (* k k k)\n                         \
    \                                                                            \
    \                                 (loop (+ i 1)\n                            \
    \                                                                            \
    \                                  (cons (* k k k)\n                         \
    \                                                                            \
    \                                       (loop (+ i 1)\n                      \
    \                                                                            \
    \                                                (cons (* k k k)\n           \
    \                                                                            \
    \                                                               (loop (+ i 1)\n\
    \                                                                            \
    \                                                                            \
    \    (cons (* k k k)\n                                                       \
    \                                                                            \
    \                           (loop (+ i 1)\n                                  \
    \                                                                            \
    \                                                      (cons (* k k k)\n     \
    \                                                                            \
    \                                                                            \
    \         (loop (+ i 1)\n                                                    \
    \                                                                            \
    \                                             (cons (* k k k)\n              \
    \                                                                            \
    \                                                                            \
    \            (loop (+ i 1)\n                                                 \
    \                                                                            \
    \                                                           (cons (* k k k)\n\
    \                                                                            \
    \                                                                            \
    \                                      (loop (+ i 1)\n                       \
    \                                                                            \
    \                                                                            \
    \                     (cons (* k k k)\n                                      \
    \                                                                            \
    \                                                                            \
    \            (loop (+ i 1)\n                                                 \
    \                                                                            \
    \                                                                   (cons (* k\
    \ k k)\n                                                                     \
    \                                                                            \
    \                                                     (loop (+ i 1)\n        \
    \                                                                            \
    \                                                                            \
    \                                          (cons (* k k k)\n                 \
    \                                                                            \
    \                                                                            \
    \                                   (loop (+ i 1)\n                          \
    \                                                                            \
    \                                                                            \
    \                                (cons (* k k k)\n                           \
    \                                                                            \
    \                                                                            \
    \                                   (loop (+ i 1)\n                          \
    \                                                                            \
    \                                                                            \
    \                                          (cons (* k k k)\n                 \
    \                                                                            \
    \                                                                            \
    \                                                     (loop (+ i 1)\n        \
    \                                                                            \
    \                                                                            \
    \                                                                    (cons (*\
    \ k k k)\n                                                                   \
    \                                                                            \
    \                                                                            \
    \           (loop (+ i 1)\n", "  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j k)) 0)]\n      [(< j k) (if (=\
    \ (+ j k) n) (+ 1 (helper (+ j 1) i k)) 0)]\n      [(= i j) (if (= (+ i j) k)\
    \ (+ 1 (helper (+ i 1) j k)) 0)]\n      [(= j k) (if (= (+ j k) n) (+ 1 (helper\
    \ (+ j 1) i k)) 0)]\n      [else 0]))\n  (helper (+ 1 n) 0 0))\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\n              \
    \    (+ 1 (helper (+ i 1) j k))\n                  (+ 1 (helper (+ i 1) k (+ j\
    \ k))))]\n      [(= i j) (+ 1 (helper (+ i 1) j k))]))\n  (helper 1 n n))\n",
  "  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k)\
    \ (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n  \
    \    [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i\
    \ k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n\
    \      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else\
    \ (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n\
    \      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k)\
    \ (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n  \
    \    [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i\
    \ k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j k) 3) (+ 1 (helper (+\
    \ i 1) j k) (helper (+ i 1) k (+ j 1))) (helper (+ i 1) j (+ k 1)))]\n      [(<\
    \ j k) (if (= (+ i j k) 3) (+ 1 (helper (+ i 1) j (+ k 1)) (helper (+ i 1) k (+\
    \ j 1))) (helper (+ i 1) j (+ k 1)))]\n      [(< k i) (if (= (+ i j k) 3) (+ 1\
    \ (helper (+ i 1) j (+ k 1)) (helper (+ i 1) k (+ j 1))) (helper (+ i 1) j (+\
    \ k 1)))]\n      [else 0]))\n  (helper (+ 1 n) n n))\n", "  (define (helper i\
    \ j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n    \
    \  [(= j k) (+ i j k)]\n      [(= i k) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n      [(= j k) (helper\
    \ i (- j k) k)]\n      [(= i j) (helper i (- j k) k)]\n", "  (define (helper i\
    \ j k)\n    (cond\n      [(< i j) (+ 0 (helper (+ i 1) j k))]\n      [(< j k)\
    \ (+ 0 (helper (+ i 1) (+ j 1) k))]\n      [(< i k) (+ 0 (helper (+ i 1) (+ j\
    \ 1) (+ k 1)))]\n      [else (+ 0 (helper (+ i 1) (+ j 1) (+ k 1)))]))\n  (helper\
    \ 1 n n))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i\
    \ j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i\
    \ j) (if (= (+ i j) k) 0 (+ i j))]\n      [(= j k) (if (= (+ j k) k) 0 (+ j k))]\n\
    \      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n\
    \      [(= i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(= j k) (if (= (+ j k) k)\
    \ 0 (+ j k))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (= (+ j k) k)\
    \ 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(= j k) (if\
    \ (= (+ j k) k) 0 (+ j k))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n      [(< j k) (if (=\
    \ (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k) 0 (+ i j))]\n     \
    \ [(= j k) (if (= (+ j k) k) 0 (+ j k))]\n      [else (+ i j k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) 0 (+ i j))]\n  \
    \    [(< j k) (if (= (+ j k) k) 0 (+ j k))]\n      [(= i j) (if (= (+ i j) k)\
    \ 0 (+ i j))]\n      [(= j k) (if (= (+ j k) k) 0 (+ j k))]\n      [", "  (let\
    \ loop ((i 1)\n             (a #(1 3 7 13 21 ))\n             (count 0))\n   \
    \ (if (< i n)\n        (if (= (+ i 1) (+ n 1))\n            (+ count (+ i (+ i\
    \ 1) (+ i 1)))\n            (loop (+ i 1) (+ a (* i i) (+ i 1)) count))\n    \
    \    count)))\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j\
    \ k)]\n      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i\
    \ j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n  \
    \    [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k)\
    \ (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n  \
    \    [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i\
    \ k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n\
    \      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j)\
    \ (+ i j k)]\n      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else\
    \ (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n\
    \      [(< j k) (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(< i j) (+ i j k)]\n      [(< j k)\
    \ (+ i j k)]\n      [(< i k) (+ i j k)]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n", "  (define (helper i j k)\n    (cond\n      [(< i j) (helper (+ i\
    \ 1) j k)] \n      [(< j k) (helper (+ i 1) (+ j 1) k)] \n      [(< i k) (helper\
    \ (+ i 1) (+ j 1) (+ k 1))]\n      [else (+ i j k)]))\n  (helper 1 1 n))\n", " \
    \ (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k)\n      \
    \             (helper (+ i j) k 0)\n                   (helper (+ i j) k (+ j\
    \ k)))]\n      [(= i j) (if (= (+ i j) k)\n                   (helper (+ i j)\
    \ k (+ j k))\n                   (helper (+ i j) k 0))]\n      [else (helper (+\
    \ i j) k (+ j k))]))\n  (helper 1 n 0))\n", "  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (helper (+ i 1) j k)] \n      [(< j k) (helper (+ j 1) i k)]\n\
    \      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j k) (helper (+ j 1) (+\
    \ k 1) i)]\n      [(= i k) (helper (+ i 1) (+ k 1) (+ j 1))]\n      [(= j i) (helper\
    \ (+ j 1) (+ i 1) k)]\n      [(= k i) (helper (+ k 1) (+ i 1) j)]\n      [(= i\
    \ k) (helper (+ i 1) (+ k 1) (+ j 1))]\n      [(= j i) (helper (+ j 1) (+ i 1)\
    \ k)]\n      [(= k i) (helper (+ k 1) (+ i 1) j)]\n      [(= i j) (helper (+ i\
    \ 1) (+ j 1) k)]\n      [(= j i) (helper (+ j 1) (+ i 1) k)]\n      [(= k i) (helper\
    \ (+ k 1) (+ i 1) j)]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j\
    \ i) (helper (+ j 1) (+ i 1) k)]\n      [(= k i) (helper (+ k 1) (+ i 1) j)]\n\
    \      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j i) (helper (+ j 1) (+\
    \ i 1) k)]\n      [(= k i) (helper (+ k 1) (+ i 1) j)]\n      [(= i j) (helper\
    \ (+ i 1) (+ j 1) k)]\n      [(= j i) (helper (+ j 1) (+ i 1) k)]\n      [(= k\
    \ i) (helper (+ k 1) (+ i 1) j)]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n\
    \      [(= j i) (helper (+ j 1) (+ i 1) k)]\n      [(= k i) (helper (+ k 1) (+\
    \ i 1) j)]\n      [(= i j) (helper (+ i 1) (+ j 1) k)]\n      [(= j i) (helper\
    \ (+ j 1) (+ i 1) k)]\n      [(= k i) (helper (+ k 1) (+ i 1) ", "  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]\n      [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(=\
    \ j k) (+ i 1)]", "  (define (helper i j k)\n    (cond\n      [(< i j) (if (=\
    \ (+ i j) k) (+ 1 (helper (+ i 1) j k)) 0)]\n      [(< j k) (if (= (+ j k) k)\
    \ (+ 1 (helper i (+ j 1) k)) 0)]\n      [(< k n) (if (= (+ k n) k) (+ 1 (helper\
    \ i (+ k 1) k)) 0)]\n      [else (+ 1 (helper i (+ j 1) k))]\n    )\n  )\n  (helper\
    \ 1 1 n)\n)\n", "  (define (helper a i j k)\n    (cond\n      [(= i j) (+ a k)]\n\
    \      [(= i k) (+ a j)]\n      [(= j k) (+ a i)]\n      [else (helper (+ a i)\
    \ i (+ j 1) (+ k 1))]))\n  (helper 0 1 2 n))\n", "  (define (helper i j k)\n \
    \   (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k)\
    \ (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper i j\
    \ k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(=\
    \ j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n  \
    \    [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k)\
    \ (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper i j k)\n", "  (define (helper i j k)\n    (cond\n      [(<\
    \ i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+\
    \ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else\
    \ (+ i j k)]))\n  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+\
    \ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n\
    \      [(< k i) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (+ i j k)]))\n\
    \  (define (helper i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (+ i j k)]))\n  (define (helper\
    \ i j k)\n    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n    \
    \  [(< j k) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j)\
    \ k) (+ i j) (+ i j))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n \
    \   (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< k i) (if (= (+ i j) k) (+ i j)\
    \ (+ i j))]\n      [else (+ i j k)]))\n  (define (helper i j k)\n    (cond\n \
    \     [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k) (if (= (+ i\
    \ j) k) (+ i ", "  (define (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+\
    \ i j) (+ j k) k)]\n    )\n  )\n  (cond\n    [(= n 0) 0]\n    [else (helper (+\
    \ 1 n) 1 0)]\n  )\n)\n", "  (let loop ((i 1) (a #(list 1)))\n    (if (< i n)\n\
    \        (loop (+ i 1) (cons a i))\n        (if (= (apply + a) 3)\n          \
    \  (+ 1 (loop (+ i 1) (cons a i)))\n            (loop (+ i 1) a))))))\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (helper 1 2 n))\n", "  (define (helper i j k)\n    (if (< i j)\n        (if\
    \ (< k n)\n            (if (= (* i i j) (* k k n))\n                (+ 1 (helper\
    \ i (+ j 1) k))\n                0))\n        0))\n  (helper 1 0 0))\n", "  (define\
    \ (helper i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i k) (+ i j\
    \ k)]\n      [(= j k) (+ i j k)]\n      [else (helper (+ i j) (+ j k) k)]))\n\
    \  (define (helper2 i j k)\n    (cond\n      [(= i j) (+ i j k)]\n      [(= i\
    \ k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper2 (+ i j) (+ j\
    \ k) k)]))\n  (define (helper3 i j k)\n    (cond\n      [(= i j) (+ i j k)]\n\
    \      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper3 (+\
    \ i j) (+ j k) k)]))\n  (define (helper4 i j k)\n    (cond\n      [(= i j) (+\
    \ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else (helper4\
    \ (+ i j) (+ j k) k)]))\n  (define (helper5 i j k)\n    (cond\n      [(= i j)\
    \ (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n      [else\
    \ (helper5 (+ i j) (+ j k) k)]))\n  (define (helper6 i j k)\n    (cond\n     \
    \ [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper6 (+ i j) (+ j k) k)]))\n  (define (helper7 i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper7 (+ i j) (+ j k) k)]))\n  (define (helper8 i j k)\n    (cond\n\
    \      [(= i j) (+ i j k)]\n      [(= i k) (+ i j k)]\n      [(= j k) (+ i j k)]\n\
    \      [else (helper8 (+ i j) (+ j k", "  (define (helper i j k)\n    (cond\n\
    \      [(< i j) (if (= (+ i j) k) (+ 1 (helper (+ i 1) j k)) 0)]\n      [(< j\
    \ k) (if (= (+ j k) k) (+ 1 (helper i (+ j 1) k)) 0)]\n      [(= i j) (if (= (+\
    \ i j) k) (+ 1 (helper i (+ i 1) k)) 0)]\n      [(= j k) (if (= (+ j k) k) (+\
    \ 1 (helper i (+ j 1) k)) 0)]\n      [else 0]))\n  (if (= n 0)\n      0\n    \
    \  (+ 1 (helper (- n 1) 0 0))))\n", "  (define (helper a i j k)\n    (cond\n \
    \     [(< i j) (if (= (+ i j) k) (+ 1 (helper (+ i j) i k (+ j k)))\n        \
    \              (helper (+ i j) i (+ j k) k))]\n      [(= i j) (+ 1 (helper (+\
    \ i j) i k (+ j k)))]\n      [(= i k) (+ 1 (helper (+ i j) i (+ j k) k))]))\n\
    \  (helper (list 1 2 3 4 5 6 7 8 9 10) 0 1 n))\n", "  (define (helper i j k)\n\
    \    (cond\n      [(< i j) (if (= (+ i j) k) (+ i j) (+ i j))]\n      [(< j k)\
    \ (if (= (+ i j) k) (+ i j) (+ i j))]\n      [else (if (= (+ i j) k) (+ i j) (+\
    \ i j))]))\n  (cond\n    [(= n 0) 0]\n    [else (+ 1 (helper (- n 1) 0 0))]))\n",
  "  (define (helper i j k)\n    (cond ((= i j) 0)\n          ((= i k) 0)\n      \
    \    ((= j k) 0)\n          ((= (modulo i 3) (modulo j 3) (modulo k 3)) 0)\n \
    \         (else (+ 1 (helper (+ i 1) (+ j 1) (+ k 1))))))\n  (helper 1 2 n))\n",
  "  (let loop ((i 1) (a #(list 1 3 7 13 21)))\n    (if (< i n)\n        (loop (+\
    \ i 1) a)\n        (if (= (+ (car a) (car a)) 3)\n            (+ 1 (loop (+ i\
    \ 1) (cdr a)))\n            0))))\n", "  (define (helper i j k)\n    (cond\n \
    \     [(= i j) (+ k 1)]\n      [(= i k) (+ j 1)]\n      [(= j k) (+ i 1)]\n  \
    \    [else (helper (+ i 1) (+ j 1) (+ k 1))]))\n  (helper 1 2 3))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

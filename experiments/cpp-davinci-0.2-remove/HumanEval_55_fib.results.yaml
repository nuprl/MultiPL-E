language: cpp
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    long a = 0, b = 1, c, i;\n    if( n == 0)\n\
    \        return a;\n    for (i = 2; i <= n; i++)\n    {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) {\n      \
    \  return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    long a = 0, b = 1;\n    for (long i = 2; i <= n; i++) {\n        long c =\
    \ a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n < 2) return n;\n    long a = 0, b = 1,\
    \ c;\n    for (long i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    long a = 0, b =\
    \ 1, c;\n    for (long i = 2; i <= n; i++) {\n        c = a + b;\n        a =\
    \ b;\n        b = c;\n    }\n    return c;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    // TODO: Implement this function.\n    if(n==0)\n\
    \        return 0;\n    else if(n==1)\n        return 1;\n    else\n        return\
    \ fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n < 2) return n;\n    long a = 0, b = 1,\
    \ c;\n    for (long i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n\
    \        return n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n   \
    \ auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) return n;\n  return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    long a = 0, b = 1, c, i;\n    if( n == 0)\n\
    \        return a;\n    for (i = 2; i <= n; i++)\n    {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  // TODO: Implement this function.\n  if(n==0)\n\
    \    return 0;\n  if(n==1)\n    return 1;\n  return fib(n-1)+fib(n-2);\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   long a = 0;\n    long b = 1;\n    long c;\n    for (long i = 2; i <= n; i++)\
    \ {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return c;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n \
    \   assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n   \
    \ assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    long a = 0, b = 1, c, i;\n    if( n == 0)\n\
    \        return a;\n    for (i = 2; i <= n; i++)\n    {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    long a = 0, b = 1, c, i;\n    if( n == 0)\n\
    \        return a;\n    for (i = 2; i <= n; i++)\n    {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) {\n      \
    \  return n;\n    }\n    long a = 0;\n    long b = 1;\n    for (long i = 2; i\
    \ <= n; i++) {\n        long c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \    return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) return n;\n  long prev = 0;\n  long\
    \ curr = 1;\n  for (long i = 0; i < n - 1; ++i) {\n    long next = prev + curr;\n\
    \    prev = curr;\n    curr = next;\n  }\n  return curr;\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) return n;\n  return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   long a = 0;\n    long b = 1;\n    for (long i = 2; i <= n; i++) {\n      \
    \  long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   long prev = 0;\n    long curr = 1;\n    for (long i = 0; i < n - 1; i++) {\n\
    \        long next = prev + curr;\n        prev = curr;\n        curr = next;\n\
    \    }\n    return curr;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n\tif (n <= 1) {\n\t\treturn n;\n\t}\n\tlong prev\
    \ = 0;\n\tlong curr = 1;\n\tfor (long i = 0; i < n - 1; ++i) {\n\t\tlong next\
    \ = prev + curr;\n\t\tprev = curr;\n\t\tcurr = next;\n\t}\n\treturn curr;\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    // TODO: Implement this function.\n    if(n==0)\n\
    \        return 0;\n    else if(n==1)\n        return 1;\n    else\n        return\
    \ fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   long prev = 0;\n    long curr = 1;\n    for (long i = 0; i < n - 1; i++) {\n\
    \        long next = prev + curr;\n        prev = curr;\n        curr = next;\n\
    \    }\n    return curr;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    long a = 0, b = 1;\n    for (long i = 2; i <= n; i++) {\n        long c =\
    \ a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    long prev = 0;\n\
    \    long curr = 1;\n    for (long i = 0; i < n - 1; ++i) {\n        long next\
    \ = prev + curr;\n        prev = curr;\n        curr = next;\n    }\n    return\
    \ curr;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n \
    \   assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n   \
    \ assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    long a = 0, b = 1, c, i;\n    if( n == 0)\n\
    \        return a;\n    for (i = 2; i <= n; i++)\n    {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    long a = 0, b = 1, c, i;\n    if( n == 0)\n\
    \        return a;\n    for (i = 2; i <= n; i++)\n    {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    long a = 0, b = 1;\n    for (long i = 2; i <= n; i++) {\n        long c =\
    \ a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n\
    \        return n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n   \
    \ auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n\tlong a = 0, b = 1, c, i;\n\tif (n == 0)\n\t\t\
    return a;\n\tfor (i = 2; i <= n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\
    \t}\n\treturn b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n  \
    \  long a = 0;\n    long b = 1;\n    for (long i = 2; i <= n; i++) {\n       \
    \ long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n < 2) return n;\n  long a = 0, b = 1, c;\n\
    \  for (long i = 2; i <= n; i++) {\n    c = a + b;\n    a = b;\n    b = c;\n \
    \ }\n  return c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n \
    \   assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n   \
    \ assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n  assert(n >= 0);\n  if (n == 0 || n == 1) return\
    \ n;\n  long a = 0, b = 1;\n  for (long i = 2; i <= n; i++) {\n    long c = a\
    \ + b;\n    a = b;\n    b = c;\n  }\n  return b;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) return n;\n    long a = 0, b =\
    \ 1, c;\n    for (int i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821750
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n \
    \   long a = 0;\n    long b = 1;\n    long c;\n    for (long i = 2; i <= n; i++)\
    \ {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return c;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    } else\
    \ if (n == 1) {\n        return 1;\n    } else {\n        return fib(n - 1) +\
    \ fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n \
    \   if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821748

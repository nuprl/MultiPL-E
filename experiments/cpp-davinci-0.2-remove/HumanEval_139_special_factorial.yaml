name: HumanEval_139_special_factorial
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial is\
  \ defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n// where\
  \ n > 0\n// The function will receive an integer as input and should return the\
  \ special\n// factorial of this integer.\nlong special_factorial(long n) {\n"
tests: "}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
  \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
  \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
completions: ["    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;", "  long result = 1;\n  for (int i = n; i >\
    \ 0; i--) {\n    result *= i;\n  }\n  return result;", "    long fact = 1;\n \
    \   for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n    return fact;",
  "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n\
    \    return fact;", "  // Write your code here\n  long fact = 1;\n  for(int i\
    \ = n; i > 0; i--)\n  {\n    fact *= i;\n  }\n  return fact;", "  if (n == 1)\
    \ return 1;\n  return n * special_factorial(n - 1);", "    long result = 1;\n\
    \    for (long i = n; i > 0; i--) {\n        result *= i;\n    }\n    return result;",
  "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact *= i;\n   \
    \ }\n    return fact;", "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n\
    \        fact *= i;\n    }\n    return fact;", "  long fact = 1;\n  for (int i\
    \ = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return fact;", "  // your code here\n\
    \  long fact = 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact = fact * i;\n\
    \  }\n  return fact;", "  long result = 1;\n  for (int i = n; i > 0; i--) {\n\
    \    result *= i;\n  }\n  return result;", "    long result = 1;\n    for (long\
    \ i = n; i > 0; i--) {\n        result *= i;\n    }\n    return result;", "  long\
    \ result = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    result\
    \ *= i;\n  }\n  return result;", "  long result = 1;\n  for (int i = n; i > 0;\
    \ i--) {\n    result *= i;\n  }\n  return result;", "  long fact = 1;\n  for (int\
    \ i = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return fact;", "  long factorial\
    \ = 1;\n  for (int i = n; i > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;",
  "  // Write your code here\n  long fact = 1;\n  for(int i = 1; i <= n; i++)\n  \
    \  fact *= i;\n  return fact;", "  // Write your code here\n  long fact = 1;\n\
    \  for(int i = n; i > 0; i--)\n  {\n    fact *= i;\n  }\n  return fact;", "  long\
    \ result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "    long result = 1;\n    for (int i = n; i > 0; i--) {\n       \
    \ result *= i;\n    }\n    return result;", "  long result = 1;\n  for (int i\
    \ = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;", "  long result\
    \ = 1;\n  for (int i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
  "    long factorial = 1;\n    for (int i = n; i > 0; i--) {\n        factorial *=\
    \ i;\n    }\n    return factorial;", "  long factorial = 1;\n  for (int i = n;\
    \ i > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;", "  long result\
    \ = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;",
  "    long result = 1;\n    for (int i = n; i > 0; i--) {\n        result *= i;\n\
    \    }\n    return result;", "  long result = 1;\n  for (long i = n; i > 0; i--)\
    \ {\n    result *= i;\n  }\n  return result;", "    long result = 1;\n    for\
    \ (long i = n; i > 0; i--) {\n        result *= i;\n    }\n    return result;",
  "  if (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", " \
    \ // Write your code here\n  long fact = 1;\n  for(int i = n; i > 0; i--)\n  {\n\
    \    fact *= i;\n  }\n  return fact;", "  long factorial = 1;\n  for (long i =\
    \ n; i > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;", "    long\
    \ fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n  \
    \  return fact;", "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n    \
    \    fact *= i;\n    }\n    return fact;", "    long fact = 1;\n    for(int i\
    \ = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return fact;", "    long\
    \ fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n   \
    \ return fact;", "  // your code here\n  if(n==0)\n    return 1;\n  long fact=1;\n\
    \  for(int i=n;i>=1;i--)\n  {\n    fact=fact*i;\n  }\n  return fact;", "  long\
    \ result = 1;\n  for (int i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return\
    \ result;", "  if (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n\
    \ - 1);", "  // Write your code here\n  long fact = 1;\n  for(int i = 1; i <=\
    \ n; i++)\n  {\n    fact = fact * i;\n  }\n  return fact;", "  if (n == 1) {\n\
    \    return 1;\n  } else {\n    return n * special_factorial(n - 1);\n  }", " \
    \   long result = 1;\n    for (int i = n; i > 0; i--) {\n        result *= i;\n\
    \    }\n    return result;", "  // your code here\n  long fact=1;\n  for(int i=n;i>=1;i--)\n\
    \  {\n    fact=fact*i;\n  }\n  return fact;", "  // Write your code here\n  //\
    \ To print results to the standard output you can use printf()\n  // Example:\
    \ printf(\"%s\", \"Hello world!\");\n  long fact = 1;\n  for(int i = 1; i <= n;\
    \ i++)\n  {\n    fact = fact * i;\n  }\n  return fact;", "  long fact = 1;\n \
    \ for (long i = n; i > 0; i--) {\n    fact *= i;\n  }\n  return fact;", "  long\
    \ result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;", "  if (n == 1) {\n    return 1;\n  }\n  return\
    \ n * special_factorial(n - 1);", "    long fact = 1;\n    for(int i = n; i >\
    \ 0; i--) {\n        fact *= i;\n    }\n    return fact;", "  if (n == 1) {\n\
    \    return 1;\n  }\n  return n * special_factorial(n - 1);", "  long factorial\
    \ = 1;\n  for (int i = 1; i <= n; i++) {\n    factorial *= i;\n  }\n  return factorial;",
  "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n \
    \ return result;", "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n  \
    \      fact *= i;\n    }\n    return fact;", "  if (n == 1) {\n    return 1;\n\
    \  }\n  return n * special_factorial(n - 1);", "  long result = 1;\n  for (int\
    \ i = n; i > 0; i--) {\n    long factorial = 1;\n    for (int j = i; j > 0; j--)\
    \ {\n      factorial *= j;\n    }\n    result *= factorial;\n  }\n  return result;",
  "  long result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  for\
    \ (int i = n - 1; i > 0; i--) {\n    result *= i;\n  }\n  return result;", " \
    \   long result = 1;\n    for (long i = n; i > 0; i--) {\n        result *= i;\n\
    \    }\n    return result;", "  long factorial = 1;\n  for (int i = n; i > 0;\
    \ i--) {\n    factorial *= i;\n  }\n  return factorial;", "  long fact = 1;\n\
    \  for (long i = n; i > 0; i--) {\n    fact *= i;\n  }\n  return fact;", "  long\
    \ fact = 1;\n  for (int i = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return fact;",
  "  long result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "  // Your code here\n  long fact = 1;\n  for(int i = 1; i <= n; i++)\n\
    \  {\n    fact = fact * i;\n  }\n  return fact;", "  if (n == 1) {\n    return\
    \ 1;\n  }\n  return n * special_factorial(n - 1);", "    if (n == 1) {\n     \
    \   return 1;\n    }\n    return n * special_factorial(n - 1);", "  if (n == 1)\
    \ {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", "  long result\
    \ = 1;\n  for (long i = n; i > 0; i--) {\n    long factorial = 1;\n    for (long\
    \ j = i; j > 0; j--) {\n      factorial *= j;\n    }\n    result *= factorial;\n\
    \  }\n  return result;", "  // Write your code here\n  long fact = 1;\n  for(int\
    \ i = 1; i <= n; i++)\n  {\n    fact = fact * i;\n  }\n  return fact;", "    long\
    \ fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n   \
    \ return fact;", "    if (n == 1)\n        return 1;\n    else\n        return\
    \ n * special_factorial(n - 1);", "  long factorial = 1;\n  for (int i = n; i\
    \ > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;", "    long fact\
    \ = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n    return\
    \ fact;", "  if (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n\
    \ - 1);", "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;", "  long factorial = 1;\n  for (int i = n; i\
    \ > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;", "  long factorial\
    \ = 1;\n  for (int i = 1; i <= n; i++) {\n    factorial *= i;\n  }\n  return factorial;",
  "    if (n == 1)\n        return 1;\n    else\n        return n * special_factorial(n\
    \ - 1);", "  long fact = 1;\n  for (long i = n; i > 0; i--) {\n    fact *= i;\n\
    \  }\n  return fact;", "  // your code here\n  long long int fact=1;\n  for(int\
    \ i=n;i>=1;i--)\n  {\n    fact*=i;\n  }\n  return fact;", "  long fact = 1;\n\
    \  for (int i = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return fact;", "  if\
    \ (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", " \
    \   long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact *= i;\n  \
    \  }\n    return fact;", "    long fact = 1;\n    for(int i = n; i >= 1; i--)\
    \ {\n        fact *= i;\n    }\n    return fact;", "  long result = 1;\n  for\
    \ (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;", "  if (n\
    \ == 1) {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", "  long\
    \ result = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;", "  long result = 1;\n  for (long i = n; i >\
    \ 0; i--) {\n    result *= i;\n  }\n  return result;", "    long fact = 1;\n \
    \   for(int i = 1; i <= n; i++)\n        fact *= i;\n    return fact;", "    if\
    \ (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n - 1);",
  "  // Write your code here\n  // To print results to the standard output you can\
    \ use printf()\n  // Example: printf(\"%s\", \"Hello world!\");\n  long result\
    \ = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;",
  "    // Write your code here\n    long fact = 1;\n    for(int i = 1; i <= n; i++)\n\
    \    {\n        fact = fact * i;\n    }\n    return fact;", "    if (n == 1) {\n\
    \        return 1;\n    }\n    return n * special_factorial(n - 1);", "    long\
    \ fact = 1;\n    for(int i = 1; i <= n; i++)\n        fact *= i;\n    return fact;",
  "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n \
    \ for (long i = n - 1; i > 0; i--) {\n    result *= i;\n  }\n  for (long i = n\
    \ - 2; i > 0; i--) {\n    result *= i;\n  }\n  return result;", "    long fact\
    \ = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n    return\
    \ fact;", "  // Your code here\n  long long int fact = 1;\n  for(int i = 1; i\
    \ <= n; i++)\n  {\n    fact = fact * i;\n  }\n  return fact;", "  if (n == 1)\
    \ {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", "  long result\
    \ = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;",
  "  long fact = 1;\n  for (int i = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return\
    \ fact;", "    long factorial = 1;\n    for (int i = n; i > 0; i--) {\n      \
    \  factorial *= i;\n    }\n    return factorial;", "  long result = 1;\n  for\
    \ (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;", "  long\
    \ fact = 1;\n  for (int i = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return fact;",
  "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n \
    \ return result;", "    assert(n > 0);\n    long result = 1;\n    for (int i =\
    \ n; i > 0; i--) {\n        result *= i;\n    }\n    return result;", "    if\
    \ (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n - 1);",
  "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact *= i;\n   \
    \ }\n    return fact;", "  // Write your code here\n  // To print results to the\
    \ standard output you can use printf()\n  // Example: printf(\"%s\", \"Hello world!\"\
    );\n  long fact = 1;\n  for(int i = 1; i <= n; i++) {\n    fact *= i;\n  }\n \
    \ return fact;", "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    result\
    \ *= i;\n  }\n  return result;", "  // Write your code here\n  // To print results\
    \ to the standard output you can use printf()\n  // Example: printf(\"%s\", \"\
    Hello world!\");\n  long fact = 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact\
    \ = fact * i;\n  }\n  return fact;", "  if (n == 1) {\n    return 1;\n  }\n  return\
    \ n * special_factorial(n - 1);", "  long fact = 1;\n  for (int i = 1; i <= n;\
    \ i++) {\n    fact *= i;\n  }\n  return fact;", "  long result = 1;\n  for (long\
    \ i = n; i > 0; i--) {\n    result *= i;\n  }\n  for (long i = n - 1; i > 0; i--)\
    \ {\n    result *= i;\n  }\n  return result;", "  // TODO: Implement the function\
    \ here\n  long fact = 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact = fact\
    \ * i;\n  }\n  return fact;", "  long result = 1;\n  for (int i = 1; i <= n; i++)\
    \ {\n    result *= i;\n  }\n  return result;", "  // Write your code here\n  long\
    \ fact = 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact = fact * i;\n  }\n \
    \ return fact;", "  // Write your code here\n  // To print results to the standard\
    \ output you can use printf()\n  // Example: printf(\"%s\", \"Hello world!\");\n\
    \  long fact = 1;\n  for(int i = n; i > 0; i--) {\n    fact *= i;\n  }\n  return\
    \ fact;", "    long result = 1;\n    for (int i = 1; i <= n; i++) {\n        result\
    \ *= i;\n    }\n    return result;", "  long factorial = 1;\n  for (int i = n;\
    \ i > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;", "  // your code\
    \ here\n  long fact = 1;\n  for(int i = n; i > 0; i--)\n  {\n    fact *= i;\n\
    \  }\n  return fact;", "  long result = 1;\n  for (int i = 1; i <= n; i++) {\n\
    \    long factorial = 1;\n    for (int j = 1; j <= i; j++) {\n      factorial\
    \ *= j;\n    }\n    result *= factorial;\n  }\n  return result;", "    long long\
    \ int fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n\
    \    return fact;", "    long result = 1;\n    for (int i = n; i > 0; i--) {\n\
    \        result *= i;\n    }\n    return result;", "  long factorial = 1;\n  while\
    \ (n > 0) {\n    factorial *= n;\n    n--;\n  }\n  return factorial;", "    long\
    \ fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n  \
    \  return fact;", "  // Write your code here\n  long fact = 1;\n  for(int i =\
    \ 1; i <= n; i++)\n  {\n    fact = fact * i;\n  }\n  return fact;", "    long\
    \ fact = 1;\n    for(int i = 1; i <= n; i++)\n        fact *= i;\n    return fact;",
  "  long result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "  // Write your code here\n  long fact = 1;\n  for(int i = n; i >\
    \ 0; i--)\n  {\n    fact *= i;\n  }\n  return fact;", "\tlong fact = 1;\n\tfor\
    \ (int i = 1; i <= n; i++) {\n\t\tfact *= i;\n\t}\n\treturn fact;", "  long result\
    \ = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;",
  "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n\
    \    return fact;", "  long result = 1;\n  for (long i = n; i > 0; i--) {\n  \
    \  result *= i;\n  }\n  return result;", "  long result = 1;\n  for (int i = n;\
    \ i > 0; i--) {\n    result *= i;\n  }\n  return result;", "    long result =\
    \ 1;\n    for (int i = n; i > 0; i--) {\n        result *= i;\n    }\n    return\
    \ result;", "  long factorial = 1;\n  for (int i = 1; i <= n; i++) {\n    factorial\
    \ *= i;\n  }\n  return factorial;", "  long factorial = 1;\n  for (long i = n;\
    \ i > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;", "    long fact\
    \ = 1;\n    for(int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;", "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    long factorial\
    \ = 1;\n    for (long j = i; j > 0; j--) {\n      factorial *= j;\n    }\n   \
    \ result *= factorial;\n  }\n  return result;", "  long result = 1;\n  for (int\
    \ i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;", "    long fact\
    \ = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n    return\
    \ fact;", "  // TODO: Implement this function.\n  if(n==0) return 1;\n  long fact\
    \ = 1;\n  for(int i=1;i<=n;i++){\n    fact*=i;\n  }\n  return fact;", "  if (n\
    \ == 1) {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", "  if\
    \ (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n - 1);", " \
    \   long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n\
    \    }\n    for (long i = n - 1; i > 0; i--) {\n        result *= i;\n    }\n\
    \    return result;", "  if (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n\
    \ - 1);", "  long factorial = 1;\n  for (int i = 1; i <= n; i++) {\n    factorial\
    \ *= i;\n  }\n  return factorial;", "  // Write your code here\n  long fact=1;\n\
    \  for(int i=1;i<=n;i++)\n  {\n      fact=fact*i;\n  }\n  return fact;", "   \
    \ long fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n\
    \    return fact;", "  long result = 1;\n  for (int i = n; i > 0; i--) {\n   \
    \ result *= i;\n  }\n  return result;", "  long result = 1;\n  for (long i = n;\
    \ i > 0; i--) {\n    long factorial = 1;\n    for (long j = i; j > 0; j--) {\n\
    \      factorial *= j;\n    }\n    result *= factorial;\n  }\n  return result;",
  "    if (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n\
    \ - 1);", "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    long factorial\
    \ = 1;\n    for (long j = i; j > 0; j--) {\n      factorial *= j;\n    }\n   \
    \ result *= factorial;\n  }\n  return result;", "    long result = 1;\n    for\
    \ (long i = n; i > 0; i--) {\n        result *= i;\n    }\n    return result;",
  "  // Write your code here\n  // To print results to the standard output you can\
    \ use printf()\n  // Example: printf(\"%s\", \"Hello world!\");\n  long fact =\
    \ 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact = fact * i;\n  }\n  return\
    \ fact;", "  // your code here\n  long fact = 1;\n  for(int i = 1; i <= n; i++)\n\
    \  {\n    fact = fact * i;\n  }\n  return fact;", "  // Write your code here\n\
    \  // To print results to the standard output you can use printf()\n  // Example:\
    \ printf(\"%s\", \"Hello world!\");\n  long factorial = 1;\n  for (long i = 1;\
    \ i <= n; i++) {\n    factorial *= i;\n  }\n  return factorial;", "  long result\
    \ = 1;\n  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;",
  "    if (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n\
    \ - 1);", "  // TODO: Implement this function.\n  long fact=1;\n  for(int i=1;i<=n;i++)\n\
    \  {\n    fact=fact*i;\n  }\n  return fact;", "    if (n == 1) {\n        return\
    \ 1;\n    }\n    return n * special_factorial(n - 1);", "  long result = 1;\n\
    \  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;", " \
    \ long factorial = 1;\n  for (int i = n; i > 0; i--) {\n    factorial *= i;\n\
    \  }\n  return factorial;", "    assert(n > 0);\n    long result = 1;\n    for\
    \ (int i = n; i > 0; i--) {\n        result *= i;\n    }\n    return result;",
  "  long result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;", "    long fact = 1;\n    for(int i = n; i >\
    \ 0; i--) {\n        fact *= i;\n    }\n    return fact;", "  // Write your code\
    \ here\n  // To print results to the standard output you can use printf()\n  //\
    \ Example: printf(\"%s\", \"Hello world!\");\n  long result = 1;\n  for (long\
    \ i = n; i > 0; i--) {\n    long factorial = 1;\n    for (long j = i; j > 0; j--)\
    \ {\n      factorial *= j;\n    }\n    result *= factorial;\n  }\n  return result;",
  "  long factorial = 1;\n  for (int i = n; i > 0; i--) {\n    factorial *= i;\n \
    \ }\n  return factorial;", "    long fact = 1;\n    for(int i = 1; i <= n; i++)\
    \ {\n        fact *= i;\n    }\n    return fact;", "    long result = 1;\n   \
    \ for (int i = n; i > 0; i--) {\n        result *= i;\n    }\n    return result;",
  "    if (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n\
    \ - 1);", "  // Write your code here\n  long fact = 1;\n  for(int i = 1; i <=\
    \ n; i++)\n  {\n    fact = fact * i;\n  }\n  return fact;", "  long result = 1;\n\
    \  for (long i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;", " \
    \ long fact = 1;\n  for (int i = n; i > 0; i--) {\n    fact *= i;\n  }\n  return\
    \ fact;", "    if (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n\
    \ - 1);", "    long result = 1;\n    for (long i = n; i > 0; i--) {\n        result\
    \ *= i;\n    }\n    return result;", "  // Write your code here\n  // To print\
    \ results to the standard output you can use printf()\n  // Example: printf(\"\
    %s\", \"Hello world!\");\n  long fact = 1;\n  for(int i = 1; i <= n; i++) {\n\
    \    fact *= i;\n  }\n  return fact;", "    if (n == 1) {\n        return 1;\n\
    \    }\n    return n * special_factorial(n - 1);", "  long result = 1;\n  for\
    \ (int i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;", "  long\
    \ result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "  long result = 1;\n  for (long i = n; i > 0; i--) {\n    long factorial\
    \ = 1;\n    for (long j = i; j > 0; j--) {\n      factorial *= j;\n    }\n   \
    \ result *= factorial;\n  }\n  return result;", "  // write your code here\n \
    \ long fact = 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact = fact * i;\n \
    \ }\n  return fact;", "    long result = 1;\n    for (int i = 1; i <= n; i++)\
    \ {\n        result *= i;\n    }\n    return result;", "  long factorial = 1;\n\
    \  for (int i = n; i > 0; i--) {\n    factorial *= i;\n  }\n  return factorial;",
  "  long result = 1;\n  for (int i = n; i > 0; i--) {\n    result *= i;\n  }\n  return\
    \ result;", "    long result = 1;\n    for (long i = n; i > 0; i--) {\n      \
    \  result *= i;\n    }\n    return result;", "  // Your code here\n  long fact\
    \ = 1;\n  for(int i = 1; i <= n; i++)\n  {\n    fact = fact * i;\n  }\n  return\
    \ fact;", "  if (n == 1) {\n    return 1;\n  }\n  return n * special_factorial(n\
    \ - 1);", "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact\
    \ *= i;\n    }\n    return fact;", "    long result = 1;\n    for (int i = 1;\
    \ i <= n; i++) {\n        result *= i;\n    }\n    return result;", "    long\
    \ result = 1;\n    for (int i = n; i > 0; i--) {\n        result *= i;\n    }\n\
    \    return result;", "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n\
    \        fact *= i;\n    }\n    return fact;", "  long result = 1;\n  for (long\
    \ i = n; i > 0; i--) {\n    long factorial = 1;\n    for (long j = i; j > 0; j--)\
    \ {\n      factorial *= j;\n    }\n    result *= factorial;\n  }\n  return result;",
  "    long fact = 1;\n    for(int i = n; i > 0; i--) {\n        fact *= i;\n    }\n\
    \    return fact;", "  long fact = 1;\n  for (int i = n; i > 0; i--) {\n    fact\
    \ *= i;\n  }\n  return fact;", "  long result = 1;\n  for (int i = 1; i <= n;\
    \ i++) {\n    long factorial = 1;\n    for (int j = 1; j <= i; j++) {\n      factorial\
    \ *= j;\n    }\n    result *= factorial;\n  }\n  return result;", "    long fact\
    \ = 1;\n    for(int i = 1; i <= n; i++)\n        fact *= i;\n    return fact;",
  "  // Write your code here\n  long fact = 1;\n  for(int i = 1; i <= n; i++)\n  {\n\
    \    fact = fact * i;\n  }\n  return fact;", "  // Write your code here\n  //\
    \ To print results to the standard output you can use printf()\n  // Example:\
    \ printf(\"%s\", \"Hello world!\");\n  long fact = 1;\n  for(int i = 1; i <= n;\
    \ i++)\n  {\n    fact = fact * i;\n  }\n  return fact;"]
stop_tokens:
- "\n}"

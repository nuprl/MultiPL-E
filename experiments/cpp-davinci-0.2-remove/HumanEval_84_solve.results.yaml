language: cpp
name: HumanEval_84_solve
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N = N / 2;\n    }\n    return binary;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n\
    \    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) == (\"\
    1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp3jk51lph: /tmp/tmp3jk51lph.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp6fygh09u: /tmp/tmp6fygh09u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8a2jj2og: /tmp/tmp8a2jj2og.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N != 0){\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpkkuw_nzf: /tmp/tmpkkuw_nzf.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N != 0){\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpkkuw_nzf: /tmp/tmpkkuw_nzf.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    std::string result = \"\";\n    while(N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    for(int i = binary.length() - 1; i >= 0;\
    \ i--) {\n        result += binary[i];\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n\
    \    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) == (\"\
    1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpixffzdd4: /tmp/tmpixffzdd4.cpp:24: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpct4jbkf3: /tmp/tmpct4jbkf3.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N /= 2;\n    }\n    return binary;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpzgkk9ord: /tmp/tmpzgkk9ord.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmphvglpoyg: /tmp/tmphvglpoyg.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        if(N % 2 == 0) {\n            binary = \"0\" +\
    \ binary;\n        } else {\n            binary = \"1\" + binary;\n        }\n\
    \        N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpsmaujejw: /tmp/tmpsmaujejw.cpp:24: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N /= 2;\n    }\n    return binary;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpzgkk9ord: /tmp/tmpzgkk9ord.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp6fygh09u: /tmp/tmp6fygh09u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmphvglpoyg: /tmp/tmphvglpoyg.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back((N % 2) + '0');\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpfvmtpgi7: /tmp/tmpfvmtpgi7.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary = std::to_string(N % 2) + binary;\n   \
    \     N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpvkxra3gs: /tmp/tmpvkxra3gs.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpfwy4s35t: /tmp/tmpfwy4s35t.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N != 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpopw14k5h: /tmp/tmpopw14k5h.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N>0){\n        binary = std::to_string(N%2)\
    \ + binary;\n        N = N/2;\n    }\n    return binary;\n}\nint main() {\n  \
    \  auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpwr3z7r6j: /tmp/tmpwr3z7r6j.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N != 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpopw14k5h: /tmp/tmpopw14k5h.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    int remainder = 0;\n    while (N != 0) {\n\
    \        remainder = N % 2;\n        binary = std::to_string(remainder) + binary;\n\
    \        N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpmnkqv0yg: /tmp/tmpmnkqv0yg.cpp:23: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpfwy4s35t: /tmp/tmpfwy4s35t.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string s = \"\";\n    while(N != 0) {\n        s += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpb08hqvw8: /tmp/tmpb08hqvw8.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    int sum = 0;\n    while(N\
    \ > 0) {\n        sum += N%2;\n        N /= 2;\n    }\n    return std::to_string(sum);\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpdks3iv56: /tmp/tmpdks3iv56.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::stringstream ss;\n \
    \   ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    int sum = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == '1') {\n    \
    \        sum += 1;\n        }\n    }\n    return std::to_string(sum);\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"\
    ));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) ==\
    \ (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnx3ckqyq: /tmp/tmpnx3ckqyq.cpp:24: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp6fygh09u: /tmp/tmp6fygh09u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N = N / 2;\n    }\n    return binary;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n\
    \    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) == (\"\
    1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp3jk51lph: /tmp/tmp3jk51lph.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n\tstd::string result;\n\twhile\
    \ (N > 0) {\n\t\tresult += std::to_string(N % 2);\n\t\tN /= 2;\n\t}\n\tstd::reverse(result.begin(),\
    \ result.end());\n\treturn result;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpaczv6bqf: /tmp/tmpaczv6bqf.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpfwy4s35t: /tmp/tmpfwy4s35t.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N>0){\n        binary+=std::to_string(N%2);\n        N/=2;\n    }\n  \
    \  std::reverse(binary.begin(),binary.end());\n    return binary;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n\
    \    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) == (\"\
    1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp1eem_j3g: /tmp/tmp1eem_j3g.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        int rem = N % 2;\n\
    \        binary = std::to_string(rem) + binary;\n        N = N / 2;\n    }\n \
    \   return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpzjh21xe0: /tmp/tmpzjh21xe0.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n  std::string binary;\n  while\
    \ (N > 0) {\n    binary += std::to_string(N % 2);\n    N /= 2;\n  }\n  std::reverse(binary.begin(),\
    \ binary.end());\n  return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpv_hrzmzx: /tmp/tmpv_hrzmzx.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpfwy4s35t: /tmp/tmpfwy4s35t.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N>0){\n        binary += std::to_string(N%2);\n\
    \        N = N/2;\n    }\n    std::reverse(binary.begin(), binary.end());\n  \
    \  return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpqu76_pjo: /tmp/tmpqu76_pjo.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N = N / 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpsctg3hoi: /tmp/tmpsctg3hoi.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary_num =\
    \ \"\";\n    while(N > 0) {\n        binary_num += std::to_string(N % 2);\n  \
    \      N /= 2;\n    }\n    std::reverse(binary_num.begin(), binary_num.end());\n\
    \    return binary_num;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp5zye2g3m: /tmp/tmp5zye2g3m.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmphvglpoyg: /tmp/tmphvglpoyg.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n  std::string result;\n  while\
    \ (N > 0) {\n    result += std::to_string(N % 2);\n    N /= 2;\n  }\n  std::reverse(result.begin(),\
    \ result.end());\n  return result;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmponq32zgo: /tmp/tmponq32zgo.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::stringstream ss;\n \
    \   std::string result;\n    ss << std::bitset<32>(N);\n    ss >> result;\n  \
    \  return result;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpagg5nzka: /tmp/tmpagg5nzka.cpp:19: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp6fygh09u: /tmp/tmp6fygh09u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        int rem = N % 2;\n        binary += std::to_string(rem);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp1_l_vkto: /tmp/tmp1_l_vkto.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ int remainder;\n    while(N!=0)\n    {\n        remainder = N%2;\n        N\
    \ = N/2;\n        binary = std::to_string(remainder) + binary;\n    }\n    return\
    \ binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpadyo09pg: /tmp/tmpadyo09pg.cpp:23: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n  std::string binary;\n  while\
    \ (N > 0) {\n    binary = std::to_string(N % 2) + binary;\n    N /= 2;\n  }\n\
    \  return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpd90z85y8: /tmp/tmpd90z85y8.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary = std::to_string(N % 2) + binary;\n   \
    \     N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpvkxra3gs: /tmp/tmpvkxra3gs.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ int sum = 0;\n    while (N > 0) {\n        sum += N % 2;\n        N /= 2;\n\
    \    }\n    result = std::to_string(sum);\n    return result;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpq5bnzeup: /tmp/tmpq5bnzeup.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N != 0) {\n        binary = std::to_string(N % 2) + binary;\n   \
    \     N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpvkxra3gs: /tmp/tmpvkxra3gs.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmphvglpoyg: /tmp/tmphvglpoyg.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ std::string binary;\n    int sum = 0;\n    while (N) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    for (int i = 0; i < binary.size(); i++) {\n\
    \        sum += binary[i] - '0';\n    }\n    result = std::to_string(sum);\n \
    \   return result;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpbzmsy58z: /tmp/tmpbzmsy58z.cpp:26: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n  std::string binary;\n  while\
    \ (N > 0) {\n    binary = std::to_string(N % 2) + binary;\n    N /= 2;\n  }\n\
    \  return binary;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpd90z85y8: /tmp/tmpd90z85y8.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::stringstream ss;\n \
    \   while(N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"\
    ));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) ==\
    \ (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpbd3btj1i: /tmp/tmpbd3btj1i.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::stringstream ss;\n \
    \   ss << std::bitset<32>(N);\n    std::string str = ss.str();\n    int sum =\
    \ 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] == '1')\
    \ {\n            sum++;\n        }\n    }\n    return std::to_string(sum);\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpz4_xxws2: /tmp/tmpz4_xxws2.cpp:24: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpgt136n3v: /tmp/tmpgt136n3v.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string res;\n    while(N\
    \ > 0) {\n        res.push_back(N%2 + '0');\n        N /= 2;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpf786x2zp: /tmp/tmpf786x2zp.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n\
    \    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) == (\"\
    1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpl9fhl0s_: /tmp/tmpl9fhl0s_.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"\
    1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpuu6pf4vh: /tmp/tmpuu6pf4vh.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmphvglpoyg: /tmp/tmphvglpoyg.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpk_9we6y3: /tmp/tmpk_9we6y3.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N /= 2;\n    }\n    return binary;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpzgkk9ord: /tmp/tmpzgkk9ord.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n  std::string binary = \"\";\n\
    \  while (N > 0) {\n    binary = std::to_string(N % 2) + binary;\n    N = N /\
    \ 2;\n  }\n  return binary;\n}\nint main() {\n    auto candidate = solve;\n  \
    \  assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"110\"\
    ));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpq8zovir9: /tmp/tmpq8zovir9.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N>0){\n        binary = std::to_string(N%2) + binary;\n        N\
    \ = N/2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150)) == (\"\
    110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpanjc070z: /tmp/tmpanjc070z.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n    \
    \    N /= 2;\n    }\n    return binary;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpnfjix9_k: /tmp/tmpnfjix9_k.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s = \"\";\n \
    \   while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmptj4qf28y: /tmp/tmptj4qf28y.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result;\n   \
    \ while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpy9p26g2u: /tmp/tmpy9p26g2u.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary;\n   \
    \ while(N>0){\n        binary+=std::to_string(N%2);\n        N/=2;\n    }\n  \
    \  std::reverse(binary.begin(),binary.end());\n    return binary;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"));\n\
    \    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) == (\"\
    1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp1eem_j3g: /tmp/tmp1eem_j3g.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string result = \"\"\
    ;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n   \
    \     N /= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp77zothi0: /tmp/tmp77zothi0.cpp:20: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string s = \"\";\n    while(N > 0) {\n        if(N % 2 == 0) {\n   \
    \         s = \"0\" + s;\n        } else {\n            s = \"1\" + s;\n     \
    \   }\n        N /= 2;\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((1000)) == (\"1\"));\n    assert(candidate((150))\
    \ == (\"110\"));\n    assert(candidate((147)) == (\"1100\"));\n    assert(candidate((333))\
    \ == (\"1001\"));\n    assert(candidate((963)) == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp3ml8dq1_: /tmp/tmp3ml8dq1_.cpp:25: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138237
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    // Write your code here\n\
    \    std::string res;\n    while(N>0){\n        res.push_back(N%2+'0');\n    \
    \    N/=2;\n    }\n    reverse(res.begin(),res.end());\n    return res;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((1000)) == (\"1\"\
    ));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147)) ==\
    \ (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmpqu0o5eei: /tmp/tmpqu0o5eei.cpp:22: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138237
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000)) ==\
    \ (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp8dz_qrod: /tmp/tmp8dz_qrod.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ N, return the total sum of its digits in binary.\n// Example\n// Variables:\n\
    // @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string\
    \ of binary number\nstd::string solve(long N) {\n    std::string s;\n    while(N>0){\n\
    \        s.push_back(N%2+'0');\n        N/=2;\n    }\n    std::reverse(s.begin(),s.end());\n\
    \    return s;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
    \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
    \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
    \ == (\"10010\"));\n}\n"
  status: Exception
  stderr: 'tmp2t6hnht7: /tmp/tmp2t6hnht7.cpp:21: int main(): Assertion `candidate((1000))
    == ("1")'' failed.

    '
  stdout: ''
  timestamp: 1660138237

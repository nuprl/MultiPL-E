name: HumanEval_132_is_nested
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ a string as input which contains only square brackets.\n// The function should\
  \ return True if and only if there is a valid subsequence of brackets \n// where\
  \ at least one bracket in the subsequence is nested.\nbool is_nested(std::string\
  \ string) {\n"
tests: "}\nint main() {\n    auto candidate = is_nested;\n    assert(candidate((\"\
  [[]]\")) == (true));\n    assert(candidate((\"[]]]]]]][[[[[]\")) == (false));\n\
  \    assert(candidate((\"[][]\")) == (false));\n    assert(candidate((\"[]\")) ==\
  \ (false));\n    assert(candidate((\"[[[[]]]]\")) == (true));\n    assert(candidate((\"\
  []]]]]]]]]]\")) == (false));\n    assert(candidate((\"[][][[]]\")) == (true));\n\
  \    assert(candidate((\"[[]\")) == (false));\n    assert(candidate((\"[]]\")) ==\
  \ (false));\n    assert(candidate((\"[[]][[\")) == (true));\n    assert(candidate((\"\
  [[][]]\")) == (true));\n    assert(candidate((\"\")) == (false));\n    assert(candidate((\"\
  [[[[[[[[\")) == (false));\n    assert(candidate((\"]]]]]]]]\")) == (false));\n}\n"
completions: ["    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        } else if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count < 0) {\n     \
    \       return false;\n        }\n    }\n    return count == 0;", "    int open\
    \ = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            open++;\n        } else if (string[i] == ']') {\n   \
    \         if (open == 0) {\n                return false;\n            }\n   \
    \         open--;\n        }\n    }\n    return open == 0;", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{' ||\
    \ string[i]=='['){\n            st.push(string[i]);\n        }\n        else if(string[i]==')'\
    \ || string[i]=='}' || string[i]==']'){\n            if(st.empty()){\n       \
    \         return false;\n            }\n            else if(string[i]==')' &&\
    \ st.top()=='('){\n                st.pop();\n            }\n            else\
    \ if(string[i]=='}' && st.top()=='{'){\n                st.pop();\n          \
    \  }\n            else if(string[i]==']' && st.top()=='['){\n                st.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> stack;\n    for (char c\
    \ : string) {\n        if (c == '(') {\n            stack.push(c);\n        }\
    \ else if (c == ')') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('\
    \ || string[i]=='{' || string[i]=='['){\n            s.push(string[i]);\n    \
    \    }\n        else if(string[i]==')' || string[i]=='}' || string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else if(string[i]==')' && s.top()=='('){\n                s.pop();\n\
    \            }\n            else if(string[i]=='}' && s.top()=='{'){\n       \
    \         s.pop();\n            }\n            else if(string[i]==']' && s.top()=='['){\n\
    \                s.pop();\n            }\n            else{\n                return\
    \ false;\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    int count = 0;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        } else if (string[i] == ']') {\n          \
    \  count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    int count = 0;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n      \
    \      count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{' ||\
    \ string[i]=='['){\n            s.push(string[i]);\n        }\n        else if(string[i]==')'\
    \ || string[i]=='}' || string[i]==']'){\n            if(s.empty()){\n        \
    \        return false;\n            }\n            else if(string[i]==')' && s.top()=='('){\n\
    \                s.pop();\n            }\n            else if(string[i]=='}' &&\
    \ s.top()=='{'){\n                s.pop();\n            }\n            else if(string[i]==']'\
    \ && s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           st.pop();\n        }\n    }\n    if(st.empty()){\n        return true;\n\
    \    }\n    return false;", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n           \
    \ st.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]=='}'\
    \ || string[i]==']'){\n            if(st.empty()){\n                return false;\n\
    \            }\n            if(string[i]==')' && st.top()=='('){\n           \
    \     st.pop();\n            }\n            else if(string[i]=='}' && st.top()=='{'){\n\
    \                st.pop();\n            }\n            else if(string[i]==']'\
    \ && st.top()=='['){\n                st.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(st.empty()){\n\
    \        return true;\n    }\n    return false;", "    std::stack<char> stack;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(')\
    \ {\n            stack.push(string[i]);\n        } else if (string[i] == ')')\
    \ {\n            if (stack.empty()) {\n                return false;\n       \
    \     } else {\n                stack.pop();\n            }\n        }\n    }\n\
    \    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('){\n            st.push(string[i]);\n\
    \        }\n        else if(string[i]==')'){\n            if(st.empty()){\n  \
    \              return false;\n            }\n            else{\n             \
    \   st.pop();\n            }\n        }\n    }\n    if(st.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        } else if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count < 0) {\n     \
    \       return false;\n        }\n    }\n    return count == 0;", "    std::stack<char>\
    \ st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='[' || string[i]=='{'){\n           \
    \ st.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]==']'\
    \ || string[i]=='}'){\n            if(st.empty()){\n                return false;\n\
    \            }\n            else if(string[i]==')' && st.top()=='('){\n      \
    \          st.pop();\n            }\n            else if(string[i]==']' && st.top()=='['){\n\
    \                st.pop();\n            }\n            else if(string[i]=='}'\
    \ && st.top()=='{'){\n                st.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(st.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    //\
    \ Write your code here\n    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n \
    \           stack.push(string[i]);\n        } else if (string[i] == ')') {\n \
    \           if (stack.empty()) {\n                return false;\n            }\
    \ else {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n\
    \        } else if (c == ')') {\n            if (stack.empty()) {\n          \
    \      return false;\n            }\n            stack.pop();\n        }\n   \
    \ }\n    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n           \
    \ s.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]=='}'\
    \ || string[i]==']'){\n            if(s.empty()){\n                return false;\n\
    \            }\n            if(string[i]==')' && s.top()=='('){\n            \
    \    s.pop();\n            }\n            else if(string[i]=='}' && s.top()=='{'){\n\
    \                s.pop();\n            }\n            else if(string[i]==']' &&\
    \ s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    int\
    \ count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    int count = 0;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n      \
    \      count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> stack;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n          \
    \  stack.push(string[i]);\n        } else if (string[i] == ')') {\n          \
    \  if (stack.empty()) {\n                return false;\n            } else {\n\
    \                stack.pop();\n            }\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('\
    \ || string[i]=='{' || string[i]=='['){\n            st.push(string[i]);\n   \
    \     }\n        else if(string[i]==')' || string[i]=='}' || string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else if(string[i]==')' && st.top()=='('){\n                st.pop();\n\
    \            }\n            else if(string[i]=='}' && st.top()=='{'){\n      \
    \          st.pop();\n            }\n            else if(string[i]==']' && st.top()=='['){\n\
    \                st.pop();\n            }\n            else{\n               \
    \ return false;\n            }\n        }\n    }\n    if(st.empty()){\n      \
    \  return true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='('){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n \
    \           stack.push(string[i]);\n        } else if (string[i] == ')') {\n \
    \           if (stack.empty()) {\n                return false;\n            }\
    \ else {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> stack;\n    for (char\
    \ c : string) {\n        if (c == '(') {\n            stack.push(c);\n       \
    \ } else if (c == ')') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (char c : string) {\n\
    \        if (c == '(') {\n            stack.push(c);\n        } else if (c ==\
    \ ')') {\n            if (stack.empty()) {\n                return false;\n  \
    \          }\n            stack.pop();\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='('){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n \
    \       } else if (c == ')') {\n            if (stack.empty()) {\n           \
    \     return false;\n            }\n            stack.pop();\n        }\n    }\n\
    \    return stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '(') {\n            stack.push(string[i]);\n       \
    \ } else if (string[i] == ')') {\n            if (stack.empty()) {\n         \
    \       return false;\n            } else {\n                stack.pop();\n  \
    \          }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          s.pop();\n        }\n    }\n    if(s.empty()){\n        return true;\n\
    \    }\n    return false;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==')'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('){\n            st.push(string[i]);\n\
    \        }\n        else if(string[i]==')'){\n            if(st.empty()){\n  \
    \              return false;\n            }\n            else{\n             \
    \   st.pop();\n            }\n        }\n    }\n    if(st.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> stack;\n    for (auto\
    \ c : string) {\n        if (c == '(') {\n            stack.push(c);\n       \
    \ } else if (c == ')') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (char c : string) {\n        if (c == '(')\
    \ {\n            stack.push(c);\n        } else if (c == ')') {\n            if\
    \ (stack.empty()) {\n                return false;\n            }\n          \
    \  stack.pop();\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            s.pop();\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    return false;", "    std::stack<char> s;\n \
    \   for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n       \
    \     s.push(string[i]);\n        }\n        else if(string[i]==')'){\n      \
    \      if(s.empty()){\n                return false;\n            }\n        \
    \    else{\n                s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    int\
    \ count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    int count = 0;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n      \
    \      count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> stack;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n          \
    \  stack.push(string[i]);\n        } else if (string[i] == ')') {\n          \
    \  if (stack.empty()) {\n                return false;\n            } else {\n\
    \                stack.pop();\n            }\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==')' || string[i]=='}' || string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else if(string[i]==')' && s.top()=='('){\n                s.pop();\n\
    \            }\n            else if(string[i]=='}' && s.top()=='{'){\n       \
    \         s.pop();\n            }\n            else if(string[i]==']' && s.top()=='['){\n\
    \                s.pop();\n            }\n            else{\n                return\
    \ false;\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('){\n            st.push(string[i]);\n\
    \        }\n        else if(string[i]==')'){\n            if(st.empty()){\n  \
    \              return false;\n            }\n            else{\n             \
    \   st.pop();\n            }\n        }\n    }\n    if(st.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n\
    \        } else if (c == ')') {\n            if (stack.empty()) {\n          \
    \      return false;\n            }\n            stack.pop();\n        }\n   \
    \ }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i <\
    \ string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n\
    \        } else if (c == ')') {\n            if (stack.empty()) {\n          \
    \      return false;\n            }\n            stack.pop();\n        }\n   \
    \ }\n    return stack.empty();", "    std::stack<char> stack;\n    for (char c\
    \ : string) {\n        if (c == '(') {\n            stack.push(c);\n        }\
    \ else if (c == ')') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (auto c : string) {\n\
    \        if (c == '(') {\n            stack.push(c);\n        } else if (c ==\
    \ ')') {\n            if (stack.empty()) {\n                return false;\n  \
    \          }\n            stack.pop();\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> stack;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '(') {\n            stack.push(string[i]);\n       \
    \ } else if (string[i] == ')') {\n            if (stack.empty()) {\n         \
    \       return false;\n            } else {\n                stack.pop();\n  \
    \          }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{'\
    \ || string[i]=='['){\n            s.push(string[i]);\n        }\n        else\
    \ if(string[i]==')' || string[i]=='}' || string[i]==']'){\n            if(s.empty()){\n\
    \                return false;\n            }\n            else if(string[i]==')'\
    \ && s.top()=='('){\n                s.pop();\n            }\n            else\
    \ if(string[i]=='}' && s.top()=='{'){\n                s.pop();\n            }\n\
    \            else if(string[i]==']' && s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n \
    \       } else if (c == ')') {\n            if (stack.empty()) {\n           \
    \     return false;\n            }\n            stack.pop();\n        }\n    }\n\
    \    return stack.empty();", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> stack;\n    for (auto c\
    \ : string) {\n        if (c == '(') {\n            stack.push(c);\n        }\
    \ else if (c == ')') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (char c : string) {\n\
    \        if (c == '(') {\n            stack.push(c);\n        } else if (c ==\
    \ ')') {\n            if (stack.empty()) {\n                return false;\n  \
    \          }\n            stack.pop();\n        }\n    }\n    return stack.empty();",
  "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        } else if (string[i] ==\
    \ ']') {\n            count--;\n        }\n        if (count < 0) {\n        \
    \    return false;\n        }\n    }\n    return count == 0;", "    std::stack<char>\
    \ st;\n    for(char c : string) {\n        if(c == '(' || c == '[' || c == '{')\
    \ {\n            st.push(c);\n        } else if(c == ')' || c == ']' || c == '}')\
    \ {\n            if(st.empty()) {\n                return false;\n           \
    \ }\n            char top = st.top();\n            if(c == ')' && top == '(')\
    \ {\n                st.pop();\n            } else if(c == ']' && top == '[')\
    \ {\n                st.pop();\n            } else if(c == '}' && top == '{')\
    \ {\n                st.pop();\n            } else {\n                return false;\n\
    \            }\n        }\n    }\n    return st.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    int count =\
    \ 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        } else if (string[i] == ']') {\n     \
    \       count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{' ||\
    \ string[i]=='['){\n            s.push(string[i]);\n        }\n        else if(string[i]==')'\
    \ || string[i]=='}' || string[i]==']'){\n            if(s.empty()){\n        \
    \        return false;\n            }\n            if(string[i]==')' && s.top()=='('){\n\
    \                s.pop();\n            }\n            else if(string[i]=='}' &&\
    \ s.top()=='{'){\n                s.pop();\n            }\n            else if(string[i]==']'\
    \ && s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    //\
    \ Write your code here\n    int n = string.length();\n    std::stack<char> s;\n\
    \    for(int i=0;i<n;i++){\n        if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==')' ||\
    \ string[i]=='}' || string[i]==']'){\n            if(s.empty()){\n           \
    \     return false;\n            }\n            else if(string[i]==')' && s.top()=='('){\n\
    \                s.pop();\n            }\n            else if(string[i]=='}' &&\
    \ s.top()=='{'){\n                s.pop();\n            }\n            else if(string[i]==']'\
    \ && s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    int\
    \ count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> s;\n    for(char\
    \ c : string) {\n        if(c == '(') {\n            s.push(c);\n        } else\
    \ if(c == ')') {\n            if(s.empty()) {\n                return false;\n\
    \            } else {\n                s.pop();\n            }\n        }\n  \
    \  }\n    return s.empty();", "    std::stack<char> stack;\n    for (char c :\
    \ string) {\n        if (c == '(') {\n            stack.push(c);\n        } else\
    \ if (c == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            }\n            stack.pop();\n        }\n    }\n    return stack.empty();",
  "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        } else if (string[i] ==\
    \ ']') {\n            count--;\n        }\n        if (count < 0) {\n        \
    \    return false;\n        }\n    }\n    return count == 0;", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            s.pop();\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    return false;", "    int count = 0;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n \
    \           count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n \
    \       } else if (c == ')') {\n            if (stack.empty()) {\n           \
    \     return false;\n            }\n            stack.pop();\n        }\n    }\n\
    \    return stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (char c : string) {\n        if (c == '(')\
    \ {\n            stack.push(c);\n        } else if (c == ')') {\n            if\
    \ (stack.empty()) {\n                return false;\n            }\n          \
    \  stack.pop();\n        }\n    }\n    return stack.empty();", "    int count\
    \ = 0;\n    for (char c : string) {\n        if (c == '[') {\n            count++;\n\
    \        } else if (c == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        } else if (string[i] ==\
    \ ']') {\n            count--;\n        }\n        if (count < 0) {\n        \
    \    return false;\n        }\n    }\n    return count == 0;", "    int count\
    \ = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> stack;\n   \
    \ for(int i = 0; i < string.length(); i++) {\n        if(string[i] == '(' || string[i]\
    \ == '{' || string[i] == '[') {\n            stack.push(string[i]);\n        }\n\
    \        else if(string[i] == ')' || string[i] == '}' || string[i] == ']') {\n\
    \            if(stack.empty()) {\n                return false;\n            }\n\
    \            else if(string[i] == ')' && stack.top() == '(') {\n             \
    \   stack.pop();\n            }\n            else if(string[i] == '}' && stack.top()\
    \ == '{') {\n                stack.pop();\n            }\n            else if(string[i]\
    \ == ']' && stack.top() == '[') {\n                stack.pop();\n            }\n\
    \            else {\n                return false;\n            }\n        }\n\
    \    }\n    if(stack.empty()) {\n        return true;\n    }\n    else {\n   \
    \     return false;\n    }", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='[' || string[i]=='{'){\n           \
    \ st.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]==']'\
    \ || string[i]=='}'){\n            if(st.empty()){\n                return false;\n\
    \            }\n            else if(string[i]==')' && st.top()=='('){\n      \
    \          st.pop();\n            }\n            else if(string[i]==']' && st.top()=='['){\n\
    \                st.pop();\n            }\n            else if(string[i]=='}'\
    \ && st.top()=='{'){\n                st.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(st.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ == '(' || string[i] == '[' || string[i] == '{') {\n            stack.push(string[i]);\n\
    \        }\n        else if(string[i] == ')' || string[i] == ']' || string[i]\
    \ == '}') {\n            if(stack.empty()) {\n                return false;\n\
    \            }\n            else if(string[i] == ')' && stack.top() == '(') {\n\
    \                stack.pop();\n            }\n            else if(string[i] ==\
    \ ']' && stack.top() == '[') {\n                stack.pop();\n            }\n\
    \            else if(string[i] == '}' && stack.top() == '{') {\n             \
    \   stack.pop();\n            }\n            else {\n                return false;\n\
    \            }\n        }\n    }\n    if(stack.empty()) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }", "    std::stack<char> st;\n\
    \    for(int i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{'\
    \ || string[i]=='['){\n            st.push(string[i]);\n        }\n        else\
    \ if(string[i]==')' || string[i]=='}' || string[i]==']'){\n            if(st.empty()){\n\
    \                return false;\n            }\n            else if(string[i]==')'\
    \ && st.top()=='('){\n                st.pop();\n            }\n            else\
    \ if(string[i]=='}' && st.top()=='{'){\n                st.pop();\n          \
    \  }\n            else if(string[i]==']' && st.top()=='['){\n                st.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> stack;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n          \
    \  stack.push(string[i]);\n        } else if (string[i] == ')') {\n          \
    \  if (stack.empty()) {\n                return false;\n            } else {\n\
    \                stack.pop();\n            }\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> stack;\n    for(auto c : string) {\n        if(c == '(' ||\
    \ c == '[' || c == '{') {\n            stack.push(c);\n        } else if(c ==\
    \ ')' || c == ']' || c == '}') {\n            if(stack.empty()) {\n          \
    \      return false;\n            }\n            char top = stack.top();\n   \
    \         if(top == '(' && c == ')') {\n                stack.pop();\n       \
    \     } else if(top == '[' && c == ']') {\n                stack.pop();\n    \
    \        } else if(top == '{' && c == '}') {\n                stack.pop();\n \
    \           } else {\n                return false;\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> stack;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n      \
    \      stack.push(string[i]);\n        } else if (string[i] == ')') {\n      \
    \      if (stack.empty()) {\n                return false;\n            } else\
    \ {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for(auto c : string) {\n\
    \        if(c == '(' || c == '[' || c == '{') {\n            stack.push(c);\n\
    \        } else if(c == ')' || c == ']' || c == '}') {\n            if(stack.empty())\
    \ {\n                return false;\n            }\n            char top = stack.top();\n\
    \            if(c == ')' && top == '(') {\n                stack.pop();\n    \
    \        } else if(c == ']' && top == '[') {\n                stack.pop();\n \
    \           } else if(c == '}' && top == '{') {\n                stack.pop();\n\
    \            } else {\n                return false;\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] == '(') {\n       \
    \     stack.push(string[i]);\n        } else if(string[i] == ')') {\n        \
    \    if(stack.empty()) {\n                return false;\n            } else {\n\
    \                stack.pop();\n            }\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          s.pop();\n        }\n    }\n    if(s.empty()){\n        return true;\n\
    \    }\n    return false;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n           \
    \ s.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]=='}'\
    \ || string[i]==']'){\n            if(s.empty()){\n                return false;\n\
    \            }\n            else if(string[i]==')' && s.top()=='('){\n       \
    \         s.pop();\n            }\n            else if(string[i]=='}' && s.top()=='{'){\n\
    \                s.pop();\n            }\n            else if(string[i]==']' &&\
    \ s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        }\n        else if(string[i]\
    \ == ')') {\n            if(stack.empty()) {\n                return false;\n\
    \            }\n            stack.pop();\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='(')\n\
    \            s.push(string[i]);\n        else if(string[i]==')'){\n          \
    \  if(s.empty())\n                return false;\n            else\n          \
    \      s.pop();\n        }\n    }\n    if(s.empty())\n        return true;\n \
    \   else\n        return false;", "    int count = 0;\n    for (int i = 0; i <\
    \ string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            s.pop();\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    return false;", "    int count = 0;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n \
    \           count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for(int i = 0; i < string.length(); i++) {\n \
    \       if(string[i] == '(') {\n            stack.push(string[i]);\n        }\n\
    \        else if(string[i] == ')') {\n            if(stack.empty()) {\n      \
    \          return false;\n            }\n            else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    int count =\
    \ 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        } else if (string[i] == ']') {\n     \
    \       count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> stack;\n   \
    \ for(int i = 0; i < string.length(); i++) {\n        if(string[i] == '(' || string[i]\
    \ == '[' || string[i] == '{') {\n            stack.push(string[i]);\n        }\n\
    \        else if(string[i] == ')' || string[i] == ']' || string[i] == '}') {\n\
    \            if(stack.empty()) {\n                return false;\n            }\n\
    \            else if(string[i] == ')' && stack.top() == '(') {\n             \
    \   stack.pop();\n            }\n            else if(string[i] == ']' && stack.top()\
    \ == '[') {\n                stack.pop();\n            }\n            else if(string[i]\
    \ == '}' && stack.top() == '{') {\n                stack.pop();\n            }\n\
    \            else {\n                return false;\n            }\n        }\n\
    \    }\n    if(stack.empty()) {\n        return true;\n    }\n    else {\n   \
    \     return false;\n    }", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for(int i = 0; i < string.length(); i++) {\n \
    \       if(string[i] == '(') {\n            stack.push(string[i]);\n        }\
    \ else if(string[i] == ')') {\n            if(stack.empty()) {\n             \
    \   return false;\n            } else {\n                stack.pop();\n      \
    \      }\n        }\n    }\n    return stack.empty();", "    int count = 0;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        } else if (string[i] == ']') {\n          \
    \  count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "  int count = 0;\n  for (int i =\
    \ 0; i < string.length(); i++) {\n    if (string[i] == '[') {\n      count++;\n\
    \    } else if (string[i] == ']') {\n      count--;\n    }\n    if (count < 0)\
    \ {\n      return false;\n    }\n  }\n  return count == 0;", "    std::stack<char>\
    \ stack;\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ == '(' || string[i] == '{' || string[i] == '[') {\n            stack.push(string[i]);\n\
    \        }\n        else if(string[i] == ')' || string[i] == '}' || string[i]\
    \ == ']') {\n            if(stack.empty()) {\n                return false;\n\
    \            }\n            else if(string[i] == ')' && stack.top() == '(') {\n\
    \                stack.pop();\n            }\n            else if(string[i] ==\
    \ '}' && stack.top() == '{') {\n                stack.pop();\n            }\n\
    \            else if(string[i] == ']' && stack.top() == '[') {\n             \
    \   stack.pop();\n            }\n            else {\n                return false;\n\
    \            }\n        }\n    }\n    if(stack.empty()) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }", "    std::stack<char> stack;\n\
    \    for(int i = 0; i < string.length(); i++) {\n        if(string[i] == '(')\
    \ {\n            stack.push(string[i]);\n        }\n        else if(string[i]\
    \ == ')') {\n            if(stack.empty()) {\n                return false;\n\
    \            }\n            else {\n                stack.pop();\n           \
    \ }\n        }\n    }\n    return stack.empty();", "    std::stack<char> stack;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(')\
    \ {\n            stack.push(string[i]);\n        } else if (string[i] == ')')\
    \ {\n            if (stack.empty()) {\n                return false;\n       \
    \     } else {\n                stack.pop();\n            }\n        }\n    }\n\
    \    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('||string[i]=='{'||string[i]=='['){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==')'||string[i]=='}'||string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else if(string[i]==')'&&st.top()=='('){\n                st.pop();\n\
    \            }\n            else if(string[i]=='}'&&st.top()=='{'){\n        \
    \        st.pop();\n            }\n            else if(string[i]==']'&&st.top()=='['){\n\
    \                st.pop();\n            }\n            else{\n               \
    \ return false;\n            }\n        }\n    }\n    if(st.empty()){\n      \
    \  return true;\n    }\n    else{\n        return false;\n    }", "    int count\
    \ = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> stack;\n   \
    \ for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n\
    \            stack.push(string[i]);\n        } else if (string[i] == ')') {\n\
    \            if (stack.empty()) {\n                return false;\n           \
    \ } else {\n                stack.pop();\n            }\n        }\n    }\n  \
    \  return stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '(') {\n            stack.push(string[i]);\n       \
    \ } else if (string[i] == ')') {\n            if (stack.empty()) {\n         \
    \       return false;\n            } else {\n                stack.pop();\n  \
    \          }\n        }\n    }\n    return stack.empty();", "    int count = 0;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        } else if (string[i] == ']') {\n          \
    \  count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    int count = 0;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n      \
    \      count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n \
    \           stack.push(string[i]);\n        } else if (string[i] == ')') {\n \
    \           if (stack.empty()) {\n                return false;\n            }\
    \ else {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (char c : string) {\n        if (c == '(')\
    \ {\n            stack.push(c);\n        } else if (c == ')') {\n            if\
    \ (stack.empty()) {\n                return false;\n            }\n          \
    \  stack.pop();\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{'\
    \ || string[i]=='['){\n            s.push(string[i]);\n        }\n        else\
    \ if(string[i]==')' || string[i]=='}' || string[i]==']'){\n            if(s.empty()){\n\
    \                return false;\n            }\n            else if(string[i]==')'\
    \ && s.top()=='('){\n                s.pop();\n            }\n            else\
    \ if(string[i]=='}' && s.top()=='{'){\n                s.pop();\n            }\n\
    \            else if(string[i]==']' && s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '(') {\n            stack.push(string[i]);\n       \
    \ } else if (string[i] == ')') {\n            if (stack.empty()) {\n         \
    \       return false;\n            } else {\n                stack.pop();\n  \
    \          }\n        }\n    }\n    return stack.empty();", "    int count = 0;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        } else if (string[i] == ']') {\n          \
    \  count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> stack;\n   \
    \ for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n\
    \            stack.push(string[i]);\n        } else if (string[i] == ')') {\n\
    \            if (stack.empty()) {\n                return false;\n           \
    \ } else {\n                stack.pop();\n            }\n        }\n    }\n  \
    \  return stack.empty();", "    std::stack<char> stack;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    int n = string.length();\n\
    \    std::stack<char> s;\n    for(int i = 0; i < n; i++) {\n        if(string[i]\
    \ == '(' || string[i] == '{' || string[i] == '[') {\n            s.push(string[i]);\n\
    \        }\n        else if(string[i] == ')' || string[i] == '}' || string[i]\
    \ == ']') {\n            if(s.empty()) {\n                return false;\n    \
    \        }\n            else if(string[i] == ')' && s.top() == '(') {\n      \
    \          s.pop();\n            }\n            else if(string[i] == '}' && s.top()\
    \ == '{') {\n                s.pop();\n            }\n            else if(string[i]\
    \ == ']' && s.top() == '[') {\n                s.pop();\n            }\n     \
    \       else {\n                return false;\n            }\n        }\n    }\n\
    \    if(s.empty()) {\n        return true;\n    }\n    else {\n        return\
    \ false;\n    }", "    std::stack<char> stack;\n    for (char c : string) {\n\
    \        if (c == '(') {\n            stack.push(c);\n        } else if (c ==\
    \ ')') {\n            if (stack.empty()) {\n                return false;\n  \
    \          }\n            stack.pop();\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        } else if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count < 0) {\n     \
    \       return false;\n        }\n    }\n    return count == 0;", "    int count\
    \ = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> stack;\n   \
    \ for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n\
    \            stack.push(string[i]);\n        } else if (string[i] == ')') {\n\
    \            if (stack.empty()) {\n                return false;\n           \
    \ } else {\n                stack.pop();\n            }\n        }\n    }\n  \
    \  return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n \
    \           stack.push(string[i]);\n        } else if (string[i] == ')') {\n \
    \           if (stack.empty()) {\n                return false;\n            }\
    \ else {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    int count = 0;\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n           \
    \ s.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]=='}'\
    \ || string[i]==']'){\n            if(s.empty()){\n                return false;\n\
    \            }\n            else if(string[i]==')' && s.top()=='('){\n       \
    \         s.pop();\n            }\n            else if(string[i]=='}' && s.top()=='{'){\n\
    \                s.pop();\n            }\n            else if(string[i]==']' &&\
    \ s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    int\
    \ count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==')'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    int count = 0;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        } else if (string[i] == ']') {\n          \
    \  count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "\tstd::stack<char> st;\n\tfor(int\
    \ i=0;i<string.length();i++)\n\t{\n\t\tif(string[i]=='(')\n\t\t{\n\t\t\tst.push(string[i]);\n\
    \t\t}\n\t\telse if(string[i]==')')\n\t\t{\n\t\t\tif(st.empty())\n\t\t\t{\n\t\t\
    \t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tst.pop();\n\t\t\t}\n\t\
    \t}\n\t}\n\tif(st.empty())\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn\
    \ false;\n\t}", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        } else if (string[i] ==\
    \ ']') {\n            count--;\n        }\n        if (count < 0) {\n        \
    \    return false;\n        }\n    }\n    return count == 0;", "    std::stack<char>\
    \ stack;\n    for (char c : string) {\n        if (c == '(') {\n            stack.push(c);\n\
    \        } else if (c == ')') {\n            if (stack.empty()) {\n          \
    \      return false;\n            }\n            stack.pop();\n        }\n   \
    \ }\n    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='('){\n            st.push(string[i]);\n\
    \        }\n        else if(string[i]==')'){\n            if(st.empty()){\n  \
    \              return false;\n            }\n            else{\n             \
    \   st.pop();\n            }\n        }\n    }\n    if(st.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '(') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ')') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==')'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            s.pop();\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    return false;", "    int count = 0;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n \
    \           count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (auto c : string) {\n        if (c == '(')\
    \ {\n            stack.push(c);\n        } else if (c == ')') {\n            if\
    \ (stack.empty()) {\n                return false;\n            }\n          \
    \  stack.pop();\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='['\
    \ || string[i]=='{'){\n            s.push(string[i]);\n        }\n        else\
    \ if(string[i]==')' || string[i]==']' || string[i]=='}'){\n            if(s.empty()){\n\
    \                return false;\n            }\n            else if(string[i]==')'\
    \ && s.top()=='('){\n                s.pop();\n            }\n            else\
    \ if(string[i]==']' && s.top()=='['){\n                s.pop();\n            }\n\
    \            else if(string[i]=='}' && s.top()=='{'){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> stack;\n    for (auto c\
    \ : string) {\n        if (c == '(') {\n            stack.push(c);\n        }\
    \ else if (c == ')') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '(') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ')') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='('){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==')'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "  int count = 0;\n  for (int i = 0; i < string.length(); i++) {\n  \
    \  if (string[i] == '[') {\n      count++;\n    } else if (string[i] == ']') {\n\
    \      count--;\n    }\n    if (count < 0) {\n      return false;\n    }\n  }\n\
    \  return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='{' || string[i]=='['){\n           \
    \ s.push(string[i]);\n        }\n        else if(string[i]==')' || string[i]=='}'\
    \ || string[i]==']'){\n            if(s.empty()){\n                return false;\n\
    \            }\n            else if(string[i]==')' && s.top()=='('){\n       \
    \         s.pop();\n            }\n            else if(string[i]=='}' && s.top()=='{'){\n\
    \                s.pop();\n            }\n            else if(string[i]==']' &&\
    \ s.top()=='['){\n                s.pop();\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }\n    if(s.empty()){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "  int\
    \ count = 0;\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i]\
    \ == '[') {\n      count++;\n    } else if (string[i] == ']') {\n      count--;\n\
    \    }\n    if (count < 0) {\n      return false;\n    }\n  }\n  return count\
    \ == 0;", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='(' || string[i]=='{' ||\
    \ string[i]=='['){\n            st.push(string[i]);\n        }\n        else if(string[i]==')'\
    \ || string[i]=='}' || string[i]==']'){\n            if(st.empty()){\n       \
    \         return false;\n            }\n            else if(string[i]==')' &&\
    \ st.top()=='('){\n                st.pop();\n            }\n            else\
    \ if(string[i]=='}' && st.top()=='{'){\n                st.pop();\n          \
    \  }\n            else if(string[i]==']' && st.top()=='['){\n                st.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='('){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==')'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            st.pop();\n        }\n    }\n    if(st.empty()){\n\
    \        return true;\n    }\n    return false;", "    int count = 0;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n \
    \           count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='(' || string[i]=='{' || string[i]=='[')\n            s.push(string[i]);\n\
    \        else if(string[i]==')' || string[i]=='}' || string[i]==']'){\n      \
    \      if(s.empty())\n                return false;\n            else if(string[i]==')'\
    \ && s.top()=='(')\n                s.pop();\n            else if(string[i]=='}'\
    \ && s.top()=='{')\n                s.pop();\n            else if(string[i]==']'\
    \ && s.top()=='[')\n                s.pop();\n            else\n             \
    \   return false;\n        }\n    }\n    if(s.empty())\n        return true;\n\
    \    else\n        return false;", "    std::stack<char> stack;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '(') {\n      \
    \      stack.push(string[i]);\n        } else if (string[i] == ')') {\n      \
    \      if (stack.empty()) {\n                return false;\n            } else\
    \ {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '(') {\n            stack.push(string[i]);\n       \
    \ } else if (string[i] == ')') {\n            if (stack.empty()) {\n         \
    \       return false;\n            } else {\n                stack.pop();\n  \
    \          }\n        }\n    }\n    return stack.empty();"]
stop_tokens:
- "\n}"

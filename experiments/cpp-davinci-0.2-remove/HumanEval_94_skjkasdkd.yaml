name: HumanEval_94_skjkasdkd
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of integers.\n\
  // You need to find the largest prime value and return the sum of its digits.\n\
  // Examples:\nlong skjkasdkd(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
  \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
  \ (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
  \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
  \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
  \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
  \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
  \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
  \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
  \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
  \ (long)97, (long)8192}))) == (10));\n}\n"
completions: ["    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n  \
    \      if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    long\
    \ sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    std::vector<long> primes;\n    for (int i = 2; i <= max; i++) {\n\
    \        bool isPrime = true;\n        for (int j = 2; j < i; j++) {\n       \
    \     if (i % j == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            primes.push_back(i);\n\
    \        }\n    }\n    long maxPrime = 0;\n    for (int i = 0; i < primes.size();\
    \ i++) {\n        if (primes[i] > maxPrime) {\n            maxPrime = primes[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (maxPrime > 0) {\n        sum\
    \ += maxPrime % 10;\n        maxPrime /= 10;\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  std::cout << max << std::endl;\n\
    \  long sum = 0;\n  while (max != 0) {\n    sum += max % 10;\n    max /= 10;\n\
    \  }\n  return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] == max)\
    \ {\n            lst.erase(lst.begin() + i);\n        }\n    }\n    for (int i\
    \ = 0; i < lst.size(); i++) {\n        if (lst[i] == max) {\n            lst.erase(lst.begin()\
    \ + i);\n        }\n    }\n    return max;", "  std::vector<long> primes;\n  for\
    \ (long i = 2; i < lst.size(); i++) {\n    bool isPrime = true;\n    for (long\
    \ j = 2; j < i; j++) {\n      if (i % j == 0) {\n        isPrime = false;\n  \
    \      break;\n      }\n    }\n    if (isPrime) {\n      primes.push_back(i);\n\
    \    }\n  }\n  long maxPrime = 0;\n  for (long i = 0; i < primes.size(); i++)\
    \ {\n    if (primes[i] > maxPrime) {\n      maxPrime = primes[i];\n    }\n  }\n\
    \  long sum = 0;\n  while (maxPrime > 0) {\n    sum += maxPrime % 10;\n    maxPrime\
    \ /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  return max;",
  "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    return sum;", "    long max = 0;\n   \
    \ for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n      \
    \      max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0)\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;", " \
    \   long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (long i = 2;\
    \ i < max; i++) {\n        if (max % i == 0) {\n            max = max / i;\n \
    \           i = 2;\n        }\n    }\n    long sum = 0;\n    while (max > 0) {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    return sum;", "  long\
    \ max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n\
    \      max = lst[i];\n    }\n  }\n  for (int i = 2; i < max; i++) {\n    if (max\
    \ % i == 0) {\n      max = max / i;\n      i = 2;\n    }\n  }\n  long sum = 0;\n\
    \  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (long i = max;\
    \ i > 0; i--) {\n        bool isPrime = true;\n        for (long j = 2; j < i;\
    \ j++) {\n            if (i % j == 0) {\n                isPrime = false;\n  \
    \              break;\n            }\n        }\n        if (isPrime) {\n    \
    \        long sum = 0;\n            while (i > 0) {\n                sum += i\
    \ % 10;\n                i /= 10;\n            }\n            return sum;\n  \
    \      }\n    }\n    return 0;", "    // Write your code here\n    long max=0;\n\
    \    for(long i=0;i<lst.size();i++){\n        if(lst[i]>max){\n            max=lst[i];\n\
    \        }\n    }\n    long count=0;\n    for(long i=2;i<=max;i++){\n        if(max%i==0){\n\
    \            count++;\n        }\n    }\n    if(count==1){\n        return max;\n\
    \    }\n    else{\n        return 0;\n    }", "  // your code here\n  long max\
    \ = 0;\n  for(long i = 0; i < lst.size(); i++){\n    if(lst[i] > max){\n     \
    \ max = lst[i];\n    }\n  }\n  long sum = 0;\n  while(max > 0){\n    sum += max\
    \ % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0) {\n    \
    \    sum += max % 10;\n        max /= 10;\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    int sum = 0;\n    while\
    \ (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0)\
    \ {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max =\
    \ 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n   \
    \   max = lst[i];\n    }\n  }\n  std::vector<long> primes;\n  for (long i = 2;\
    \ i <= max; i++) {\n    bool isPrime = true;\n    for (long j = 2; j < i; j++)\
    \ {\n      if (i % j == 0) {\n        isPrime = false;\n        break;\n     \
    \ }\n    }\n    if (isPrime) {\n      primes.push_back(i);\n    }\n  }\n  long\
    \ maxPrime = 0;\n  for (long i = 0; i < primes.size(); i++) {\n    if (primes[i]\
    \ > maxPrime) {\n      maxPrime = primes[i];\n    }\n  }\n  long sum = 0;\n  while\
    \ (maxPrime > 0) {\n    sum += maxPrime % 10;\n    maxPrime /= 10;\n  }\n  return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = 2; i < max; i++) {\n        for (long j = 0; j < lst.size(); j++)\
    \ {\n            if (lst[j] % i == 0) {\n                lst[j] = lst[j] / i;\n\
    \            }\n        }\n    }\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        sum += lst[i];\n    }\n    return sum;", "  long\
    \ max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n\
    \      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum\
    \ += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    return max;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    std::vector<long> primes;\n    for (int i =\
    \ 2; i <= max; i++) {\n        bool isPrime = true;\n        for (int j = 2; j\
    \ <= i / 2; j++) {\n            if (i % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          primes.push_back(i);\n        }\n    }\n    long maxPrime = 0;\n  \
    \  for (int i = 0; i < primes.size(); i++) {\n        if (primes[i] > maxPrime)\
    \ {\n            maxPrime = primes[i];\n        }\n    }\n    long sum = 0;\n\
    \    while (maxPrime > 0) {\n        sum += maxPrime % 10;\n        maxPrime /=\
    \ 10;\n    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "  long max = 0;\n  for (int i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = max; i > 0; i--) {\n        bool isPrime = true;\n        for (long\
    \ j = 2; j < i; j++) {\n            if (i % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            long sum = 0;\n            while (i > 0) {\n                sum\
    \ += i % 10;\n                i /= 10;\n            }\n            return sum;\n\
    \        }\n    }\n    return 0;", "    long max = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    return sum;", "  long max = 0;\n  for\
    \ (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    std::vector<long> primes;\n    for (int i = 2; i <= max; i++) {\n\
    \        bool isPrime = true;\n        for (int j = 2; j <= i / 2; j++) {\n  \
    \          if (i % j == 0) {\n                isPrime = false;\n             \
    \   break;\n            }\n        }\n        if (isPrime) {\n            primes.push_back(i);\n\
    \        }\n    }\n    long maxPrime = 0;\n    for (int i = 0; i < primes.size();\
    \ i++) {\n        if (primes[i] > maxPrime) {\n            maxPrime = primes[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (maxPrime > 0) {\n        sum\
    \ += maxPrime % 10;\n        maxPrime /= 10;\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;", "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    long\
    \ sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 2; i < max; i++) {\n        bool isPrime = true;\n \
    \       for (long j = 2; j < i; j++) {\n            if (i % j == 0) {\n      \
    \          isPrime = false;\n                break;\n            }\n        }\n\
    \        if (isPrime) {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "  std::vector<long> primes;\n  for (long i = 2; i <\
    \ lst.size(); i++) {\n    bool isPrime = true;\n    for (long j = 2; j < i; j++)\
    \ {\n      if (i % j == 0) {\n        isPrime = false;\n        break;\n     \
    \ }\n    }\n    if (isPrime) {\n      primes.push_back(i);\n    }\n  }\n  long\
    \ max = 0;\n  for (long i = 0; i < primes.size(); i++) {\n    if (primes[i] >\
    \ max) {\n      max = primes[i];\n    }\n  }\n  long sum = 0;\n  while (max >\
    \ 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max\
    \ = -1;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n\
    \      max = lst[i];\n    }\n  }\n  for (long i = 2; i < max; i++) {\n    for\
    \ (long j = 0; j < lst.size(); j++) {\n      if (lst[j] % i == 0) {\n        lst[j]\
    \ = lst[j] / i;\n      }\n    }\n  }\n  long sum = 0;\n  for (long i = 0; i <\
    \ lst.size(); i++) {\n    sum += lst[i];\n  }\n  return sum;", "    long max =\
    \ 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n\
    \            max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ != 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n \
    \ while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;", " \
    \   long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    for (int i = 2; i < max; i++) {\n        for (int j = 0; j < lst.size();\
    \ j++) {\n            if (lst[j] % i == 0) {\n                lst[j] = lst[j]\
    \ / i;\n            }\n        }\n    }\n    long sum = 0;\n    for (int i = 0;\
    \ i < lst.size(); i++) {\n        sum += lst[i];\n    }\n    return sum;", " \
    \   long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "  // your code here\n  long max = 0;\n  for(int i = 0; i <\
    \ lst.size(); i++){\n    if(lst[i] > max){\n      max = lst[i];\n    }\n  }\n\
    \  long sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] == max){\n\
    \      while(lst[i] > 0){\n        sum += lst[i] % 10;\n        lst[i] /= 10;\n\
    \      }\n    }\n  }\n  return sum;", "  long max = 0;\n  for (long i = 0; i <\
    \ lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n\
    \  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n\
    \  }\n  return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n\
    \  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (int i = 2; i\
    \ < max; i++) {\n        for (int j = 0; j < lst.size(); j++) {\n            if\
    \ (lst[j] % i == 0) {\n                lst[j] = lst[j] / i;\n            }\n \
    \       }\n    }\n    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        sum += lst[i];\n    }\n    return sum;", "    long max = 0;\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n     \
    \       max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0)\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;", " \
    \ long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long max_prime = 0;\n    for (long\
    \ i = 2; i <= max; i++) {\n        bool is_prime = true;\n        for (long j\
    \ = 2; j < i; j++) {\n            if (i % j == 0) {\n                is_prime\
    \ = false;\n                break;\n            }\n        }\n        if (is_prime)\
    \ {\n            max_prime = i;\n        }\n    }\n    long sum = 0;\n    while\
    \ (max_prime > 0) {\n        sum += max_prime % 10;\n        max_prime /= 10;\n\
    \    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0) {\n    \
    \    sum += max % 10;\n        max /= 10;\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    std::vector<long> primes;\n\
    \    for (long i = 2; i <= max; i++) {\n        bool isPrime = true;\n       \
    \ for (long j = 2; j <= i / 2; j++) {\n            if (i % j == 0) {\n       \
    \         isPrime = false;\n                break;\n            }\n        }\n\
    \        if (isPrime) {\n            primes.push_back(i);\n        }\n    }\n\
    \    long maxPrime = 0;\n    for (long i = 0; i < primes.size(); i++) {\n    \
    \    if (primes[i] > maxPrime) {\n            maxPrime = primes[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (maxPrime > 0) {\n        sum += maxPrime\
    \ % 10;\n        maxPrime /= 10;\n    }\n    return sum;", "  long max = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max\
    \ = lst[i];\n    }\n  }\n  return max;", "    long max = 0;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    return sum;", "    long max = 0;\n   \
    \ for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n      \
    \      max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0)\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;", " \
    \ long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  for (long i = 2; i < max; i++) {\n   \
    \ for (long j = 0; j < lst.size(); j++) {\n      if (lst[j] % i == 0) {\n    \
    \    lst[j] = lst[j] / i;\n      }\n    }\n  }\n  long sum = 0;\n  for (long i\
    \ = 0; i < lst.size(); i++) {\n    sum += lst[i];\n  }\n  return sum;", "    std::vector<long>\
    \ primes;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2\
    \ != 0) {\n            primes.push_back(lst[i]);\n        }\n    }\n    long max\
    \ = 0;\n    for (long i = 0; i < primes.size(); i++) {\n        if (primes[i]\
    \ > max) {\n            max = primes[i];\n        }\n    }\n    long sum = 0;\n\
    \    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n\
    \    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    int sum = 0;\n    while (max > 0) {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    return sum;", "    long largest = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > largest) {\n\
    \            largest = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (largest > 0) {\n        sum += largest % 10;\n        largest /= 10;\n    }\n\
    \    return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  for (long i = max;\
    \ i > 0; i--) {\n    bool isPrime = true;\n    for (long j = 2; j < i; j++) {\n\
    \      if (i % j == 0) {\n        isPrime = false;\n        break;\n      }\n\
    \    }\n    if (isPrime) {\n      long sum = 0;\n      while (i > 0) {\n     \
    \   sum += i % 10;\n        i /= 10;\n      }\n      return sum;\n    }\n  }\n\
    \  return 0;", "  long largest = 0;\n  for (long i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > largest) {\n      largest = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (largest > 0) {\n    sum += largest % 10;\n    largest /= 10;\n\
    \  }\n  return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max) {\n        sum += max % 10;\n     \
    \   max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (int i = max; i > 1; i--) {\n        bool isPrime =\
    \ true;\n        for (int j = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) {\n            long sum = 0;\n            while\
    \ (i > 0) {\n                sum += i % 10;\n                i /= 10;\n      \
    \      }\n            return sum;\n        }\n    }\n    return 0;", "    long\
    \ max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n   \
    \ while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n   \
    \ return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (int i = 2; i < max; i++) {\n        for (int j = 0; j < lst.size(); j++)\
    \ {\n            if (lst[j] % i == 0) {\n                lst[j] = lst[j] / i;\n\
    \            }\n        }\n    }\n    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        sum += lst[i];\n    }\n    return sum;", "    long max = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n   \
    \         max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max >\
    \ 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max = 0;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max\
    \ = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max\
    \ % 10;\n    max /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  int sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    long\
    \ sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    std::vector<long> primes;\n    for (int i = 2; i <= max; i++) {\n\
    \        bool isPrime = true;\n        for (int j = 2; j < i; j++) {\n       \
    \     if (i % j == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            primes.push_back(i);\n\
    \        }\n    }\n    long maxPrime = 0;\n    for (int i = 0; i < primes.size();\
    \ i++) {\n        if (primes[i] > maxPrime) {\n            maxPrime = primes[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (maxPrime > 0) {\n        sum\
    \ += maxPrime % 10;\n        maxPrime /= 10;\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n   \
    \ while (max != 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  return sum;", "  std::vector<long> primes;\n  long max = 0;\n  for (long i\
    \ = 0; i < lst.size(); i++) {\n    long n = lst[i];\n    if (n <= 1) {\n     \
    \ continue;\n    }\n    bool isPrime = true;\n    for (long j = 2; j <= std::sqrt(n);\
    \ j++) {\n      if (n % j == 0) {\n        isPrime = false;\n        break;\n\
    \      }\n    }\n    if (isPrime) {\n      primes.push_back(n);\n      if (n >\
    \ max) {\n        max = n;\n      }\n    }\n  }\n  long sum = 0;\n  while (max\
    \ > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long\
    \ max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;", "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    long\
    \ sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    return max;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    for (int i = 2; i < max; i++) {\n        for\
    \ (int j = 2; j < i; j++) {\n            if (i % j == 0) {\n                break;\n\
    \            }\n            if (j == i - 1) {\n                std::cout << i\
    \ << std::endl;\n            }\n        }\n    }\n    return 0;", "    long max\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    if (max == 0) {\n      \
    \  return 0;\n    }\n    long sum = 0;\n    while (max > 0) {\n        sum +=\
    \ max % 10;\n        max /= 10;\n    }\n    return sum;", "    long max = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n   \
    \         max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max >\
    \ 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n \
    \ while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "  // your code here\n  long max = 0;\n  for(int i = 0; i < lst.size(); i++){\n\
    \    if(lst[i] > max){\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while(max\
    \ > 0){\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max\
    \ = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n  \
    \    max = lst[i];\n    }\n  }\n  std::vector<long> primes;\n  for (int i = 2;\
    \ i <= max; i++) {\n    bool isPrime = true;\n    for (int j = 2; j <= std::sqrt(i);\
    \ j++) {\n      if (i % j == 0) {\n        isPrime = false;\n        break;\n\
    \      }\n    }\n    if (isPrime) {\n      primes.push_back(i);\n    }\n  }\n\
    \  long maxPrime = 0;\n  for (int i = 0; i < primes.size(); i++) {\n    if (primes[i]\
    \ > maxPrime) {\n      maxPrime = primes[i];\n    }\n  }\n  long sum = 0;\n  while\
    \ (maxPrime > 0) {\n    sum += maxPrime % 10;\n    maxPrime /= 10;\n  }\n  return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    long\
    \ sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  std::vector<long>\
    \ primes;\n  for (int i = 2; i <= max; i++) {\n    bool isPrime = true;\n    for\
    \ (int j = 2; j < i; j++) {\n      if (i % j == 0) {\n        isPrime = false;\n\
    \        break;\n      }\n    }\n    if (isPrime) {\n      primes.push_back(i);\n\
    \    }\n  }\n  long maxPrime = 0;\n  for (int i = 0; i < primes.size(); i++) {\n\
    \    if (primes[i] > maxPrime) {\n      maxPrime = primes[i];\n    }\n  }\n  long\
    \ sum = 0;\n  while (maxPrime > 0) {\n    sum += maxPrime % 10;\n    maxPrime\
    \ /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  for (int\
    \ i = 2; i < max; i++) {\n    for (int j = 0; j < lst.size(); j++) {\n      if\
    \ (lst[j] % i == 0) {\n        lst[j] = lst[j] / i;\n      }\n    }\n  }\n  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    sum += lst[i];\n  }\n\
    \  return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  std::vector<long>\
    \ primes;\n  for (int i = 2; i <= max; i++) {\n    bool isPrime = true;\n    for\
    \ (int j = 2; j <= i / 2; j++) {\n      if (i % j == 0) {\n        isPrime = false;\n\
    \        break;\n      }\n    }\n    if (isPrime) {\n      primes.push_back(i);\n\
    \    }\n  }\n  long maxPrime = 0;\n  for (int i = 0; i < primes.size(); i++) {\n\
    \    if (primes[i] > maxPrime) {\n      maxPrime = primes[i];\n    }\n  }\n  long\
    \ sum = 0;\n  while (maxPrime > 0) {\n    sum += maxPrime % 10;\n    maxPrime\
    \ /= 10;\n  }\n  return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    for (long i = 2; i < max; i++) {\n        for\
    \ (long j = 0; j < lst.size(); j++) {\n            if (lst[j] % i == 0) {\n  \
    \              lst[j] = lst[j] / i;\n            }\n        }\n    }\n    long\
    \ sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        sum += lst[i];\n\
    \    }\n    return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  return max;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    long max_prime = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max_prime && lst[i] < max) {\n            max_prime\
    \ = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max_prime > 0) {\n\
    \        sum += max_prime % 10;\n        max_prime /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long maxPrime = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > maxPrime &&\
    \ lst[i] % 2 != 0 && lst[i] % 3 != 0 && lst[i] % 5 != 0 && lst[i] % 7 != 0) {\n\
    \            maxPrime = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (maxPrime > 0) {\n        sum += maxPrime % 10;\n        maxPrime /= 10;\n \
    \   }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0) {\n    \
    \    sum += max % 10;\n        max /= 10;\n    }\n    return sum;", "  long sum\
    \ = 0;\n  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  while (max > 0) {\n    if (max\
    \ % 2 == 0) {\n      max = max / 2;\n    } else if (max % 3 == 0) {\n      max\
    \ = max / 3;\n    } else if (max % 5 == 0) {\n      max = max / 5;\n    } else\
    \ if (max % 7 == 0) {\n      max = max / 7;\n    } else {\n      break;\n    }\n\
    \  }\n  while (max > 0) {\n    sum += max % 10;\n    max = max / 10;\n  }\n  return\
    \ sum;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  for (int i = 2; i < max; i++) {\n\
    \    for (int j = 0; j < lst.size(); j++) {\n      if (lst[j] % i == 0) {\n  \
    \      lst[j] = lst[j] / i;\n      }\n    }\n  }\n  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    sum += lst[i];\n  }\n  return sum;", "  \
    \  long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;", " \
    \   long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    for (long i = max; i > 0; i--) {\n        bool isPrime = true;\n        for\
    \ (long j = 2; j <= i / 2; j++) {\n            if (i % j == 0) {\n           \
    \     isPrime = false;\n                break;\n            }\n        }\n   \
    \     if (isPrime) {\n            long sum = 0;\n            while (i > 0) {\n\
    \                sum += i % 10;\n                i /= 10;\n            }\n   \
    \         return sum;\n        }\n    }\n    return -1;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  for (long i = 2; i < max; i++) {\n   \
    \ bool isPrime = true;\n    for (long j = 2; j < i; j++) {\n      if (i % j ==\
    \ 0) {\n        isPrime = false;\n        break;\n      }\n    }\n    if (isPrime)\
    \ {\n      max = i;\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum\
    \ += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  for (int i = 2; i < max; i++) {\n    if (max % i == 0) {\n    \
    \  max = max / i;\n      i = 2;\n    }\n  }\n  long sum = 0;\n  while (max > 0)\
    \ {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;", "  long largest = 0;\n  for (long i = 0; i < lst.size(); i++) {\n   \
    \ if (lst[i] > largest) {\n      largest = lst[i];\n    }\n  }\n  long sum = 0;\n\
    \  while (largest > 0) {\n    sum += largest % 10;\n    largest /= 10;\n  }\n\
    \  return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    for (long i = 2; i < max; i++) {\n        for (long j = 0; j < lst.size();\
    \ j++) {\n            if (lst[j] % i == 0) {\n                lst[j] = lst[j]\
    \ / i;\n            }\n        }\n    }\n    long sum = 0;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        sum += lst[i];\n    }\n    return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (long i = 2;\
    \ i < max; i++) {\n        for (long j = 2; j < i; j++) {\n            if (i %\
    \ j == 0) {\n                break;\n            }\n            if (j == i - 1)\
    \ {\n                std::cout << i << std::endl;\n            }\n        }\n\
    \    }\n    return 0;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    std::vector<long> primes;\n    for (int i =\
    \ 2; i <= max; i++) {\n        bool isPrime = true;\n        for (int j = 2; j\
    \ < i; j++) {\n            if (i % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          primes.push_back(i);\n        }\n    }\n    long maxPrime = 0;\n  \
    \  for (int i = 0; i < primes.size(); i++) {\n        if (primes[i] > maxPrime)\
    \ {\n            maxPrime = primes[i];\n        }\n    }\n    long sum = 0;\n\
    \    while (maxPrime > 0) {\n        sum += maxPrime % 10;\n        maxPrime /=\
    \ 10;\n    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "  long max = 0;\n  for (long i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  for (long i = 2; i < max; i++) {\n    for (long j = 0; j < lst.size();\
    \ j++) {\n      if (lst[j] % i == 0) {\n        lst[j] = lst[j] / i;\n      }\n\
    \    }\n  }\n  long sum = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    sum\
    \ += lst[i];\n  }\n  return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  return max;",
  "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "  long max = 0;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max\
    \ = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max\
    \ % 10;\n    max /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (int i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  for (int i = 2; i < max; i++) {\n    if (max % i == 0) {\n      max\
    \ = max / i;\n      i = 2;\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n\
    \    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = *std::max_element(lst.begin(),\
    \ lst.end());\n    long max_prime = 0;\n    for (long i = 2; i <= max; i++) {\n\
    \        bool is_prime = true;\n        for (long j = 2; j <= i / 2; j++) {\n\
    \            if (i % j == 0) {\n                is_prime = false;\n          \
    \      break;\n            }\n        }\n        if (is_prime) {\n           \
    \ max_prime = i;\n        }\n    }\n    long sum = 0;\n    while (max_prime >\
    \ 0) {\n        sum += max_prime % 10;\n        max_prime /= 10;\n    }\n    return\
    \ sum;", "  long max = 0;\n  for (auto i : lst) {\n    if (i > max) {\n      max\
    \ = i;\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n\
    \    max /= 10;\n  }\n  return sum;", "  // your code here\n  long max = 0;\n\
    \  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] > max){\n      max = lst[i];\n\
    \    }\n  }\n  long sum = 0;\n  while(max > 0){\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "  long max = 0;\n  for (long i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  std::vector<long> primes;\n  for (long i = 2; i <= max; i++) {\n\
    \    bool isPrime = true;\n    for (long j = 2; j < i; j++) {\n      if (i % j\
    \ == 0) {\n        isPrime = false;\n        break;\n      }\n    }\n    if (isPrime)\
    \ {\n      primes.push_back(i);\n    }\n  }\n  long maxPrime = 0;\n  for (long\
    \ i = 0; i < primes.size(); i++) {\n    if (primes[i] > maxPrime) {\n      maxPrime\
    \ = primes[i];\n    }\n  }\n  long sum = 0;\n  while (maxPrime > 0) {\n    sum\
    \ += maxPrime % 10;\n    maxPrime /= 10;\n  }\n  return sum;", "    long max_prime\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        long num = lst[i];\n\
    \        bool is_prime = true;\n        for (long j = 2; j < num; j++) {\n   \
    \         if (num % j == 0) {\n                is_prime = false;\n           \
    \     break;\n            }\n        }\n        if (is_prime) {\n            max_prime\
    \ = std::max(max_prime, num);\n        }\n    }\n    long sum = 0;\n    while\
    \ (max_prime > 0) {\n        sum += max_prime % 10;\n        max_prime /= 10;\n\
    \    }\n    return sum;", "  // your code here\n  long max = 0;\n  for(int i =\
    \ 0; i < lst.size(); i++){\n    if(lst[i] > max){\n      max = lst[i];\n    }\n\
    \  }\n  std::cout << max << std::endl;\n  long sum = 0;\n  while(max > 0){\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0) {\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;", " \
    \   long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long max_prime =\
    \ 0;\n    for (long i = 2; i <= max; i++) {\n        bool is_prime = true;\n \
    \       for (long j = 2; j < i; j++) {\n            if (i % j == 0) {\n      \
    \          is_prime = false;\n                break;\n            }\n        }\n\
    \        if (is_prime) {\n            max_prime = i;\n        }\n    }\n    long\
    \ sum = 0;\n    while (max_prime > 0) {\n        sum += max_prime % 10;\n    \
    \    max_prime /= 10;\n    }\n    return sum;", "  long max = 0;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = 2; i < max; i++) {\n        for (long j = 0; j < lst.size(); j++)\
    \ {\n            if (lst[j] % i == 0) {\n                lst[j] = lst[j] / i;\n\
    \            }\n        }\n    }\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        sum += lst[i];\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n   \
    \ while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n   \
    \ return sum;", "    long largest = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > largest) {\n            largest = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (largest > 0) {\n        sum += largest %\
    \ 10;\n        largest /= 10;\n    }\n    return sum;", "    long max = 0;\n \
    \   for (int i = 0; i < lst.size(); i++) {\n        bool isPrime = true;\n   \
    \     for (int j = 2; j <= lst[i] / 2; j++) {\n            if (lst[i] % j == 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            if (lst[i] > max) {\n        \
    \        max = lst[i];\n            }\n        }\n    }\n    long sum = 0;\n \
    \   while (max != 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n\
    \    return sum;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n \
    \ while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    return max;", "    long max = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (long i = max; i > 1; i--) {\n        bool isPrime\
    \ = true;\n        for (long j = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            long sum = 0;\n            while\
    \ (i > 0) {\n                sum += i % 10;\n                i /= 10;\n      \
    \      }\n            return sum;\n        }\n    }\n    return 0;", "    long\
    \ max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    std::vector<long> primes;\n\
    \    for (int i = 2; i <= max; i++) {\n        bool isPrime = true;\n        for\
    \ (int j = 2; j < i; j++) {\n            if (i % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primes.push_back(i);\n        }\n    }\n    long maxPrime = 0;\n\
    \    for (int i = 0; i < primes.size(); i++) {\n        if (primes[i] > maxPrime)\
    \ {\n            maxPrime = primes[i];\n        }\n    }\n    long sum = 0;\n\
    \    while (maxPrime > 0) {\n        sum += maxPrime % 10;\n        maxPrime /=\
    \ 10;\n    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    return max;", "    long max = *max_element(lst.begin(), lst.end());\n\
    \    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    return max;", "  long max = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return\
    \ sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  return max;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;", " \
    \   long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;", " \
    \   // your code here\n    long max = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n        }\n    }\n    long\
    \ sum = 0;\n    while(max > 0){\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "  long max = 0;\n  for (long i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    return max;", "    // your code here\n    long max = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \        }\n    }\n    int count = 0;\n    for(int i = 2; i < max; i++){\n   \
    \     if(max % i == 0){\n            count++;\n        }\n    }\n    if(count\
    \ == 0){\n        long sum = 0;\n        while(max > 0){\n            sum += max\
    \ % 10;\n            max /= 10;\n        }\n        return sum;\n    }\n    else{\n\
    \        return 0;\n    }", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 2; i < max; i++) {\n        if (max % i == 0) {\n  \
    \          max = max / i;\n            i = 2;\n        }\n    }\n    long sum\
    \ = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    return sum;", "  // your code here\n  long max = 0;\n  for(int i =\
    \ 0; i < lst.size(); i++){\n    if(lst[i] > max){\n      max = lst[i];\n    }\n\
    \  }\n  std::cout << max << std::endl;\n  long sum = 0;\n  while(max > 0){\n \
    \   sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    for (long i = 2; i < max; i++)\
    \ {\n        for (long j = 2; j < i; j++) {\n            if (i % j == 0) {\n \
    \               break;\n            }\n            if (j == i - 1) {\n       \
    \         std::cout << i << std::endl;\n            }\n        }\n    }\n    return\
    \ 0;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0)\
    \ {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    return max;", "    long\
    \ max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (int i = 2; i < max;\
    \ i++) {\n        if (max % i == 0) {\n            max = max / i;\n          \
    \  i = 2;\n        }\n    }\n    long sum = 0;\n    while (max > 0) {\n      \
    \  sum += max % 10;\n        max /= 10;\n    }\n    return sum;", "    long max\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (max != 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = 2; i < max; i++) {\n        for (long j = 0; j < lst.size(); j++)\
    \ {\n            if (lst[j] % i == 0) {\n                lst[j] = lst[j] / i;\n\
    \            }\n        }\n    }\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        sum += lst[i];\n    }\n    return sum;", "    long\
    \ largest_prime = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if\
    \ (lst[i] > largest_prime) {\n            largest_prime = lst[i];\n        }\n\
    \    }\n    std::cout << largest_prime << std::endl;\n    long sum = 0;\n    while\
    \ (largest_prime > 0) {\n        sum += largest_prime % 10;\n        largest_prime\
    \ /= 10;\n    }\n    return sum;", "    long max = *std::max_element(lst.begin(),\
    \ lst.end());\n    std::vector<long> primes;\n    for (long i = 2; i <= max; i++)\
    \ {\n        bool isPrime = true;\n        for (long j = 2; j <= i / 2; j++) {\n\
    \            if (i % j == 0) {\n                isPrime = false;\n           \
    \     break;\n            }\n        }\n        if (isPrime) {\n            primes.push_back(i);\n\
    \        }\n    }\n    long maxPrime = *std::max_element(primes.begin(), primes.end());\n\
    \    long sum = 0;\n    while (maxPrime > 0) {\n        sum += maxPrime % 10;\n\
    \        maxPrime /= 10;\n    }\n    return sum;", "    long max = 0;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n         \
    \   max = lst[i];\n        }\n    }\n    for (long i = 2; i < max; i++) {\n  \
    \      if (max % i == 0) {\n            max = max / i;\n            i = 2;\n \
    \       }\n    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    return sum;", "    long max = 0;\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n     \
    \       max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max > 0)\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;", " \
    \   long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  for (long i = 2;\
    \ i < max; i++) {\n    bool isPrime = true;\n    for (long j = 2; j < i; j++)\
    \ {\n      if (i % j == 0) {\n        isPrime = false;\n        break;\n     \
    \ }\n    }\n    if (isPrime) {\n      max = i;\n    }\n  }\n  long sum = 0;\n\
    \  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "    long largest = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if\
    \ (lst[i] > largest) {\n            largest = lst[i];\n        }\n    }\n    std::vector<long>\
    \ primes;\n    for (long i = 2; i <= largest; i++) {\n        bool isPrime = true;\n\
    \        for (long j = 2; j <= i/2; j++) {\n            if (i % j == 0) {\n  \
    \              isPrime = false;\n                break;\n            }\n     \
    \   }\n        if (isPrime) {\n            primes.push_back(i);\n        }\n \
    \   }\n    long largestPrime = 0;\n    for (long i = 0; i < primes.size(); i++)\
    \ {\n        if (primes[i] > largestPrime) {\n            largestPrime = primes[i];\n\
    \        }\n    }\n    long sum = 0;\n    while (largestPrime > 0) {\n       \
    \ sum += largestPrime % 10;\n        largestPrime /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (int i = 2; i\
    \ < max; i++) {\n        for (int j = 0; j < lst.size(); j++) {\n            if\
    \ (lst[j] % i == 0) {\n                lst[j] = lst[j] / i;\n            }\n \
    \       }\n    }\n    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        sum += lst[i];\n    }\n    return sum;", "    long max = 0;\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n     \
    \       max = lst[i];\n        }\n    }\n    for (long i = max; i > 0; i--) {\n\
    \        bool isPrime = true;\n        for (long j = 2; j < i; j++) {\n      \
    \      if (i % j == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            long sum = 0;\n\
    \            while (i > 0) {\n                sum += i % 10;\n               \
    \ i /= 10;\n            }\n            return sum;\n        }\n    }\n    return\
    \ 0;", "  long max = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0)\
    \ {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 2; i < max;\
    \ i++) {\n        for (long j = 0; j < lst.size(); j++) {\n            if (lst[j]\
    \ % i == 0) {\n                lst[j] = lst[j] / i;\n            }\n        }\n\
    \    }\n    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   sum += lst[i];\n    }\n    return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    for (int i = 2; i < max; i++) {\n        if\
    \ (max % i == 0) {\n            max = max / i;\n            i = 2;\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "  long max = 0;\n  for (int i =\
    \ 0; i < lst.size(); i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n  \
    \  }\n  }\n  long sum = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max\
    \ /= 10;\n  }\n  return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return\
    \ sum;", "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = 2; i < max; i++) {\n        for (long j = 2; j < i; j++) {\n     \
    \       if (i % j == 0) {\n                break;\n            }\n           \
    \ if (j == i - 1) {\n                std::cout << i << std::endl;\n          \
    \  }\n        }\n    }\n    return max;", "    long max = 0;\n    for (int i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (int i = 2; i < max; i++) {\n        if (max % i ==\
    \ 0) {\n            max = max / i;\n            i = 2;\n        }\n    }\n   \
    \ long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    return max;", "    long max = 0;\n    for (int i = 0; i\
    \ < lst.size(); i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    std::vector<long> primes;\n    for (int i = 2; i <= max;\
    \ i++) {\n        bool isPrime = true;\n        for (int j = 2; j <= i / 2; j++)\
    \ {\n            if (i % j == 0) {\n                isPrime = false;\n       \
    \         break;\n            }\n        }\n        if (isPrime) {\n         \
    \   primes.push_back(i);\n        }\n    }\n    long maxPrime = 0;\n    for (int\
    \ i = 0; i < primes.size(); i++) {\n        if (primes[i] > maxPrime) {\n    \
    \        maxPrime = primes[i];\n        }\n    }\n    long sum = 0;\n    while\
    \ (maxPrime > 0) {\n        sum += maxPrime % 10;\n        maxPrime /= 10;\n \
    \   }\n    return sum;", "    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (max > 0) {\n        sum += max % 10;\n \
    \       max /= 10;\n    }\n    return sum;", "    long max = 0;\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    std::vector<long> primes;\n    for (int i =\
    \ 2; i <= max; i++) {\n        bool isPrime = true;\n        for (int j = 2; j\
    \ < i; j++) {\n            if (i % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          primes.push_back(i);\n        }\n    }\n    long maxPrime = 0;\n  \
    \  for (int i = 0; i < primes.size(); i++) {\n        if (primes[i] > maxPrime)\
    \ {\n            maxPrime = primes[i];\n        }\n    }\n    long sum = 0;\n\
    \    while (maxPrime > 0) {\n        sum += maxPrime % 10;\n        maxPrime /=\
    \ 10;\n    }\n    return sum;", "  long max = 0;\n  for (long i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max > 0) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return\
    \ sum;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  long sum = 0;\n  while (max > 0)\
    \ {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;", "    long max\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 2; i < max;\
    \ i++) {\n        for (long j = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                break;\n            }\n            if (j == i - 1) {\n  \
    \              std::cout << i << std::endl;\n            }\n        }\n    }\n\
    \    return 0;", "  long max = 0;\n  for (long i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  for (long i = 2;\
    \ i < max; i++) {\n    for (long j = 2; j < i; j++) {\n      if (i % j == 0) {\n\
    \        break;\n      }\n      if (j == i - 1) {\n        std::cout << i << std::endl;\n\
    \      }\n    }\n  }\n  return 0;", "  long max = 0;\n  for (long i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  while (max) {\n    sum += max % 10;\n    max /= 10;\n  }\n  return sum;",
  "    long max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    std::cout << max << std::endl;\n    long sum = 0;\n    while (max > 0) {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    return sum;", "    long\
    \ max = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    std::vector<long> primes;\n\
    \    for (long i = 2; i <= max; i++) {\n        bool isPrime = true;\n       \
    \ for (long j = 2; j <= i / 2; j++) {\n            if (i % j == 0) {\n       \
    \         isPrime = false;\n                break;\n            }\n        }\n\
    \        if (isPrime) {\n            primes.push_back(i);\n        }\n    }\n\
    \    long maxPrime = 0;\n    for (long i = 0; i < primes.size(); i++) {\n    \
    \    if (primes[i] > maxPrime) {\n            maxPrime = primes[i];\n        }\n\
    \    }\n    long sum = 0;\n    while (maxPrime > 0) {\n        sum += maxPrime\
    \ % 10;\n        maxPrime /= 10;\n    }\n    return sum;", "    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n        }\n    }\n    long sum = 0;\n    while (max\
    \ > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n    return sum;",
  "    long max = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    long sum = 0;\n \
    \   while (max > 0) {\n        sum += max % 10;\n        max /= 10;\n    }\n \
    \   return sum;", "    long max = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    bool isPrime = true;\n    for (int i = 2; i < max; i++) {\n        if (max\
    \ % i == 0) {\n            isPrime = false;\n            break;\n        }\n \
    \   }\n    if (isPrime) {\n        std::string str = std::to_string(max);\n  \
    \      long sum = 0;\n        for (int i = 0; i < str.length(); i++) {\n     \
    \       sum += str[i] - '0';\n        }\n        return sum;\n    }\n    return\
    \ -1;"]
stop_tokens:
- "\n}"

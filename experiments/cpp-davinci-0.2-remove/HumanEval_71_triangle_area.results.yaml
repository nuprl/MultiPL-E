language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp1b5odjsz: /tmp/tmp1b5odjsz.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  // Write your code here\n  float s = (a+b+c)/2.0;\n  float area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n  if(area == 0)\n    return -1;\n  else\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyjii_mkx: /tmp/tmpyjii_mkx.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp1b5odjsz: /tmp/tmp1b5odjsz.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  // Write your code here\n  if(a+b>c && a+c>b && b+c>a)\n  {\n \
    \   float s=(a+b+c)/2.0;\n    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;\n  }\n  else\n  {\n    return -1;\n  }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpt04p8qjn: /tmp/tmpt04p8qjn.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  // Write your code here\n  float s = (a+b+c)/2.0;\n  float area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n  if(area > 0)\n    return area;\n  else\n   \
    \ return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcern7oj1: /tmp/tmpcern7oj1.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    if (a + b <=\
    \ c || a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpovtmt0o3: /tmp/tmpovtmt0o3.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    if (a + b <=\
    \ c || a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpovtmt0o3: /tmp/tmpovtmt0o3.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    if (a + b <=\
    \ c || a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return round(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvf98fj7n: /tmp/tmpvf98fj7n.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    if (a + b <=\
    \ c || a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpovtmt0o3: /tmp/tmpovtmt0o3.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a<=0 || b<=0 || c<=0)\n     \
    \   return -1;\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp7wsp1h9u: /tmp/tmp7wsp1h9u.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    if (a + b <=\
    \ c || a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpovtmt0o3: /tmp/tmpovtmt0o3.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return round(area * 100) / 100;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_vpj5d5g: /tmp/tmp_vpj5d5g.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return round(area * 100) / 100;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_vpj5d5g: /tmp/tmp_vpj5d5g.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  // Write your code here\n  if(a+b>c && a+c>b && b+c>a)\n  {\n \
    \   float s=(a+b+c)/2.0;\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  else\n\
    \  {\n    return -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpzzd6uml6: /tmp/tmpzzd6uml6.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float p = (a + b + c) / 2.0;\n    float area = sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpk65e1ba1: /tmp/tmpk65e1ba1.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb2hse4cz: /tmp/tmpb2hse4cz.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppbdnx14s: /tmp/tmppbdnx14s.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  // Write your code here\n  float s = (a+b+c)/2.0;\n  float area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n  if(area > 0)\n    return area;\n  else\n   \
    \ return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcern7oj1: /tmp/tmpcern7oj1.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float p = (a + b + c) / 2.0;\n    return sqrt(p * (p - a) * (p - b) * (p\
    \ - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxnrukrdt: /tmp/tmpxnrukrdt.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppbdnx14s: /tmp/tmppbdnx14s.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  if(a<=0 || b<=0 || c<=0)\n    return -1;\n  if(a+b<=c || a+c<=b\
    \ || b+c<=a)\n    return -1;\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp889fqwm6: /tmp/tmp889fqwm6.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return round(area * 100) / 100;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_vpj5d5g: /tmp/tmp_vpj5d5g.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a+b>c && a+c>b && b+c>a)\n  \
    \  {\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphkt3_zd4: /tmp/tmphkt3_zd4.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp1b5odjsz: /tmp/tmp1b5odjsz.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  // Write your code here\n  float s = (a+b+c)/2.0;\n  float area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n  if(area > 0)\n    return area;\n  else\n   \
    \ return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcern7oj1: /tmp/tmpcern7oj1.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a<=0 || b<=0 || c<=0)\n     \
    \   return -1;\n    if(a+b<=c || a+c<=b || b+c<=a)\n        return -1;\n    float\
    \ s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxogfs05d: /tmp/tmpxogfs05d.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a+b>c && a+c>b && b+c>a)\n  \
    \  {\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n   \
    \ \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuhgzlp_r: /tmp/tmpuhgzlp_r.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a+b>c && a+c>b && b+c>a)\n  \
    \  {\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n   \
    \ \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuhgzlp_r: /tmp/tmpuhgzlp_r.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return round(area * 100) / 100;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_vpj5d5g: /tmp/tmp_vpj5d5g.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb2hse4cz: /tmp/tmpb2hse4cz.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpsrwcjz29: /tmp/tmpsrwcjz29.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpznybf_aj: /tmp/tmpznybf_aj.cpp:18: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb2hse4cz: /tmp/tmpb2hse4cz.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    if (a + b <=\
    \ c || a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpovtmt0o3: /tmp/tmpovtmt0o3.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4_f1wf2d: /tmp/tmp4_f1wf2d.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppbdnx14s: /tmp/tmppbdnx14s.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2304zmgd: /tmp/tmp2304zmgd.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a<=0 || b<=0 || c<=0)\n     \
    \   return -1;\n    if(a+b<=c || a+c<=b || b+c<=a)\n        return -1;\n    float\
    \ s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxogfs05d: /tmp/tmpxogfs05d.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a+b>c && a+c>b && b+c>a)\n  \
    \  {\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n   \
    \ \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuhgzlp_r: /tmp/tmpuhgzlp_r.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2304zmgd: /tmp/tmp2304zmgd.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9hwydgzm: /tmp/tmp9hwydgzm.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n    \n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyie_jaze: /tmp/tmpyie_jaze.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb2hse4cz: /tmp/tmpb2hse4cz.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppbdnx14s: /tmp/tmppbdnx14s.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpsrwcjz29: /tmp/tmpsrwcjz29.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    if (area > 0)\n        return area;\n    else\n\
    \        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpb_e730m8: /tmp/tmpb_e730m8.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpznybf_aj: /tmp/tmpznybf_aj.cpp:18: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area>0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9z0kw98s: /tmp/tmp9z0kw98s.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpznybf_aj: /tmp/tmpznybf_aj.cpp:18: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1;\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo3alee3o: /tmp/tmpo3alee3o.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4_f1wf2d: /tmp/tmp4_f1wf2d.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    if (area > 0) {\n        return area;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb2hse4cz: /tmp/tmpb2hse4cz.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppbdnx14s: /tmp/tmppbdnx14s.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s =\
    \ (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0v2m8iel: /tmp/tmp0v2m8iel.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n  if(a+b>c && a+c>b && b+c>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp09srrpv9: /tmp/tmp09srrpv9.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yxitzag: /tmp/tmp2yxitzag.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9hwydgzm: /tmp/tmp9hwydgzm.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp54cggjo2: /tmp/tmp54cggjo2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    // Write your code here\n    if(a+b>c && a+c>b && b+c>a)\n  \
    \  {\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n   \
    \ \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuhgzlp_r: /tmp/tmpuhgzlp_r.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpei31rix1: /tmp/tmpei31rix1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgzvro3rd: /tmp/tmpgzvro3rd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ampk7dy: /tmp/tmp8ampk7dy.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1659749791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\nfloat triangle_area(long a, long b,\
    \ long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66nlxbs5: /tmp/tmp66nlxbs5.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1659749791

name: HumanEval_1_separate_paren_groups
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function is\
  \ a string containing multiple groups of nested parentheses. Your goal is to\n//\
  \ separate those group into separate strings and return the list of those.\n// Separate\
  \ groups are balanced (each open brace is properly closed) and not nested within\
  \ each other\n// Ignore any spaces in the input string.\nstd::vector<std::string>\
  \ separate_paren_groups(std::string paren_string) {\n"
tests: "}\nint main() {\n    auto candidate = separate_paren_groups;\n    assert(candidate((\"\
  (()()) ((())) () ((())()())\")) == (std::vector<std::string>({(std::string)\"(()())\"\
  , (std::string)\"((()))\", (std::string)\"()\", (std::string)\"((())()())\"})));\n\
  \    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<std::string>({(std::string)\"\
  ()\", (std::string)\"(())\", (std::string)\"((()))\", (std::string)\"(((())))\"\
  })));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<std::string>({(std::string)\"\
  (()(())((())))\"})));\n    assert(candidate((\"( ) (( )) (( )( ))\")) == (std::vector<std::string>({(std::string)\"\
  ()\", (std::string)\"(())\", (std::string)\"(()())\"})));\n}\n"
completions: ["    std::vector<std::string> result;\n    std::stack<char> stk;\n \
    \   std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n       \
    \ if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n        }\n\
    \        else if(paren_string[i]==')'){\n            if(stk.empty()){\n      \
    \          return result;\n            }\n            stk.pop();\n        }\n\
    \        else if(paren_string[i]==' '){\n            continue;\n        }\n  \
    \      else{\n            return result;\n        }\n        temp+=paren_string[i];\n\
    \        if(stk.empty()){\n            result.push_back(temp);\n            temp=\"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            open++;\n       \
    \     temp += paren_string[i];\n        } else if (paren_string[i] == ')') {\n\
    \            open--;\n            temp += paren_string[i];\n        } else if\
    \ (paren_string[i] == ' ') {\n            continue;\n        } else {\n      \
    \      temp += paren_string[i];\n        }\n        if (open == 0) {\n       \
    \     result.push_back(temp);\n            temp = \"\";\n        }\n    }\n  \
    \  return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n  \
    \      if(paren_string[i] == '(') {\n            count++;\n            temp +=\
    \ paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n   \
    \         count--;\n            temp += paren_string[i];\n        }\n        else\
    \ if(paren_string[i] == ' ') {\n            continue;\n        }\n        else\
    \ {\n            temp += paren_string[i];\n        }\n        if(count == 0) {\n\
    \            result.push_back(temp);\n            temp = \"\";\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++)\
    \ {\n        if(paren_string[i] == '(') {\n            count++;\n            temp\
    \ += paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else if(paren_string[i] == ' ') {\n            continue;\n        }\n    \
    \    else {\n            temp += paren_string[i];\n        }\n        if(count\
    \ == 0) {\n            result.push_back(temp);\n            temp = \"\";\n   \
    \     }\n    }\n    return result;", "    std::vector<std::string> result;\n \
    \   std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp = \"\";\n    for(int i = 0; i\
    \ < paren_string.length(); i++) {\n        if(paren_string[i] == '(') {\n    \
    \        st.push(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            st.pop();\n            if(st.empty()) {\n           \
    \     result.push_back(temp);\n                temp = \"\";\n            }\n \
    \       }\n        else if(paren_string[i] != ' ') {\n            temp += paren_string[i];\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> groups;\n\
    \    std::string group = \"\";\n    int count = 0;\n    for (char c : paren_string)\
    \ {\n        if (c == '(') {\n            count++;\n        } else if (c == ')')\
    \ {\n            count--;\n        }\n        if (count == 0 && group != \"\"\
    ) {\n            groups.push_back(group);\n            group = \"\";\n       \
    \ } else if (c != ' ') {\n            group += c;\n        }\n    }\n    return\
    \ groups;", "    std::vector<std::string> result;\n    std::string temp;\n   \
    \ int count = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n     \
    \   if(paren_string[i] == '(') {\n            count++;\n            temp += paren_string[i];\n\
    \        }\n        else if(paren_string[i] == ')') {\n            count--;\n\
    \            temp += paren_string[i];\n        }\n        else {\n           \
    \ temp += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    int start = 0;\n    int end = 0;\n    int count = 0;\n    for (int\
    \ i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i] == '(')\
    \ {\n            if (count == 0) {\n                start = i;\n            }\n\
    \            count++;\n        } else if (paren_string[i] == ')') {\n        \
    \    count--;\n            if (count == 0) {\n                end = i;\n     \
    \           result.push_back(paren_string.substr(start, end - start + 1));\n \
    \           }\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0 && temp.size() > 0) {\n\
    \            result.push_back(temp);\n            temp.clear();\n        }\n \
    \   }\n    return result;", "    std::vector<std::string> result;\n    std::stack<char>\
    \ stk;\n    std::string temp = \"\";\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            stk.push(paren_string[i]);\n\
    \        }\n        else if(paren_string[i] == ')') {\n            stk.pop();\n\
    \            if(stk.empty()) {\n                result.push_back(temp);\n    \
    \            temp = \"\";\n            }\n        }\n        else if(paren_string[i]\
    \ != ' ') {\n            temp += paren_string[i];\n        }\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::stack<char> st;\n\
    \    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n      \
    \  if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n        }\n\
    \        else if(paren_string[i]==')'){\n            if(st.empty()){\n       \
    \         return result;\n            }\n            else{\n                st.pop();\n\
    \                temp.push_back(paren_string[i]);\n            }\n        }\n\
    \        else{\n            temp.push_back(paren_string[i]);\n        }\n    }\n\
    \    if(!st.empty()){\n        return result;\n    }\n    result.push_back(temp);\n\
    \    return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.size(); i++) {\n    \
    \    if(paren_string[i] == '(') {\n            count++;\n            temp += paren_string[i];\n\
    \        }\n        else if(paren_string[i] == ')') {\n            count--;\n\
    \            temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    int start = 0;\n    int end = 0;\n    int open = 0;\n    int close = 0;\n\
    \    for (int i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i]\
    \ == '(') {\n            open++;\n        } else if (paren_string[i] == ')') {\n\
    \            close++;\n        }\n        if (open == close) {\n            end\
    \ = i;\n            result.push_back(paren_string.substr(start, end - start +\
    \ 1));\n            start = end + 1;\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0 && temp.size() > 0) {\n\
    \            result.push_back(temp);\n            temp.clear();\n        }\n \
    \   }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size(); i++)\
    \ {\n        if(paren_string[i] == '(') {\n            count++;\n            temp\
    \ += paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else {\n            temp += paren_string[i];\n        }\n        if(count\
    \ == 0 && temp.size() > 0) {\n            result.push_back(temp);\n          \
    \  temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp.clear();\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> stk;\n    std::string\
    \ temp;\n    for(int i=0;i<paren_string.length();i++){\n        if(paren_string[i]=='('){\n\
    \            stk.push(paren_string[i]);\n        }\n        else if(paren_string[i]==')'){\n\
    \            stk.pop();\n            if(stk.empty()){\n                result.push_back(temp);\n\
    \                temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    int start = 0;\n    int end = 0;\n  \
    \  int count = 0;\n    for (int i = 0; i < paren_string.size(); i++) {\n     \
    \   if (paren_string[i] == '(') {\n            if (count == 0) {\n           \
    \     start = i;\n            }\n            count++;\n        } else if (paren_string[i]\
    \ == ')') {\n            count--;\n            if (count == 0) {\n           \
    \     end = i;\n                result.push_back(paren_string.substr(start, end\
    \ - start + 1));\n            }\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp != \"\") {\n            result.push_back(temp);\n    \
    \        temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            count--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else {\n            temp.push_back(paren_string[i]);\n   \
    \     }\n        if(count == 0) {\n            result.push_back(temp);\n     \
    \       temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int open_paren_count = 0;\n    for (int\
    \ i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i] == '(')\
    \ {\n            open_paren_count++;\n            temp += paren_string[i];\n \
    \       } else if (paren_string[i] == ')') {\n            open_paren_count--;\n\
    \            temp += paren_string[i];\n        } else if (paren_string[i] == '\
    \ ') {\n            continue;\n        } else {\n            assert(false);\n\
    \        }\n        if (open_paren_count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open = 0;\n    for (char c : paren_string) {\n\
    \        if (c == '(') {\n            open++;\n        } else if (c == ')') {\n\
    \            open--;\n        } else if (c == ' ') {\n            continue;\n\
    \        }\n        temp += c;\n        if (open == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> s;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            s.push(paren_string[i]);\n   \
    \     }\n        else if(paren_string[i]==')'){\n            s.pop();\n      \
    \      if(s.empty()){\n                result.push_back(temp);\n             \
    \   temp=\"\";\n            }\n        }\n        else if(paren_string[i]!=' '){\n\
    \            temp+=paren_string[i];\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(auto i : paren_string) {\n        if(i == '(') {\n            count++;\n\
    \        }\n        else if(i == ')') {\n            count--;\n        }\n   \
    \     if(count == 0 && i == ')') {\n            result.push_back(temp);\n    \
    \        temp = \"\";\n        }\n        else if(i != ' ') {\n            temp\
    \ += i;\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp.clear();\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp.clear();\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp != \"\") {\n            result.push_back(temp);\n    \
    \        temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp = \"\";\n    int count = 0;\n    for(int i = 0;\
    \ i < paren_string.length(); i++) {\n        if(paren_string[i] == '(') {\n  \
    \          count++;\n            temp += paren_string[i];\n        }\n       \
    \ else if(paren_string[i] == ')') {\n            count--;\n            temp +=\
    \ paren_string[i];\n        }\n        else if(paren_string[i] == ' ') {\n   \
    \         continue;\n        }\n        else {\n            temp += paren_string[i];\n\
    \        }\n        if(count == 0) {\n            result.push_back(temp);\n  \
    \          temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> groups;\n\
    \    std::string group;\n    int open = 0;\n    for (char c : paren_string) {\n\
    \        if (c == '(') {\n            open++;\n        } else if (c == ')') {\n\
    \            open--;\n        }\n        if (open == 0) {\n            groups.push_back(group);\n\
    \            group = \"\";\n        } else {\n            group += c;\n      \
    \  }\n    }\n    return groups;", "    std::vector<std::string> result;\n    std::string\
    \ temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++)\
    \ {\n        if(paren_string[i] == '(') {\n            count++;\n            temp\
    \ += paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else if(paren_string[i] == ' ') {\n            continue;\n        }\n    \
    \    else {\n            temp += paren_string[i];\n        }\n        if(count\
    \ == 0) {\n            result.push_back(temp);\n            temp = \"\";\n   \
    \     }\n    }\n    return result;", "    std::vector<std::string> result;\n \
    \   std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            open++;\n       \
    \     temp += paren_string[i];\n        } else if (paren_string[i] == ')') {\n\
    \            open--;\n            temp += paren_string[i];\n        } else if\
    \ (paren_string[i] == ' ') {\n            continue;\n        } else {\n      \
    \      temp += paren_string[i];\n        }\n        if (open == 0) {\n       \
    \     result.push_back(temp);\n            temp = \"\";\n        }\n    }\n  \
    \  return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.size(); i++) {\n    \
    \    if(paren_string[i] == '(') {\n            count++;\n            temp += paren_string[i];\n\
    \        }\n        else if(paren_string[i] == ')') {\n            count--;\n\
    \            temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;\
    \ i<paren_string.length(); i++) {\n        if(paren_string[i] == '(') {\n    \
    \        stk.push(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            stk.pop();\n            if(stk.empty()) {\n         \
    \       result.push_back(temp);\n                temp.clear();\n            }\n\
    \        }\n        else if(paren_string[i] != ' ') {\n            temp += paren_string[i];\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            count--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else {\n            temp.push_back(paren_string[i]);\n   \
    \     }\n        if(count == 0) {\n            result.push_back(temp);\n     \
    \       temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            if(stk.empty()){\n\
    \                return result;\n            }\n            else{\n          \
    \      stk.pop();\n                if(stk.empty()){\n                    result.push_back(temp);\n\
    \                    temp.clear();\n                }\n            }\n       \
    \ }\n        else if(paren_string[i]!=' '){\n            temp.push_back(paren_string[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            count--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else if(paren_string[i] == ' ') {\n            continue;\n\
    \        }\n        else {\n            temp.push_back(paren_string[i]);\n   \
    \     }\n        if(count == 0) {\n            result.push_back(temp);\n     \
    \       temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int open = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            open++;\n       \
    \     temp += paren_string[i];\n        } else if (paren_string[i] == ')') {\n\
    \            open--;\n            temp += paren_string[i];\n        } else if\
    \ (paren_string[i] == ' ') {\n            continue;\n        } else {\n      \
    \      temp += paren_string[i];\n        }\n        if (open == 0) {\n       \
    \     result.push_back(temp);\n            temp = \"\";\n        }\n    }\n  \
    \  return result;", "    std::vector<std::string> result;\n    int start = 0;\n\
    \    int end = 0;\n    int count = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            if (count == 0) {\n\
    \                start = i;\n            }\n            count++;\n        } else\
    \ if (paren_string[i] == ')') {\n            count--;\n            if (count ==\
    \ 0) {\n                end = i;\n                result.push_back(paren_string.substr(start,\
    \ end - start + 1));\n            }\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> s;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            s.push(paren_string[i]);\n   \
    \     }\n        else if(paren_string[i]==')'){\n            s.pop();\n      \
    \      temp+=paren_string[i];\n        }\n        else{\n            temp+=paren_string[i];\n\
    \        }\n        if(s.empty()){\n            result.push_back(temp);\n    \
    \        temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            if(st.empty()){\n\
    \                return result;\n            }\n            else{\n          \
    \      st.pop();\n                temp+=paren_string[i];\n            }\n    \
    \    }\n        else{\n            temp+=paren_string[i];\n        }\n    }\n\
    \    if(st.empty()){\n        result.push_back(temp);\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> stk;\n    std::string\
    \ temp;\n    for(int i=0;i<paren_string.length();i++){\n        if(paren_string[i]=='('){\n\
    \            stk.push(paren_string[i]);\n        }\n        else if(paren_string[i]==')'){\n\
    \            stk.pop();\n            if(stk.empty()){\n                result.push_back(temp);\n\
    \                temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    // TODO: Implement this function\n\
    \    std::vector<std::string> result;\n    std::string temp;\n    int count =\
    \ 0;\n    for(int i = 0; i < paren_string.size(); i++){\n        if(paren_string[i]\
    \ == '('){\n            count++;\n            temp += paren_string[i];\n     \
    \   }\n        else if(paren_string[i] == ')'){\n            count--;\n      \
    \      temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ' '){\n            continue;\n        }\n        else{\n            temp +=\
    \ paren_string[i];\n        }\n        if(count == 0){\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp.clear();\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> st;\n    std::string\
    \ temp;\n    for(int i=0;i<paren_string.length();i++){\n        if(paren_string[i]=='('){\n\
    \            st.push(paren_string[i]);\n        }\n        else if(paren_string[i]==')'){\n\
    \            st.pop();\n            if(st.empty()){\n                result.push_back(temp);\n\
    \                temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> stk;\n    std::string\
    \ temp;\n    for(int i=0;i<paren_string.length();i++){\n        if(paren_string[i]=='('){\n\
    \            stk.push(paren_string[i]);\n        }\n        else if(paren_string[i]==')'){\n\
    \            stk.pop();\n            if(stk.empty()){\n                result.push_back(temp);\n\
    \                temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> res;\n\
    \    std::string temp = \"\";\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            res.push_back(temp);\n            temp = \"\"\
    ;\n        }\n    }\n    return res;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            count--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else {\n            temp.push_back(paren_string[i]);\n   \
    \     }\n        if(count == 0) {\n            result.push_back(temp);\n     \
    \       temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            open++;\n       \
    \     temp += paren_string[i];\n        } else if (paren_string[i] == ')') {\n\
    \            open--;\n            temp += paren_string[i];\n        } else if\
    \ (paren_string[i] == ' ') {\n            continue;\n        } else {\n      \
    \      temp += paren_string[i];\n        }\n        if (open == 0) {\n       \
    \     result.push_back(temp);\n            temp = \"\";\n        }\n    }\n  \
    \  return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n  \
    \      if(paren_string[i] == '(') {\n            count++;\n            temp +=\
    \ paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n   \
    \         count--;\n            temp += paren_string[i];\n        }\n        else\
    \ if(paren_string[i] == ' ') {\n            continue;\n        }\n        else\
    \ {\n            temp += paren_string[i];\n        }\n        if(count == 0) {\n\
    \            result.push_back(temp);\n            temp = \"\";\n        }\n  \
    \  }\n    return result;", "    // TODO: Implement this function\n    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++){\n        if(paren_string[i] == '('){\n            count++;\n         \
    \   temp += paren_string[i];\n        }\n        else if(paren_string[i] == ')'){\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else if(paren_string[i] == ' '){\n            continue;\n        }\n     \
    \   else{\n            temp += paren_string[i];\n        }\n        if(count ==\
    \ 0){\n            result.push_back(temp);\n            temp = \"\";\n       \
    \ }\n    }\n    return result;", "    std::vector<std::string> result;\n    std::stack<char>\
    \ stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            if(stk.empty()){\n\
    \                return result;\n            }\n            stk.pop();\n     \
    \   }\n        else{\n            continue;\n        }\n        if(stk.empty()){\n\
    \            result.push_back(temp);\n            temp=\"\";\n        }\n    \
    \    else{\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    int start = 0;\n    int end = 0;\n    int count = 0;\n    for (int\
    \ i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i] == '(')\
    \ {\n            count++;\n            if (count == 1) {\n                start\
    \ = i;\n            }\n        }\n        if (paren_string[i] == ')') {\n    \
    \        count--;\n            if (count == 0) {\n                end = i;\n \
    \               result.push_back(paren_string.substr(start, end - start + 1));\n\
    \            }\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> st;\n    std::string\
    \ temp;\n    for(int i=0;i<paren_string.length();i++){\n        if(paren_string[i]=='('){\n\
    \            st.push(paren_string[i]);\n        }\n        else if(paren_string[i]==')'){\n\
    \            st.pop();\n            if(st.empty()){\n                result.push_back(temp);\n\
    \                temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int count\
    \ = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            assert(false);\n\
    \        }\n        if(count == 0) {\n            result.push_back(temp);\n  \
    \          temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          temp+=paren_string[i];\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n        if(stk.empty()){\n\
    \            result.push_back(temp);\n            temp.clear();\n        }\n \
    \   }\n    return result;", "    std::vector<std::string> result;\n    int start\
    \ = 0;\n    int end = 0;\n    int count = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            count++;\n      \
    \      if (count == 1) {\n                start = i;\n            }\n        }\n\
    \        if (paren_string[i] == ')') {\n            count--;\n            if (count\
    \ == 0) {\n                end = i;\n                result.push_back(paren_string.substr(start,\
    \ end - start + 1));\n            }\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> stk;\n    std::string\
    \ temp;\n    for(int i=0;i<paren_string.length();i++){\n        if(paren_string[i]=='('){\n\
    \            stk.push(paren_string[i]);\n        }\n        else if(paren_string[i]==')'){\n\
    \            stk.pop();\n            if(stk.empty()){\n                result.push_back(temp);\n\
    \                temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else if(paren_string[i] == ')') {\n            count--;\n\
    \            temp.push_back(paren_string[i]);\n        }\n        else {\n   \
    \         temp.push_back(paren_string[i]);\n        }\n        if(count == 0)\
    \ {\n            result.push_back(temp);\n            temp.clear();\n        }\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stack<char>\
    \ st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp.clear();\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "  std::vector<std::string>\
    \ result;\n  std::stack<char> stk;\n  std::string temp;\n  for(int i=0;i<paren_string.length();i++){\n\
    \    if(paren_string[i]=='('){\n      stk.push(paren_string[i]);\n    }\n    else\
    \ if(paren_string[i]==')'){\n      stk.pop();\n      if(stk.empty()){\n      \
    \  result.push_back(temp);\n        temp.clear();\n      }\n    }\n    else if(paren_string[i]!='\
    \ '){\n      temp+=paren_string[i];\n    }\n  }\n  return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open_count = 0;\n    for (int i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            open_count++;\n \
    \           temp += paren_string[i];\n        } else if (paren_string[i] == ')')\
    \ {\n            open_count--;\n            temp += paren_string[i];\n       \
    \ } else {\n            temp += paren_string[i];\n        }\n        if (open_count\
    \ == 0) {\n            result.push_back(temp);\n            temp = \"\";\n   \
    \     }\n    }\n    return result;", "    std::vector<std::string> result;\n \
    \   std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open_paren_count = 0;\n    for (int i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     open_paren_count++;\n            temp += paren_string[i];\n        } else\
    \ if (paren_string[i] == ')') {\n            open_paren_count--;\n           \
    \ temp += paren_string[i];\n        } else if (paren_string[i] == ' ') {\n   \
    \         continue;\n        } else {\n            temp += paren_string[i];\n\
    \        }\n        if (open_paren_count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            if(st.top()=='('){\n\
    \                st.pop();\n                if(st.empty()){\n                \
    \    result.push_back(temp);\n                    temp.clear();\n            \
    \    }\n            }\n        }\n        else{\n            if(!st.empty()){\n\
    \                temp+=paren_string[i];\n            }\n        }\n    }\n   \
    \ return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n  \
    \      if(paren_string[i] == '(') {\n            count++;\n            temp +=\
    \ paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n   \
    \         count--;\n            temp += paren_string[i];\n        }\n        else\
    \ if(paren_string[i] == ' ') {\n            continue;\n        }\n        else\
    \ {\n            temp += paren_string[i];\n        }\n        if(count == 0) {\n\
    \            result.push_back(temp);\n            temp = \"\";\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++)\
    \ {\n        if(paren_string[i] == '(') {\n            count++;\n            temp\
    \ += paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else if(paren_string[i] == ' ') {\n            continue;\n        }\n    \
    \    else {\n            temp += paren_string[i];\n        }\n        if(count\
    \ == 0) {\n            result.push_back(temp);\n            temp = \"\";\n   \
    \     }\n    }\n    return result;", "    std::vector<std::string> result;\n \
    \   std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0 && temp.size() > 0) {\n            result.push_back(temp);\n \
    \           temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            if(stk.empty()){\n\
    \                return result;\n            }\n            else{\n          \
    \      stk.pop();\n                if(stk.empty()){\n                    result.push_back(temp);\n\
    \                    temp=\"\";\n                }\n            }\n        }\n\
    \        else if(paren_string[i]!=' '){\n            temp+=paren_string[i];\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    int start = 0;\n    int end = 0;\n    int count = 0;\n    for (int i = 0;\
    \ i < paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n   \
    \         if (count == 0) {\n                start = i;\n            }\n     \
    \       count++;\n        } else if (paren_string[i] == ')') {\n            count--;\n\
    \            if (count == 0) {\n                end = i;\n                result.push_back(paren_string.substr(start,\
    \ end - start + 1));\n            }\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.size(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> stack;\n    std::string temp;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            stack.push(paren_string[i]);\n\
    \        }\n        else if(paren_string[i] == ')') {\n            stack.pop();\n\
    \        }\n        else if(paren_string[i] == ' ') {\n            continue;\n\
    \        }\n        else {\n            temp += paren_string[i];\n        }\n\
    \        if(stack.empty()) {\n            result.push_back(temp);\n          \
    \  temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            if(count == 0) {\n                if(temp.length()\
    \ > 0) {\n                    result.push_back(temp);\n                    temp\
    \ = \"\";\n                }\n            }\n            else {\n            \
    \    temp += paren_string[i];\n            }\n        }\n    }\n    if(temp.length()\
    \ > 0) {\n        result.push_back(temp);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int open = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            open++;\n        \
    \    temp += paren_string[i];\n        }\n        else if(paren_string[i] == ')')\
    \ {\n            open--;\n            temp += paren_string[i];\n        }\n  \
    \      else {\n            temp += paren_string[i];\n        }\n        if(open\
    \ == 0) {\n            result.push_back(temp);\n            temp = \"\";\n   \
    \     }\n    }\n    return result;", "    std::vector<std::string> result;\n \
    \   std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            if(st.empty()){\n\
    \                std::cout<<\"Invalid String\"<<std::endl;\n                return\
    \ result;\n            }\n            else{\n                st.pop();\n     \
    \           if(st.empty()){\n                    result.push_back(temp);\n   \
    \                 temp=\"\";\n                }\n            }\n        }\n  \
    \      else if(paren_string[i]!=' '){\n            temp+=paren_string[i];\n  \
    \      }\n    }\n    if(!st.empty()){\n        std::cout<<\"Invalid String\"<<std::endl;\n\
    \        return result;\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            count--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else {\n            if(count == 0) {\n                continue;\n\
    \            }\n            else {\n                temp.push_back(paren_string[i]);\n\
    \            }\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open_paren_count = 0;\n    for (int i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     open_paren_count++;\n            temp += paren_string[i];\n        } else\
    \ if (paren_string[i] == ')') {\n            open_paren_count--;\n           \
    \ temp += paren_string[i];\n        } else if (paren_string[i] == ' ') {\n   \
    \         continue;\n        } else {\n            temp += paren_string[i];\n\
    \        }\n        if (open_paren_count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int open = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            open++;\n        \
    \    temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            open--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else if(paren_string[i] == ' ') {\n            continue;\n\
    \        }\n        else {\n            temp.push_back(paren_string[i]);\n   \
    \     }\n        if(open == 0) {\n            result.push_back(temp);\n      \
    \      temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp.push_back(paren_string[i]);\n        }\n        else if(paren_string[i]\
    \ == ')') {\n            count--;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else {\n            temp.push_back(paren_string[i]);\n   \
    \     }\n        if(count == 0) {\n            result.push_back(temp);\n     \
    \       temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int count\
    \ = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else if(paren_string[i]\
    \ == ' ') {\n            continue;\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> s;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            s.push(paren_string[i]);\n   \
    \     }\n        else if(paren_string[i]==')'){\n            s.pop();\n      \
    \      if(s.empty()){\n                result.push_back(temp);\n             \
    \   temp.clear();\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stack<char> st;\n    int start =\
    \ 0;\n    for (int i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i]\
    \ == '(') {\n            st.push(paren_string[i]);\n        } else if (paren_string[i]\
    \ == ')') {\n            st.pop();\n        }\n        if (st.empty()) {\n   \
    \         result.push_back(paren_string.substr(start, i - start + 1));\n     \
    \       start = i + 1;\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stack<char> stk;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            stk.push(paren_string[i]);\n \
    \       }\n        else if(paren_string[i]==')'){\n            stk.pop();\n  \
    \          if(stk.empty()){\n                result.push_back(temp);\n       \
    \         temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < paren_string.length(); i++) {\n        if(paren_string[i]\
    \ == '(') {\n            count++;\n            temp += paren_string[i];\n    \
    \    }\n        else if(paren_string[i] == ')') {\n            count--;\n    \
    \        temp += paren_string[i];\n        }\n        else {\n            temp\
    \ += paren_string[i];\n        }\n        if(count == 0) {\n            result.push_back(temp);\n\
    \            temp = \"\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp = \"\";\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else {\n            temp += paren_string[i];\n        }\n       \
    \ if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            if(st.empty()){\n\
    \                return result;\n            }\n            else{\n          \
    \      st.pop();\n                temp+=paren_string[i];\n            }\n    \
    \    }\n        else{\n            temp+=paren_string[i];\n        }\n    }\n\
    \    if(!st.empty()){\n        return result;\n    }\n    result.push_back(temp);\n\
    \    return result;", "    std::vector<std::string> result;\n    std::stack<char>\
    \ st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            if(st.empty()){\n\
    \                return result;\n            }\n            else{\n          \
    \      st.pop();\n                temp+=paren_string[i];\n            }\n    \
    \    }\n        else{\n            temp+=paren_string[i];\n        }\n    }\n\
    \    if(!st.empty()){\n        return result;\n    }\n    result.push_back(temp);\n\
    \    return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n  \
    \      if(paren_string[i] == '(') {\n            count++;\n            temp +=\
    \ paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n   \
    \         count--;\n            temp += paren_string[i];\n        }\n        else\
    \ if(paren_string[i] == ' ') {\n            continue;\n        }\n        else\
    \ {\n            temp += paren_string[i];\n        }\n        if(count == 0) {\n\
    \            result.push_back(temp);\n            temp = \"\";\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++)\
    \ {\n        if(paren_string[i] == '(') {\n            count++;\n            temp\
    \ += paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else if(paren_string[i] == ' ') {\n            continue;\n        }\n    \
    \    else {\n            temp += paren_string[i];\n        }\n        if(count\
    \ == 0) {\n            result.push_back(temp);\n            temp = \"\";\n   \
    \     }\n    }\n    return result;", "    std::vector<std::string> result;\n \
    \   std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> groups;\n\
    \    std::string group;\n    int open_parens = 0;\n    for (char c : paren_string)\
    \ {\n        if (c == '(') {\n            open_parens++;\n        } else if (c\
    \ == ')') {\n            open_parens--;\n        }\n        if (open_parens ==\
    \ 0) {\n            if (group.size() > 0) {\n                groups.push_back(group);\n\
    \                group = \"\";\n            }\n        } else {\n            group\
    \ += c;\n        }\n    }\n    return groups;", "    std::vector<std::string>\
    \ result;\n    int start = 0;\n    int end = 0;\n    int count = 0;\n    for (int\
    \ i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i] == '(')\
    \ {\n            count++;\n            if (count == 1) {\n                start\
    \ = i;\n            }\n        }\n        if (paren_string[i] == ')') {\n    \
    \        count--;\n            if (count == 0) {\n                end = i;\n \
    \               result.push_back(paren_string.substr(start, end - start + 1));\n\
    \            }\n        }\n    }\n    return result;", "  std::vector<std::string>\
    \ result;\n  std::string temp;\n  int count = 0;\n  for (int i = 0; i < paren_string.size();\
    \ i++) {\n    if (paren_string[i] == '(') {\n      count++;\n      temp += paren_string[i];\n\
    \    } else if (paren_string[i] == ')') {\n      count--;\n      temp += paren_string[i];\n\
    \    } else {\n      temp += paren_string[i];\n    }\n    if (count == 0 && temp\
    \ != \"\") {\n      result.push_back(temp);\n      temp = \"\";\n    }\n  }\n\
    \  return result;", "    std::vector<std::string> result;\n    std::string temp;\n\
    \    int count = 0;\n    for(int i = 0; i < paren_string.length(); i++) {\n  \
    \      if(paren_string[i] == '(') {\n            count++;\n            temp.push_back(paren_string[i]);\n\
    \        }\n        else if(paren_string[i] == ')') {\n            count--;\n\
    \            temp.push_back(paren_string[i]);\n        }\n        else {\n   \
    \         temp.push_back(paren_string[i]);\n        }\n        if(count == 0)\
    \ {\n            result.push_back(temp);\n            temp.clear();\n        }\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size(); i++)\
    \ {\n        if(paren_string[i] == '(') {\n            count++;\n            temp\
    \ += paren_string[i];\n        }\n        else if(paren_string[i] == ')') {\n\
    \            count--;\n            temp += paren_string[i];\n        }\n     \
    \   else {\n            temp += paren_string[i];\n        }\n        if(count\
    \ == 0 && temp.size() > 0) {\n            result.push_back(temp);\n          \
    \  temp.clear();\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    int count = 0;\n    for(int i = 0; i < paren_string.size();\
    \ i++) {\n        if(paren_string[i] == '(') {\n            count++;\n       \
    \     temp += paren_string[i];\n        }\n        else if(paren_string[i] ==\
    \ ')') {\n            count--;\n            temp += paren_string[i];\n       \
    \ }\n        else if(paren_string[i] == ' ') {\n            continue;\n      \
    \  }\n        else {\n            temp += paren_string[i];\n        }\n      \
    \  if(count == 0) {\n            result.push_back(temp);\n            temp = \"\
    \";\n        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stack<char> st;\n    std::string temp;\n    for(int i=0;i<paren_string.length();i++){\n\
    \        if(paren_string[i]=='('){\n            st.push(paren_string[i]);\n  \
    \      }\n        else if(paren_string[i]==')'){\n            st.pop();\n    \
    \        if(st.empty()){\n                result.push_back(temp);\n          \
    \      temp=\"\";\n            }\n        }\n        else if(paren_string[i]!='\
    \ '){\n            temp+=paren_string[i];\n        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

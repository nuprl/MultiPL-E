language: cpp
name: HumanEval_140_fix_spaces
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int space_count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  space_count++;\n        } else {\n            space_count = 0;\n        }\n\
    \        if (space_count == 1) {\n            result += '_';\n        } else if\
    \ (space_count > 1) {\n            result += '-';\n        } else {\n        \
    \    result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpblo4a2bj: /tmp/tmpblo4a2bj.cpp:29: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int i = 0;\n    while (i < text.size())\
    \ {\n        if (text[i] == ' ') {\n            result += '_';\n            i++;\n\
    \            while (i < text.size() && text[i] == ' ') {\n                result\
    \ += '-';\n                i++;\n            }\n        } else {\n           \
    \ result += text[i];\n            i++;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpykapdyur: /tmp/tmpykapdyur.cpp:28: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    bool space = false;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            if (space)\
    \ {\n                result += '-';\n            } else {\n                result\
    \ += '_';\n                space = true;\n            }\n        } else {\n  \
    \          result += text[i];\n            space = false;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbgklsnn1: /tmp/tmpbgklsnn1.cpp:28: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                while (count > 0) {\n                 \
    \   result += '_';\n                    count--;\n                }\n        \
    \    }\n            result += text[i];\n        }\n    }\n    if (count > 2) {\n\
    \        result += '-';\n    } else {\n        while (count > 0) {\n         \
    \   result += '_';\n            count--;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd55vl7b5: /tmp/tmpd55vl7b5.cpp:39: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int i = 0;\n    while (i < text.size())\
    \ {\n        if (text[i] == ' ') {\n            result += '_';\n            i++;\n\
    \            while (i < text.size() && text[i] == ' ') {\n                result\
    \ += '-';\n                i++;\n            }\n        } else {\n           \
    \ result += text[i];\n            i++;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpykapdyur: /tmp/tmpykapdyur.cpp:28: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    // write your code here\n    int n = text.length();\n    int i\
    \ = 0;\n    int count = 0;\n    while(i < n) {\n        if(text[i] == ' ') {\n\
    \            count++;\n            if(count > 2) {\n                text[i] =\
    \ '-';\n            }\n        } else {\n            count = 0;\n        }\n \
    \       i++;\n    }\n    for(int i = 0; i < n; i++) {\n        if(text[i] == '\
    \ ') {\n            text[i] = '_';\n        }\n    }\n    return text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpapr2mc5l: /tmp/tmpapr2mc5l.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                while (count > 0) {\n                 \
    \   result += '_';\n                    count--;\n                }\n        \
    \    }\n            result += text[i];\n        }\n    }\n    if (count > 2) {\n\
    \        result += '-';\n    } else {\n        while (count > 0) {\n         \
    \   result += '_';\n            count--;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd55vl7b5: /tmp/tmpd55vl7b5.cpp:39: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                while (count > 0) {\n                 \
    \   result += '_';\n                    count--;\n                }\n        \
    \    }\n            result += text[i];\n        }\n    }\n    if (count > 2) {\n\
    \        result += '-';\n    } else {\n        while (count > 0) {\n         \
    \   result += '_';\n            count--;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd55vl7b5: /tmp/tmpd55vl7b5.cpp:39: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i == 0) {\n              \
    \  result += '_';\n            } else if (text[i - 1] == ' ') {\n            \
    \    result += '-';\n            } else {\n                result += '_';\n  \
    \          }\n        } else {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjtjbppq4: /tmp/tmpjtjbppq4.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count == 1) {\n                result\
    \ += '_';\n            } else if (space_count > 1) {\n                result +=\
    \ '-';\n            }\n            result += text[i];\n            space_count\
    \ = 0;\n        }\n    }\n    if (space_count == 1) {\n        result += '_';\n\
    \    } else if (space_count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp04iih_h5: /tmp/tmp04iih_h5.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int i = 0;\n    while (i < text.length())\
    \ {\n        if (text[i] == ' ') {\n            result += '_';\n            i++;\n\
    \            while (i < text.length() && text[i] == ' ') {\n                i++;\n\
    \            }\n        } else {\n            result += text[i];\n           \
    \ i++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmppimehqyp: /tmp/tmppimehqyp.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); ++i)\
    \ {\n        if (text[i] == ' ') {\n            if (i > 0 && text[i - 1] == '\
    \ ') {\n                result += '-';\n            } else {\n               \
    \ result += '_';\n            }\n        } else {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg22rg0jr: /tmp/tmpg22rg0jr.cpp:25: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count == 1) {\n                result\
    \ += '_';\n            } else if (space_count > 1) {\n                result +=\
    \ '-';\n            }\n            result += text[i];\n            space_count\
    \ = 0;\n        }\n    }\n    if (space_count == 1) {\n        result += '_';\n\
    \    } else if (space_count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp04iih_h5: /tmp/tmp04iih_h5.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result.push_back('-');\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result.push_back('_');\n                }\n            }\n \
    \           count = 0;\n            result.push_back(text[i]);\n        }\n  \
    \  }\n    if (count > 2) {\n        result.push_back('-');\n    } else {\n   \
    \     for (int j = 0; j < count; j++) {\n            result.push_back('_');\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \            if (count == 1) {\n                result += '_';\n            }\n\
    \        } else {\n            if (count > 1) {\n                result += '-';\n\
    \            }\n            result += text[i];\n            count = 0;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpzgxtlc1r: /tmp/tmpzgxtlc1r.cpp:29: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int spaces = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            spaces++;\n\
    \        } else {\n            if (spaces > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < spaces; j++) {\n  \
    \                  result += '_';\n                }\n            }\n        \
    \    spaces = 0;\n            result += text[i];\n        }\n    }\n    if (spaces\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < spaces;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int spaces = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            spaces++;\n\
    \        } else {\n            if (spaces == 1) {\n                result += '_';\n\
    \            } else if (spaces > 1) {\n                result += '-';\n      \
    \      }\n            result += text[i];\n            spaces = 0;\n        }\n\
    \    }\n    if (spaces == 1) {\n        result += '_';\n    } else if (spaces\
    \ > 1) {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpx1hgk76e: /tmp/tmpx1hgk76e.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count == 1) {\n                result\
    \ += '_';\n            } else if (space_count > 1) {\n                result +=\
    \ '-';\n            }\n            result += text[i];\n            space_count\
    \ = 0;\n        }\n    }\n    if (space_count == 1) {\n        result += '_';\n\
    \    } else if (space_count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp04iih_h5: /tmp/tmp04iih_h5.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += \"\
    _\";\n            } else if (count > 1) {\n                result += \"-\";\n\
    \            }\n            result += text[i];\n            count = 0;\n     \
    \   }\n    }\n    if (count == 1) {\n        result += \"_\";\n    } else if (count\
    \ > 1) {\n        result += \"-\";\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp1ku_zuuw: /tmp/tmp1ku_zuuw.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    char prev = '\\0';\n    for (char c :\
    \ text) {\n        if (c == ' ') {\n            if (prev == ' ') {\n         \
    \       result += '-';\n            } else {\n                result += '_';\n\
    \            }\n        } else {\n            result += c;\n        }\n      \
    \  prev = c;\n    }\n    return result;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkymer1kn: /tmp/tmpkymer1kn.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i == 0 || text[i-1] == ' ')\
    \ {\n                result += '-';\n            } else {\n                result\
    \ += '_';\n            }\n        } else {\n            result += text[i];\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkbi38izo: /tmp/tmpkbi38izo.cpp:25: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i == 0) {\n              \
    \  result += '_';\n            } else if (text[i - 1] == ' ') {\n            \
    \    result += '-';\n            } else {\n                result += '_';\n  \
    \          }\n        } else {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjtjbppq4: /tmp/tmpjtjbppq4.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            count = 0;\n        }\n        if (count == 1)\
    \ {\n            result += '_';\n        } else if (count > 1) {\n           \
    \ result += '-';\n        } else {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw8_2_4af: /tmp/tmpw8_2_4af.cpp:29: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int i = 0;\n    while (i < text.size())\
    \ {\n        if (text[i] == ' ') {\n            result += '_';\n            i++;\n\
    \            while (i < text.size() && text[i] == ' ') {\n                result\
    \ += '-';\n                i++;\n            }\n        } else {\n           \
    \ result += text[i];\n            i++;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpykapdyur: /tmp/tmpykapdyur.cpp:28: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count == 1) {\n                result\
    \ += '_';\n            } else if (space_count > 1) {\n                result +=\
    \ '-';\n            }\n            result += text[i];\n            space_count\
    \ = 0;\n        }\n    }\n    if (space_count == 1) {\n        result += '_';\n\
    \    } else if (space_count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp04iih_h5: /tmp/tmp04iih_h5.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i == 0 || text[i - 1] == '\
    \ ') {\n                result += '-';\n            } else {\n               \
    \ result += '_';\n            }\n        } else {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpzcivoyvw: /tmp/tmpzcivoyvw.cpp:25: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count == 1) {\n                result\
    \ += '_';\n            } else if (space_count > 1) {\n                result +=\
    \ '-';\n            }\n            result += text[i];\n            space_count\
    \ = 0;\n        }\n    }\n    if (space_count == 1) {\n        result += '_';\n\
    \    } else if (space_count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp04iih_h5: /tmp/tmp04iih_h5.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string ans = \"\";\n    for(int i = 0; i < text.size(); i++)\
    \ {\n        if(text[i] == ' ') {\n            if(i == 0 || text[i - 1] == ' ')\
    \ {\n                ans += '-';\n            } else {\n                ans +=\
    \ '_';\n            }\n        } else {\n            ans += text[i];\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpugyry7ne: /tmp/tmpugyry7ne.cpp:25: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            count = 0;\n        }\n        if (count == 1)\
    \ {\n            result += '_';\n        } else if (count > 1) {\n           \
    \ result += '-';\n        } else {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw8_2_4af: /tmp/tmpw8_2_4af.cpp:29: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                while (count > 0) {\n                 \
    \   result += '_';\n                    count--;\n                }\n        \
    \    }\n            result += text[i];\n        }\n    }\n    if (count > 2) {\n\
    \        result += '-';\n    } else {\n        while (count > 0) {\n         \
    \   result += '_';\n            count--;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd55vl7b5: /tmp/tmpd55vl7b5.cpp:39: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n\tstd::string result;\n\tint count = 0;\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcount++;\n\t\t\tif (count == 2) {\n\
    \t\t\t\tresult += '-';\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t\
    if (count == 1) {\n\t\t\t\tresult += '_';\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t\t\
    result += text[i];\n\t\t}\n\t}\n\tif (count == 1) {\n\t\tresult += '_';\n\t}\n\
    \treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpzpg7x0gb: /tmp/tmpzpg7x0gb.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i > 0 && text[i - 1] == '\
    \ ') {\n                result += '-';\n            } else {\n               \
    \ result += '_';\n            }\n        } else {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpnvrgy77m: /tmp/tmpnvrgy77m.cpp:25: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            count = 0;\n        }\n        if (count == 1)\
    \ {\n            result += '_';\n        } else if (count > 1) {\n           \
    \ result += '-';\n        } else {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw8_2_4af: /tmp/tmpw8_2_4af.cpp:29: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    // Write your code here\n    std::string result;\n    int count\
    \ = 0;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == ' ')\
    \ {\n            count++;\n        } else {\n            count = 0;\n        }\n\
    \        if(count == 1) {\n            result += '_';\n        } else if(count\
    \ > 1) {\n            result += '-';\n        } else {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp037acdj8: /tmp/tmp037acdj8.cpp:30: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int i = 0;\n    while (i < text.length())\
    \ {\n        if (text[i] == ' ') {\n            result += '_';\n            i++;\n\
    \            while (i < text.length() && text[i] == ' ') {\n                result\
    \ += '-';\n                i++;\n            }\n        } else {\n           \
    \ result += text[i];\n            i++;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpbb2jnrjw: /tmp/tmpbb2jnrjw.cpp:28: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                while (count > 0) {\n                 \
    \   result += '_';\n                    count--;\n                }\n        \
    \    }\n            result += text[i];\n        }\n    }\n    if (count > 2) {\n\
    \        result += '-';\n    } else {\n        while (count > 0) {\n         \
    \   result += '_';\n            count--;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd55vl7b5: /tmp/tmpd55vl7b5.cpp:39: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i == 0) {\n              \
    \  result += '_';\n            } else if (text[i - 1] == ' ') {\n            \
    \    result += '-';\n            } else {\n                result += '_';\n  \
    \          }\n        } else {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjtjbppq4: /tmp/tmpjtjbppq4.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    // Write your code here\n    std::string result = \"\";\n    int\
    \ count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i]\
    \ == ' ') {\n            count++;\n            if(count > 2) {\n             \
    \   result += '-';\n                count = 0;\n            }\n        } else\
    \ {\n            if(count > 0) {\n                result += '_';\n           \
    \     count = 0;\n            }\n            result += text[i];\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmptozzmw0g: /tmp/tmptozzmw0g.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmptroakeup: /tmp/tmptroakeup.cpp:29: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    bool prev_space = false;\n    for (auto\
    \ c : text) {\n        if (c == ' ') {\n            if (prev_space) {\n      \
    \          result += '-';\n            } else {\n                result += '_';\n\
    \                prev_space = true;\n            }\n        } else {\n       \
    \     result += c;\n            prev_space = false;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmput9oon87: /tmp/tmput9oon87.cpp:28: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count > 2) {\n                result\
    \ += '-';\n            } else {\n                for (int j = 0; j < space_count;\
    \ j++) {\n                    result += '_';\n                }\n            }\n\
    \            space_count = 0;\n            result += text[i];\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n \
    \   assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7995vzsg: /tmp/tmp7995vzsg.cpp:29: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int i = 0;\n    while (i < text.length())\
    \ {\n        if (text[i] == ' ') {\n            int j = i;\n            while\
    \ (j < text.length() && text[j] == ' ') {\n                j++;\n            }\n\
    \            if (j - i > 2) {\n                result += \"-\";\n            }\
    \ else {\n                result += \"_\";\n            }\n            i = j;\n\
    \        } else {\n            result += text[i];\n            i++;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpazeqhnn8: /tmp/tmpazeqhnn8.cpp:32: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (char c : text)\
    \ {\n        if (c == ' ') {\n            count++;\n        } else {\n       \
    \     if (count > 2) {\n                result += '-';\n            } else {\n\
    \                for (int i = 0; i < count; i++) {\n                    result\
    \ += '_';\n                }\n            }\n            count = 0;\n        \
    \    result += c;\n        }\n    }\n    if (count > 2) {\n        result += '-';\n\
    \    } else {\n        for (int i = 0; i < count; i++) {\n            result +=\
    \ '_';\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            if (i == 0) {\n         \
    \       result += '_';\n            } else if (text[i-1] == ' ') {\n         \
    \       result += '-';\n            } else {\n                result += '_';\n\
    \            }\n        } else {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmprpxae32q: /tmp/tmprpxae32q.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (i == 0) {\n              \
    \  result += '_';\n            } else if (text[i - 1] == ' ') {\n            \
    \    result += '-';\n            } else {\n                result += '_';\n  \
    \          }\n        } else {\n            result += text[i];\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjtjbppq4: /tmp/tmpjtjbppq4.cpp:27: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (int i =\
    \ 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            space_count++;\n\
    \        } else {\n            if (space_count == 1) {\n                result\
    \ += '_';\n            } else if (space_count > 1) {\n                result +=\
    \ '-';\n            }\n            result += text[i];\n            space_count\
    \ = 0;\n        }\n    }\n    if (space_count == 1) {\n        result += '_';\n\
    \    } else if (space_count > 1) {\n        result += '-';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp04iih_h5: /tmp/tmp04iih_h5.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            if (count\
    \ == 0) {\n                result += '_';\n                count++;\n        \
    \    } else if (count == 1) {\n                result += '-';\n              \
    \  count++;\n            }\n        } else {\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpk6o5cqv0: /tmp/tmpk6o5cqv0.cpp:29: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int n = text.size();\n    for (int i =\
    \ 0; i < n; i++) {\n        if (text[i] == ' ') {\n            if (i == 0 || text[i\
    \ - 1] == ' ') {\n                result += '-';\n            } else {\n     \
    \           result += '_';\n            }\n        } else {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpltv6vytv: /tmp/tmpltv6vytv.cpp:26: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int space_count = 0;\n    for (char c\
    \ : text) {\n        if (c == ' ') {\n            space_count++;\n        } else\
    \ {\n            if (space_count == 1) {\n                result += '_';\n   \
    \         } else if (space_count > 1) {\n                result += '-';\n    \
    \        }\n            result += c;\n            space_count = 0;\n        }\n\
    \    }\n    if (space_count == 1) {\n        result += '_';\n    } else if (space_count\
    \ > 1) {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpp3scrf17: /tmp/tmpp3scrf17.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count > 2) {\n                result += '-';\n\
    \            } else {\n                for (int j = 0; j < count; j++) {\n   \
    \                 result += '_';\n                }\n            }\n         \
    \   count = 0;\n            result += text[i];\n        }\n    }\n    if (count\
    \ > 2) {\n        result += '-';\n    } else {\n        for (int j = 0; j < count;\
    \ j++) {\n            result += '_';\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result = \"\";\n    int count = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxgfjfyra: /tmp/tmpxgfjfyra.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int spaces = 0;\n    for (char c : text)\
    \ {\n        if (c == ' ') {\n            spaces++;\n        } else {\n      \
    \      if (spaces > 2) {\n                result += '-';\n            } else {\n\
    \                for (int i = 0; i < spaces; i++) {\n                    result\
    \ += '_';\n                }\n            }\n            spaces = 0;\n       \
    \     result += c;\n        }\n    }\n    if (spaces > 2) {\n        result +=\
    \ '-';\n    } else {\n        for (int i = 0; i < spaces; i++) {\n           \
    \ result += '_';\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with -\nstd::string fix_spaces(std::string\
    \ text) {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i\
    \ < text.size(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcg9qiam7: /tmp/tmpcg9qiam7.cpp:33: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126855

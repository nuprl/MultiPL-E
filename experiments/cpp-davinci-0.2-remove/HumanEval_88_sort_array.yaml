name: HumanEval_88_sort_array
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an array of non-negative\
  \ integers, return a copy of the given array after sorting,\n// you will sort the\
  \ given array in ascending order if the sum( first index value, last index value)\
  \ is odd,\n// or sort it in descending order if the sum( first index value, last\
  \ index value) is even.\n// Note:\n// * don't change the given array.\n// Examples:\n\
  std::vector<long> sort_array(std::vector<long> array) {\n"
tests: "}\nint main() {\n    auto candidate = sort_array;\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5})))\
  \ == (std::vector<long>({(long)5})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)3, (long)0, (long)1, (long)5}))) == (std::vector<long>({(long)0,\
  \ (long)1, (long)2, (long)3, (long)4, (long)5})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)3, (long)0, (long)1, (long)5, (long)6}))) == (std::vector<long>({(long)6,\
  \ (long)5, (long)4, (long)3, (long)2, (long)1, (long)0})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)1}))) == (std::vector<long>({(long)1, (long)2})));\n    assert(candidate((std::vector<long>({(long)15,\
  \ (long)42, (long)87, (long)32, (long)11, (long)0}))) == (std::vector<long>({(long)0,\
  \ (long)11, (long)15, (long)32, (long)42, (long)87})));\n    assert(candidate((std::vector<long>({(long)21,\
  \ (long)14, (long)23, (long)11}))) == (std::vector<long>({(long)23, (long)21, (long)14,\
  \ (long)11})));\n}\n"
completions: ["  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0)\
    \ {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  } else\
    \ {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", "  std::vector<long>\
    \ result;\n  if(array.size() == 0)\n    return result;\n  if(array.size() == 1)\n\
    \    return array;\n  if(array.size() == 2){\n    if((array[0] + array[1]) % 2\
    \ == 0){\n      if(array[0] < array[1])\n        return array;\n      else{\n\
    \        result.push_back(array[1]);\n        result.push_back(array[0]);\n  \
    \      return result;\n      }\n    }\n    else{\n      if(array[0] > array[1])\n\
    \        return array;\n      else{\n        result.push_back(array[1]);\n   \
    \     result.push_back(array[0]);\n        return result;\n      }\n    }\n  }\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    return array;\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n    return array;\n  }", "  int n = array.size();\n  int sum\
    \ = array[0] + array[n-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  // your code here\n  long sum = array[0] + array[array.size()-1];\n\
    \  if(sum%2 == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else{\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int n = array.size();\n    int sum = array[0] + array[n-1];\n    if(sum%2 ==\
    \ 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else\n    {\n        std::sort(array.begin(), array.end());\n    }\n\
    \    return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "\tint sum = array[0] + array[array.size() - 1];\n\tif (sum % 2 == 0) {\n\t\tstd::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n\t}\n\telse {\n\t\tstd::sort(array.begin(),\
    \ array.end());\n\t}\n\treturn array;", "  // your code here\n  int sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  int sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0)\n    std::sort(array.begin(), array.end(),\
    \ std::greater<int>());\n  else\n    std::sort(array.begin(), array.end());\n\
    \  return array;", "  // your code here\n  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2){\n    if((array[0] + array[1]) % 2 == 0){\n      result.push_back(array[1]);\n\
    \      result.push_back(array[0]);\n      return result;\n    }\n    else{\n \
    \     return array;\n    }\n  }\n  if((array[0] + array[array.size() - 1]) % 2\
    \ == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n \
    \   return array;\n  }\n  else{\n    std::sort(array.begin(), array.end());\n\
    \    return array;\n  }", "  int sum = array[0] + array[array.size() - 1];\n \
    \ if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  if(array.size() == 0)\n    return array;\n  if(array.size() == 1)\n    return\
    \ array;\n  if(array.size() == 2)\n  {\n    if((array[0] + array[1]) % 2 == 0)\n\
    \    {\n      if(array[0] < array[1])\n        std::swap(array[0], array[1]);\n\
    \    }\n    else\n    {\n      if(array[0] > array[1])\n        std::swap(array[0],\
    \ array[1]);\n    }\n    return array;\n  }\n  long sum = array[0] + array[array.size()\
    \ - 1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int n = array.size();\n  int sum = array[0] + array[n-1];\n  if(sum%2 == 0)\n\
    \  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  }\n\
    \  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 != 0) {\n  \
    \      std::sort(array.begin(), array.end());\n    } else {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    }\n    return array;", "  int n = array.size();\n\
    \  int sum = array[0] + array[n-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    // your code here\n    long sum =\
    \ array[0] + array[array.size()-1];\n    if(sum % 2 == 0)\n    {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    }\n    else\n    {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int n = array.size();\n  int sum = array[0] + array[n-1];\n  if(sum % 2 == 0)\n\
    \    std::sort(array.begin(), array.end(), std::greater<long>());\n  else\n  \
    \  std::sort(array.begin(), array.end());\n  return array;", "  std::vector<long>\
    \ result;\n  if(array.size() == 0)\n    return result;\n  if(array.size() == 1)\n\
    \    return array;\n  if(array.size() == 2){\n    if((array[0] + array[1]) % 2\
    \ == 0){\n      if(array[0] > array[1]){\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    else{\n      if(array[0]\
    \ < array[1]){\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0){\n    for(int i = 0; i < array.size(); i++){\n      result.push_back(array[array.size()\
    \ - 1 - i]);\n    }\n  }\n  else{\n    for(int i = 0; i < array.size(); i++){\n\
    \      result.push_back(array[i]);\n    }\n  }\n  return result;", "  std::vector<long>\
    \ result;\n  if(array.size() == 0){\n    return result;\n  }\n  if(array.size()\
    \ == 1){\n    return array;\n  }\n  if(array.size() == 2){\n    if((array[0] +\
    \ array[1]) % 2 == 0){\n      if(array[0] > array[1]){\n        std::swap(array[0],\
    \ array[1]);\n      }\n    }\n    else{\n      if(array[0] < array[1]){\n    \
    \    std::swap(array[0], array[1]);\n      }\n    }\n    return array;\n  }\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<int>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int n = array.size();\n    int sum = array[0]\
    \ + array[n-1];\n    if(sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    std::vector<long> result;\n    if(array.size()\
    \ == 0) return result;\n    if(array.size() == 1) return array;\n    if(array.size()\
    \ == 2) {\n        if(array[0] > array[1]) {\n            result.push_back(array[1]);\n\
    \            result.push_back(array[0]);\n        }\n        else {\n        \
    \    result.push_back(array[0]);\n            result.push_back(array[1]);\n  \
    \      }\n        return result;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else {\n        std::sort(array.begin(), array.end());\n    }\n  \
    \  return array;", "    int n = array.size();\n    int sum = array[0] + array[n-1];\n\
    \    if(sum % 2 == 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else\n    {\n        std::sort(array.begin(), array.end());\n    }\n\
    \    return array;", "    int sum = array[0] + array[array.size() - 1];\n    if\
    \ (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    // your code here\n    std::vector<long> sorted_array;\n    if(array.size()==0)\n\
    \        return sorted_array;\n    if(array.size()==1)\n        return array;\n\
    \    if((array[0]+array[array.size()-1])%2==0)\n    {\n        std::sort(array.begin(),array.end(),std::greater<long>());\n\
    \        return array;\n    }\n    else\n    {\n        std::sort(array.begin(),array.end());\n\
    \        return array;\n    }", "  int n = array.size();\n  int sum = array[0]\
    \ + array[n-1];\n  if(sum % 2 == 0) {\n    std::sort(array.begin(), array.end(),\
    \ std::greater<int>());\n  }\n  else {\n    std::sort(array.begin(), array.end());\n\
    \  }\n  return array;", "    // your code here\n    std::vector<long> result;\n\
    \    if((array[0] + array[array.size()-1]) % 2 == 0){\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    }\n    else{\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  // your code here\n  std::vector<long> result;\n\
    \  if(array.size() == 0)\n    return result;\n  if(array.size() == 1)\n    return\
    \ array;\n  if(array.size() == 2){\n    if((array[0] + array[1]) % 2 == 0){\n\
    \      if(array[0] > array[1]){\n        result.push_back(array[0]);\n       \
    \ result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    else{\n      if(array[0]\
    \ < array[1]){\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else{\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  int sum = array[0] + array[array.size()-1];\n  if(sum %\
    \ 2 == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  long sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if (array.size() <= 1) return array;\n\
    \    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n\
    \        std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()==0)\n\
    \    return result;\n  if(array.size()==1)\n    return array;\n  if(array.size()==2){\n\
    \    if((array[0]+array[1])%2==0){\n      if(array[0]>array[1]){\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    else{\n      if(array[0]<array[1]){\n\
    \        result.push_back(array[0]);\n        result.push_back(array[1]);\n  \
    \    }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0]+array[array.size()-1])%2==0){\n\
    \    std::sort(array.begin(),array.end(),std::greater<int>());\n  }\n  else{\n\
    \    std::sort(array.begin(),array.end());\n  }\n  return array;", "  std::vector<long>\
    \ sortedArray;\n  if (array.size() == 0) {\n    return sortedArray;\n  }\n  if\
    \ (array.size() == 1) {\n    return array;\n  }\n  if (array.size() == 2) {\n\
    \    if ((array[0] + array[1]) % 2 == 0) {\n      std::swap(array[0], array[1]);\n\
    \    }\n    return array;\n  }\n  if ((array[0] + array[array.size() - 1]) % 2\
    \ == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    std::vector<long> result;\n    long sum = array[0] + array[array.size() - 1];\n\
    \    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    std::vector<long> result;\n    if(array.size() == 0) return result;\n\
    \    if(array.size() == 1) return array;\n    if(array.size() == 2) {\n      \
    \  if((array[0] + array[1]) % 2 == 0) {\n            if(array[0] > array[1]) {\n\
    \                result.push_back(array[0]);\n                result.push_back(array[1]);\n\
    \            } else {\n                result.push_back(array[1]);\n         \
    \       result.push_back(array[0]);\n            }\n        } else {\n       \
    \     if(array[0] < array[1]) {\n                result.push_back(array[0]);\n\
    \                result.push_back(array[1]);\n            } else {\n         \
    \       result.push_back(array[1]);\n                result.push_back(array[0]);\n\
    \            }\n        }\n        return result;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    std::vector<long> result;\n    if(array.size() == 0) return result;\n\
    \    if(array.size() == 1) return array;\n    int sum = array[0] + array[array.size()-1];\n\
    \    if(sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  std::vector<long> result;\n  if(array.size() == 0)\n    return result;\n\
    \  if(array.size() == 1)\n    return array;\n  if(array.size() == 2)\n  {\n  \
    \  if((array[0] + array[1]) % 2 == 0)\n    {\n      if(array[0] < array[1])\n\
    \      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n      else\n      {\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n    }\n    else\n    {\n      if(array[0] < array[1])\n      {\n   \
    \     result.push_back(array[0]);\n        result.push_back(array[1]);\n     \
    \ }\n      else\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n  {\n    for(int i = 0; i < array.size(); i++)\n    {\n   \
    \   result.push_back(array[array.size() - 1 - i]);\n    }\n  }\n  else\n  {\n\
    \    for(int i = 0; i < array.size(); i++)\n    {\n      result.push_back(array[i]);\n\
    \    }\n  }\n  return result;", "    int sum = array[0] + array[array.size() -\
    \ 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int n = array.size();\n    int sum = array[0]\
    \ + array[n-1];\n    if(sum % 2 == 0)\n        sort(array.begin(), array.end(),\
    \ greater<long>());\n    else\n        sort(array.begin(), array.end());\n   \
    \ return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int n = array.size();\n  if(n == 0)\
    \ return array;\n  int sum = array[0] + array[n-1];\n  if(sum % 2 == 0)\n    sort(array.begin(),\
    \ array.end(), greater<long>());\n  else\n    sort(array.begin(), array.end());\n\
    \  return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    if(array.size() == 0) return array;\n    int sum = array[0] + array[array.size()\
    \ - 1];\n    if(sum % 2 == 0)\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    else\n        std::sort(array.begin(), array.end());\n    return array;",
  "    std::vector<long> result;\n    if(array.size() == 0)\n        return result;\n\
    \    if(array.size() == 1)\n        return array;\n    if(array.size() == 2){\n\
    \        if((array[0] + array[1]) % 2 == 0){\n            result.push_back(array[1]);\n\
    \            result.push_back(array[0]);\n            return result;\n       \
    \ }\n        else\n            return array;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0){\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \        return array;\n    }\n    else\n        std::sort(array.begin(), array.end());\n\
    \    return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  int sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2){\n    if((array[0] + array[1]) % 2 == 0){\n      if(array[0] > array[1]){\n\
    \        result.push_back(array[0]);\n        result.push_back(array[1]);\n  \
    \    }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    else{\n      if(array[0] < array[1]){\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    return result;\n  }\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0){\n    for(int i = array.size()\
    \ - 1; i >= 0; i--){\n      result.push_back(array[i]);\n    }\n  }\n  else{\n\
    \    for(int i = 0; i < array.size(); i++){\n      result.push_back(array[i]);\n\
    \    }\n  }\n  return result;", "  // your code here\n  int n = array.size();\n\
    \  int sum = array[0] + array[n-1];\n  if(sum%2 == 0)\n  {\n    sort(array.begin(),\
    \ array.end(), greater<int>());\n  }\n  else\n  {\n    sort(array.begin(), array.end());\n\
    \  }\n  return array;", "  int sum = array[0] + array[array.size() - 1];\n  if\
    \ (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  long sum = array[0] + array[array.size()-1];\n  if(sum %\
    \ 2 == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  int sum = array[0] + array[array.size() - 1];\n\
    \  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = 0;\n    for(int i = 0; i < array.size(); i++)\n    {\n        sum\
    \ += array[i];\n    }\n    if(sum % 2 == 0)\n    {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    }\n    else\n    {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int n = array.size();\n    if(n == 0) return array;\n    int sum = array[0]\
    \ + array[n-1];\n    if(sum % 2 == 0)\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    else\n        std::sort(array.begin(), array.end());\n\
    \    return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int n = array.size();\n  if(n == 0) return array;\n  int sum = array[0] + array[n-1];\n\
    \  if(sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    std::vector<long> result;\n    if(array.size() == 0)\n        return result;\n\
    \    if(array.size() == 1)\n        return array;\n    if(array.size() == 2)\n\
    \    {\n        if((array[0] + array[1]) % 2 == 0)\n        {\n            result.push_back(array[1]);\n\
    \            result.push_back(array[0]);\n            return result;\n       \
    \ }\n        else\n            return array;\n    }\n    int i = 0;\n    int j\
    \ = array.size() - 1;\n    while(i < j)\n    {\n        if((array[i] + array[j])\
    \ % 2 == 0)\n        {\n            result.push_back(array[j]);\n            result.push_back(array[i]);\n\
    \            i++;\n            j--;\n        }\n        else\n        {\n    \
    \        result.push_back(array[i]);\n            result.push_back(array[j]);\n\
    \            i++;\n            j--;\n        }\n    }\n    if(i == j)\n      \
    \  result.push_back(array[i]);\n    return result;", "    long sum = array[0]\
    \ + array[array.size() - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "    std::vector<long> result;\n \
    \   int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n \
    \       std::sort(array.begin(), array.end(), std::greater<int>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    // your code here\n    long sum =\
    \ array[0] + array[array.size()-1];\n    if(sum%2 == 0){\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    }\n    else{\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  // your code here\n  long sum = array[0] + array[array.size()-1];\n  if(sum %\
    \ 2 == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  int sum = array[0] + array[array.size()-1];\n  if(sum %\
    \ 2 == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int n = array.size();\n    int sum = array[0] + array[n-1];\n    if(sum % 2\
    \ == 0)\n        sort(array.begin(), array.end(), greater<long>());\n    else\n\
    \        sort(array.begin(), array.end());\n    return array;", "  int sum = array[0]\
    \ + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2){\n    if((array[0] + array[1]) % 2 == 0){\n      if(array[0] > array[1]){\n\
    \        result.push_back(array[0]);\n        result.push_back(array[1]);\n  \
    \    }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    else{\n      if(array[0] < array[1]){\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    return result;\n  }\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  // your code here\n  std::vector<long> result;\n  if(array.size() == 0)\n   \
    \ return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2)\n  {\n    if(array[0] > array[1])\n    {\n      long temp = array[0];\n\
    \      array[0] = array[1];\n      array[1] = temp;\n    }\n    return array;\n\
    \  }\n  if((array[0] + array[array.size() - 1]) % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    return array;\n  }\n  else\n  {\n \
    \   std::sort(array.begin(), array.end());\n    return array;\n  }", "  int sum\
    \ = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    std::vector<long> result;\n    if(array.size()\
    \ == 0) return result;\n    if(array.size() == 1) return array;\n    if(array.size()\
    \ == 2) {\n        if((array[0] + array[1]) % 2 == 0) {\n            if(array[0]\
    \ > array[1]) {\n                result.push_back(array[0]);\n               \
    \ result.push_back(array[1]);\n            } else {\n                result.push_back(array[1]);\n\
    \                result.push_back(array[0]);\n            }\n        } else {\n\
    \            if(array[0] < array[1]) {\n                result.push_back(array[0]);\n\
    \                result.push_back(array[1]);\n            } else {\n         \
    \       result.push_back(array[1]);\n                result.push_back(array[0]);\n\
    \            }\n        }\n        return result;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  // your code here\n  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2){\n    if((array[0] + array[1]) % 2 == 0){\n      if(array[0] > array[1]){\n\
    \        result.push_back(array[0]);\n        result.push_back(array[1]);\n  \
    \    }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    else{\n      if(array[0] < array[1]){\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    return result;\n  }\n\
    \  if((array[0] + array[array.size() - 1]) % 2 == 0){\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else{\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if (array.size()\
    \ == 0) {\n    return result;\n  }\n  if (array.size() == 1) {\n    return array;\n\
    \  }\n  if (array.size() == 2) {\n    if ((array[0] + array[1]) % 2 == 0) {\n\
    \      if (array[0] > array[1]) {\n        result.push_back(array[0]);\n     \
    \   result.push_back(array[1]);\n      } else {\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    } else {\n      if (array[0]\
    \ < array[1]) {\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      } else {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if ((array[0] + array[array.size()\
    \ - 1]) % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int n = array.size();\n  if(n == 0) return array;\n  int sum = array[0] + array[n-1];\n\
    \  if(sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  std::vector<long> result;\n  if(array.size() == 0)\n    return result;\n  if(array.size()\
    \ == 1)\n    return array;\n  if(array.size() == 2)\n  {\n    if((array[0] + array[1])\
    \ % 2 == 0)\n    {\n      if(array[0] < array[1])\n      {\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n      else\n      {\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n    }\n    else\n    {\n      if(array[0]\
    \ < array[1])\n      {\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n      else\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n  {\n    for(int i = 0; i < array.size(); i++)\n    {\n   \
    \   result.push_back(array[array.size() - 1 - i]);\n    }\n  }\n  else\n  {\n\
    \    for(int i = 0; i < array.size(); i++)\n    {\n      result.push_back(array[i]);\n\
    \    }\n  }\n  return result;", "  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2)\n  {\n    if((array[0] + array[1]) % 2 == 0)\n    {\n      if(array[0]\
    \ < array[1])\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n      else\n      {\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n    }\n    else\n    {\n      if(array[0] < array[1])\n      {\n   \
    \     result.push_back(array[0]);\n        result.push_back(array[1]);\n     \
    \ }\n      else\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int sum = array[0] + array[array.size() - 1];\n\
    \    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  std::vector<long> result;\n  if(array.size() == 0)\n    return result;\n\
    \  if(array.size() == 1)\n    return array;\n  if(array.size() == 2)\n  {\n  \
    \  if((array[0] + array[1]) % 2 == 0)\n    {\n      if(array[0] < array[1])\n\
    \      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n      else\n      {\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n    }\n    else\n    {\n      if(array[0] < array[1])\n      {\n   \
    \     result.push_back(array[0]);\n        result.push_back(array[1]);\n     \
    \ }\n      else\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n  {\n    for(int i = 0; i < array.size(); i++)\n    {\n   \
    \   if(i % 2 == 0)\n      {\n        result.push_back(array[array.size() - 1 -\
    \ i]);\n      }\n      else\n      {\n        result.push_back(array[i]);\n  \
    \    }\n    }\n  }\n  else\n  {\n    for(int i = 0; i < array.size(); i++)\n \
    \   {\n      if(i % 2 == 0)\n      {\n        result.push_back(array[i]);\n  \
    \    }\n      else\n      {\n        result.push_back(array[array.size() - 1 -\
    \ i]);\n      }\n    }\n  }\n  return result;", "    std::vector<long> sorted_array;\n\
    \    if((array[0] + array[array.size()-1]) % 2 == 0){\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    }\n    else{\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    if(array.size() == 0) return array;\n    int\
    \ sum = array[0] + array[array.size() - 1];\n    if(sum % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  // your code here\n  std::vector<long>\
    \ result;\n  if(array.size() == 0)\n    return result;\n  if(array.size() == 1)\n\
    \    return array;\n  if(array.size() == 2)\n  {\n    if(array[0] > array[1])\n\
    \    {\n      result.push_back(array[1]);\n      result.push_back(array[0]);\n\
    \    }\n    else\n    {\n      result.push_back(array[0]);\n      result.push_back(array[1]);\n\
    \    }\n    return result;\n  }\n  if((array[0] + array[array.size() - 1]) % 2\
    \ == 0)\n  {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    return array;\n  }\n  else\n  {\n    std::sort(array.begin(), array.end());\n\
    \    return array;\n  }", "  int sum = array[0] + array[array.size() - 1];\n \
    \ if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  // your code here\n  int sum = array[0] + array[array.size()-1];\n  if(sum %\
    \ 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<int>());\n \
    \ else\n    std::sort(array.begin(), array.end());\n  return array;", "  int sum\
    \ = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int n = array.size();\n    int sum\
    \ = array[0] + array[n-1];\n    if(sum % 2 == 0)\n        std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n    else\n        std::sort(array.begin(),\
    \ array.end());\n    return array;", "  // your code here\n  long sum = array[0]\
    \ + array[array.size()-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    std::vector<long> result;\n    if (array.size()\
    \ == 0)\n        return result;\n    if (array.size() == 1)\n        return array;\n\
    \    if (array.size() == 2) {\n        if ((array[0] + array[1]) % 2 == 0) {\n\
    \            if (array[0] < array[1]) {\n                result.push_back(array[1]);\n\
    \                result.push_back(array[0]);\n            } else {\n         \
    \       result.push_back(array[0]);\n                result.push_back(array[1]);\n\
    \            }\n        } else {\n            if (array[0] < array[1]) {\n   \
    \             result.push_back(array[0]);\n                result.push_back(array[1]);\n\
    \            } else {\n                result.push_back(array[1]);\n         \
    \       result.push_back(array[0]);\n            }\n        }\n        return\
    \ result;\n    }\n    if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n \
    \       for (int i = 0; i < array.size(); i++) {\n            if (i % 2 == 0)\
    \ {\n                result.push_back(array[array.size() - 1 - i / 2]);\n    \
    \        } else {\n                result.push_back(array[i / 2]);\n         \
    \   }\n        }\n    } else {\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                result.push_back(array[i /\
    \ 2]);\n            } else {\n                result.push_back(array[array.size()\
    \ - 1 - i / 2]);\n            }\n        }\n    }\n    return result;", "  int\
    \ sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    if(array.size() == 0) return array;\n\
    \    int first = array[0];\n    int last = array[array.size()-1];\n    if((first+last)%2\
    \ == 0){\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else{\n        std::sort(array.begin(), array.end());\n    }\n   \
    \ return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  // your code here\n  int n = array.size();\n\
    \  int sum = array[0] + array[n-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<int>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()\
    \ == 0)\n    return result;\n  if(array.size() == 1)\n    return array;\n  if(array.size()\
    \ == 2)\n  {\n    if((array[0] + array[1]) % 2 == 0)\n    {\n      if(array[0]\
    \ < array[1])\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n      else\n      {\n        result.push_back(array[0]);\n        result.push_back(array[1]);\n\
    \      }\n    }\n    else\n    {\n      if(array[0] < array[1])\n      {\n   \
    \     result.push_back(array[0]);\n        result.push_back(array[1]);\n     \
    \ }\n      else\n      {\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n  {\n    for(int i = 0; i < array.size(); i++)\n    {\n   \
    \   if(i % 2 == 0)\n      {\n        result.push_back(array[array.size() - 1 -\
    \ i]);\n      }\n      else\n      {\n        result.push_back(array[i]);\n  \
    \    }\n    }\n  }\n  else\n  {\n    for(int i = 0; i < array.size(); i++)\n \
    \   {\n      if(i % 2 == 0)\n      {\n        result.push_back(array[i]);\n  \
    \    }\n      else\n      {\n        result.push_back(array[array.size() - 1 -\
    \ i]);\n      }\n    }\n  }\n  return result;", "    int n = array.size();\n \
    \   if(n == 0)\n        return array;\n    if(n == 1)\n        return array;\n\
    \    if(n == 2)\n    {\n        if((array[0] + array[1]) % 2 == 0)\n        {\n\
    \            std::swap(array[0], array[1]);\n            return array;\n     \
    \   }\n        else\n            return array;\n    }\n    int i = 0;\n    int\
    \ j = n - 1;\n    while(i < j)\n    {\n        if((array[i] + array[j]) % 2 ==\
    \ 0)\n        {\n            std::swap(array[i], array[j]);\n            i++;\n\
    \            j--;\n        }\n        else\n        {\n            i++;\n    \
    \    }\n    }\n    std::sort(array.begin(), array.end());\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    std::vector<long> sorted_array;\n\
    \    if(array.size() == 0)\n        return sorted_array;\n    if(array.size()\
    \ == 1)\n        return array;\n    if(array.size() == 2)\n    {\n        if((array[0]\
    \ + array[1]) % 2 == 0)\n        {\n            if(array[0] > array[1])\n    \
    \        {\n                sorted_array.push_back(array[0]);\n              \
    \  sorted_array.push_back(array[1]);\n            }\n            else\n      \
    \      {\n                sorted_array.push_back(array[1]);\n                sorted_array.push_back(array[0]);\n\
    \            }\n        }\n        else\n        {\n            if(array[0] <\
    \ array[1])\n            {\n                sorted_array.push_back(array[0]);\n\
    \                sorted_array.push_back(array[1]);\n            }\n          \
    \  else\n            {\n                sorted_array.push_back(array[1]);\n  \
    \              sorted_array.push_back(array[0]);\n            }\n        }\n \
    \       return sorted_array;\n    }\n    if((array[0] + array[array.size() - 1])\
    \ % 2 == 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \    }\n    else\n    {\n        std::sort(array.begin(), array.end());\n    }\n\
    \    return array;", "    if (array.size() == 0) return array;\n    if (array.size()\
    \ == 1) return array;\n    if (array.size() == 2) {\n        if (array[0] > array[1])\
    \ {\n            std::swap(array[0], array[1]);\n        }\n        return array;\n\
    \    }\n    if ((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  long sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  long sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int sum = array[0] + array[array.size() - 1];\n\
    \    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 ==\
    \ 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  }\
    \ else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", " \
    \ // your code here\n  long sum = array[0] + array[array.size()-1];\n  if(sum%2\
    \ == 0){\n    std::sort(array.begin(), array.end(), std::greater<long>());\n \
    \ }\n  else{\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int sum = array[0] + array[array.size() - 1];\n\
    \    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    int n = array.size();\n    int sum = array[0] + array[n-1];\n\
    \    if(sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  long sum = array[0] + array[array.size() - 1];\n  if (sum % 2 ==\
    \ 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  }\
    \ else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", " \
    \   int n = array.size();\n    int sum = array[0] + array[n-1];\n    if(sum%2\
    \ == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  std::vector<long> result;\n  if(array.size() == 0)\n    return result;\n\
    \  if(array.size() == 1)\n    return array;\n  int sum = array[0] + array[array.size()\
    \ - 1];\n  if(sum % 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  else\n    std::sort(array.begin(), array.end());\n  return array;", "    std::vector<long>\
    \ sorted_array;\n    int sum = array[0] + array[array.size() - 1];\n    if (sum\
    \ % 2 == 0) {\n        sorted_array = array;\n        std::sort(sorted_array.begin(),\
    \ sorted_array.end(), std::greater<long>());\n    } else {\n        sorted_array\
    \ = array;\n        std::sort(sorted_array.begin(), sorted_array.end());\n   \
    \ }\n    return sorted_array;", "    int sum = array[0] + array[array.size() -\
    \ 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int n = array.size();\n    int sum = array[0]\
    \ + array[n-1];\n    if(sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  // your code here\n  int n = array.size();\n  int\
    \ sum = array[0] + array[n-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    long sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "  int sum = array[0] + array[array.size() - 1];\n\
    \  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int sum = array[0] + array[array.size()\
    \ - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    if(array.size() == 0) return array;\n    if(array.size() == 1) return array;\n\
    \    if(array.size() == 2) {\n        if((array[0] + array[1]) % 2 == 0) {\n \
    \           std::swap(array[0], array[1]);\n        }\n        return array;\n\
    \    }\n    if((array[0] + array[array.size() - 1]) % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "    std::vector<long> result;\n \
    \   if (array.size() == 0) {\n        return result;\n    }\n    if (array.size()\
    \ == 1) {\n        return array;\n    }\n    if (array.size() == 2) {\n      \
    \  if ((array[0] + array[1]) % 2 == 0) {\n            if (array[0] > array[1])\
    \ {\n                std::swap(array[0], array[1]);\n            }\n        }\
    \ else {\n            if (array[0] < array[1]) {\n                std::swap(array[0],\
    \ array[1]);\n            }\n        }\n        return array;\n    }\n    int\
    \ i = 0;\n    int j = array.size() - 1;\n    while (i < j) {\n        if ((array[i]\
    \ + array[j]) % 2 == 0) {\n            if (array[i] > array[j]) {\n          \
    \      std::swap(array[i], array[j]);\n            }\n            i++;\n     \
    \   } else {\n            if (array[i] < array[j]) {\n                std::swap(array[i],\
    \ array[j]);\n            }\n            j--;\n        }\n    }\n    return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  int n = array.size();\n  int sum =\
    \ array[0] + array[n-1];\n  if(sum%2==0)\n  {\n    std::sort(array.begin(),array.end(),std::greater<long>());\n\
    \  }\n  else\n  {\n    std::sort(array.begin(),array.end());\n  }\n  return array;",
  "    std::vector<long> result;\n    if(array.size() == 0)\n        return result;\n\
    \    if(array.size() == 1)\n        return array;\n    if(array.size() == 2)\n\
    \    {\n        if((array[0] + array[1]) % 2 == 0)\n        {\n            result.push_back(array[1]);\n\
    \            result.push_back(array[0]);\n            return result;\n       \
    \ }\n        else\n            return array;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \        return array;\n    }\n    else\n    {\n        std::sort(array.begin(),\
    \ array.end());\n        return array;\n    }", "  // your code here\n  long sum\
    \ = array[0] + array[array.size()-1];\n  if(sum % 2 == 0)\n  {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  }\n  else\n  {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "  std::vector<long> result;\n  if(array.size()==0)\n\
    \    return result;\n  if(array.size()==1)\n    return array;\n  if(array.size()==2){\n\
    \    if((array[0]+array[1])%2==0){\n      if(array[0]>array[1]){\n        result.push_back(array[0]);\n\
    \        result.push_back(array[1]);\n      }\n      else{\n        result.push_back(array[1]);\n\
    \        result.push_back(array[0]);\n      }\n    }\n    else{\n      if(array[0]<array[1]){\n\
    \        result.push_back(array[0]);\n        result.push_back(array[1]);\n  \
    \    }\n      else{\n        result.push_back(array[1]);\n        result.push_back(array[0]);\n\
    \      }\n    }\n    return result;\n  }\n  if((array[0]+array[array.size()-1])%2==0){\n\
    \    for(int i=0;i<array.size();i++){\n      result.push_back(array[array.size()-1-i]);\n\
    \    }\n  }\n  else{\n    for(int i=0;i<array.size();i++){\n      result.push_back(array[i]);\n\
    \    }\n  }\n  return result;", "    int sum = array[0] + array[array.size() -\
    \ 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int n = array.size();\n    int sum = array[0]\
    \ + array[n-1];\n    if(sum % 2 == 0)\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    else\n        std::sort(array.begin(), array.end());\n\
    \    return array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum\
    \ % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<long>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "    int sum = array[0] + array[array.size() - 1];\n    if (sum % 2 == 0) {\n  \
    \      std::sort(array.begin(), array.end(), std::greater<int>());\n    } else\
    \ {\n        std::sort(array.begin(), array.end());\n    }\n    return array;",
  "  int n = array.size();\n  if(n == 0) return array;\n  int sum = array[0] + array[n-1];\n\
    \  if(sum % 2 == 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \  } else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    std::vector<long> res;\n    if(array.size()\
    \ == 0)\n        return res;\n    if(array.size() == 1)\n        return array;\n\
    \    if(array.size() == 2){\n        if((array[0] + array[1]) % 2 == 0){\n   \
    \         if(array[0] > array[1]){\n                res.push_back(array[0]);\n\
    \                res.push_back(array[1]);\n            }\n            else{\n\
    \                res.push_back(array[1]);\n                res.push_back(array[0]);\n\
    \            }\n        }\n        else{\n            if(array[0] < array[1]){\n\
    \                res.push_back(array[0]);\n                res.push_back(array[1]);\n\
    \            }\n            else{\n                res.push_back(array[1]);\n\
    \                res.push_back(array[0]);\n            }\n        }\n        return\
    \ res;\n    }\n    if((array[0] + array[array.size() - 1]) % 2 == 0){\n      \
    \  for(int i = 0; i < array.size(); i++){\n            res.push_back(array[array.size()\
    \ - 1 - i]);\n        }\n    }\n    else{\n        for(int i = 0; i < array.size();\
    \ i++){\n            res.push_back(array[i]);\n        }\n    }\n    return res;",
  "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 == 0) {\n    std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n  } else {\n    std::sort(array.begin(),\
    \ array.end());\n  }\n  return array;", "    int sum = array[0] + array[array.size()\
    \ - 1];\n    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(),\
    \ std::greater<long>());\n    } else {\n        std::sort(array.begin(), array.end());\n\
    \    }\n    return array;", "    int sum = array[0] + array[array.size() - 1];\n\
    \    if (sum % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "    long sum = array[0] + array[array.size() - 1];\n    if (sum %\
    \ 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  int n = array.size();\n  int sum = array[0] + array[n-1];\n  if(sum\
    \ % 2 == 0)\n    std::sort(array.begin(), array.end(), std::greater<int>());\n\
    \  else\n    std::sort(array.begin(), array.end());\n  return array;", "    int\
    \ n = array.size();\n    if(n == 0) return array;\n    if(n == 1) return array;\n\
    \    int sum = array[0] + array[n-1];\n    if(sum % 2 == 0) {\n        std::sort(array.begin(),\
    \ array.end(), std::greater<long>());\n    } else {\n        std::sort(array.begin(),\
    \ array.end());\n    }\n    return array;", "    std::vector<long> result;\n \
    \   if(array.size() == 0) return result;\n    if(array.size() == 1) return array;\n\
    \    if(array.size() == 2){\n        if(array[0] > array[1]){\n            std::swap(array[0],\
    \ array[1]);\n        }\n        return array;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0){\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else{\n        std::sort(array.begin(), array.end());\n    }\n   \
    \ return array;", "    int sum = array[0] + array[array.size() - 1];\n    if (sum\
    \ % 2 == 0) {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    } else {\n        std::sort(array.begin(), array.end());\n    }\n    return\
    \ array;", "  int sum = array[0] + array[array.size() - 1];\n  if (sum % 2 ==\
    \ 0) {\n    std::sort(array.begin(), array.end(), std::greater<long>());\n  }\
    \ else {\n    std::sort(array.begin(), array.end());\n  }\n  return array;", " \
    \   std::vector<long> result;\n    if(array.size() == 0)\n        return result;\n\
    \    if(array.size() == 1)\n        return array;\n    if(array.size() == 2)\n\
    \    {\n        if((array[0] + array[1]) % 2 == 0)\n        {\n            if(array[0]\
    \ > array[1])\n            {\n                result.push_back(array[0]);\n  \
    \              result.push_back(array[1]);\n            }\n            else\n\
    \            {\n                result.push_back(array[1]);\n                result.push_back(array[0]);\n\
    \            }\n        }\n        else\n        {\n            if(array[0] <\
    \ array[1])\n            {\n                result.push_back(array[0]);\n    \
    \            result.push_back(array[1]);\n            }\n            else\n  \
    \          {\n                result.push_back(array[1]);\n                result.push_back(array[0]);\n\
    \            }\n        }\n        return result;\n    }\n    if((array[0] + array[array.size()\
    \ - 1]) % 2 == 0)\n    {\n        std::sort(array.begin(), array.end(), std::greater<long>());\n\
    \    }\n    else\n    {\n        std::sort(array.begin(), array.end());\n    }\n\
    \    return array;"]
stop_tokens:
- "\n}"

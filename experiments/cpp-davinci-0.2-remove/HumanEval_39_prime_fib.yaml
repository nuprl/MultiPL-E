name: HumanEval_39_prime_fib
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// prime_fib returns n-th number\
  \ that is a Fibonacci number and it's also prime.\nlong prime_fib(long n) {\n"
tests: "}\nint main() {\n    auto candidate = prime_fib;\n    assert(candidate((1))\
  \ == (2));\n    assert(candidate((2)) == (3));\n    assert(candidate((3)) == (5));\n\
  \    assert(candidate((4)) == (13));\n    assert(candidate((5)) == (89));\n    assert(candidate((6))\
  \ == (233));\n    assert(candidate((7)) == (1597));\n    assert(candidate((8)) ==\
  \ (28657));\n    assert(candidate((9)) == (514229));\n    assert(candidate((10))\
  \ == (433494437));\n}\n"
completions: ["    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        i++;\n    }\n   \
    \ return c;", "    long f1 = 1, f2 = 1, f3 = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        f1 = f2;\n        f2 = f3;\n        f3 = f1 + f2;\n        i++;\n\
    \    }\n    return f3;", "    long a = 0, b = 1, c = 1;\n    long count = 0;\n\
    \    while (count < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c)) {\n            count++;\n        }\n    }\n    return\
    \ c;", "    long i = 0;\n    long j = 1;\n    long k = 0;\n    long count = 0;\n\
    \    while (count < n) {\n        k = i + j;\n        i = j;\n        j = k;\n\
    \        if (is_prime(k)) {\n            count++;\n        }\n    }\n    return\
    \ k;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 1, b =\
    \ 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n        b =\
    \ c;\n        c = a + b;\n        i++;\n    }\n    return c;", "    long a = 1,\
    \ b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n      \
    \  b = c;\n        c = a + b;\n        i++;\n    }\n    return c;", "    long\
    \ a = 1, b = 1, c = 2;\n    while (n > 0) {\n        if (is_prime(c)) {\n    \
    \        --n;\n        }\n        a = b;\n        b = c;\n        c = a + b;\n\
    \    }\n    return c;", "    long f1 = 1, f2 = 1, f3 = 2;\n    long i = 3;\n \
    \   while (i < n) {\n        f1 = f2;\n        f2 = f3;\n        f3 = f1 + f2;\n\
    \        i++;\n    }\n    return f3;", "    long a = 0, b = 1, c = 1;\n    long\
    \ i = 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        a = b;\n        b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n\
    \            c += 1;\n        }\n        while (!is_prime(c)) {\n            c\
    \ += 2;\n        }\n        i++;\n    }\n    return c;", "    long f1 = 1, f2\
    \ = 1, f3 = 2;\n    long i = 3;\n    while (i < n) {\n        f1 = f2;\n     \
    \   f2 = f3;\n        f3 = f1 + f2;\n        i++;\n    }\n    return f3;", " \
    \   long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n      \
    \      continue;\n        }\n        bool isPrime = true;\n        for (long j\
    \ = 3; j * j <= c; j += 2) {\n            if (c % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 1, b =\
    \ 1, c = 2;\n    for (int i = 3; i <= n; i++) {\n        c = a + b;\n        a\
    \ = b;\n        b = c;\n        while (!(c & 1) || !(c % 3) || !(c % 5) || !(c\
    \ % 7) || !(c % 11) || !(c % 13) || !(c % 17) || !(c % 19) || !(c % 23) || !(c\
    \ % 29) || !(c % 31) || !(c % 37) || !(c % 41) || !(c % 43) || !(c % 47) || !(c\
    \ % 53) || !(c % 59) || !(c % 61) || !(c % 67) || !(c % 71) || !(c % 73) || !(c\
    \ % 79) || !(c % 83) || !(c % 89) || !(c % 97)) {\n            c += b;\n     \
    \   }\n    }\n    return c;", "    long f1 = 1, f2 = 1, f3 = 2;\n    long i =\
    \ 3;\n    while (i < n) {\n        f1 = f2;\n        f2 = f3;\n        f3 = f1\
    \ + f2;\n        if (f3 % 2 != 0) {\n            i++;\n        }\n    }\n    return\
    \ f3;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n\
    \            i++;\n        }\n    }\n    return c;", "    assert(n > 0);\n   \
    \ long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a =\
    \ b;\n        b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n        \
    \    c += 1;\n        }\n        while (!is_prime(c)) {\n            c += 2;\n\
    \        }\n        i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 0;\n\
    \    for (long i = 3; i <= n; i++) {\n        c = a + b;\n        a = b;\n   \
    \     b = c;\n    }\n    return c;", "    long i = 0;\n    long j = 1;\n    long\
    \ k = 0;\n    long count = 0;\n    while (count < n) {\n        k = i + j;\n \
    \       i = j;\n        j = k;\n        if (is_prime(k)) {\n            count++;\n\
    \        }\n    }\n    return k;", "    long a = 1, b = 1, c;\n    int count =\
    \ 2;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c))\n            count++;\n    }\n    return b;", " \
    \   long a = 1, b = 1, c = 2;\n    long i = 2;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (c % 2 != 0) {\n      \
    \      long j = 3;\n            bool isPrime = true;\n            while (j <=\
    \ sqrt(c)) {\n                if (c % j == 0) {\n                    isPrime =\
    \ false;\n                    break;\n                }\n                j +=\
    \ 2;\n            }\n            if (isPrime) {\n                i++;\n      \
    \      }\n        }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n \
    \   long i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n   \
    \     b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n\
    \    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        i++;\n \
    \   }\n    return c;", "    long a = 0, b = 1, c = 0;\n    long i = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n    \
    \    }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 0, b = 1, c = 1;\n    long i = 0;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n      \
    \      continue;\n        }\n        long j = 3;\n        while (j * j <= c) {\n\
    \            if (c % j == 0) {\n                break;\n            }\n      \
    \      j += 2;\n        }\n        if (j * j > c) {\n            i++;\n      \
    \  }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n     \
    \       i++;\n        }\n    }\n    return c;", "    long a = 0, b = 1, c = 0;\n\
    \    for (long i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n   \
    \     b = c;\n        if (isPrime(c)) {\n            n--;\n        }\n    }\n\
    \    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        a = b;\n        b = c;\n        c = a + b;\n        i++;\n \
    \   }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        i++;\n\
    \        while (c % 2 == 0) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            i++;\n        }\n    }\n    return c;", "    long\
    \ a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n\
    \        b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n            c\
    \ += 1;\n        }\n        while (!is_prime(c)) {\n            c += 2;\n    \
    \    }\n        i++;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n\
    \    long i = 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n  \
    \      b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n\
    \    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    if (n == 1) return\
    \ 2;\n    if (n == 2) return 3;\n    long a = 2, b = 3, c = 5;\n    for (long\
    \ i = 3; i <= n; i++) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        while (!is_prime(c)) c += 2;\n    }\n    return c;", "    long a = 0,\
    \ b = 1, c = 1;\n    long i = 2;\n    while (i < n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (c % 2 == 0) {\n            i++;\n \
    \       }\n    }\n    return c;", "    long a = 1, b = 1, c = 1;\n    long i =\
    \ 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c))\n            i++;\n    }\n    return c;", "    assert(n\
    \ > 0);\n    long a = 1, b = 1, c = 2;\n    while (n-- > 1) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        while (c % 2 == 0) {\n         \
    \   c += a;\n            a = b;\n            b = c;\n        }\n    }\n    return\
    \ c;", "    long f1 = 1, f2 = 1, f3 = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        f1 = f2;\n        f2 = f3;\n        f3 = f1 + f2;\n        i++;\n   \
    \ }\n    return f3;", "    assert(n > 0);\n    long a = 1, b = 1, c = 2;\n   \
    \ long i = 3;\n    while (i <= n) {\n        c = a + b;\n        a = b;\n    \
    \    b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n\
    \    return c;", "    long a = 0, b = 1, c = 0;\n    long i = 0;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    assert(n>=1);\n\
    \    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i<n) {\n        a\
    \ = b;\n        b = c;\n        c = a + b;\n        if (is_prime(c)) {\n     \
    \       i++;\n        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n\
    \    for (long i = 3; i <= n; i++) {\n        c = a + b;\n        a = b;\n   \
    \     b = c;\n    }\n    return c;", "    long f1 = 1, f2 = 1, f3 = 2;\n    long\
    \ i = 3;\n    while (i < n) {\n        f1 = f2;\n        f2 = f3;\n        f3\
    \ = f1 + f2;\n        if (f3 % 2 == 0) {\n            f3 += 1;\n        }\n  \
    \      while (!is_prime(f3)) {\n            f3 += 2;\n        }\n        i++;\n\
    \    }\n    return f3;", "    long fib[n+1];\n    fib[0] = 0;\n    fib[1] = 1;\n\
    \    for(int i = 2; i <= n; i++) {\n        fib[i] = fib[i-1] + fib[i-2];\n  \
    \  }\n    int count = 0;\n    for(int i = 0; i <= n; i++) {\n        if(fib[i]\
    \ > 1) {\n            for(int j = 2; j <= fib[i]/2; j++) {\n                if(fib[i]\
    \ % j == 0) {\n                    break;\n                }\n               \
    \ else if(j == fib[i]/2) {\n                    count++;\n                }\n\
    \            }\n        }\n        if(count == n) {\n            return fib[i];\n\
    \        }\n    }", "    long a = 0, b = 1, c = 0;\n    long i = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 0;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (is_prime(c))\n            i++;\n    }\n\
    \    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 1, b =\
    \ 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        i++;\n    }\n    return c;", "    long a =\
    \ 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n   \
    \     b = c;\n        c = a + b;\n        i++;\n    }\n    return c;", "    assert(n>=1);\n\
    \    long a=1,b=1,c=2;\n    for(int i=3;i<=n;i++) {\n        c=a+b;\n        a=b;\n\
    \        b=c;\n        while(!(c%2)) c/=2;\n        while(!(c%3)) c/=3;\n    \
    \    while(!(c%5)) c/=5;\n        while(!(c%7)) c/=7;\n        while(!(c%11))\
    \ c/=11;\n        while(!(c%13)) c/=13;\n        while(!(c%17)) c/=17;\n     \
    \   while(!(c%19)) c/=19;\n        while(!(c%23)) c/=23;\n        while(!(c%29))\
    \ c/=29;\n        while(!(c%31)) c/=31;\n        while(!(c%37)) c/=37;\n     \
    \   while(!(c%41)) c/=41;\n        while(!(c%43)) c/=43;\n        while(!(c%47))\
    \ c/=47;\n        while(!(c%53)) c/=53;\n        while(!(c%59)) c/=59;\n     \
    \   while(!(c%61)) c/=61;\n        while(!(c%67)) c/=67;\n        while(!(c%71))\
    \ c/=71;\n        while(!(c%73)) c/=73;\n        while(!(c%79)) c/=79;\n     \
    \   while(!(c%83)) c/=83;\n        while(!(c%89)) c/=89;\n        while(!(c%97))\
    \ c/=97;\n        while(!(c%101)) c/=101;\n        while(!(c%103)) c/=103;\n \
    \       while(!(c%107)) c/=107;\n        while(!(c%109)) c/=109;\n        while(!(c%113))\
    \ c/=113;\n", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i <\
    \ n) {\n        a = b;\n        b = c;\n        c = a + b;\n        if (c % 2\
    \ == 0) {\n            c += 1;\n        }\n        while (!is_prime(c)) {\n  \
    \          c += 2;\n        }\n        i++;\n    }\n    return c;", "    long\
    \ a = 0, b = 1, c = 1;\n    long i = 2;\n    while (i < n) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n            i++;\n\
    \        }\n    }\n    return c;", "    assert(n>=1);\n    long a=1,b=1,c=2;\n\
    \    long i=3;\n    while(i<=n) {\n        c=a+b;\n        a=b;\n        b=c;\n\
    \        if(c%2==0) {\n            i++;\n            continue;\n        }\n  \
    \      bool is_prime=true;\n        for(long j=3;j<=sqrt(c);j+=2) {\n        \
    \    if(c%j==0) {\n                is_prime=false;\n                break;\n \
    \           }\n        }\n        if(is_prime) {\n            i++;\n        }\n\
    \    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 1, b =\
    \ 1, c = 2;\n    long i = 3;\n    while (i <= n) {\n        c = a + b;\n     \
    \   a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n   \
    \     }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 2;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (c % 2 == 0) {\n            i++;\n        }\n    }\n    return c;", " \
    \   assert(n>=1);\n    long a=1,b=1,c=2;\n    long i=3;\n    while(i<=n) {\n \
    \       c=a+b;\n        a=b;\n        b=c;\n        if(isPrime(c)) {\n       \
    \     i++;\n        }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n\
    \    long i = 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n  \
    \      b = c;\n        if (c % 2 == 0) {\n            continue;\n        }\n \
    \       bool isPrime = true;\n        for (long j = 3; j * j <= c; j += 2) {\n\
    \            if (c % j == 0) {\n                isPrime = false;\n           \
    \     break;\n            }\n        }\n        if (isPrime) {\n            i++;\n\
    \        }\n    }\n    return c;", "    long a = 0, b = 1, c = 0;\n    long i\
    \ = 0;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (c % 2 == 0) {\n            continue;\n        }\n        long j =\
    \ 3;\n        while (j * j <= c) {\n            if (c % j == 0) {\n          \
    \      break;\n            }\n            j += 2;\n        }\n        if (j *\
    \ j > c) {\n            i++;\n        }\n    }\n    return c;", "    long a =\
    \ 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;", "    assert(n > 0);\n    long a = 1, b = 1,\
    \ c = 2;\n    for (long i = 3; i <= n; i++) {\n        c = a + b;\n        a =\
    \ b;\n        b = c;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n\
    \    long i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n  \
    \      b = c;\n        if (is_prime(c)) i++;\n    }\n    return c;", "    long\
    \ a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n\
    \        b = c;\n        c = a + b;\n        i++;\n    }\n    return c;", "  \
    \  long a = 1, b = 1, c = 2;\n    long i = 2;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        i++;\n        while (c % 2\
    \ == 0) {\n            c = a + b;\n            a = b;\n            b = c;\n  \
    \          i++;\n        }\n    }\n    return c;", "    long a = 1, b = 1, c =\
    \ 2;\n    long count = 2;\n    while (count < n) {\n        c = a + b;\n     \
    \   a = b;\n        b = c;\n        if (is_prime(c)) {\n            count++;\n\
    \        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i\
    \ = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    int\
    \ count = 2;\n    while (count < n) {\n        c = a + b;\n        a = b;\n  \
    \      b = c;\n        if (is_prime(c)) {\n            count++;\n        }\n \
    \   }\n    return c;", "    long a = 1, b = 1, c = 1;\n    long i = 2;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n    \
    \    }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (c % 2 == 0) {\n            i++;\n        }\n    }\n    return c;", " \
    \   assert(n > 0);\n    long a = 1, b = 1, c = 2;\n    long count = 2;\n    while\
    \ (count < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if\
    \ (is_prime(c)) {\n            count++;\n        }\n    }\n    return c;", " \
    \   long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        i++;\n    }\n    return c;",
  "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n     \
    \       i++;\n        }\n    }\n    return c;", "    long f1 = 1, f2 = 1, f3 =\
    \ 2;\n    long i = 3;\n    while (i < n) {\n        f1 = f2;\n        f2 = f3;\n\
    \        f3 = f1 + f2;\n        if (f3 % 2 == 0) {\n            f3 += 1;\n   \
    \     }\n        while (!is_prime(f3)) {\n            f3 += 2;\n        }\n  \
    \      i++;\n    }\n    return f3;", "    long a = 1, b = 1, c = 2;\n    long\
    \ i = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long count\
    \ = 2;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long count = 0;\n    while (count < n) {\n        if (is_prime(c))\
    \ {\n            count++;\n        }\n        a = b;\n        b = c;\n       \
    \ c = a + b;\n    }\n    return c;", "    long first = 0;\n    long second = 1;\n\
    \    long third = 1;\n    long count = 1;\n    while (count < n) {\n        third\
    \ = first + second;\n        first = second;\n        second = third;\n      \
    \  if (third % 2 != 0) {\n            long i = 3;\n            while (i * i <=\
    \ third) {\n                if (third % i == 0) {\n                    break;\n\
    \                }\n                i += 2;\n            }\n            if (i\
    \ * i > third) {\n                count++;\n            }\n        }\n    }\n\
    \    return third;", "    assert(n > 0);\n    long a = 1, b = 1, c = 2;\n    long\
    \ i = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        a = b;\n        b = c;\n        c = a + b;\n        i++;\n    }\n   \
    \ return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i <\
    \ n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n    \
    \    }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    assert(n>=1);\n    long a=1,b=1,c=2;\n    long i=3;\n    while(i<=n) {\n  \
    \      c=a+b;\n        a=b;\n        b=c;\n        if(is_prime(c))\n         \
    \   i++;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long count\
    \ = 0;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (isPrime(c)) {\n            count++;\n        }\n    }\n  \
    \  return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i <\
    \ n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 0;\n    while (i < n) {\n        if (is_prime(c)) {\n\
    \            i++;\n        }\n        a = b;\n        b = c;\n        c = a +\
    \ b;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (is_prime(c))\n            i++;\n    }\n    return c;", "    long a =\
    \ 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n   \
    \     b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n            c +=\
    \ 1;\n        }\n        while (!is_prime(c)) {\n            c += 2;\n       \
    \ }\n        i++;\n    }\n    return c;", "    assert(n > 0);\n    long a = 1,\
    \ b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n      \
    \  b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n            c++;\n \
    \       }\n        while (!is_prime(c)) {\n            c += 2;\n        }\n  \
    \      i++;\n    }\n    return c;", "    long long a = 0, b = 1, c = 1;\n    long\
    \ long i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n     \
    \   b = c;\n        if (c % 2 == 0) {\n            i++;\n        }\n    }\n  \
    \  return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i <\
    \ n) {\n        c = a + b;\n        a = b;\n        b = c;\n        i++;\n   \
    \ }\n    return c;", "    long a = 1, b = 1, c;\n    for (long i = 3; i <= n;\
    \ i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ b;", "    long a = 1, b = 1, c = 2;\n    long i = 2;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 1, b =\
    \ 1, c = 2;\n    while (n--) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        while (!(c & 1) || !(c % 3) || !(c % 5) || !(c % 7) || !(c % 11)\
    \ || !(c % 13) || !(c % 17) || !(c % 19) || !(c % 23) || !(c % 29) || !(c % 31)\
    \ || !(c % 37) || !(c % 41) || !(c % 43) || !(c % 47) || !(c % 53) || !(c % 59)\
    \ || !(c % 61) || !(c % 67) || !(c % 71) || !(c % 73) || !(c % 79) || !(c % 83)\
    \ || !(c % 89) || !(c % 97)) {\n            c += b;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2;\n    long i = 2;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n\
    \            i++;\n        }\n    }\n    return c;", "    assert(n > 0);\n   \
    \ long a = 1, b = 1, c = 2;\n    while (n > 0) {\n        if (is_prime(c)) {\n\
    \            --n;\n            if (n == 0) return c;\n        }\n        a = b;\n\
    \        b = c;\n        c = a + b;\n    }\n    return -1;", "    long a = 0,\
    \ b = 1, c = 0;\n    long i = 0;\n    while (i < n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (c % 2 == 0) {\n            i++;\n \
    \       }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i =\
    \ 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 0, b = 1, c = 1;\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 2;\n    if (n == 2) return 3;\n    for (long i = 3; i <= n; i++) {\n       \
    \ c = a + b;\n        a = b;\n        b = c;\n        while (!(c % 2)) c /= 2;\n\
    \        while (!(c % 3)) c /= 3;\n        while (!(c % 5)) c /= 5;\n        while\
    \ (!(c % 7)) c /= 7;\n        while (!(c % 11)) c /= 11;\n        while (!(c %\
    \ 13)) c /= 13;\n        while (!(c % 17)) c /= 17;\n        while (!(c % 19))\
    \ c /= 19;\n        while (!(c % 23)) c /= 23;\n        while (!(c % 29)) c /=\
    \ 29;\n        while (!(c % 31)) c /= 31;\n        while (!(c % 37)) c /= 37;\n\
    \        while (!(c % 41)) c /= 41;\n        while (!(c % 43)) c /= 43;\n    \
    \    while (!(c % 47)) c /= 47;\n        while (!(c % 53)) c /= 53;\n        while\
    \ (!(c % 59)) c /= 59;\n        while (!(c % 61)) c /= 61;\n        while (!(c\
    \ % 67)) c /= 67;\n        while (!(c % 71)) c /= 71;\n        while (!(c % 73))\
    \ c /= 73;\n        while (!(c % 79)) c /= 79;\n        while (!(c % 83)) c /=\
    \ 83;\n        while (!(c % 89)) c /= 89;\n        while (!(c % 97)) c /= 97;\n\
    \        while (!(c % 101)) c /= 101;\n        while (!(c % 103)) c /= 103;\n\
    \        while (!(c % 107)) c /= 107;\n        while (!(c % 109)) c /= 109;\n\
    \        while (!(c % 113)) c /= 113;\n        while (!(c % 127", "    long a\
    \ = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        i++;\n    }\n    return c;", "    long\
    \ a = 1, b = 1, c = 2;\n    if (n == 1) return 2;\n    for (long i = 3; i <= n;\
    \ i++) {\n        c = a + b;\n        a = b;\n        b = c;\n        while (!is_prime(c))\
    \ c += b;\n    }\n    return c;", "    assert(n > 0);\n    long a = 1, b = 1,\
    \ c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n\
    \        c = a + b;\n        i++;\n        while (c % 2 == 0) {\n            c\
    \ += b;\n            i++;\n        }\n    }\n    return c;", "    long a = 0,\
    \ b = 1, c = 0;\n    long i = 0;\n    while (i < n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (c % 2 != 0) {\n            if (isPrime(c))\
    \ {\n                i++;\n            }\n        }\n    }\n    return c;", " \
    \   long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\n       \
    \     i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i\
    \ = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        i++;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    while\
    \ (n--) {\n        c = a + b;\n        a = b;\n        b = c;\n        while (!(c\
    \ % 2))\n            c /= 2;\n        while (!(c % 3))\n            c /= 3;\n\
    \        while (!(c % 5))\n            c /= 5;\n        if (c == 1)\n        \
    \    n++;\n    }\n    return b;", "    assert(n > 0);\n    long a = 1, b = 1,\
    \ c = 0;\n    long count = 2;\n    while (count < n) {\n        c = a + b;\n \
    \       a = b;\n        b = c;\n        if (is_prime(c)) {\n            count++;\n\
    \        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i\
    \ = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        i++;\n    }\n    return c;", "  long a = 0, b = 1, c = 1;\n  long i =\
    \ 1;\n  while (i < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    if (is_prime(c))\
    \ {\n      i++;\n    }\n  }\n  return c;", "    long a = 0, b = 1, c = 1;\n  \
    \  long i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n    \
    \    b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n\
    \    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (c %\
    \ 2 == 0) {\n            i++;\n        }\n    }\n    return c;", "    long a =\
    \ 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i\
    \ = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 1;\n    long\
    \ i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (c % 2 == 0) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        i++;\n    }\n   \
    \ return c;", "    assert(n > 0);\n    long a = 0, b = 1, c = 1;\n    long i =\
    \ 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 0, b = 1, c = 1;\n    long count = 0;\n    while (count < n) {\n \
    \       c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n\
    \            count++;\n        }\n    }\n    return c;", "    assert(n > 0);\n\
    \    long a = 0, b = 1, c = 1;\n    long i = 2;\n    while (i < n) {\n       \
    \ c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n   \
    \         i++;\n        }\n    }\n    return c;", "    long a = 0, b = 1, c =\
    \ 1;\n    long count = 0;\n    while (count < n) {\n        c = a + b;\n     \
    \   a = b;\n        b = c;\n        if (is_prime(c)) {\n            count++;\n\
    \        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i\
    \ = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a\
    \ = b;\n        b = c;\n        c = a + b;\n        i++;\n    }\n    return c;",
  "    long a = 1, b = 1, c = 0;\n    long count = 2;\n    while (count < n) {\n \
    \       c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n\
    \            count++;\n        }\n    }\n    return c;", "    long a = 1, b =\
    \ 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (isPrime(c)) {\n            i++;\n     \
    \   }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long count =\
    \ 1;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n   \
    \ return c;", "    assert(n>=1);\n    long a=1,b=1,c=2;\n    long i=3;\n    while(i<=n)\
    \ {\n        c=a+b;\n        a=b;\n        b=c;\n        if(c%2==0) {\n      \
    \      i++;\n            continue;\n        }\n        long j=3;\n        while(j*j<=c)\
    \ {\n            if(c%j==0) {\n                break;\n            }\n       \
    \     j+=2;\n        }\n        if(j*j>c) {\n            i++;\n        }\n   \
    \ }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 2;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 2;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n    \
    \    }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 2;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i\
    \ = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    int\
    \ i = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        a = b;\n        b = c;\n        c = a + b;\n        i++;\n    }\n   \
    \ return c;", "    long a = 0, b = 1, c = 0;\n    long i = 1;\n    while (i <\
    \ n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (c % 2\
    \ == 0) {\n            i++;\n        }\n    }\n    return c;", "    long a = 0,\
    \ b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;", "    long a = 0, b = 1, c = 0;\n    long count\
    \ = 0;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;", "    assert(n > 0);\n    std::vector<long> fibs;\n    fibs.push_back(1);\n\
    \    fibs.push_back(1);\n    long i = 2;\n    while (fibs.size() < n) {\n    \
    \    fibs.push_back(fibs[i - 1] + fibs[i - 2]);\n        i++;\n    }\n    long\
    \ num = fibs[n - 1];\n    while (!is_prime(num)) {\n        num++;\n    }\n  \
    \  return num;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\n\
    \            i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 0;\n   \
    \ long i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n     \
    \   b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n \
    \   return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (c %\
    \ 2 == 0) {\n            i++;\n        }\n    }\n    return c;", "    long a =\
    \ 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n   \
    \     b = c;\n        c = a + b;\n        i++;\n    }\n    return c;", "    long\
    \ a = 0, b = 1, c = 1;\n    long i = 0;\n    while (i < n) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n            continue;\n\
    \        }\n        bool isPrime = true;\n        for (long j = 3; j <= sqrt(c);\
    \ j += 2) {\n            if (c % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          i++;\n        }\n    }\n    return c;", "    long a = 1, b = 1, c =\
    \ 2;\n    long i = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n        i++;\n    }\n    return c;", "    long a = 1, b = 1,\
    \ c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n\
    \        c = a + b;\n        i++;\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 0;\n    long i = 0;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n    \
    \    }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long count\
    \ = 1;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c))\n            count++;\n    }\n    return c;",
  "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 2, b = 3, c\
    \ = 5;\n    for (long i = 3; i <= n; i++) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n        while (!is_prime(c)) c += 2;\n    }\n    return c;",
  "    long a = 1, b = 1, c = 1;\n    long i = 2;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n     \
    \       i++;\n        }\n    }\n    return c;", "    long a = 0, b = 1, c = 0;\n\
    \    long i = 2;\n    while (i <= n) {\n        c = a + b;\n        a = b;\n \
    \       b = c;\n        if (c % 2 == 0) {\n            i++;\n        }\n    }\n\
    \    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        i++;\n \
    \   }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while\
    \ (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n        i++;\n\
    \    }\n    return c;", "    assert(n >= 1);\n    long a = 1, b = 1, c = 2;\n\
    \    long i = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n  \
    \      b = c;\n        i++;\n    }\n    return c;", "    long a = 0, b = 1, c\
    \ = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n        a =\
    \ b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n\
    \    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 2;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (c\
    \ % 2 == 0) {\n            i++;\n        }\n    }\n    return c;", "    long a\
    \ = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a = b;\n \
    \       b = c;\n        c = a + b;\n        i++;\n    }\n    return c;", "   \
    \ long a = 0, b = 1, c = 1;\n    long count = 0;\n    while (count < n) {\n  \
    \      c = a + b;\n        a = b;\n        b = c;\n        if (c % 2 == 0)\n \
    \           continue;\n        if (is_prime(c))\n            count++;\n    }\n\
    \    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i\
    \ < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (isPrime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "\tassert(n>=1);\n\t\
    long a=1,b=1,c=2;\n\tlong i=2;\n\twhile(i<n) {\n\t\ta=b;\n\t\tb=c;\n\t\tc=a+b;\n\
    \t\ti++;\n\t\twhile(!is_prime(c)) {\n\t\t\ta=b;\n\t\t\tb=c;\n\t\t\tc=a+b;\n\t\t\
    \ti++;\n\t\t}\n\t}\n\treturn c;", "    long a = 1, b = 1, c = 2;\n    long i =\
    \ 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        i++;\n    }\n    return c;", "    // TODO: Implement this function\n\
    \    long f1 = 1, f2 = 1, f3 = 1;\n    long i = 3;\n    while (i <= n) {\n   \
    \     f3 = f1 + f2;\n        f1 = f2;\n        f2 = f3;\n        if (is_prime(f3))\
    \ {\n            i++;\n        }\n    }\n    return f3;", "    long a = 1, b =\
    \ 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        i++;\n    }\n    return c;", "    long a =\
    \ 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (c % 2 == 0) {\n            continue;\n\
    \        }\n        bool isPrime = true;\n        for (long j = 3; j * j <= c;\
    \ j += 2) {\n            if (c % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          i++;\n        }\n    }\n    return c;", "    long a = 0, b = 1, c =\
    \ 1;\n    long i = 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n   \
    \ }\n    return c;", "    // TODO: Implement this function.\n    long a = 0, b\
    \ = 1, c = 0;\n    long i = 0;\n    while (i < n) {\n        c = a + b;\n    \
    \    a = b;\n        b = c;\n        if (isPrime(c)) {\n            i++;\n   \
    \     }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n\
    \    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n   \
    \     if (c % 2 == 0) {\n            c += 1;\n        }\n        while (!is_prime(c))\
    \ {\n            c += 2;\n        }\n        i++;\n    }\n    return c;", "  \
    \  if (n == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return\
    \ 3;\n    }\n    long a = 2;\n    long b = 3;\n    long c = 5;\n    long i = 3;\n\
    \    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n   \
    \     if (c % 2 == 0) {\n            continue;\n        }\n        bool is_prime\
    \ = true;\n        for (long j = 3; j * j <= c; j += 2) {\n            if (c %\
    \ j == 0) {\n                is_prime = false;\n                break;\n     \
    \       }\n        }\n        if (is_prime) {\n            i++;\n        }\n \
    \   }\n    return c;", "  long a = 0, b = 1, c = 1;\n  long i = 1;\n  while (i\
    \ < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    if (is_prime(c)) {\n   \
    \   i++;\n    }\n  }\n  return c;", "    long a = 0, b = 1, c = 1;\n    long i\
    \ = 0;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a\
    \ = b;\n        b = c;\n        c = a + b;\n        i++;\n    }\n    return c;",
  "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        i++;\n    }\n    return c;",
  "    assert(n>=1);\n    long a=1,b=1,c=2;\n    long i=3;\n    while(i<=n) {\n  \
    \      c=a+b;\n        a=b;\n        b=c;\n        if(c%2!=0) {\n            if(isPrime(c))\
    \ {\n                i++;\n            }\n        }\n    }\n    return c;", " \
    \   long a = 0, b = 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n     \
    \       i++;\n        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n\
    \    while (n > 0) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (is_prime(c)) {\n            n--;\n        }\n    }\n    return c;",
  "    assert(n >= 1);\n    long a = 1, b = 1, c = 2;\n    for (long i = 3; i <= n;\
    \ i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ c;", "    long a = 0, b = 1, c = a + b;\n    for (long i = 0; i < n; i++) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n    }\n    return c;", " \
    \   long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n        a\
    \ = b;\n        b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n      \
    \      c++;\n        }\n        while (!is_prime(c)) {\n            c += 2;\n\
    \        }\n        i++;\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n\
    \    long i = 3;\n    while (i < n) {\n        c = a + b;\n        a = b;\n  \
    \      b = c;\n        i++;\n    }\n    return c;", "    long a = 0, b = 1, c\
    \ = 1;\n    for (int i = 3; i <= n; i++) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long\
    \ i = 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i < n) {\n\
    \        a = b;\n        b = c;\n        c = a + b;\n        i++;\n    }\n   \
    \ return c;", "    assert(n>=1);\n    long a=1,b=1,c;\n    long i=2;\n    while(i<n)\
    \ {\n        c=a+b;\n        a=b;\n        b=c;\n        if(is_prime(c)) i++;\n\
    \    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 0, b =\
    \ 1, c = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n      \
    \  a = b;\n        b = c;\n        if (c % 2 == 0) {\n            i++;\n     \
    \   }\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;",
  "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while (i <= n) {\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n        if (c % 2 == 0) {\n      \
    \      i++;\n            continue;\n        }\n        long j = 3;\n        while\
    \ (j * j <= c) {\n            if (c % j == 0) {\n                break;\n    \
    \        }\n            j += 2;\n        }\n        if (j * j > c) {\n       \
    \     i++;\n        }\n    }\n    return c;", "    long a = 1, b = 1, c = 2;\n\
    \    for (long i = 3; i <= n; i++) {\n        c = a + b;\n        a = b;\n   \
    \     b = c;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long\
    \ i = 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b =\
    \ c;\n        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return\
    \ c;", "    long fib[n];\n    fib[0] = 1;\n    fib[1] = 1;\n    for (long i =\
    \ 2; i < n; i++) {\n        fib[i] = fib[i - 1] + fib[i - 2];\n    }\n    long\
    \ count = 0;\n    for (long i = 0; i < n; i++) {\n        if (isPrime(fib[i]))\
    \ {\n            count++;\n        }\n        if (count == n) {\n            return\
    \ fib[i];\n        }\n    }", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n\
    \    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     i++;\n    }\n    return c;", "    long f1 = 1, f2 = 1, f3 = 2;\n    long\
    \ i = 3;\n    while (i < n) {\n        f1 = f2;\n        f2 = f3;\n        f3\
    \ = f1 + f2;\n        i++;\n    }\n    return f3;", "    long a = 0, b = 1, c\
    \ = 1;\n    long i = 2;\n    while (i < n) {\n        c = a + b;\n        a =\
    \ b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n\
    \    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i = 1;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (isPrime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long i = 1;\n  \
    \  long j = 1;\n    long k = 1;\n    long count = 1;\n    while (count < n) {\n\
    \        k = i + j;\n        i = j;\n        j = k;\n        if (is_prime(k))\
    \ {\n            count++;\n        }\n    }\n    return k;", "    long a = 0,\
    \ b = 1, c = 1;\n    long i = 0;\n    while (i < n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;", "    if (n == 1) return 2;\n    if (n == 2)\
    \ return 3;\n    long a = 2, b = 3, c = 5;\n    for (long i = 3; i <= n; i++)\
    \ {\n        a = b;\n        b = c;\n        c = a + b;\n        while (!is_prime(c))\
    \ c += b;\n    }\n    return c;", "    long a = 0, b = 1, c = 1;\n    long i =\
    \ 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (c % 2 == 0) {\n            continue;\n        }\n        bool isPrime\
    \ = true;\n        for (long j = 3; j <= sqrt(c); j += 2) {\n            if (c\
    \ % j == 0) {\n                isPrime = false;\n                break;\n    \
    \        }\n        }\n        if (isPrime) {\n            i++;\n        }\n \
    \   }\n    return c;", "    long a = 1, b = 1, c = 2;\n    long i = 3;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (c\
    \ % 2 == 0) {\n            i++;\n        }\n    }\n    return c;"]
stop_tokens:
- "\n}"

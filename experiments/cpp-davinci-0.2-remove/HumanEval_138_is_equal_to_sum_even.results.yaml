language: cpp
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpuuktpxt1: /tmp/tmpuuktpxt1.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    long sum\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        sum += i;\n        if(sum\
    \ == n) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmrwzsa7b: /tmp/tmpmrwzsa7b.cpp:19: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    else\n    {\n        for(int i=2;i<=n/4;i+=2)\n  \
    \      {\n            for(int j=2;j<=n/4;j+=2)\n            {\n              \
    \  for(int k=2;k<=n/4;k+=2)\n                {\n                    for(int l=2;l<=n/4;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \               return true;\n                    }\n                }\n     \
    \       }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpe3gimx3x: /tmp/tmpe3gimx3x.cpp:33: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    if(n%2==0)\n        return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp9et6cy2g: /tmp/tmp9et6cy2g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        for(int i=2;i<=n/2;i+=2)\n      \
    \  {\n            for(int j=2;j<=n/2;j+=2)\n            {\n                for(int\
    \ k=2;k<=n/2;k+=2)\n                {\n                    for(int l=2;l<=n/2;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \           return true;\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    else\n    {\n        for(int i=2;i<=n/4;i+=2)\n  \
    \      {\n            for(int j=2;j<=n/4;j+=2)\n            {\n              \
    \  for(int k=2;k<=n/4;k+=2)\n                {\n                    for(int l=2;l<=n/4;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \               return true;\n                    }\n                }\n     \
    \       }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpe3gimx3x: /tmp/tmpe3gimx3x.cpp:33: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==4)\n   \
    \     return true;\n    if(n<4)\n        return false;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpv2osnv9n: /tmp/tmpv2osnv9n.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Return false otherwise\n    if(n%2!=0)\n        return false;\n    if(n<8)\n\
    \        return false;\n    if(n==8)\n        return true;\n    if(n%4==0)\n \
    \       return true;\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp56atck2x: /tmp/tmp56atck2x.cpp:24: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if (n % 2 != 0) return false;\n    if\
    \ (n == 0) return true;\n    if (n < 0) return false;\n    if (n == 2) return\
    \ false;\n    if (n == 4) return true;\n    if (n == 6) return false;\n    if\
    \ (n == 8) return true;\n    if (n == 10) return false;\n    if (n == 12) return\
    \ true;\n    if (n == 14) return false;\n    if (n == 16) return true;\n    if\
    \ (n == 18) return false;\n    if (n == 20) return true;\n    if (n == 22) return\
    \ false;\n    if (n == 24) return true;\n    if (n == 26) return false;\n    if\
    \ (n == 28) return true;\n    if (n == 30) return false;\n    if (n == 32) return\
    \ true;\n    if (n == 34) return false;\n    if (n == 36) return true;\n    if\
    \ (n == 38) return false;\n    if (n == 40) return true;\n    if (n == 42) return\
    \ false;\n    if (n == 44) return true;\n    if (n == 46) return false;\n    if\
    \ (n == 48) return true;\n    if (n == 50) return false;\n    if (n == 52) return\
    \ true;\n    if (n == 54) return false;\n    if (n == 56) return true;\n    if\
    \ (n == 58) return false;\n    if (n == 60) return true;\n    if (n == 62) return\
    \ false;\n    if (n == 64) return true;\n    if (n == 66) return false;\n    if\
    \ (n == 68) return true;\n    if (n == 70) return false;\n    if (n == 72) return\
    \ true;\n    if (n == 74) return false;\n    if (n == 76) return true;\n    if\
    \ (n == 78) return false;\n    if (n == 80) return true;\n    if (n == 82) return\
    \ false;\n    if (n == 84) return true;\n    if (n == 86) return false;\n    if\
    \ (\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplahmfkwl.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmplahmfkwl.cpp:53:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmplahmfkwl.cpp:52:9: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   52 |     if (\n      |\
    \        ~^\n      |         )\n   53 | }\n      | ~        \n/tmp/tmplahmfkwl.cpp:53:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   53 | }\n \
    \     | ^\n/tmp/tmplahmfkwl.cpp:53:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   53 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp414egizi: /tmp/tmp414egizi.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    if(n==0)\n    return true;\n    if(n<0)\n    return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmppajdczfg: /tmp/tmppajdczfg.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp60dtrg14: /tmp/tmp60dtrg14.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085802
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if (n % 2 != 0) return false;\n    if\
    \ (n % 4 != 0) return false;\n    if (n % 8 == 0) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpko0d6wil: /tmp/tmpko0d6wil.cpp:16: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n==10)\n        return false;\n    if(n==12)\n    \
    \    return true;\n    if(n==14)\n        return false;\n    if(n==16)\n     \
    \   return true;\n    if(n==18)\n        return false;\n    if(n==20)\n      \
    \  return true;\n    if(n==22)\n        return false;\n    if(n==24)\n       \
    \ return true;\n    if(n==26)\n        return false;\n    if(n==28)\n        return\
    \ true;\n    if(n==30)\n        return false;\n    if(n==32)\n        return true;\n\
    \    if(n==34)\n        return false;\n    if(n==36)\n        return true;\n \
    \   if(n==38)\n        return false;\n    if(n==40)\n        return true;\n  \
    \  if(n==42)\n        return false;\n    if(n==44)\n        return true;\n   \
    \ if(n==46)\n        return false;\n    if(n==48)\n        return true;\n    if(n==50)\n\
    \        return false;\n    if(n==52)\n        return true;\n    if(n==54)\n \
    \       return false;\n    if(n==56)\n        return true;\n    if(n==58)\n  \
    \      return false;\n    if(n==60)\n        return true;\n    if(n==62)\n   \
    \     return false;\n    if(n==64)\n        return true;\n    if(n==66)\n    \
    \    return false;\n    if(n==68)\n        return true;\n    if(n==70)\n     \
    \   return false;\n    if(n==72)\n        return true;\n    if(n==74)\n      \
    \  return false;\n    if(n==76)\n        return true;\n    if(n==78)\n       \
    \ return false;\n    if(n==80)\n\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp36aud78m.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmp36aud78m.cpp:85:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   85 | }\n      | ^\n/tmp/tmp36aud78m.cpp:85:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   85 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    else\n        return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1nvikt1j: /tmp/tmp1nvikt1j.cpp:21: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    if(n==2)\n        return false;\n    if(n==4)\n      \
    \  return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3ci9jdg5: /tmp/tmp3ci9jdg5.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        int count=0;\n        while(n>0)\n\
    \        {\n            n=n-2;\n            count++;\n        }\n        if(count==4)\n\
    \        return true;\n        else\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw3_lrar1: /tmp/tmpw3_lrar1.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085802
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        long a,b,c,d;\n        a=n/4;\n\
    \        b=n/2;\n        c=n/2;\n        d=n/2;\n        if(a+b+c+d==n)\n    \
    \        return true;\n        else\n            return false;\n    }\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpoijkc31s: /tmp/tmpoijkc31s.cpp:26: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        int i=0;\n        while(n>0)\n  \
    \      {\n            if(n%2==0)\n            {\n                i++;\n      \
    \          n=n-2;\n            }\n            else\n            {\n          \
    \      return false;\n            }\n        }\n        if(i==4)\n        return\
    \ true;\n        else\n        return false;\n    }\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpesajcv4h: /tmp/tmpesajcv4h.cpp:35: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Return false otherwise\n    if(n<8)\n    return false;\n    if(n%2!=0)\n\
    \    return false;\n    for(int i=2;i<=n/4;i+=2)\n    {\n        for(int j=2;j<=n/3;j+=2)\n\
    \        {\n            for(int k=j;k<=n/2;k+=2)\n            {\n            \
    \    for(int l=k;l<=n;l+=2)\n                {\n                    if(i+j+k+l==n)\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    int count=0;\n    for(int i=2;i<=n;i+=2)\n    {\n\
    \        if(n-i==0)\n            count++;\n        else if(n-i>0)\n        {\n\
    \            count+=is_equal_to_sum_even(n-i);\n        }\n    }\n    if(count>0)\n\
    \        return true;\n    else\n        return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2_25onii: /tmp/tmp2_25onii.cpp:26: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085803
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085803
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    if(n==0)\n    return true;\n    if(n<0)\n    return false;\n\
    \    if(n==2)\n    return false;\n    if(n==4)\n    return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp8ugm0st7: /tmp/tmp8ugm0st7.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return false;\n \
    \   if(n==0)\n        return true;\n    if(n<0)\n        return false;\n    if(n==2)\n\
    \        return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp15bjvcbg: /tmp/tmp15bjvcbg.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n%i == 0) {\n         \
    \   count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n \
    \   }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzyuepnhd: /tmp/tmpzyuepnhd.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int i,j,k,l;\n\
    \    for(i=2;i<=n/4;i+=2)\n    {\n        for(j=2;j<=n/4;j+=2)\n        {\n  \
    \          for(k=2;k<=n/4;k+=2)\n            {\n                for(l=2;l<=n/4;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu8bgc_wl: /tmp/tmpu8bgc_wl.cpp:31: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n<8)\n\
    \        return false;\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp1quvx204: /tmp/tmp1quvx204.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    if(n%4==0)\n    return true;\n    else\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2qzh9sav: /tmp/tmp2qzh9sav.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return false;\n \
    \   if(n==0)\n        return true;\n    if(n<0)\n        return false;\n    return\
    \ is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmph6_mttbg: /tmp/tmph6_mttbg.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    for(int i=2;i<=n/4;i+=2)\n    {\n        if(n%i==0)\n\
    \        {\n            int a=i;\n            int b=n/i;\n            if(a%2==0\
    \ && b%2==0)\n                return true;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2hakw4j9: /tmp/tmp2hakw4j9.cpp:26: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        if(n%4==0)\n            return\
    \ true;\n        else\n            return false;\n    }\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp0psgx8w5: /tmp/tmp0psgx8w5.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if (n % 2 != 0) {\n        return false;\n\
    \    }\n    if (n == 0) {\n        return true;\n    }\n    if (n < 0) {\n   \
    \     return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n \
    \   if (n == 6) {\n        return true;\n    }\n    if (n == 8) {\n        return\
    \ true;\n    }\n    if (n == 10) {\n        return true;\n    }\n    if (n ==\
    \ 12) {\n        return true;\n    }\n    if (n == 14) {\n        return true;\n\
    \    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 18) {\n\
    \        return true;\n    }\n    if (n == 20) {\n        return true;\n    }\n\
    \    if (n == 22) {\n        return true;\n    }\n    if (n == 24) {\n       \
    \ return true;\n    }\n    if (n == 26) {\n        return true;\n    }\n    if\
    \ (n == 28) {\n        return true;\n    }\n    if (n == 30) {\n        return\
    \ true;\n    }\n    if (n == 32) {\n        return true;\n    }\n    if (n ==\
    \ 34) {\n        return true;\n    }\n    if (n == 36) {\n        return true;\n\
    \    }\n    if (n == 38) {\n        return true;\n    }\n    if (n == 40) {\n\
    \        return true;\n    }\n    if (n == 42) {\n        return true;\n    }\n\
    \    if (n == 44) {\n        return true;\n    }\n    if (n == 46) {\n       \
    \ return true;\n    }\n    if (n == 48) {\n        return true;\n    }\n    if\
    \ (n == 50) {\n        return true;\n    }\n    if (n == 52) {\n        return\
    \ true;\n    }\n    if (n == 54) {\n        return true;\n    }\n    if (n ==\
    \ 56) {\n        return true;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpp2gtqpos: /tmp/tmpp2gtqpos.cpp:99: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0) {\n       \
    \     count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpbj_c1z0r: /tmp/tmpbj_c1z0r.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp414egizi: /tmp/tmp414egizi.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    long sum\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        sum += i;\n        if(sum\
    \ == n) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmrwzsa7b: /tmp/tmpmrwzsa7b.cpp:19: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        if(n==0)\n        return true;\n\
    \        else\n        {\n            if(n<8)\n            return false;\n   \
    \         else\n            {\n                return is_equal_to_sum_even(n-8);\n\
    \            }\n        }\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp6jnb0viv: /tmp/tmp6jnb0viv.cpp:29: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Else return false\n    if(n%2==1)\n        return false;\n    if(n<8)\n \
    \       return false;\n    return true;\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Else return false\n    if(n%2!=0)\n    return false;\n    if(n%4!=0)\n  \
    \  return false;\n    if(n==0)\n    return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_z31fa77: /tmp/tmp_z31fa77.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6o7ppl4b: /tmp/tmp6o7ppl4b.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n    if(n==0)\
    \ return true;\n    if(n<0) return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpksyiazfv: /tmp/tmpksyiazfv.cpp:13: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if the number can be written as the sum of exactly 4 positive even numbers\n\
    \    // Return false otherwise\n    if(n%2!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_ie_ytp1: /tmp/tmp_ie_ytp1.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    long a,b,c,d;\n\
    \    for(a=2;a<=n/4;a+=2)\n    {\n        for(b=2;b<=n/3;b+=2)\n        {\n  \
    \          for(c=2;c<=n/2;c+=2)\n            {\n                for(d=2;d<=n;d+=2)\n\
    \                {\n                    if(a+b+c+d==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0) {\n       \
    \     count++;\n        }\n    }\n    return count == 4;\n}\nint main() {\n  \
    \  auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw2mdoqkp: /tmp/tmpw2mdoqkp.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpuuktpxt1: /tmp/tmpuuktpxt1.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int sum\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        sum += i;\n        if(sum\
    \ == n) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpnibfws6y: /tmp/tmpnibfws6y.cpp:19: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0) {\n       \
    \     count++;\n        }\n    }\n    return count == 4;\n}\nint main() {\n  \
    \  auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw2mdoqkp: /tmp/tmpw2mdoqkp.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpuuktpxt1: /tmp/tmpuuktpxt1.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else if(n%2==0)\n    {\n        int count=0;\n   \
    \     for(int i=2;i<=n;i+=2)\n        {\n            if(n%i==0)\n            \
    \    count++;\n        }\n        if(count==4)\n            return true;\n   \
    \     else\n            return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp2is_jkjx: /tmp/tmp2is_jkjx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6o7ppl4b: /tmp/tmp6o7ppl4b.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n<8)\n\
    \        return false;\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp1quvx204: /tmp/tmp1quvx204.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i == 0) {\n     \
    \       count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphm1uxlkz: /tmp/tmphm1uxlkz.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085805
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Else return false\n    if(n%2!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpd8kcw7fh: /tmp/tmpd8kcw7fh.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085805
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        int count=0;\n        for(int i=2;i<=n;i+=2)\n\
    \        {\n            if(n%i==0)\n            count++;\n        }\n        if(count==4)\n\
    \        return true;\n        else\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp51pnek5m: /tmp/tmp51pnek5m.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmppk14s_cp: /tmp/tmppk14s_cp.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpuuktpxt1: /tmp/tmpuuktpxt1.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    else{\n        long i,j,k,l;\n        for(i=2;i<=n/4;i+=2){\n\
    \            for(j=2;j<=n/4;j+=2){\n                for(k=2;k<=n/4;k+=2){\n  \
    \                  for(l=2;l<=n/4;l+=2){\n                        if(i+j+k+l==n)\n\
    \                            return true;\n                    }\n           \
    \     }\n            }\n        }\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3birr8kl: /tmp/tmp3birr8kl.cpp:29: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2_v_za2s: /tmp/tmp2_v_za2s.cpp:22: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp60dtrg14: /tmp/tmp60dtrg14.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085802
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Return false otherwise\n    if(n%2!=0)\n        return false;\n    if(n<8)\n\
    \        return false;\n    if(n==8)\n        return true;\n    if(n%4==0)\n \
    \       return true;\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp56atck2x: /tmp/tmp56atck2x.cpp:24: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0) {\n       \
    \     count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpbj_c1z0r: /tmp/tmpbj_c1z0r.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    if(n==6)\n      \
    \  return true;\n    if(n==8)\n        return true;\n    if(n==10)\n        return\
    \ true;\n    if(n==12)\n        return true;\n    if(n==14)\n        return true;\n\
    \    if(n==16)\n        return true;\n    if(n==18)\n        return true;\n  \
    \  if(n==20)\n        return true;\n    if(n==22)\n        return true;\n    if(n==24)\n\
    \        return true;\n    if(n==26)\n        return true;\n    if(n==28)\n  \
    \      return true;\n    if(n==30)\n        return true;\n    if(n==32)\n    \
    \    return true;\n    if(n==34)\n        return true;\n    if(n==36)\n      \
    \  return true;\n    if(n==38)\n        return true;\n    if(n==40)\n        return\
    \ true;\n    if(n==42)\n        return true;\n    if(n==44)\n        return true;\n\
    \    if(n==46)\n        return true;\n    if(n==48)\n        return true;\n  \
    \  if(n==50)\n        return true;\n    if(n==52)\n        return true;\n    if(n==54)\n\
    \        return true;\n    if(n==56)\n        return true;\n    if(n==58)\n  \
    \      return true;\n    if(n==60)\n        return true;\n    if(n==62)\n    \
    \    return true;\n    if(n==64)\n        return true;\n    if(n==66)\n      \
    \  return true;\n    if(n==68)\n        return true;\n    if(n==70)\n        return\
    \ true;\n    if(n==72)\n        return true;\n    if(n==74)\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7uncd_w.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmpl7uncd_w.cpp:84:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpl7uncd_w.cpp:84:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    if(n==4)\n\
    \        return true;\n    return true;\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp95to6bo7: /tmp/tmp95to6bo7.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i == 0) {\n     \
    \       count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphm1uxlkz: /tmp/tmphm1uxlkz.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085805
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Return false otherwise\n    if(n%2!=0)\n        return false;\n    if(n<8)\n\
    \        return false;\n    if(n==8)\n        return true;\n    if(n%4==0)\n \
    \       return true;\n    else\n        return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_9hxf1am: /tmp/tmp_9hxf1am.cpp:25: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0){\n\
    \        return false;\n    }\n    if(n==0){\n        return true;\n    }\n  \
    \  if(n==2){\n        return false;\n    }\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp17j9kreh: /tmp/tmp17j9kreh.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n\t// Write your code here\n\t// Return true\
    \ if n can be written as the sum of exactly 4 positive even numbers\n\t// Else\
    \ return false\n\tif (n % 2 != 0)\n\t\treturn false;\n\tif (n == 0)\n\t\treturn\
    \ true;\n\tif (n == 2)\n\t\treturn false;\n\treturn is_equal_to_sum_even(n - 2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp9ag86wbo: /tmp/tmp9ag86wbo.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n\t// Write your code here\n\tint i = 2;\n\
    \tint j = 2;\n\tint k = 2;\n\tint l = 2;\n\tint sum = 0;\n\twhile (i <= n / 4)\
    \ {\n\t\tj = 2;\n\t\twhile (j <= n / 3) {\n\t\t\tk = 2;\n\t\t\twhile (k <= n /\
    \ 2) {\n\t\t\t\tl = 2;\n\t\t\t\twhile (l <= n) {\n\t\t\t\t\tsum = i + j + k +\
    \ l;\n\t\t\t\t\tif (sum == n) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\
    \t\tl += 2;\n\t\t\t\t}\n\t\t\t\tk += 2;\n\t\t\t}\n\t\t\tj += 2;\n\t\t}\n\t\ti\
    \ += 2;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085806
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    if(n==2)\n        return false;\n    if(n==4)\n      \
    \  return true;\n    if(n==6)\n        return true;\n    if(n==8)\n        return\
    \ true;\n    if(n==10)\n        return true;\n    if(n==12)\n        return true;\n\
    \    if(n==14)\n        return true;\n    if(n==16)\n        return true;\n  \
    \  if(n==18)\n        return true;\n    if(n==20)\n        return true;\n    if(n==22)\n\
    \        return true;\n    if(n==24)\n        return true;\n    if(n==26)\n  \
    \      return true;\n    if(n==28)\n        return true;\n    if(n==30)\n    \
    \    return true;\n    if(n==32)\n        return true;\n    if(n==34)\n      \
    \  return true;\n    if(n==36)\n        return true;\n    if(n==38)\n        return\
    \ true;\n    if(n==40)\n        return true;\n    if(n==42)\n        return true;\n\
    \    if(n==44)\n        return true;\n    if(n==46)\n        return true;\n  \
    \  if(n==48)\n        return true;\n    if(n==50)\n        return true;\n    if(n==52)\n\
    \        return true;\n    if(n==54)\n        return true;\n    if(n==56)\n  \
    \      return true;\n    if(n==58)\n        return true;\n    if(n==60)\n    \
    \    return true;\n    if(n==62)\n        return true;\n    if(n==64)\n      \
    \  return true;\n    if(n==66)\n        return true;\n    if(n==68)\n        return\
    \ true;\n    if(n==70)\n        return true;\n    if(n==72)\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe65_a11s.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmpe65_a11s.cpp:84:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpe65_a11s.cpp:84:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp63qqp1yq: /tmp/tmp63qqp1yq.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n  // Write your code here\n  if(n%2!=0)\n\
    \    return false;\n  else\n  {\n    int count=0;\n    while(n!=0)\n    {\n  \
    \    if(n%2==0)\n      {\n        n=n-2;\n        count++;\n      }\n      else\n\
    \        return false;\n    }\n    if(count==4)\n      return true;\n    else\n\
    \      return false;\n  }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_opn8xpn: /tmp/tmp_opn8xpn.cpp:33: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Else return false\n    if(n%2!=0)\n        return false;\n    if(n<8)\n \
    \       return false;\n    return true;\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i == 0) {\n     \
    \       count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphm1uxlkz: /tmp/tmphm1uxlkz.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085805
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    long sum\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        sum += i;\n        if(sum\
    \ == n) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmrwzsa7b: /tmp/tmpmrwzsa7b.cpp:19: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu7ejuu7x: /tmp/tmpu7ejuu7x.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Return false otherwise\n    if(n%2!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3ivye4yd: /tmp/tmp3ivye4yd.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n==10)\n        return false;\n    if(n==12)\n    \
    \    return true;\n    if(n==14)\n        return false;\n    if(n==16)\n     \
    \   return true;\n    if(n==18)\n        return false;\n    if(n==20)\n      \
    \  return true;\n    if(n==22)\n        return false;\n    if(n==24)\n       \
    \ return true;\n    if(n==26)\n        return false;\n    if(n==28)\n        return\
    \ true;\n    if(n==30)\n        return false;\n    if(n==32)\n        return true;\n\
    \    if(n==34)\n        return false;\n    if(n==36)\n        return true;\n \
    \   if(n==38)\n        return false;\n    if(n==40)\n        return true;\n  \
    \  if(n==42)\n        return false;\n    if(n==44)\n        return true;\n   \
    \ if(n==46)\n        return false;\n    if(n==48)\n        return true;\n    if(n==50)\n\
    \        return false;\n    if(n==52)\n        return true;\n    if(n==54)\n \
    \       return false;\n    if(n==56)\n        return true;\n    if(n==58)\n  \
    \      return false;\n    if(n==60)\n        return true;\n    if(n==62)\n   \
    \     return false;\n    if(n==64)\n        return true;\n    if(n==66)\n    \
    \    return false;\n    if(n==68)\n        return true;\n    if(n==70)\n     \
    \   return false;\n    if(n==72)\n        return true;\n    if(n==74)\n      \
    \  return false;\n    if(n==76)\n        return true;\n    if(n==78)\n       \
    \ return false;\n    if(n==80)\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp384uo7bz.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmp384uo7bz.cpp:84:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp384uo7bz.cpp:84:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    if(n==2)\n        return false;\n    if(n==4)\n      \
    \  return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3ci9jdg5: /tmp/tmp3ci9jdg5.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        for(int i=2;i<=n/2;i+=2)\n      \
    \  {\n            for(int j=2;j<=n/2;j+=2)\n            {\n                for(int\
    \ k=2;k<=n/2;k+=2)\n                {\n                    for(int l=2;l<=n/2;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \           return true;\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0) {\n       \
    \     count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpbj_c1z0r: /tmp/tmpbj_c1z0r.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp60dtrg14: /tmp/tmp60dtrg14.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085802
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp60dtrg14: /tmp/tmp60dtrg14.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085802
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    else\n     \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp22i85h_v: /tmp/tmp22i85h_v.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n  // Write your code here\n  if(n%2==1)\n\
    \    return false;\n  if(n%4!=0)\n    return false;\n  return true;\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp38s0e2b_: /tmp/tmp38s0e2b_.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        int count=0;\n        for(int\
    \ i=2;i<=n;i+=2)\n        {\n            if(n%i==0)\n                count++;\n\
    \        }\n        if(count==4)\n            return true;\n        else\n   \
    \         return false;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpdban4b2h: /tmp/tmpdban4b2h.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzil80b_z: /tmp/tmpzil80b_z.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    int count=0;\n    for(int i=2;i<=n;i+=2)\n    {\n\
    \        if(n%i==0)\n            count++;\n        if(count==4)\n            return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp1dd7ia02: /tmp/tmp1dd7ia02.cpp:23: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085807
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        for(int i=2;i<=n/2;i+=2)\n      \
    \  {\n            for(int j=2;j<=n/2;j+=2)\n            {\n                for(int\
    \ k=2;k<=n/2;k+=2)\n                {\n                    for(int l=2;l<=n/2;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \           return true;\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085801
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    else\n    {\n        for(int i=2;i<=n/4;i+=2)\n  \
    \      {\n            if(n%i==0)\n                return true;\n        }\n  \
    \      return false;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2!=0)\n        return false;\n \
    \   if(n==0)\n        return true;\n    if(n<0)\n        return false;\n    if(n==2)\n\
    \        return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpvsjj6wq0: /tmp/tmpvsjj6wq0.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpuuktpxt1: /tmp/tmpuuktpxt1.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu7ejuu7x: /tmp/tmpu7ejuu7x.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        if(n==0)\n            return\
    \ true;\n        else\n        {\n            for(int i=2;i<=n/2;i+=2)\n     \
    \       {\n                if(is_equal_to_sum_even(n-i))\n                   \
    \ return true;\n            }\n            return false;\n        }\n    }\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_5gr8zkh: /tmp/tmp_5gr8zkh.cpp:28: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if (n % 2 != 0) {\n        return false;\n\
    \    }\n    long sum = 0;\n    for (long i = 2; i <= n; i += 2) {\n        sum\
    \ += i;\n        if (sum == n) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpuadk562h: /tmp/tmpuadk562h.cpp:21: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<=8)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpebt_orq1: /tmp/tmpebt_orq1.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcigi2clf: /tmp/tmpcigi2clf.cpp:19: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu7ejuu7x: /tmp/tmpu7ejuu7x.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true if n can be written as the sum of exactly 4 positive even numbers\n   \
    \ // Else return false\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n\
    \        return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpu7jliju2: /tmp/tmpu7jliju2.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2 !=\
    \ 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpsuyduh46: /tmp/tmpsuyduh46.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // TODO: Write - Your - Code\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp7nk1x7dc: /tmp/tmp7nk1x7dc.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // TODO: implement this function\n  \
    \  // Hint: you can use the modulo operator % to check whether a number is even\n\
    \    // Hint: you can use the division operator / to divide a number by 2\n  \
    \  // Hint: you can use the addition operator + to add numbers\n    // Hint: you\
    \ can use the subtraction operator - to subtract numbers\n    // Hint: you can\
    \ use the multiplication operator * to multiply numbers\n    // Hint: you can\
    \ use the division operator / to divide numbers\n    // Hint: you can use the\
    \ equality operator == to compare numbers\n    // Hint: you can use the inequality\
    \ operator != to compare numbers\n    // Hint: you can use the less than operator\
    \ < to compare numbers\n    // Hint: you can use the less than or equal to operator\
    \ <= to compare numbers\n    // Hint: you can use the greater than operator >\
    \ to compare numbers\n    // Hint: you can use the greater than or equal to operator\
    \ >= to compare numbers\n    // Hint: you can use the logical and operator &&\
    \ to combine boolean expressions\n    // Hint: you can use the logical or operator\
    \ || to combine boolean expressions\n    // Hint: you can use the logical not\
    \ operator ! to negate boolean expressions\n    // Hint: you can use the ternary\
    \ operator ?: to return one of two values depending on a boolean expression\n\
    \    // Hint: you can use the comma operator , to combine expressions\n    //\
    \ Hint: you can use the assignment operator = to assign values to variables\n\
    \    // Hint: you can use the addition assignment operator += to add numbers to\
    \ variables\n    // Hint: you can use the subtraction assignment operator -= to\
    \ subtract numbers from variables\n    // Hint: you can use the multiplication\
    \ assignment operator *= to multiply variables by numbers\n    // Hint: you can\
    \ use the division assignment operator /= to divide variables by numbers\n   \
    \ // Hint: you can use the increment operator ++ to add 1 to a variable\n    //\
    \ Hint: you can use the decrement operator -- to subtract 1 from a variable\n\
    \    // Hint: you can use the while loop to repeat a block of code while a condition\
    \ is true\n    // Hint: you can use the do-while loop to repeat a block of code\
    \ while a condition is true\n    // Hint: you can use the for\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5a6c554f: /tmp/tmp5a6c554f.cpp:37: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        for(int i=2;i<=n/2;i+=2)\n      \
    \  {\n            for(int j=2;j<=n/2;j+=2)\n            {\n                for(int\
    \ k=2;k<=n/2;k+=2)\n                {\n                    for(int l=2;l<=n/2;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \           return true;\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    for(int i=2;i<=n/4;i+=2)\n    {\n        if(n%i==0)\n\
    \        {\n            int a=n/i;\n            if(a%2==0)\n                return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmptw3ysl39: /tmp/tmptw3ysl39.cpp:25: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        int count=0;\n        for(int\
    \ i=2;i<=n;i+=2)\n        {\n            if(n%i==0)\n                count++;\n\
    \        }\n        if(count==4)\n            return true;\n        else\n   \
    \         return false;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpdban4b2h: /tmp/tmpdban4b2h.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    else\n     \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ynv2epi: /tmp/tmp2ynv2epi.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int i,j,k,l;\n\
    \    for(i=2;i<=n;i+=2)\n    {\n        for(j=2;j<=n;j+=2)\n        {\n      \
    \      for(k=2;k<=n;k+=2)\n            {\n                for(l=2;l<=n;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n>8)\n        return is_equal_to_sum_even(n-8);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpv9cpchxs: /tmp/tmpv9cpchxs.cpp:21: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    // Return\
    \ true or false\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n     \
    \   return false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrap1zt2: /tmp/tmpgrap1zt2.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzil80b_z: /tmp/tmpzil80b_z.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n  // Write your code here\n  for(int i=2;i<=n;i+=2)\n\
    \  {\n      for(int j=2;j<=n;j+=2)\n      {\n          for(int k=2;k<=n;k+=2)\n\
    \          {\n              for(int l=2;l<=n;l+=2)\n              {\n        \
    \          if(i+j+k+l==n)\n                  {\n                      return true;\n\
    \                  }\n              }\n          }\n      }\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    if(n==6)\n      \
    \  return true;\n    if(n==8)\n        return true;\n    if(n==10)\n        return\
    \ true;\n    if(n==12)\n        return true;\n    if(n==14)\n        return true;\n\
    \    if(n==16)\n        return true;\n    if(n==18)\n        return true;\n  \
    \  if(n==20)\n        return true;\n    if(n==22)\n        return true;\n    if(n==24)\n\
    \        return true;\n    if(n==26)\n        return true;\n    if(n==28)\n  \
    \      return true;\n    if(n==30)\n        return true;\n    if(n==32)\n    \
    \    return true;\n    if(n==34)\n        return true;\n    if(n==36)\n      \
    \  return true;\n    if(n==38)\n        return true;\n    if(n==40)\n        return\
    \ true;\n    if(n==42)\n        return true;\n    if(n==44)\n        return true;\n\
    \    if(n==46)\n        return true;\n    if(n==48)\n        return true;\n  \
    \  if(n==50)\n        return true;\n    if(n==52)\n        return true;\n    if(n==54)\n\
    \        return true;\n    if(n==56)\n        return true;\n    if(n==58)\n  \
    \      return true;\n    if(n==60)\n        return true;\n    if(n==62)\n    \
    \    return true;\n    if(n==64)\n        return true;\n    if(n==66)\n      \
    \  return true;\n    if(n==68)\n        return true;\n    if(n==70)\n        return\
    \ true;\n    if(n==72)\n        return true;\n    if(n==74)\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7uncd_w.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmpl7uncd_w.cpp:84:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpl7uncd_w.cpp:84:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n==2)\n   \
    \     return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp60dtrg14: /tmp/tmp60dtrg14.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085802
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    if(n==4)\n        return true;\n    return is_equal_to_sum_even(n-4);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpy0l_gblc: /tmp/tmpy0l_gblc.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n  // Write your code here\n  if(n%2!=0)\n\
    \    return false;\n  else\n  {\n    int count=0;\n    for(int i=2;i<=n;i+=2)\n\
    \    {\n      if(n%i==0)\n        count++;\n    }\n    if(count==4)\n      return\
    \ true;\n    else\n      return false;\n  }\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpw0i2m2jj: /tmp/tmpw0i2m2jj.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if (n % 2 != 0) return false;\n    if\
    \ (n == 0) return true;\n    if (n == 2) return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpjsfupgqh: /tmp/tmpjsfupgqh.cpp:15: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n\t// Write your code here\n\t// Return true\
    \ if the number can be written as the sum of exactly 4 positive even numbers\n\
    \t// Return false otherwise\n\tint count = 0;\n\tfor (int i = 2; i <= n; i +=\
    \ 2) {\n\t\tif (n % i == 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count == 4) {\n\
    \t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp75mu8_kc: /tmp/tmp75mu8_kc.cpp:26: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3evf9ln9: /tmp/tmp3evf9ln9.cpp:14: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    else\n    {\n        if(n==4)\n        return true;\n\
    \        else\n        {\n            if(n%4==0)\n            return true;\n \
    \           else\n            return false;\n        }\n    }\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp45uugvz9: /tmp/tmp45uugvz9.cpp:24: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2 != 0) return false;\n    if(n\
    \ == 0) return true;\n    if(n < 0) return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpur31u90v: /tmp/tmpur31u90v.cpp:13: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085808
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpl2xn4pik: /tmp/tmpl2xn4pik.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n<=8)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpwduz2y7o: /tmp/tmpwduz2y7o.cpp:17: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085809
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%8==0)\n        return true;\n    else\n     \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_mk8p2kr: /tmp/tmp_mk8p2kr.cpp:19: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085809
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2==1) return false;\n    if(n==4)\
    \ return true;\n    if(n==6) return true;\n    if(n==8) return true;\n    if(n==10)\
    \ return true;\n    if(n==12) return true;\n    if(n==14) return true;\n    if(n==16)\
    \ return true;\n    if(n==18) return true;\n    if(n==20) return true;\n    if(n==22)\
    \ return true;\n    if(n==24) return true;\n    if(n==26) return true;\n    if(n==28)\
    \ return true;\n    if(n==30) return true;\n    if(n==32) return true;\n    if(n==34)\
    \ return true;\n    if(n==36) return true;\n    if(n==38) return true;\n    if(n==40)\
    \ return true;\n    if(n==42) return true;\n    if(n==44) return true;\n    if(n==46)\
    \ return true;\n    if(n==48) return true;\n    if(n==50) return true;\n    if(n==52)\
    \ return true;\n    if(n==54) return true;\n    if(n==56) return true;\n    if(n==58)\
    \ return true;\n    if(n==60) return true;\n    if(n==62) return true;\n    if(n==64)\
    \ return true;\n    if(n==66) return true;\n    if(n==68) return true;\n    if(n==70)\
    \ return true;\n    if(n==72) return true;\n    if(n==74) return true;\n    if(n==76)\
    \ return true;\n    if(n==78) return true;\n    if(n==80) return true;\n    if(n==82)\
    \ return true;\n    if(n==84) return true;\n    if(n==86) return true;\n    if(n==88)\
    \ return true;\n    if(n==90) return true;\n    if(n==92) return true;\n    if(\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp19m3b9cd.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmp19m3b9cd.cpp:53:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmp19m3b9cd.cpp:52:8: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   52 |     if(\n      |\
    \       ~^\n      |        )\n   53 | }\n      | ~       \n/tmp/tmp19m3b9cd.cpp:53:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   53 | }\n \
    \     | ^\n/tmp/tmp19m3b9cd.cpp:53:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   53 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660085809
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    if(n%4==0)\n    return true;\n    if(n%4!=0)\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpctz78x2h: /tmp/tmpctz78x2h.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    if(n==2)\n        return false;\n    if(n==4)\n      \
    \  return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3ci9jdg5: /tmp/tmp3ci9jdg5.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    else\n     \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp22i85h_v: /tmp/tmp22i85h_v.cpp:16: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        if(n%4==0)\n            return\
    \ true;\n        else\n            return false;\n    }\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp0psgx8w5: /tmp/tmp0psgx8w5.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        int count=0;\n        for(int\
    \ i=2;i<=n;i+=2)\n        {\n            if(n-i==0)\n                count++;\n\
    \            else if(n-i>0)\n            {\n                if((n-i)%2==0)\n \
    \                   count++;\n            }\n        }\n        if(count==4)\n\
    \            return true;\n        else\n            return false;\n    }\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpv2cq8t9v: /tmp/tmpv2cq8t9v.cpp:33: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if (n % 2 != 0) {\n        return false;\n\
    \    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 2) {\n  \
    \      return false;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp2i9vwt_t: /tmp/tmp2i9vwt_t.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    if(n%2==1)\n        return false;\n \
    \   if(n<=8)\n        return false;\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpy08ldixq: /tmp/tmpy08ldixq.cpp:16: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n==10)\n        return false;\n    if(n==12)\n    \
    \    return true;\n    if(n==14)\n        return false;\n    if(n==16)\n     \
    \   return true;\n    if(n==18)\n        return false;\n    if(n==20)\n      \
    \  return true;\n    if(n==22)\n        return false;\n    if(n==24)\n       \
    \ return true;\n    if(n==26)\n        return false;\n    if(n==28)\n        return\
    \ true;\n    if(n==30)\n        return false;\n    if(n==32)\n        return true;\n\
    \    if(n==34)\n        return false;\n    if(n==36)\n        return true;\n \
    \   if(n==38)\n        return false;\n    if(n==40)\n        return true;\n  \
    \  if(n==42)\n        return false;\n    if(n==44)\n        return true;\n   \
    \ if(n==46)\n        return false;\n    if(n==48)\n        return true;\n    if(n==50)\n\
    \        return false;\n    if(n==52)\n        return true;\n    if(n==54)\n \
    \       return false;\n    if(n==56)\n        return true;\n    if(n==58)\n  \
    \      return false;\n    if(n==60)\n        return true;\n    if(n==62)\n   \
    \     return false;\n    if(n==64)\n        return true;\n    if(n==66)\n    \
    \    return false;\n    if(n==68)\n        return true;\n    if(n==70)\n     \
    \   return false;\n    if(n==72)\n        return true;\n    if(n==74)\n      \
    \  return false;\n    if(n==76)\n        return true;\n    if(n==78)\n       \
    \ return false;\n    if(n==80)\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1_x224qq.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmp1_x224qq.cpp:84:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp1_x224qq.cpp:84:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j0lt819: /tmp/tmp5j0lt819.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \    return false;\n    if(n==0)\n    return true;\n    if(n<0)\n    return false;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmppajdczfg: /tmp/tmppajdczfg.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n<8)\n\
    \        return false;\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp1quvx204: /tmp/tmp1quvx204.cpp:20: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        int count=0;\n        for(int\
    \ i=2;i<=n;i+=2)\n        {\n            if(n-i>=0)\n            {\n         \
    \       n=n-i;\n                count++;\n            }\n            if(count==4)\n\
    \                return true;\n        }\n        return false;\n    }\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpo2jdndqq: /tmp/tmpo2jdndqq.cpp:29: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    if(n==0)\n\
    \        return true;\n    return is_equal_to_sum_even(n-4);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp63qqp1yq: /tmp/tmp63qqp1yq.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4!=0)\n        return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpic1xnffm: /tmp/tmpic1xnffm.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n==10)\n        return false;\n    return true;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpi3nw06to: /tmp/tmpi3nw06to.cpp:22: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n\t// Write your code here\n\tif (n % 2 !=\
    \ 0) {\n\t\treturn false;\n\t}\n\tif (n % 4 != 0) {\n\t\treturn false;\n\t}\n\t\
    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n  \
    \  assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpewgfutvg: /tmp/tmpewgfutvg.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n  // Write your code here\n  if(n%2==1)\n\
    \    return false;\n  else\n  {\n    long a=0,b=0,c=0,d=0;\n    for(long i=2;i<=n/4;i+=2)\n\
    \    {\n      a=i;\n      for(long j=2;j<=n/4;j+=2)\n      {\n        b=j;\n \
    \       for(long k=2;k<=n/4;k+=2)\n        {\n          c=k;\n          for(long\
    \ l=2;l<=n/4;l+=2)\n          {\n            d=l;\n            if(a+b+c+d==n)\n\
    \              return true;\n          }\n        }\n      }\n    }\n    return\
    \ false;\n  }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n \
    \   assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvku47in2: /tmp/tmpvku47in2.cpp:38: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpooz1hqo6: /tmp/tmpooz1hqo6.cpp:15: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    else\n    {\n        int count=0;\n        for(int\
    \ i=2;i<=n;i+=2)\n        {\n            if(n%i==0)\n                count++;\n\
    \        }\n        if(count==4)\n            return true;\n        else\n   \
    \         return false;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpdban4b2h: /tmp/tmpdban4b2h.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085806
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2==1)\n\
    \        return false;\n    if(n==0)\n        return true;\n    if(n<0)\n    \
    \    return false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n \
    \   auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp414egizi: /tmp/tmp414egizi.cpp:17: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n % i == 0) {\n       \
    \     count++;\n        }\n    }\n    if(count == 4) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpbj_c1z0r: /tmp/tmpbj_c1z0r.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    int i,j,k,l;\n\
    \    for(i=2;i<=n/4;i+=2)\n    {\n        for(j=2;j<=n/4;j+=2)\n        {\n  \
    \          for(k=2;k<=n/4;k+=2)\n            {\n                for(l=2;l<=n/4;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu8bgc_wl: /tmp/tmpu8bgc_wl.cpp:31: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660085804
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    if(n%2!=0)\n\
    \        return false;\n    if(n<8)\n        return false;\n    if(n==8)\n   \
    \     return true;\n    if(n>8)\n        return true;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660085810
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    bool is_equal_to_sum_even(long n) {\n    // Write your code here\n    long sum\
    \ = 0;\n    for(int i = 2; i <= n; i += 2) {\n        sum += i;\n        if(sum\
    \ == n) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmrwzsa7b: /tmp/tmpmrwzsa7b.cpp:19: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660085801

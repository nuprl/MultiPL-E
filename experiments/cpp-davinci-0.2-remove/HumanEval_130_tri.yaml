name: HumanEval_130_tri
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Everyone knows Fibonacci\
  \ sequence, it was studied deeply by mathematicians in \n// the last couple centuries.\
  \ However, what people don't know is Tribonacci sequence.\n// Tribonacci sequence\
  \ is defined by the recurrence:\nstd::vector<long> tri(long n) {\n"
tests: "}\nint main() {\n    auto candidate = tri;\n    assert(candidate((3)) == (std::vector<long>({(long)1,\
  \ (long)3, (long)2.0, (long)8.0})));\n    assert(candidate((4)) == (std::vector<long>({(long)1,\
  \ (long)3, (long)2.0, (long)8.0, (long)3.0})));\n    assert(candidate((5)) == (std::vector<long>({(long)1,\
  \ (long)3, (long)2.0, (long)8.0, (long)3.0, (long)15.0})));\n    assert(candidate((6))\
  \ == (std::vector<long>({(long)1, (long)3, (long)2.0, (long)8.0, (long)3.0, (long)15.0,\
  \ (long)4.0})));\n    assert(candidate((7)) == (std::vector<long>({(long)1, (long)3,\
  \ (long)2.0, (long)8.0, (long)3.0, (long)15.0, (long)4.0, (long)24.0})));\n    assert(candidate((8))\
  \ == (std::vector<long>({(long)1, (long)3, (long)2.0, (long)8.0, (long)3.0, (long)15.0,\
  \ (long)4.0, (long)24.0, (long)5.0})));\n    assert(candidate((9)) == (std::vector<long>({(long)1,\
  \ (long)3, (long)2.0, (long)8.0, (long)3.0, (long)15.0, (long)4.0, (long)24.0, (long)5.0,\
  \ (long)35.0})));\n    assert(candidate((20)) == (std::vector<long>({(long)1, (long)3,\
  \ (long)2.0, (long)8.0, (long)3.0, (long)15.0, (long)4.0, (long)24.0, (long)5.0,\
  \ (long)35.0, (long)6.0, (long)48.0, (long)7.0, (long)63.0, (long)8.0, (long)80.0,\
  \ (long)9.0, (long)99.0, (long)10.0, (long)120.0, (long)11.0})));\n    assert(candidate((0))\
  \ == (std::vector<long>({(long)1})));\n    assert(candidate((1)) == (std::vector<long>({(long)1,\
  \ (long)3})));\n}\n"
completions: []
stop_tokens:
- "\n}"

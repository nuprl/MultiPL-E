language: cpp
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n > 0);\n    for (long i = n - 1; i >= 1; i--) {\n        if\
    \ (n % i == 0) {\n            return i;\n        }\n    }\n    return 1;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long largest = 1;\n  for (long i = 2; i < n; i++) {\n    if (n % i ==\
    \ 0) {\n      largest = i;\n    }\n  }\n  return largest;\n}\nint main() {\n \
    \   auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n  \
    \  assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = 2;\n    while (n % divisor != 0) {\n        divisor++;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp2jriihxo: /tmp/tmp2jriihxo.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long largest_divisor = 1;\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      largest_divisor = i;\n    }\n  }\n  return largest_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long largest_divisor = 1;\n  for (long i = 2; i <= n / 2; i++) {\n \
    \   if (n % i == 0) {\n      largest_divisor = i;\n    }\n  }\n  return largest_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    for (long i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpquhyspm2: /tmp/tmpquhyspm2.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long largest = 1;\n  for (long i = 2; i < n; i++) {\n    if (n % i ==\
    \ 0) {\n      largest = i;\n    }\n  }\n  return largest;\n}\nint main() {\n \
    \   auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n  \
    \  assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = n - 1;\n    while (n % divisor != 0) {\n        divisor--;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>=1;i--)\n  \
    \  {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = 2;\n    while (n % divisor != 0) {\n        divisor++;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp2jriihxo: /tmp/tmp2jriihxo.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 1;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  for (long i = n - 1; i >= 1; i--) {\n    if (n % i == 0) {\n      return\
    \ i;\n    }\n  }\n  return 0;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 1;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>0;i--)\n   \
    \ {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 0;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i=n-1;\n    while(i>=1)\n    {\n\
    \        if(n%i==0)\n        {\n            return i;\n        }\n        i--;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long largest_divisor = 1;\n    for(long\
    \ i = 2; i < n; i++) {\n        if(n % i == 0) {\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    for (long i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    for (long i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp9l8dsc5j: /tmp/tmp9l8dsc5j.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // Write your code here\n  long i;\n  for(i=n-1;i>=1;i--)\n  {\n   \
    \   if(n%i==0)\n      {\n          return i;\n      }\n  }\n  return 0;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = n - 1;\n    while (n % divisor != 0) {\n        divisor--;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 1;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i <= n/2; i++) {\n       \
    \ if (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i = n - 1;\n    while (i > 0) {\n        if (n % i == 0) {\n\
    \            return i;\n        }\n        i--;\n    }\n    return -1;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp9l8dsc5j: /tmp/tmp9l8dsc5j.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n-1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>0;i--)\n   \
    \ {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 0;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n-1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = 2;\n    while (n % divisor != 0) {\n        divisor++;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp2jriihxo: /tmp/tmp2jriihxo.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  for (long i = n - 1; i >= 1; i--) {\n    if (n % i == 0) {\n      return\
    \ i;\n    }\n  }\n  return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n >= 1);\n    for (long i = n-1; i >= 1; i--) {\n        if\
    \ (n % i == 0) {\n            return i;\n        }\n    }\n    return 1;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = n - 1;\n    while (n % divisor != 0) {\n        divisor--;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long i;\n  for (i = n - 1; i > 0; i--) {\n    if (n % i == 0) {\n  \
    \    return i;\n    }\n  }\n  return 0;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i <= n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmph2s_ili1: /tmp/tmph2s_ili1.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 1;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i = n - 1;\n    while (i > 0) {\n        if (n % i == 0) {\n\
    \            return i;\n        }\n        i--;\n    }\n    return 0;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n >= 1);\n    for (long i = n-1; i >= 1; i--) {\n        if\
    \ (n % i == 0) {\n            return i;\n        }\n    }\n    return 1;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long largest_divisor = 1;\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      largest_divisor = i;\n    }\n  }\n  return largest_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i <= n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmph2s_ili1: /tmp/tmph2s_ili1.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i = n - 1;\n    while (i > 0) {\n        if (n % i == 0)\n  \
    \          return i;\n        i--;\n    }\n    return -1;\n}\nint main() {\n \
    \   auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n  \
    \  assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // your code here\n    long i;\n    for(i=n-1;i>=1;i--)\n    {\n \
    \       if(n%i==0)\n        {\n            return i;\n        }\n    }\n    return\
    \ 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = n - 1;\n    while (n % divisor != 0) {\n        divisor--;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 1;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long max=0;\n    for(long i=1;i<n;i++)\n\
    \    {\n        if(n%i==0)\n        {\n            if(i>max)\n            {\n\
    \                max=i;\n            }\n        }\n    }\n    return max;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>=1;i--)\n  \
    \  {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return i;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return i;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>=1;i--)\n  \
    \  {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>=1;i--)\n  \
    \  {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  for (long i = n - 1; i >= 1; i--) {\n    if (n % i == 0) {\n      return\
    \ i;\n    }\n  }\n  return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = n - 1;\n    while (n % divisor != 0) {\n        divisor--;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i <= n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmph2s_ili1: /tmp/tmph2s_ili1.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = n - 1;\n    while (n % divisor != 0) {\n        divisor--;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 2; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i = n - 1;\n    while (i > 0) {\n        if (n % i == 0) {\n\
    \            return i;\n        }\n        i--;\n    }\n    return 0;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long max = 0;\n    for(long i = 1; i\
    \ <= n/2; i++) {\n        if(n % i == 0) {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = 2;\n    while (n % divisor != 0) {\n        divisor++;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp2jriihxo: /tmp/tmp2jriihxo.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  for (long i = n - 1; i >= 1; i--) {\n    if (n % i == 0) {\n      return\
    \ i;\n    }\n  }\n  return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n == 1) return 1;\n    for (long i = n - 1; i >= 1; i--) {\n \
    \       if (n % i == 0) return i;\n    }\n    return 1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n == 1) return 1;\n    for (long i = n - 1; i >= 1; i--) {\n \
    \       if (n % i == 0) return i;\n    }\n    return 1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long i;\n  for (i = n - 1; i > 0; i--) {\n    if (n % i == 0) {\n  \
    \    return i;\n    }\n  }\n  return i;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long largest_divisor = 1;\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      largest_divisor = i;\n    }\n  }\n  return largest_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return i;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i = n - 1;\n    while (i > 0) {\n        if (n % i == 0) {\n\
    \            return i;\n        }\n        i--;\n    }\n    return i;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 0;\n    for (long i = 1; i < n; i++) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long i;\n    for(i=n-1;i>=1;i--)\n  \
    \  {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp9l8dsc5j: /tmp/tmp9l8dsc5j.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return 1;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    int i;\n    for(i=n-1;i>=1;i--)\n   \
    \ {\n        if(n%i==0)\n        {\n            break;\n        }\n    }\n   \
    \ return i;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    for (long i = n - 1; i >= 1; i--) {\n        if (n % i == 0) {\n \
    \           return i;\n        }\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0)\
    \ {\n            return i;\n        }\n    }\n    return i;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746630
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746628

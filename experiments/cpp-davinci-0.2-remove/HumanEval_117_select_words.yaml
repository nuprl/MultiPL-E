name: HumanEval_117_select_words
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string s and a natural\
  \ number n, you have been tasked to implement \n// a function that returns a list\
  \ of all words from string s that contain exactly \n// n consonants, in order these\
  \ words appear in the string s.\n// If the string s is empty then the function should\
  \ return an empty list.\n// Note: you may assume the input string contains only\
  \ letters and spaces.\n// Examples:\nstd::vector<std::string> select_words(std::string\
  \ s, long n) {\n"
tests: "}\nint main() {\n    auto candidate = select_words;\n    assert(candidate((\"\
  Mary had a little lamb\"), (4)) == (std::vector<std::string>({(std::string)\"little\"\
  })));\n    assert(candidate((\"Mary had a little lamb\"), (3)) == (std::vector<std::string>({(std::string)\"\
  Mary\", (std::string)\"lamb\"})));\n    assert(candidate((\"simple white space\"\
  ), (2)) == (std::vector<std::string>()));\n    assert(candidate((\"Hello world\"\
  ), (4)) == (std::vector<std::string>({(std::string)\"world\"})));\n    assert(candidate((\"\
  Uncle sam\"), (3)) == (std::vector<std::string>({(std::string)\"Uncle\"})));\n \
  \   assert(candidate((\"\"), (4)) == (std::vector<std::string>()));\n    assert(candidate((\"\
  a b c d e f\"), (1)) == (std::vector<std::string>({(std::string)\"b\", (std::string)\"\
  c\", (std::string)\"d\", (std::string)\"f\"})));\n}\n"
completions: ["    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return std::string(\"aeiou\").find(c) == std::string::npos;\n        }) == n)\
    \ {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> res;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            res.push_back(word);\n       \
    \ }\n    }\n    return res;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        int count = 0;\n        for(char c :\
    \ word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                count++;\n            }\n        }\n        if(count\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        long count = 0;\n        for(char c\
    \ : word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u') {\n                count++;\n            }\n        }\n        if(count\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(count_consonants(word) == n) {\n\
    \            words.push_back(word);\n        }\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return !std::isalpha(c);\n        }) == n) {\n   \
    \         words.push_back(word);\n        }\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result.push_back(word);\n        }\n    }\n \
    \   return result;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> result;\n  \
    \  std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(char c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return std::string(\"aeiou\").find(c) == std::string::npos;\n        }) == n)\
    \ {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::string word = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length()\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.length() == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::string temp;\n   \
    \ int count = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] ==\
    \ ' '){\n            if(count == n){\n                result.push_back(temp);\n\
    \            }\n            temp = \"\";\n            count = 0;\n        }\n\
    \        else{\n            if(s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u'){\n                count++;\n            }\n         \
    \   temp += s[i];\n        }\n    }\n    if(count == n){\n        result.push_back(temp);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::string word = \"\";\n    int consonants\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n\
    \            word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n   \
    \         }\n        } else {\n            if (consonants == n) {\n          \
    \      result.push_back(word);\n            }\n            word = \"\";\n    \
    \        consonants = 0;\n        }\n    }\n    if (consonants == n) {\n     \
    \   result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return std::string(\"aeiou\").find(c) == std::string::npos;\n    \
    \    }) == n) {\n            result.push_back(word);\n        }\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::string word = \"\"\
    ;\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++) {\n     \
    \   if (s[i] == ' ') {\n            if (consonants == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n            consonants = 0;\n      \
    \  } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n   \
    \         word += s[i];\n        }\n    }\n    if (consonants == n) {\n      \
    \  result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        int count = 0;\n        for(auto c : word) {\n            if(c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == ' ') {\n            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(count_consonants(word)\
    \ == n) {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> words;\n    std::string word;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if (word.size()\
    \ == n) {\n                words.push_back(word);\n            }\n           \
    \ word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.size() == n) {\n        words.push_back(word);\n    }\n    return\
    \ words;", "    std::vector<std::string> words;\n    std::string word;\n    for\
    \ (char c : s) {\n        if (c == ' ') {\n            if (word.size() == n) {\n\
    \                words.push_back(word);\n            }\n            word.clear();\n\
    \        } else {\n            word += c;\n        }\n    }\n    if (word.size()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        int count = 0;\n        for(char c : word) {\n            if(c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> res;\n \
    \   std::string word;\n    int count = 0;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (s[i] != ' ') {\n            word += s[i];\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            count++;\n            }\n        } else {\n            if (count\
    \ == n) {\n                res.push_back(word);\n            }\n            word\
    \ = \"\";\n            count = 0;\n        }\n    }\n    if (count == n) {\n \
    \       res.push_back(word);\n    }\n    return res;", "    std::vector<std::string>\
    \ result;\n    std::string word = \"\";\n    int consonants = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (consonants\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        } else {\n            word\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n   \
    \     }\n    }\n    if (consonants == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(s[i] == ' '){\n            if(count == n){\n             \
    \   result.push_back(temp);\n            }\n            temp = \"\";\n       \
    \     count = 0;\n        }\n        else{\n            if(s[i] != 'a' && s[i]\
    \ != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u'){\n                count++;\n\
    \            }\n            temp += s[i];\n        }\n    }\n    if(count == n){\n\
    \        result.push_back(temp);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        if(count_consonants(word) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     result.push_back(word);\n            }\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        words.push_back(word);\n            }\n            word = \"\";\n   \
    \         count = 0;\n        } else {\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n\
    \            }\n            word += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        int count = 0;\n        for(auto c : word) {\n            if(c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(char c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     result.push_back(word);\n            }\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string word = \"\";\n    int consonants = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (consonants\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        } else {\n            word\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n   \
    \     }\n    }\n    if (consonants == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        int count =\
    \ 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                count++;\n            }\n  \
    \      }\n        if(count == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> words;\n   \
    \ std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n     \
    \   if (s[i] == ' ') {\n            if (word.length() == n) {\n              \
    \  words.push_back(word);\n            }\n            word = \"\";\n        }\
    \ else {\n            word += s[i];\n        }\n    }\n    if (word.length() ==\
    \ n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string temp;\n    std::stringstream ss(s);\n    while(ss >>\
    \ temp) {\n        int count = 0;\n        for(char c : temp) {\n            if(c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(temp);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == ' ') {\n            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        int consonants\
    \ = 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n         \
    \   }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return std::string(\"aeiou\").find(std::tolower(c)) == std::string::npos;\n\
    \        }) == n) {\n            words.push_back(word);\n        }\n    }\n  \
    \  return words;", "\tstd::vector<std::string> words;\n\tstd::string word = \"\
    \";\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == ' ') {\n\t\t\t\
    if (word.length() == n) {\n\t\t\t\twords.push_back(word);\n\t\t\t}\n\t\t\tword\
    \ = \"\";\n\t\t} else {\n\t\t\tword += s[i];\n\t\t}\n\t}\n\tif (word.length()\
    \ == n) {\n\t\twords.push_back(word);\n\t}\n\treturn words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (char c : s) {\n        if (c == ' ')\
    \ {\n            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word.clear();\n        } else {\n            word\
    \ += c;\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n            count = 0;\n        } else\
    \ {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o'\
    \ && s[i] != 'u') {\n                count++;\n            }\n            word\
    \ += s[i];\n        }\n    }\n    if (count == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(count_consonants(word) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(count_consonants(word) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n\
    \        if(count_consonants(word) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return !std::isalpha(c);\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word = \"\";\n    for (auto c : s) {\n        if (c == ' ') {\n\
    \            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ c;\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(count_consonants(word)\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    for (auto c : s)\
    \ {\n        if (c == ' ') {\n            if (word.size() == n) {\n          \
    \      words.push_back(word);\n            }\n            word.clear();\n    \
    \    } else {\n            word += c;\n        }\n    }\n    if (word.size() ==\
    \ n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return std::string(\"aeiou\").find(c) == std::string::npos;\n    \
    \    }) == n) {\n            words.push_back(word);\n        }\n    }\n    return\
    \ words;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        int consonants = 0;\n\
    \        for(char c : word) {\n            if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                consonants++;\n            }\n \
    \       }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        long consonants = 0;\n        for(auto\
    \ c : word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u') {\n                consonants++;\n            }\n        }\n     \
    \   if(consonants == n) {\n            result.push_back(word);\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] != ' ') {\n            word += s[i];\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            consonants++;\n            }\n        } else {\n            if (consonants\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        }\n    }\n    if (consonants\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return std::string(\"aeiou\").find(c) == std::string::npos;\n    \
    \    }) == n) {\n            result.push_back(word);\n        }\n    }\n    return\
    \ result;", "    std::vector<std::string> words;\n    std::string word;\n    int\
    \ consonants = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ != ' ') {\n            word += s[i];\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n\
    \            }\n        } else {\n            if (consonants == n) {\n       \
    \         words.push_back(word);\n            }\n            word = \"\";\n  \
    \          consonants = 0;\n        }\n    }\n    if (consonants == n) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n       \
    \     return std::string(\"aeiou\").find(c) == std::string::npos;\n        })\
    \ == n) {\n            res.push_back(word);\n        }\n    }\n    return res;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(count_consonants(word) == n) {\n\
    \            words.push_back(word);\n        }\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::string word = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length()\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.length() == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        int count = 0;\n    \
    \    for(char c : word) {\n            if(c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                count++;\n            }\n        }\n\
    \        if(count == n) {\n            result.push_back(word);\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::string temp = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (temp.length() == n) {\n           \
    \     result.push_back(temp);\n            }\n            temp = \"\";\n     \
    \   } else {\n            temp += s[i];\n        }\n    }\n    if (temp.length()\
    \ == n) {\n        result.push_back(temp);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        int count = 0;\n        for(int i = 0; i < word.size(); i++)\
    \ {\n            if(word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u') {\n                count++;\n            }\n     \
    \   }\n        if(count == n) {\n            result.push_back(word);\n       \
    \ }\n    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(auto c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            words.push_back(word);\n        }\n    }\n  \
    \  return words;", "    std::vector<std::string> result;\n    std::string word\
    \ = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ')\
    \ {\n            if (word.length() - std::count(word.begin(), word.end(), 'a')\
    \ - std::count(word.begin(), word.end(), 'e') - std::count(word.begin(), word.end(),\
    \ 'i') - std::count(word.begin(), word.end(), 'o') - std::count(word.begin(),\
    \ word.end(), 'u') == n) {\n                result.push_back(word);\n        \
    \    }\n            word = \"\";\n        } else {\n            word += s[i];\n\
    \        }\n    }\n    if (word.length() - std::count(word.begin(), word.end(),\
    \ 'a') - std::count(word.begin(), word.end(), 'e') - std::count(word.begin(),\
    \ word.end(), 'i') - std::count(word.begin(), word.end(), 'o') - std::count(word.begin(),\
    \ word.end(), 'u') == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(count_consonants(word) == n) {\n\
    \            words.push_back(word);\n        }\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            result.push_back(word);\n        }\n    }\n \
    \   return result;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::istringstream iss(s);\n    while(iss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     words.push_back(word);\n            }\n            word = \"\";\n      \
    \  } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count == n)\
    \ {\n                result.push_back(word);\n            }\n            word\
    \ = \"\";\n            count = 0;\n        } else {\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     count++;\n            }\n            word += s[i];\n        }\n    }\n \
    \   if (count == n) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> result;\n  \
    \  std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(char c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return std::string(\"aeiou\").find(c) == std::string::npos;\n        }) == n)\
    \ {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while(iss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> result;\n  \
    \  std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int consonants = 0;\n        for(char c : word) {\n            if(c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n\
    \            }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     result.push_back(word);\n            }\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            if (word.length() == n) {\n     \
    \           words.push_back(word);\n            }\n            word = \"\";\n\
    \        } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        int consonants = 0;\n        for(char c : word) {\n       \
    \     if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n       \
    \         consonants++;\n            }\n        }\n        if(consonants == n)\
    \ {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        int count = 0;\n        for(int i =\
    \ 0; i < word.size(); i++) {\n            if(word[i] != 'a' && word[i] != 'e'\
    \ && word[i] != 'i' && word[i] != 'o' && word[i] != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            v.push_back(word);\n\
    \        }\n    }\n    return v;", "    std::vector<std::string> result;\n   \
    \ std::string word;\n    std::istringstream iss(s);\n    while(iss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            result.push_back(word);\n        }\n    }\n \
    \   return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            words.push_back(word);\n        }\n    }\n  \
    \  return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while(ss >> word) {\n        int consonants\
    \ = 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n         \
    \   }\n        }\n        if(consonants == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return std::string(\"aeiou\").find(c) == std::string::npos;\n        }) == n)\
    \ {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length()\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.length() == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return !std::isalpha(c);\n        }) ==\
    \ n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            words.push_back(word);\n        }\n    }\n  \
    \  return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) { return c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u'; }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(char c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     result.push_back(word);\n            }\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result.push_back(word);\n        }\n    }\n \
    \   return result;", "    std::vector<std::string> words;\n    std::string word\
    \ = \"\";\n    for (char c : s) {\n        if (c == ' ') {\n            if (word.size()\
    \ == n) {\n                words.push_back(word);\n            }\n           \
    \ word = \"\";\n        } else {\n            word += c;\n        }\n    }\n \
    \   if (word.size() == n) {\n        words.push_back(word);\n    }\n    return\
    \ words;", "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            words.push_back(word);\n     \
    \   }\n    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        words.push_back(word);\n            }\n            word = \"\";\n   \
    \         count = 0;\n        } else {\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n\
    \            }\n            word += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result.push_back(word);\n        }\n    }\n \
    \   return result;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     words.push_back(word);\n            }\n            word = \"\";\n      \
    \  } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        words.push_back(word);\n            }\n            word = \"\";\n   \
    \         count = 0;\n        } else {\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n\
    \            }\n            word += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    int consonants = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (consonants\
    \ == n) {\n                words.push_back(word);\n            }\n           \
    \ word = \"\";\n            consonants = 0;\n        } else {\n            word\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n   \
    \     }\n    }\n    if (consonants == n) {\n        words.push_back(word);\n \
    \   }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return !std::isalpha(c);\n        }) ==\
    \ n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    for (char c : s)\
    \ {\n        if (c == ' ') {\n            if (word.size() == n) {\n          \
    \      words.push_back(word);\n            }\n            word.clear();\n    \
    \    } else {\n            word += c;\n        }\n    }\n    if (word.size() ==\
    \ n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        if(count_consonants(word) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    int consonants = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (consonants == n) {\n   \
    \             words.push_back(word);\n            }\n            word = \"\";\n\
    \            consonants = 0;\n        } else {\n            word += s[i];\n  \
    \          if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                consonants++;\n            }\n        }\n    }\n\
    \    if (consonants == n) {\n        words.push_back(word);\n    }\n    return\
    \ words;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(count_consonants(word)\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> words;\n   \
    \ std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n \
    \       if(std::count_if(word.begin(), word.end(), [](char c) {\n            return\
    \ std::string(\"aeiou\").find(std::tolower(c)) == std::string::npos;\n       \
    \ }) == n) {\n            words.push_back(word);\n        }\n    }\n    return\
    \ words;", "    std::vector<std::string> words;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(char c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word;\n    std::istringstream ss(s);\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        int consonants = 0;\n        for(auto\
    \ c : word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u') {\n                consonants++;\n            }\n        }\n     \
    \   if(consonants == n) {\n            result.push_back(word);\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ ' ') {\n            if (count_consonants(word) == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (count_consonants(word) == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ ' ') {\n            if (count_consonants(word) == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (count_consonants(word) == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    int consonants = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (consonants == n) {\n   \
    \             words.push_back(word);\n            }\n            word = \"\";\n\
    \            consonants = 0;\n        } else {\n            word += s[i];\n  \
    \          if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                consonants++;\n            }\n        }\n    }\n\
    \    if (consonants == n) {\n        words.push_back(word);\n    }\n    return\
    \ words;", "    std::vector<std::string> words;\n    std::string word;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if\
    \ (word.size() == n) {\n                words.push_back(word);\n            }\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n            count = 0;\n        } else\
    \ {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o'\
    \ && s[i] != 'u') {\n                count++;\n            }\n            word\
    \ += s[i];\n        }\n    }\n    if (count == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ temp = \"\";\n    int count = 0;\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(s[i] == ' '){\n            if(count == n){\n                result.push_back(temp);\n\
    \            }\n            temp = \"\";\n            count = 0;\n        }\n\
    \        else{\n            if(s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u'){\n                count++;\n            }\n         \
    \   temp += s[i];\n        }\n    }\n    if(count == n){\n        result.push_back(temp);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        long count =\
    \ 0;\n        for(auto c : word) {\n            if(c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                count++;\n            }\n  \
    \      }\n        if(count == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> words;\n   \
    \ std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n \
    \       if(std::count_if(word.begin(), word.end(), [](char c) {\n            return\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        }) == n)\
    \ {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        int count = 0;\n        for(auto c :\
    \ word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                count++;\n            }\n        }\n        if(count\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "  std::vector<std::string> result;\n  std::stringstream ss(s);\n  std::string word;\n\
    \  while (ss >> word) {\n    if (std::count_if(word.begin(), word.end(), [](char\
    \ c) { return !std::isalpha(c); }) == n) {\n      result.push_back(word);\n  \
    \  }\n  }\n  return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            if (consonants == n) {\n        \
    \        result.push_back(word);\n            }\n            word = \"\";\n  \
    \          consonants = 0;\n        } else {\n            word += s[i];\n    \
    \        if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                consonants++;\n            }\n        }\n    }\n\
    \    if (consonants == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(int i = 0; i < word.size(); i++) {\n    \
    \        if(word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o'\
    \ && word[i] != 'u') {\n                count++;\n            }\n        }\n \
    \       if(count == n) {\n            result.push_back(word);\n        }\n   \
    \ }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        if(count_consonants(word)\
    \ == n) {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            words.push_back(word);\n     \
    \   }\n    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(count_consonants(word)\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            words.push_back(word);\n     \
    \   }\n    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word = \"\";\n    for (char c : s) {\n        if (c == ' ') {\n\
    \            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ c;\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return !std::isalpha(c);\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int count = 0;\n        for(auto c : word) {\n            if(c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() - std::count(word.begin(),\
    \ word.end(), 'a') - std::count(word.begin(), word.end(), 'e') - std::count(word.begin(),\
    \ word.end(), 'i') - std::count(word.begin(), word.end(), 'o') - std::count(word.begin(),\
    \ word.end(), 'u') == n) {\n                result.push_back(word);\n        \
    \    }\n            word = \"\";\n        } else {\n            word += s[i];\n\
    \        }\n    }\n    if (word.length() - std::count(word.begin(), word.end(),\
    \ 'a') - std::count(word.begin(), word.end(), 'e') - std::count(word.begin(),\
    \ word.end(), 'i') - std::count(word.begin(), word.end(), 'o') - std::count(word.begin(),\
    \ word.end(), 'u') == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> words;\n    std::string word;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if\
    \ (word.size() == n) {\n                words.push_back(word);\n            }\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n\
    \            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            words.push_back(word);\n\
    \        }\n    }\n    return words;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) { return !std::isalpha(c);\
    \ }) == n) {\n            result.push_back(word);\n        }\n    }\n    return\
    \ result;", "  std::vector<std::string> words;\n  std::string word;\n  std::stringstream\
    \ ss(s);\n  while (ss >> word) {\n    if (count_consonants(word) == n) {\n   \
    \   words.push_back(word);\n    }\n  }\n  return words;", "    std::vector<std::string>\
    \ result;\n    std::string word = \"\";\n    int consonants = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (consonants\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        } else {\n            word\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n   \
    \     }\n    }\n    if (consonants == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ ' ') {\n            if (word.length() == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.length() == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ ' ') {\n            if (word.length() == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.length() == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ ' ') {\n            if (word.length() == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.length() == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        long consonants\
    \ = 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n         \
    \   }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     result.push_back(word);\n            }\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            if (word.length() == n) {\n     \
    \           words.push_back(word);\n            }\n            word = \"\";\n\
    \        } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        int count = 0;\n        for(char c : word) {\n            if(c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if(count == n) {\n            res.push_back(word);\n\
    \        }\n    }\n    return res;", "    std::vector<std::string> result;\n \
    \   std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word = \"\";\n    int count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n\
    \            if (count == n) {\n                result.push_back(word);\n    \
    \        }\n            word = \"\";\n            count = 0;\n        } else {\n\
    \            word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n        \
    \    }\n        }\n    }\n    if (count == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        int consonants\
    \ = 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n         \
    \   }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string temp;\n    int count = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(s[i] == ' '){\n            if(count == n){\n             \
    \   result.push_back(temp);\n            }\n            temp = \"\";\n       \
    \     count = 0;\n        }\n        else{\n            if(s[i] != 'a' && s[i]\
    \ != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u'){\n                count++;\n\
    \            }\n            temp += s[i];\n        }\n    }\n    if(count == n){\n\
    \        result.push_back(temp);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        if(count_consonants(word) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     result.push_back(word);\n            }\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::istringstream iss(s);\n    while(iss\
    \ >> word) {\n        long consonants = 0;\n        for(char c : word) {\n   \
    \         if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n   \
    \             consonants++;\n            }\n        }\n        if(consonants ==\
    \ n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word = \"\";\n    for (char\
    \ c : s) {\n        if (c == ' ') {\n            if (word.size() == n) {\n   \
    \             result.push_back(word);\n            }\n            word = \"\"\
    ;\n        } else {\n            word += c;\n        }\n    }\n    if (word.size()\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    int consonants = 0;\n    for (char c : s)\
    \ {\n        if (c == ' ') {\n            if (consonants == n) {\n           \
    \     words.push_back(word);\n            }\n            word = \"\";\n      \
    \      consonants = 0;\n        } else {\n            word += c;\n           \
    \ if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n          \
    \      consonants++;\n            }\n        }\n    }\n    if (consonants == n)\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            if (word.length() == n) {\n     \
    \           words.push_back(word);\n            }\n            word = \"\";\n\
    \        } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    int consonants = 0;\n    for (char c : s)\
    \ {\n        if (c == ' ') {\n            if (consonants == n) {\n           \
    \     words.push_back(word);\n            }\n            word = \"\";\n      \
    \      consonants = 0;\n        } else {\n            word += c;\n           \
    \ if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n          \
    \      consonants++;\n            }\n        }\n    }\n    if (consonants == n)\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        if(std::count_if(word.begin(), word.end(), [](char c) {\n \
    \           return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            words.push_back(word);\n        }\n    }\n  \
    \  return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        long count =\
    \ 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                count++;\n            }\n  \
    \      }\n        if(count == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> result;\n  \
    \  std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        result.push_back(word);\n            }\n            word = \"\";\n  \
    \          count = 0;\n        } else {\n            word += s[i];\n         \
    \   if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u')\
    \ {\n                count++;\n            }\n        }\n    }\n    if (count\
    \ == n) {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::istringstream iss(s);\n    while(iss\
    \ >> word) {\n        if(count_consonants(word) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return !std::isalpha(c);\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word.length() == n) {\n           \
    \     words.push_back(word);\n            }\n            word = \"\";\n      \
    \  } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ == n) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >>\
    \ word) {\n        long count = 0;\n        for(char c : word) {\n           \
    \ if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n           \
    \     count++;\n            }\n        }\n        if(count == n) {\n         \
    \   result.push_back(word);\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >>\
    \ word) {\n        long consonants = 0;\n        for(char c : word) {\n      \
    \      if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n      \
    \          consonants++;\n            }\n        }\n        if(consonants == n)\
    \ {\n            words.push_back(word);\n        }\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(count_consonants(word) == n) {\n\
    \            result.push_back(word);\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        int count = 0;\n        for(auto c\
    \ : word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u') {\n                count++;\n            }\n        }\n        if(count\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(count_consonants(word) == n) {\n\
    \            result.push_back(word);\n        }\n    }\n    return result;", " \
    \   std::vector<std::string> result;\n    std::string word = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length()\
    \ == n) {\n                result.push_back(word);\n            }\n          \
    \  word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.length() == n) {\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int consonants = 0;\n        for(char c : word) {\n            if(c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n\
    \            }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::string word = \"\";\n    int consonants = 0;\n    for (int i = 0; i\
    \ < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n\
    \            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                consonants++;\n            }\n        } else {\n\
    \            if (consonants == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n            consonants = 0;\n      \
    \  }\n    }\n    if (consonants == n) {\n        result.push_back(word);\n   \
    \ }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(count_consonants(word)\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if (word.size()\
    \ == n) {\n                words.push_back(word);\n            }\n           \
    \ word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.size() == n) {\n        words.push_back(word);\n    }\n    return\
    \ words;", "\tstd::vector<std::string> words;\n\tstd::stringstream ss(s);\n\t\
    std::string word;\n\twhile (ss >> word) {\n\t\tif (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n\t\t\treturn std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \t\t}) == n) {\n\t\t\twords.push_back(word);\n\t\t}\n\t}\n\treturn words;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        if(std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result.push_back(word);\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> result;\n  \
    \  std::string word;\n    long count = 0;\n    for (auto c : s) {\n        if\
    \ (c == ' ') {\n            if (count == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n            count = 0;\n        } else\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n            word += c;\n       \
    \ }\n    }\n    if (count == n) {\n        result.push_back(word);\n    }\n  \
    \  return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(std::count_if(word.begin(), word.end(), [](char c) {\n           \
    \ return std::string(\"aeiou\").find(c) == std::string::npos;\n        }) == n)\
    \ {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(ss >> word) {\n        long count = 0;\n        for(char c\
    \ : word) {\n            if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u') {\n                count++;\n            }\n        }\n        if(count\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length()\
    \ == n) {\n                words.push_back(word);\n            }\n           \
    \ word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    if (word.length() == n) {\n        words.push_back(word);\n    }\n    return\
    \ words;", "    std::vector<std::string> result;\n    std::string word = \"\"\
    ;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n  \
    \          if (word.length() == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n        } else {\n            word +=\
    \ s[i];\n        }\n    }\n    if (word.length() == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n    \
    \    if (s[i] == ' ') {\n            if (count == n) {\n                result.push_back(word);\n\
    \            }\n            word = \"\";\n            count = 0;\n        } else\
    \ {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o'\
    \ && s[i] != 'u') {\n                count++;\n            }\n            word\
    \ += s[i];\n        }\n    }\n    if (count == n) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        long consonants\
    \ = 0;\n        for(char c : word) {\n            if(c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n         \
    \   }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        int consonants = 0;\n        for(char c : word) {\n            if(c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n\
    \            }\n        }\n        if(consonants == n) {\n            result.push_back(word);\n\
    \        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

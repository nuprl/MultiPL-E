name: HumanEval_117_select_words
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string s and a natural\
  \ number n, you have been tasked to implement \n// a function that returns a list\
  \ of all words from string s that contain exactly \n// n consonants, in order these\
  \ words appear in the string s.\n// If the string s is empty then the function should\
  \ return an empty list.\n// Note: you may assume the input string contains only\
  \ letters and spaces.\n// Examples:\nstd::string select_words(std::string s, long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = select_words;\n    assert(candidate((\"\
  Mary had a little lamb\"), (4)) == (std::string(std::string)\"little\"})));\n  \
  \  assert(candidate((\"Mary had a little lamb\"), (3)) == (std::string(std::string)\"\
  lamb\"})));\n    assert(candidate((\"simple white space\"), (2)) == (std::string()));\n\
  \    assert(candidate((\"Hello world\"), (4)) == (std::string(std::string)\"world\"\
  })));\n    assert(candidate((\"Uncle sam\"), (3)) == (std::string(std::string)\"\
  Uncle\"})));\n    assert(candidate((\"\"), (4)) == (std::string()));\n    assert(candidate((\"\
  a b c d e f\"), (1)) == (std::string(std::string)\"f\"})));\n}\n"
completions: ["    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return !std::string(\"aeiou\").find(c);\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += word + \" \";\n        \
    \    }\n            word = \"\";\n            count = 0;\n        } else {\n \
    \           word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n        \
    \    }\n        }\n    }\n    if (count == n) {\n        result += word;\n   \
    \ }\n    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == ' ') {\n            words.push_back(word);\n            word\
    \ = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n   \
    \ words.push_back(word);\n    std::string result = \"\";\n    for (int i = 0;\
    \ i < words.size(); i++) {\n        int count = 0;\n        for (int j = 0; j\
    \ < words[i].length(); j++) {\n            if (words[i][j] != 'a' && words[i][j]\
    \ != 'e' && words[i][j] != 'i' && words[i][j] != 'o' && words[i][j] != 'u') {\n\
    \                count++;\n            }\n        }\n        if (count == n) {\n\
    \            result += words[i] + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (count_consonants(word) == n) {\n      \
    \      result += word + \" \";\n        }\n    }\n    return result;", "    std::string\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (std::count_if(word.begin(), word.end(), [](char c) {\n\
    \            return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n    \
    \        word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n        } else {\n            if (count == n) {\n                result +=\
    \ word + \" \";\n            }\n            word = \"\";\n            count =\
    \ 0;\n        }\n    }\n    if (count == n) {\n        result += word + \" \"\
    ;\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::stringstream ss(s);\n\
    \    std::string word;\n    std::string result;\n    while (ss >> word) {\n  \
    \      int count = 0;\n        for (char c : word) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if (count == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count == n)\
    \ {\n                result += word + \" \";\n            }\n            word\
    \ = \"\";\n            count = 0;\n        } else {\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     count++;\n            }\n            word += s[i];\n        }\n    }\n \
    \   if (count == n) {\n        result += word;\n    }\n    return result;", " \
    \   std::string result = \"\";\n    std::string word = \"\";\n    int count =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n\
    \            word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n        \
    \    }\n        } else {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        }\n    }\n    if (count == n) {\n        result += word + \" \"\
    ;\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] != ' ') {\n            word += s[i];\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            consonants++;\n            }\n        } else {\n            if (consonants\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        }\n    }\n    if (consonants\
    \ == n) {\n        result += word + \" \";\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string temp = \"\";\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count\
    \ == n) {\n                result += temp + \" \";\n            }\n          \
    \  temp = \"\";\n            count = 0;\n        } else {\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            count++;\n            }\n            temp += s[i];\n        }\n \
    \   }\n    if (count == n) {\n        result += temp;\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string word = \"\";\n    int consonants = 0;\n    for (int i = 0; i\
    \ < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (consonants\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        } else {\n            word\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n   \
    \     }\n    }\n    if (consonants == n) {\n        result += word;\n    }\n \
    \   return result;", "    std::string result = \"\";\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word.size() == n)\
    \ {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n            word += s[i];\n        }\n    }\n    if (count == n) {\n    \
    \    result += word;\n    }\n    return result;", "    std::string result;\n \
    \   std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (word.size() == n) {\n            result += word + \" \";\n      \
    \  }\n    }\n    return result;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word.size()\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        int consonants\
    \ = 0;\n        for (char c : word) {\n            if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n       \
    \     }\n        }\n        if (consonants == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count == n)\
    \ {\n                result += word + \" \";\n            }\n            word\
    \ = \"\";\n            count = 0;\n        } else {\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     count++;\n            }\n            word += s[i];\n        }\n    }\n \
    \   if (count == n) {\n        result += word;\n    }\n    return result;", " \
    \   std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return !std::string(\"aeiou\").find(c);\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int consonants\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n\
    \            word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n   \
    \         }\n        } else {\n            if (consonants == n) {\n          \
    \      result += word + \" \";\n            }\n            word = \"\";\n    \
    \        consonants = 0;\n        }\n    }\n    if (consonants == n) {\n     \
    \   result += word + \" \";\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        int count = 0;\n        for (auto c : word) {\n        \
    \    if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n       \
    \         count++;\n            }\n        }\n        if (count == n) {\n    \
    \        result += word + \" \";\n        }\n    }\n    return result;", "   \
    \ std::string result = \"\";\n    std::string word = \"\";\n    int consonants\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n\
    \            word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n   \
    \         }\n        } else {\n            if (consonants == n) {\n          \
    \      result += word + \" \";\n            }\n            word = \"\";\n    \
    \        consonants = 0;\n        }\n    }\n    if (consonants == n) {\n     \
    \   result += word + \" \";\n    }\n    return result;", "    std::string result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "\tstd::string result = \"\";\n\tstd::string word = \"\";\n\tint count = 0;\n\t\
    for (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == ' ') {\n\t\t\tif (count\
    \ == n) {\n\t\t\t\tresult += word + \" \";\n\t\t\t}\n\t\t\tword = \"\";\n\t\t\t\
    count = 0;\n\t\t}\n\t\telse {\n\t\t\tif (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tword\
    \ += s[i];\n\t\t}\n\t}\n\tif (count == n) {\n\t\tresult += word;\n\t}\n\treturn\
    \ result;", "  std::string result = \"\";\n  std::string temp = \"\";\n  std::string\
    \ vowels = \"aeiou\";\n  int count = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == ' ') {\n      if (count == n) {\n        result += temp +\
    \ \" \";\n      }\n      temp = \"\";\n      count = 0;\n    } else {\n      temp\
    \ += s[i];\n      if (vowels.find(s[i]) == std::string::npos) {\n        count++;\n\
    \      }\n    }\n  }\n  if (count == n) {\n    result += temp;\n  }\n  return\
    \ result;", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    std::string vowels = \"aeiou\";\n    int count = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n           \
    \ if (count == n) {\n                result += temp + \" \";\n            }\n\
    \            temp = \"\";\n            count = 0;\n        } else {\n        \
    \    if (vowels.find(s[i]) == std::string::npos) {\n                count++;\n\
    \            }\n            temp += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        result += temp;\n    }\n    return result;", "    std::string\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (std::count_if(word.begin(), word.end(), [](char c) {\n\
    \            return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string res = \"\";\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            res += word + \" \"\
    ;\n        }\n    }\n    return res;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return !std::string(\"aeiou\").find(c);\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        long consonants = 0;\n\
    \        for (char c : word) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                consonants++;\n            }\n \
    \       }\n        if (consonants == n) {\n            result += word + \" \"\
    ;\n        }\n    }\n    return result;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n\
    \        words.push_back(word);\n    }\n    std::vector<std::string> result;\n\
    \    for (auto word : words) {\n        int count = 0;\n        for (auto c :\
    \ word) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                count++;\n            }\n        }\n        if (count\
    \ == n) {\n            result.push_back(word);\n        }\n    }\n    std::string\
    \ res = \"\";\n    for (auto word : result) {\n        res += word + \" \";\n\
    \    }\n    return res;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (count_consonants(word)\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (word.size() == n) {\n            result\
    \ += word + \" \";\n        }\n    }\n    return result;", "    std::string result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return !std::isalpha(c);\n        }) == n) {\n            result += word +\
    \ \" \";\n        }\n    }\n    return result;", "    std::string result;\n  \
    \  std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return !std::string(\"aeiou\").find(c);\n        }) == n) {\n            result\
    \ += word + \" \";\n        }\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    std::string word = \"\";\n    int count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n\
    \            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n        } else {\n     \
    \       if (count == n) {\n                result += word + \" \";\n         \
    \   }\n            word = \"\";\n            count = 0;\n        }\n    }\n  \
    \  if (count == n) {\n        result += word + \" \";\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word.size()\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string temp = \"\";\n    std::string vowels\
    \ = \"aeiou\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (vowels.find(s[i]) == std::string::npos) {\n            count++;\n\
    \        }\n        if (s[i] == ' ') {\n            if (count == n) {\n      \
    \          result += temp + \" \";\n            }\n            temp = \"\";\n\
    \            count = 0;\n        } else {\n            temp += s[i];\n       \
    \ }\n    }\n    if (count == n) {\n        result += temp;\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (count_consonants(word)\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += word + \" \";\n        \
    \    }\n            word = \"\";\n            count = 0;\n        } else {\n \
    \           word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n        \
    \    }\n        }\n    }\n    if (count == n) {\n        result += word;\n   \
    \ }\n    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        result += word + \" \";\n            }\n            word = \"\";\n  \
    \          count = 0;\n        } else {\n            word += s[i];\n         \
    \   if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u')\
    \ {\n                count++;\n            }\n        }\n    }\n    if (count\
    \ == n) {\n        result += word;\n    }\n    return result;", "    std::string\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (std::count_if(word.begin(), word.end(), [](char c) {\n\
    \            return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        int count = 0;\n   \
    \     for (char c : word) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                count++;\n            }\n      \
    \  }\n        if (count == n) {\n            result += word + \" \";\n       \
    \ }\n    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (auto c : s) {\n        if (c == ' ') {\n            if (word.size()\
    \ == n) {\n                words.push_back(word);\n            }\n           \
    \ word.clear();\n        } else {\n            word += c;\n        }\n    }\n\
    \    if (word.size() == n) {\n        words.push_back(word);\n    }\n    return\
    \ std::accumulate(words.begin(), words.end(), std::string(\"\"),\n        [](std::string&\
    \ a, std::string& b) {\n            return a.empty() ? b : a + \" \" + b;\n  \
    \      });", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int count;\n    while (ss >> word) {\n        count = 0;\n      \
    \  for (char c : word) {\n            if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                count++;\n            }\n        }\n\
    \        if (count == n) {\n            result += word + \" \";\n        }\n \
    \   }\n    return result;", "    std::string result = \"\";\n    std::string word\
    \ = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] != ' ') {\n            word += s[i];\n            if (s[i] !=\
    \ 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n       \
    \         count++;\n            }\n        } else {\n            if (count ==\
    \ n) {\n                result += word + \" \";\n            }\n            word\
    \ = \"\";\n            count = 0;\n        }\n    }\n    if (count == n) {\n \
    \       result += word + \" \";\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string word = \"\";\n    int consonants = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n           \
    \ word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' &&\
    \ s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n\
    \        } else {\n            if (consonants == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            consonants\
    \ = 0;\n        }\n    }\n    if (consonants == n) {\n        result += word +\
    \ \" \";\n    }\n    return result;", "    std::vector<std::string> words;\n \
    \   std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n   \
    \     if (s[i] == ' ') {\n            words.push_back(word);\n            word\
    \ = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n   \
    \ words.push_back(word);\n    std::string result = \"\";\n    for (int i = 0;\
    \ i < words.size(); i++) {\n        int count = 0;\n        for (int j = 0; j\
    \ < words[i].length(); j++) {\n            if (words[i][j] != 'a' && words[i][j]\
    \ != 'e' && words[i][j] != 'i' && words[i][j] != 'o' && words[i][j] != 'u') {\n\
    \                count++;\n            }\n        }\n        if (count == n) {\n\
    \            result += words[i] + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string vowels = \"aeiou\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            word += s[i];\n            if (vowels.find(s[i])\
    \ == std::string::npos) {\n                count++;\n            }\n        }\n\
    \    }\n    if (count == n) {\n        result += word;\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += word + \" \";\n        \
    \    }\n            word = \"\";\n            count = 0;\n        } else {\n \
    \           if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n            word += s[i];\n\
    \        }\n    }\n    if (count == n) {\n        result += word;\n    }\n   \
    \ return result;", "    std::string result;\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    while (ss >> word) {\n        long count = 0;\n    \
    \    for (char c : word) {\n            if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                count++;\n            }\n        }\n\
    \        if (count == n) {\n            result += word + \" \";\n        }\n \
    \   }\n    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return !std::string(\"aeiou\").find(c);\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        long consonants = 0;\n\
    \        for (char c : word) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                consonants++;\n            }\n \
    \       }\n        if (consonants == n) {\n            result += word + \" \"\
    ;\n        }\n    }\n    return result;", "    std::string result = \"\";\n  \
    \  std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (count_consonants(word) == n) {\n      \
    \      result += word + \" \";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    std::vector<std::string>\
    \ result;\n    for (auto word : words) {\n        int count = 0;\n        for\
    \ (auto c : word) {\n            if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') {\n                count++;\n            }\n        }\n   \
    \     if (count == n) {\n            result.push_back(word);\n        }\n    }\n\
    \    std::string res = \"\";\n    for (auto word : result) {\n        res += word\
    \ + \" \";\n    }\n    return res;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        result += word + \" \";\n            }\n            word = \"\";\n  \
    \          count = 0;\n        } else {\n            word += s[i];\n         \
    \   if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u')\
    \ {\n                count++;\n            }\n        }\n    }\n    if (count\
    \ == n) {\n        result += word;\n    }\n    return result;", "    std::string\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        int count = 0;\n        for (char c : word) {\n        \
    \    if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n       \
    \         count++;\n            }\n        }\n        if (count == n) {\n    \
    \        result += word + \" \";\n        }\n    }\n    return result;", "   \
    \ std::string result;\n    std::stringstream ss(s);\n    std::string word;\n \
    \   while (ss >> word) {\n        long consonants = 0;\n        for (char c :\
    \ word) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                consonants++;\n            }\n        }\n        if\
    \ (consonants == n) {\n            result += word + \" \";\n        }\n    }\n\
    \    return result;", "    std::string result = \"\";\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        long consonants\
    \ = 0;\n        for (char c : word) {\n            if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n       \
    \     }\n        }\n        if (consonants == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word)\
    \ {\n        int count = 0;\n        for (int i = 0; i < word.length(); i++) {\n\
    \            if (word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u') {\n                count++;\n            }\n     \
    \   }\n        if (count == n) {\n            result += word + \" \";\n      \
    \  }\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] != ' ') {\n            word += s[i];\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            consonants++;\n            }\n        } else {\n            if (consonants\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        }\n    }\n    if (consonants\
    \ == n) {\n        result += word + \" \";\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ')\
    \ {\n            if (word.size() == n) {\n                words.push_back(word);\n\
    \            }\n            word.clear();\n        } else {\n            word\
    \ += c;\n        }\n    }\n    if (word.size() == n) {\n        words.push_back(word);\n\
    \    }\n    return std::accumulate(words.begin(), words.end(), std::string(),\n\
    \        [](std::string a, std::string b) {\n            return a.empty() ? b\
    \ : a + \" \" + b;\n        });", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n            word += s[i];\n        }\n    }\n    if (count == n) {\n    \
    \    result += word;\n    }\n    return result;", "    std::string result;\n \
    \   std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return !std::string(\"aeiou\").find(c);\n        }) == n) {\n            result\
    \ += word + \" \";\n        }\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    std::string word = \"\";\n    int count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n\
    \            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n        } else {\n     \
    \       if (count == n) {\n                result += word + \" \";\n         \
    \   }\n            word = \"\";\n            count = 0;\n        }\n    }\n  \
    \  if (count == n) {\n        result += word + \" \";\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += temp + \" \";\n            }\n            temp = \"\";\n            count\
    \ = 0;\n        } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n            temp += s[i];\n        }\n    }\n    if (count == n) {\n    \
    \    result += temp;\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word)\
    \ {\n        int count = 0;\n        for (char c : word) {\n            if (c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if (count == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        int count = 0;\n        for (char c : word) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if (count == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count == n)\
    \ {\n                result += word + \" \";\n            }\n            word\
    \ = \"\";\n            count = 0;\n        } else {\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     count++;\n            }\n            word += s[i];\n        }\n    }\n \
    \   if (count == n) {\n        result += word;\n    }\n    return result;", " \
    \   std::string result = \"\";\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        int count =\
    \ 0;\n        for (char c : word) {\n            if (c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                count++;\n            }\n\
    \        }\n        if (count == n) {\n            result += word + \" \";\n \
    \       }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        long consonants\
    \ = 0;\n        for (auto c : word) {\n            if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                consonants++;\n       \
    \     }\n        }\n        if (consonants == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::string word = \"\";\n    int consonants = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n\
    \            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                consonants++;\n            }\n        } else {\n\
    \            if (consonants == n) {\n                result += word + \" \";\n\
    \            }\n            word = \"\";\n            consonants = 0;\n      \
    \  }\n    }\n    if (consonants == n) {\n        result += word + \" \";\n   \
    \ }\n    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    if (result.size() > 0) {\n        result.pop_back();\n\
    \    }\n    return result;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (count_consonants(word) == n) {\n      \
    \      result += word + \" \";\n        }\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string temp = \"\";\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count\
    \ == n) {\n                result += temp + \" \";\n            }\n          \
    \  temp = \"\";\n            count = 0;\n        } else {\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            count++;\n            }\n            temp += s[i];\n        }\n \
    \   }\n    if (count == n) {\n        result += temp;\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int consonants\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n\
    \            word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i]\
    \ != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n   \
    \         }\n        } else {\n            if (consonants == n) {\n          \
    \      result += word + \" \";\n            }\n            word = \"\";\n    \
    \        consonants = 0;\n        }\n    }\n    if (consonants == n) {\n     \
    \   result += word + \" \";\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (std::count_if(word.begin(), word.end(), [](char c) {\n\
    \            return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result = \"\";\n    std::string word = \"\
    \";\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++) {\n   \
    \     if (s[i] == ' ') {\n            if (consonants == n) {\n               \
    \ result += word + \" \";\n            }\n            word = \"\";\n         \
    \   consonants = 0;\n        } else {\n            word += s[i];\n           \
    \ if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u')\
    \ {\n                consonants++;\n            }\n        }\n    }\n    if (consonants\
    \ == n) {\n        result += word;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string word = \"\";\n    int consonants = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n           \
    \ if (consonants == n) {\n                result += word + \" \";\n          \
    \  }\n            word = \"\";\n            consonants = 0;\n        } else {\n\
    \            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                consonants++;\n            }\n            word +=\
    \ s[i];\n        }\n    }\n    if (consonants == n) {\n        result += word;\n\
    \    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            word += s[i];\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     count++;\n            }\n        }\n    }\n    if (count == n) {\n     \
    \   result += word;\n    }\n    return result;", "    std::string result = \"\"\
    ;\n    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        result += word + \" \";\n            }\n            word = \"\";\n  \
    \          count = 0;\n        } else {\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n\
    \            }\n            word += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        result += word;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (std::count_if(word.begin(), word.end(), [](char\
    \ c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u';\n        }) == n) {\n            result += word + \" \";\n        }\n \
    \   }\n    return result;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string temp = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (count == n) {\n        \
    \        result += temp + \" \";\n            }\n            temp = \"\";\n  \
    \          count = 0;\n        } else {\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n\
    \            }\n            temp += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        result += temp;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string temp = \"\";\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count\
    \ == n) {\n                result += temp + \" \";\n            }\n          \
    \  temp = \"\";\n            count = 0;\n        } else {\n            if (s[i]\
    \ != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n    \
    \            count++;\n            }\n            temp += s[i];\n        }\n \
    \   }\n    if (count == n) {\n        result += temp;\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string temp = \"\";\n    std::string vowels\
    \ = \"aeiou\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += temp + \" \";\n            }\n            temp = \"\";\n            count\
    \ = 0;\n        } else {\n            if (vowels.find(s[i]) == std::string::npos)\
    \ {\n                count++;\n            }\n            temp += s[i];\n    \
    \    }\n    }\n    if (count == n) {\n        result += temp;\n    }\n    return\
    \ result;", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        int count = 0;\n        for (auto c\
    \ : word) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u') {\n                count++;\n            }\n        }\n        if (count\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += word + \" \";\n        \
    \    }\n            word = \"\";\n            count = 0;\n        } else {\n \
    \           if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n            word += s[i];\n\
    \        }\n    }\n    if (count == n) {\n        result += word;\n    }\n   \
    \ return result;", "    std::string result;\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (count_consonants(word)\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "\tstd::string result = \"\";\n\tint count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == ' ') {\n\t\t\tif (count == n) {\n\t\t\t\tresult += s.substr(0,\
    \ i);\n\t\t\t\tresult += \" \";\n\t\t\t}\n\t\t\ts = s.substr(i + 1);\n\t\t\ti\
    \ = 0;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count\
    \ == n) {\n\t\tresult += s;\n\t}\n\treturn result;", "    std::string result =\
    \ \"\";\n    std::string word = \"\";\n    int consonants = 0;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word +=\
    \ s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] !=\
    \ 'o' && s[i] != 'u') {\n                consonants++;\n            }\n      \
    \  } else {\n            if (consonants == n) {\n                result += word\
    \ + \" \";\n            }\n            word = \"\";\n            consonants =\
    \ 0;\n        }\n    }\n    if (consonants == n) {\n        result += word + \"\
    \ \";\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n            word += s[i];\n        }\n    }\n    if (count == n) {\n    \
    \    result += word;\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::string temp = \"\";\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (temp.length() == n) {\n         \
    \       result += temp + \" \";\n            }\n            temp = \"\";\n   \
    \     } else {\n            temp += s[i];\n        }\n    }\n    if (temp.length()\
    \ == n) {\n        result += temp;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string temp = \"\";\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            temp\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                count++;\n            }\n        }\
    \ else {\n            if (count == n) {\n                result += temp + \" \"\
    ;\n            }\n            temp = \"\";\n            count = 0;\n        }\n\
    \    }\n    if (count == n) {\n        result += temp + \" \";\n    }\n    return\
    \ result;", "    std::string res;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            res += word + \" \";\n        }\n    }\n    if\
    \ (!res.empty()) {\n        res.pop_back();\n    }\n    return res;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    std::string result;\n  \
    \  for (int i = 0; i < words.size(); i++) {\n        int count = 0;\n        for\
    \ (int j = 0; j < words[i].size(); j++) {\n            if (words[i][j] != 'a'\
    \ && words[i][j] != 'e' && words[i][j] != 'i' && words[i][j] != 'o' && words[i][j]\
    \ != 'u') {\n                count++;\n            }\n        }\n        if (count\
    \ == n) {\n            result += words[i] + \" \";\n        }\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    std::string word = \"\";\n  \
    \  int consonants = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] != ' ') {\n            word += s[i];\n            if (s[i] != 'a' && s[i]\
    \ != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n\
    \            }\n        } else {\n            if (consonants == n) {\n       \
    \         result += word + \" \";\n            }\n            word = \"\";\n \
    \           consonants = 0;\n        }\n    }\n    if (consonants == n) {\n  \
    \      result += word + \" \";\n    }\n    return result;", "    std::string result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += word + \" \";\n        \
    \    }\n            word = \"\";\n            count = 0;\n        } else {\n \
    \           if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n            word += s[i];\n\
    \        }\n    }\n    if (count == n) {\n        result += word;\n    }\n   \
    \ return result;", "    std::string result;\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        int count =\
    \ 0;\n        for (char c : word) {\n            if (c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                count++;\n            }\n\
    \        }\n        if (count == n) {\n            result += word + \" \";\n \
    \       }\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n            word += s[i];\n        }\n    }\n    if (count == n) {\n    \
    \    result += word;\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    std::string result;\n  \
    \  for (int i = 0; i < words.size(); i++) {\n        int count = 0;\n        for\
    \ (int j = 0; j < words[i].size(); j++) {\n            if (words[i][j] != 'a'\
    \ && words[i][j] != 'e' && words[i][j] != 'i' && words[i][j] != 'o' && words[i][j]\
    \ != 'u') {\n                count++;\n            }\n        }\n        if (count\
    \ == n) {\n            result += words[i] + \" \";\n        }\n    }\n    return\
    \ result;", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return std::string(\"aeiou\").find(c) == std::string::npos;\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (count_consonants(word)\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return std::string(\"aeiou\").find(c)\
    \ == std::string::npos;\n        }) == n) {\n            result += word + \" \"\
    ;\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return !std::isalpha(c);\n        }) ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    if (result.size() > 0) {\n        result.pop_back();\n\
    \    }\n    return result;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) { return !std::isalpha(c); }) == n) {\n            result\
    \ += word + \" \";\n        }\n    }\n    return result;", "    std::string result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return !std::isalpha(c);\n        }) == n) {\n            result += word +\
    \ \" \";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            words.push_back(word);\n        \
    \    word = \"\";\n        } else {\n            word += s[i];\n        }\n  \
    \  }\n    words.push_back(word);\n    std::string result = \"\";\n    for (int\
    \ i = 0; i < words.size(); i++) {\n        int count = 0;\n        for (int j\
    \ = 0; j < words[i].length(); j++) {\n            if (words[i][j] != 'a' && words[i][j]\
    \ != 'e' && words[i][j] != 'i' && words[i][j] != 'o' && words[i][j] != 'u') {\n\
    \                count++;\n            }\n        }\n        if (count == n) {\n\
    \            result += words[i] + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n    \
    \        word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n        } else {\n            if (count == n) {\n                result +=\
    \ word + \" \";\n            }\n            word = \"\";\n            count =\
    \ 0;\n        }\n    }\n    if (count == n) {\n        result += word + \" \"\
    ;\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n            if\
    \ (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n\
    \                count++;\n            }\n        } else {\n            if (count\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            count = 0;\n        }\n    }\n    if (count == n)\
    \ {\n        result += word + \" \";\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (count_consonants(word) == n) {\n            result\
    \ += word + \" \";\n        }\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    std::string word = \"\";\n    int count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            count = 0;\n        } else {\n            word +=\
    \ s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] !=\
    \ 'o' && s[i] != 'u') {\n                count++;\n            }\n        }\n\
    \    }\n    if (count == n) {\n        result += word;\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int consonants\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n\
    \            if (consonants == n) {\n                result += word + \" \";\n\
    \            }\n            word = \"\";\n            consonants = 0;\n      \
    \  } else {\n            word += s[i];\n            if (s[i] != 'a' && s[i] !=\
    \ 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n\
    \            }\n        }\n    }\n    if (consonants == n) {\n        result +=\
    \ word;\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (count_consonants(word) == n) {\n            result += word + \" \"\
    ;\n        }\n    }\n    return result;", "    std::string result = \"\";\n  \
    \  std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string res = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            res += word + \" \";\n        }\n    }\n    return res;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (std::count_if(word.begin(), word.end(), [](char c) {\n          \
    \  return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n        })\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word.length()\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::vector<std::string> words;\n   \
    \ std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n\
    \        words.push_back(word);\n    }\n    std::string result;\n    for (auto\
    \ word : words) {\n        int count = 0;\n        for (auto c : word) {\n   \
    \         if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n  \
    \              count++;\n            }\n        }\n        if (count == n) {\n\
    \            result += word + \" \";\n        }\n    }\n    return result;", " \
    \   std::string result;\n    std::string temp;\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            temp\
    \ += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i]\
    \ != 'o' && s[i] != 'u') {\n                count++;\n            }\n        }\
    \ else {\n            if (count == n) {\n                result += temp + ' ';\n\
    \            }\n            temp = \"\";\n            count = 0;\n        }\n\
    \    }\n    if (count == n) {\n        result += temp + ' ';\n    }\n    return\
    \ result;", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (count_consonants(word) == n) {\n\
    \            result += word + \" \";\n        }\n    }\n    return result;", " \
    \   std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (int i = 0; i <\
    \ word.size(); i++) {\n            if (word[i] != 'a' && word[i] != 'e' && word[i]\
    \ != 'i' && word[i] != 'o' && word[i] != 'u') {\n                count++;\n  \
    \          }\n        }\n        if (count == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word)\
    \ {\n        int count = 0;\n        for (char c : word) {\n            if (c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count++;\n\
    \            }\n        }\n        if (count == n) {\n            result += word\
    \ + \" \";\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (std::count_if(word.begin(), word.end(), [](char c) {\n      \
    \      return !(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');\n \
    \       }) == n) {\n            result += word + \" \";\n        }\n    }\n  \
    \  return result;", "    std::string result;\n    std::stringstream ss(s);\n \
    \   std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return !std::string(\"aeiou\").count(c);\n\
    \        }) == n) {\n            result += word + \" \";\n        }\n    }\n \
    \   return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string res = \"\";\n \
    \   std::string temp = \"\";\n    std::string vowels = \"aeiou\";\n    int count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n\
    \            if (count == n) {\n                res += temp + \" \";\n       \
    \     }\n            temp = \"\";\n            count = 0;\n        } else {\n\
    \            if (vowels.find(s[i]) == std::string::npos) {\n                count++;\n\
    \            }\n            temp += s[i];\n        }\n    }\n    if (count ==\
    \ n) {\n        res += temp;\n    }\n    return res;", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    std::string result;\n    while (ss >> word)\
    \ {\n        if (std::count_if(word.begin(), word.end(), [](char c) {\n      \
    \      return c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u';\n    \
    \    }) == n) {\n            result += word + \" \";\n        }\n    }\n    return\
    \ result;", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result = \"\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string vowels = \"aeiou\"\
    ;\n    std::string result = \"\";\n    std::string word = \"\";\n    int consonants\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n\
    \            if (consonants == n) {\n                result += word + \" \";\n\
    \            }\n            word = \"\";\n            consonants = 0;\n      \
    \  } else {\n            word += s[i];\n            if (vowels.find(s[i]) == std::string::npos)\
    \ {\n                consonants++;\n            }\n        }\n    }\n    if (consonants\
    \ == n) {\n        result += word;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string word = \"\";\n    int consonants = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n           \
    \ word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' &&\
    \ s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n\
    \        } else {\n            if (consonants == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            consonants\
    \ = 0;\n        }\n    }\n    if (consonants == n) {\n        result += word +\
    \ \" \";\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string temp = \"\";\n    std::string vowels = \"aeiou\";\n    int count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n\
    \            if (count == n) {\n                result += temp + \" \";\n    \
    \        }\n            temp = \"\";\n            count = 0;\n        } else {\n\
    \            temp += s[i];\n            if (vowels.find(s[i]) == std::string::npos)\
    \ {\n                count++;\n            }\n        }\n    }\n    if (count\
    \ == n) {\n        result += temp;\n    }\n    return result;", "    std::string\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (count_consonants(word) == n) {\n            result +=\
    \ word + \" \";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            words.push_back(word);\n        \
    \    word = \"\";\n        } else {\n            word += s[i];\n        }\n  \
    \  }\n    words.push_back(word);\n    std::string result = \"\";\n    for (int\
    \ i = 0; i < words.size(); i++) {\n        int consonants = 0;\n        for (int\
    \ j = 0; j < words[i].length(); j++) {\n            if (words[i][j] != 'a' &&\
    \ words[i][j] != 'e' && words[i][j] != 'i' && words[i][j] != 'o' && words[i][j]\
    \ != 'u') {\n                consonants++;\n            }\n        }\n       \
    \ if (consonants == n) {\n            result += words[i] + \" \";\n        }\n\
    \    }\n    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        int count = 0;\n   \
    \     for (auto c : word) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                count++;\n            }\n      \
    \  }\n        if (count == n) {\n            result += word + \" \";\n       \
    \ }\n    }\n    return result;", "  std::vector<std::string> words;\n  std::stringstream\
    \ ss(s);\n  std::string word;\n  while (ss >> word) {\n    words.push_back(word);\n\
    \  }\n  std::vector<std::string> result;\n  for (int i = 0; i < words.size();\
    \ i++) {\n    int count = 0;\n    for (int j = 0; j < words[i].size(); j++) {\n\
    \      if (words[i][j] != 'a' && words[i][j] != 'e' && words[i][j] != 'i' && words[i][j]\
    \ != 'o' && words[i][j] != 'u') {\n        count++;\n      }\n    }\n    if (count\
    \ == n) {\n      result.push_back(words[i]);\n    }\n  }\n  std::string res =\
    \ \"\";\n  for (int i = 0; i < result.size(); i++) {\n    res += result[i];\n\
    \    if (i != result.size() - 1) {\n      res += \" \";\n    }\n  }\n  return\
    \ res;", "    std::string result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(), word.end(),\
    \ [](char c) {\n            return c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u';\n        }) == n) {\n            result += word + \" \";\n    \
    \    }\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] != ' ') {\n            word += s[i];\n            if (s[i] !=\
    \ 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n       \
    \         count++;\n            }\n        } else {\n            if (count ==\
    \ n) {\n                result += word + \" \";\n            }\n            word\
    \ = \"\";\n            count = 0;\n        }\n    }\n    if (count == n) {\n \
    \       result += word + \" \";\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string word = \"\";\n    int consonants = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n           \
    \ word += s[i];\n            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' &&\
    \ s[i] != 'o' && s[i] != 'u') {\n                consonants++;\n            }\n\
    \        } else {\n            if (consonants == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            consonants\
    \ = 0;\n        }\n    }\n    if (consonants == n) {\n        result += word +\
    \ \" \";\n    }\n    return result;", "    std::string result = \"\";\n    std::string\
    \ word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == ' ') {\n            if (count == n) {\n                result\
    \ += word + \" \";\n            }\n            word = \"\";\n            count\
    \ = 0;\n        } else {\n            if (s[i] != 'a' && s[i] != 'e' && s[i] !=\
    \ 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n           \
    \ }\n            word += s[i];\n        }\n    }\n    if (count == n) {\n    \
    \    result += word;\n    }\n    return result;", "    std::string result = \"\
    \";\n    std::string temp = \"\";\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count == n)\
    \ {\n                result += temp + \" \";\n            }\n            temp\
    \ = \"\";\n            count = 0;\n        } else {\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     count++;\n            }\n            temp += s[i];\n        }\n    }\n \
    \   if (count == n) {\n        result += temp;\n    }\n    return result;", " \
    \   std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (auto c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string word = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += word + \" \";\n        \
    \    }\n            word = \"\";\n            count = 0;\n        } else {\n \
    \           if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n            word += s[i];\n\
    \        }\n    }\n    if (count == n) {\n        result += word;\n    }\n   \
    \ return result;", "    std::string result;\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    while (ss >> word) {\n        if (count_consonants(word)\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int count = 0;\n        for (char c : word)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string temp = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += temp + \" \";\n        \
    \    }\n            temp = \"\";\n            count = 0;\n        } else {\n \
    \           if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n            temp += s[i];\n\
    \        }\n    }\n    if (count == n) {\n        result += temp;\n    }\n   \
    \ return result;", "    std::string result = \"\";\n    std::string word = \"\"\
    ;\n    int consonants = 0;\n    for (int i = 0; i < s.length(); i++) {\n     \
    \   if (s[i] != ' ') {\n            word += s[i];\n            if (s[i] != 'a'\
    \ && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n           \
    \     consonants++;\n            }\n        } else {\n            if (consonants\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            consonants = 0;\n        }\n    }\n    if (consonants\
    \ == n) {\n        result += word + \" \";\n    }\n    return result;", "    std::string\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        int consonants = 0;\n        for (char c : word) {\n   \
    \         if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n  \
    \              consonants++;\n            }\n        }\n        if (consonants\
    \ == n) {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::string temp = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        if (count == n) {\n                result += temp + \" \";\n        \
    \    }\n            temp = \"\";\n            count = 0;\n        } else {\n \
    \           if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n            temp += s[i];\n\
    \        }\n    }\n    if (count == n) {\n        result += temp;\n    }\n   \
    \ return result;", "    std::string result = \"\";\n    std::string temp = \"\"\
    ;\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] == ' ') {\n            if (count == n) {\n                result += temp\
    \ + \" \";\n            }\n            temp = \"\";\n            count = 0;\n\
    \        } else {\n            temp += s[i];\n            if (s[i] != 'a' && s[i]\
    \ != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n                count++;\n\
    \            }\n        }\n    }\n    if (count == n) {\n        result += temp;\n\
    \    }\n    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        int consonants = 0;\n\
    \        for (char c : word) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                consonants++;\n            }\n \
    \       }\n        if (consonants == n) {\n            result += word + \" \"\
    ;\n        }\n    }\n    return result;", "\tstd::string result = \"\";\n\tstd::string\
    \ word = \"\";\n\tint count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\
    \tif (s[i] != ' ') {\n\t\t\tword += s[i];\n\t\t\tif (s[i] != 'a' && s[i] != 'e'\
    \ && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n\t\t\t\tcount++;\n\t\t\t}\n\
    \t\t}\n\t\telse {\n\t\t\tif (count == n) {\n\t\t\t\tresult += word + \" \";\n\t\
    \t\t}\n\t\t\tword = \"\";\n\t\t\tcount = 0;\n\t\t}\n\t}\n\tif (count == n) {\n\
    \t\tresult += word + \" \";\n\t}\n\treturn result;", "    std::string result =\
    \ \"\";\n    std::string word = \"\";\n    int count = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (count ==\
    \ n) {\n                result += word + \" \";\n            }\n            word\
    \ = \"\";\n            count = 0;\n        } else {\n            word += s[i];\n\
    \            if (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u') {\n                count++;\n            }\n        }\n    }\n    if\
    \ (count == n) {\n        result += word;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (std::count_if(word.begin(), word.end(), [](char\
    \ c) {\n            return !std::string(\"aeiou\").find(c);\n        }) == n)\
    \ {\n            result += word + \" \";\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        int consonants = 0;\n        for (char c :\
    \ word) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                consonants++;\n            }\n        }\n        if\
    \ (consonants == n) {\n            result += word + \" \";\n        }\n    }\n\
    \    return result;", "    std::string result;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (std::count_if(word.begin(),\
    \ word.end(), [](char c) {\n            return c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u';\n        }) == n) {\n            result += word + \"\
    \ \";\n        }\n    }\n    return result;", "    std::string result = \"\";\n\
    \    std::string word = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n            if\
    \ (s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u') {\n\
    \                count++;\n            }\n        } else {\n            if (count\
    \ == n) {\n                result += word + \" \";\n            }\n          \
    \  word = \"\";\n            count = 0;\n        }\n    }\n    if (count == n)\
    \ {\n        result += word + \" \";\n    }\n    return result;"]
stop_tokens:
- "\n}"

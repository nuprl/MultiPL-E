name: HumanEval_13_greatest_common_divisor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
  \ divisor of two integers a and b\nlong greatest_common_divisor(long a, long b)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
  \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
  \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
completions: ["    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a < 0) a = -a;\n    if\
    \ (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && (b % 2 == 1)) return greatest_common_divisor(a / 2, b);\n    if\
    \ ((a % 2 == 1) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n \
    \   return greatest_common_divisor(b, abs(a - b));", "    if (a == 0) return b;\n\
    \    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a < 0) a\
    \ = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return\
    \ a;\n    if (a > b) return greatest_common_divisor(b, a);\n    return greatest_common_divisor(b\
    \ % a, a);", "    assert(a >= 0 && b >= 0);\n    if (a == 0) return b;\n    if\
    \ (b == 0) return a;\n    if (a > b) return greatest_common_divisor(a % b, b);\n\
    \    else return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }", "    assert(a >= 0 &&\
    \ b >= 0);\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n  \
    \      a = t;\n    }\n    return a;", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a == b) {\n     \
    \   return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if\
    \ (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0 && (b\
    \ & 1) == 0) return 2 * greatest_common_divisor(a >> 1, b >> 1);\n    if ((a &\
    \ 1) == 0 && (b & 1) != 0) return greatest_common_divisor(a >> 1, b);\n    if\
    \ ((a & 1) != 0 && (b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n\
    \    return greatest_common_divisor(abs(a - b), std::min(a, b));", "    // TODO:\
    \ implement this function\n    if(a==0)\n        return b;\n    if(b==0)\n   \
    \     return a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return\
    \ greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);", "    if (a == 0) {\n    \
    \    return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  } else {\n        return greatest_common_divisor(a, b % a);\n    }", "    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }", "  \
    \  if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n\
    \    if ((a % 2 == 0) && (b % 2 == 0)) return 2 * greatest_common_divisor(a /\
    \ 2, b / 2);\n    if ((a % 2 == 0) && (b % 2 == 1)) return greatest_common_divisor(a\
    \ / 2, b);\n    if ((a % 2 == 1) && (b % 2 == 0)) return greatest_common_divisor(a,\
    \ b / 2);\n    return greatest_common_divisor(b, abs(a - b));", "    if (a ==\
    \ 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a\
    \ > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    } else {\n        return greatest_common_divisor(a,\
    \ b % a);\n    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n   \
    \ if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a - b,\
    \ b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    // TODO: implement\
    \ this function\n    if(a==0)\n        return b;\n    if(b==0)\n        return\
    \ a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n\
    \    return greatest_common_divisor(a,b-a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ % b, b);\n    else return greatest_common_divisor(a, b % a);", "    assert(a\
    \ >= 0 && b >= 0);\n    if (a == 0) return b;\n    if (b == 0) return a;\n   \
    \ if (a < b) return greatest_common_divisor(b, a);\n    if (a % b == 0) return\
    \ b;\n    return greatest_common_divisor(b, a % b);", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a > b) return greatest_common_divisor(a % b,\
    \ b);\n    else return greatest_common_divisor(a, b % a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n  \
    \      return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n\
    \    if (a % 2 == 0 && b % 2 == 0) return 2 * greatest_common_divisor(a / 2, b\
    \ / 2);\n    if (a % 2 == 0) return greatest_common_divisor(a / 2, b);\n    if\
    \ (b % 2 == 0) return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(b,\
    \ abs(a - b));", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n\
    \    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    assert(a >= 0\
    \ && b >= 0);\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a\
    \ > b) return greatest_common_divisor(a % b, b);\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    assert(a >= 0 && b >= 0);\n    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n  \
    \      return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    long c;\n   \
    \ while (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n\
    \    return b;", "    // TODO: Implement this function\n    if(a==0)\n       \
    \ return b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return a;\n\
    \    if(a>b)\n        return greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }", "  \
    \  if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n  \
    \      return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0 || b == 0) {\n        return 0;\n    }\n    a = std::abs(a);\n\
    \    b = std::abs(b);\n    while (a != b) {\n        if (a > b) {\n          \
    \  a = a - b;\n        } else {\n            b = b - a;\n        }\n    }\n  \
    \  return a;", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a\
    \ == b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a, b-a);",
  "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ % b, b);\n    else return greatest_common_divisor(a, b % a);", "    if (a ==\
    \ 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a\
    \ > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a & 1) == 0 && (b &\
    \ 1) == 0) return 2 * greatest_common_divisor(a >> 1, b >> 1);\n    if ((a & 1)\
    \ == 0 && (b & 1) != 0) return greatest_common_divisor(a >> 1, b);\n    if ((a\
    \ & 1) != 0 && (b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if\
    \ (a > b) return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);", "    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    assert(a >= 0 && b >= 0);\n    if (a == 0) return b;\n    if (b\
    \ == 0) return a;\n    if (a > b) return greatest_common_divisor(a % b, b);\n\
    \    return greatest_common_divisor(a, b % a);", "    if (a == 0) return b;\n\
    \    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    // TODO: Implement this function\n    if(a==0)\n        return\
    \ b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return a;\n    if(a>b)\n\
    \        return greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }", "  \
    \  if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    assert(a >= 0 && b >= 0);\n    if (a == 0) return b;\n    if (b\
    \ == 0) return a;\n    if (a > b) return greatest_common_divisor(a % b, b);\n\
    \    else return greatest_common_divisor(a, b % a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a < 0) a\
    \ = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return\
    \ a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    long c;\n   \
    \ while (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n\
    \    return b;", "  assert(a >= 0 && b >= 0);\n  if (a == 0) {\n    return b;\n\
    \  }\n  if (b == 0) {\n    return a;\n  }\n  if (a >= b) {\n    return greatest_common_divisor(a\
    \ % b, b);\n  }\n  return greatest_common_divisor(a, b % a);", "\tassert(a >=\
    \ 0 && b >= 0);\n\tif (a == 0) {\n\t\treturn b;\n\t}\n\tif (b == 0) {\n\t\treturn\
    \ a;\n\t}\n\tif (a > b) {\n\t\treturn greatest_common_divisor(a % b, b);\n\t}\n\
    \telse {\n\t\treturn greatest_common_divisor(a, b % a);\n\t}", "    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    assert(a >= 0 && b >= 0);\n    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n \
    \       return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  } else {\n        return greatest_common_divisor(a, b % a);\n    }", "    //\
    \ TODO: implement this function\n    if(a==0)\n        return b;\n    if(b==0)\n\
    \        return a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return\
    \ greatest_common_divisor(a-b,b);\n    else\n        return greatest_common_divisor(a,b-a);",
  "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a < 0) return greatest_common_divisor(-a,\
    \ b);\n    if (b < 0) return greatest_common_divisor(a, -b);\n    if (a > b) return\
    \ greatest_common_divisor(b, a);\n    return greatest_common_divisor(b % a, a);",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }", "  \
    \  if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }", "    if (a < 0) a\
    \ = -a;\n    if (b < 0) b = -b;\n    if (a < b) std::swap(a, b);\n    while (b\
    \ != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  return a;", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a\
    \ == b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a == b) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if\
    \ (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    // TODO: Implement this function\n\
    \    if(a==0)\n        return b;\n    if(b==0)\n        return a;\n    if(a==b)\n\
    \        return a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n\
    \    return greatest_common_divisor(a,b-a);", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a > b) return greatest_common_divisor(a % b,\
    \ b);\n    else return greatest_common_divisor(a, b % a);", "    if (a < 0) a\
    \ = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return\
    \ a;\n    if (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a\
    \ & 1) == 0) {\n        if ((b & 1) == 0) return 2 * greatest_common_divisor(a\
    \ >> 1, b >> 1);\n        else return greatest_common_divisor(a >> 1, b);\n  \
    \  }\n    if ((b & 1) == 0) return greatest_common_divisor(a, b >> 1);\n    if\
    \ (a > b) return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);", "    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a > b)\
    \ return greatest_common_divisor(a % b, b);\n    else return greatest_common_divisor(a,\
    \ b % a);", "    long c;\n    while (a != 0) {\n        c = a;\n        a = b\
    \ % a;\n        b = c;\n    }\n    return b;", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    // TODO: implement\
    \ this function\n    if(a==0)\n        return b;\n    if(b==0)\n        return\
    \ a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n\
    \    return greatest_common_divisor(a,b-a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) return b;\n   \
    \ if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    long c;\n   \
    \ while (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n\
    \    return b;", "    if (a == 0 || b == 0) {\n        return 0;\n    }\n    if\
    \ (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  } else {\n        return greatest_common_divisor(a, b % a);\n    }", "    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }", "  \
    \  if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a > b)\
    \ return greatest_common_divisor(a % b, b);\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    // TODO: Implement this function\n    long gcd = 1;\n    long min\
    \ = std::min(a, b);\n    for (long i = 1; i <= min; i++) {\n        if (a % i\
    \ == 0 && b % i == 0) {\n            gcd = i;\n        }\n    }\n    return gcd;",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a > b) return greatest_common_divisor(a % b, b);\n   \
    \ return greatest_common_divisor(a, b % a);", "    if (a < 0) a = -a;\n    if\
    \ (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a > b) return greatest_common_divisor(b, a);\n    return greatest_common_divisor(b\
    \ % a, a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a > b) return greatest_common_divisor(b,\
    \ a);\n    return greatest_common_divisor(b % a, a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n  \
    \      return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    } else {\n        return greatest_common_divisor(a,\
    \ b % a);\n    }", "    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0) {\n        return b;\n    }\n    return greatest_common_divisor(b\
    \ % a, a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    // TODO: implement this function\n    if(a==0)\n        return b;\n\
    \    return greatest_common_divisor(b%a,a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a == b) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  } else {\n        return greatest_common_divisor(a, b % a);\n    }", "    if\
    \ (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n \
    \   if (a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);", "    // TODO: Implement this function\n    if(a==0)\n        return\
    \ b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return a;\n    if(a>b)\n\
    \        return greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n\
    \    if (a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n  \
    \      return a;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a ==\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n   \
    \ return greatest_common_divisor(a, b - a);"]
stop_tokens:
- "\n}"

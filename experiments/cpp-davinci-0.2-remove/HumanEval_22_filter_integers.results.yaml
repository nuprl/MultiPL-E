language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& i : values) {\n    \
    \    try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            // do nothing\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4fm7v_kx: /tmp/tmp4fm7v_kx.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfzwgix0x: /tmp/tmpfzwgix0x.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& i : values) {\n    \
    \    try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpak9gnwih: /tmp/tmpak9gnwih.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyh56_yl8: /tmp/tmpyh56_yl8.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpoach_p5m: /tmp/tmpoach_p5m.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph361ykan: /tmp/tmph361ykan.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwytebn01: /tmp/tmpwytebn01.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyh56_yl8: /tmp/tmpyh56_yl8.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq11_g6xj: /tmp/tmpq11_g6xj.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &i:values){\n       \
    \ try{\n            result.push_back(std::any_cast<long>(i));\n        }\n   \
    \     catch(std::bad_any_cast &e){\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmprdkzq6sc: /tmp/tmprdkzq6sc.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Ignore non-integers\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0xro0oxy: /tmp/tmp0xro0oxy.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto it = values.begin();\
    \ it != values.end(); it++) {\n        try {\n            result.push_back(std::any_cast<long>(*it));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7qv2flpb: /tmp/tmp7qv2flpb.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(std::any_cast<long>(&value)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp68o7z4n5: /tmp/tmp68o7z4n5.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx00re1sg: /tmp/tmpx00re1sg.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast\
    \ &e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmphpe273q_: /tmp/tmphpe273q_.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3syclld7: /tmp/tmp3syclld7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n\tstd::vector<long> result;\n\tfor (auto value : values) {\n\t\t\
    if (value.type() == typeid(long)) {\n\t\t\tresult.push_back(std::any_cast<long>(value));\n\
    \t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphtm211iu: /tmp/tmphtm211iu.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> res;\n    for(auto i:values){\n        try{\n\
    \            res.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpe8vp4o3q: /tmp/tmpe8vp4o3q.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast &e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpk9g_dm5l: /tmp/tmpk9g_dm5l.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfzwgix0x: /tmp/tmpfzwgix0x.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> res;\n    for(auto i : values) {\n        if(i.type()\
    \ == typeid(long)) {\n            res.push_back(std::any_cast<long>(i));\n   \
    \     }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7fkitmp4: /tmp/tmp7fkitmp4.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwytebn01: /tmp/tmpwytebn01.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            // do nothing\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzng1jsht: /tmp/tmpzng1jsht.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // ignore\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpar36i8eq: /tmp/tmpar36i8eq.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(std::bad_any_cast &e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdiumdcg3: /tmp/tmpdiumdcg3.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpmk3v7xve: /tmp/tmpmk3v7xve.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto val : values) {\n   \
    \     try {\n            result.push_back(std::any_cast<long>(val));\n       \
    \ }\n        catch(const std::bad_any_cast& e) {\n            continue;\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgwcunur1: /tmp/tmpgwcunur1.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpmk3v7xve: /tmp/tmpmk3v7xve.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // ignore\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpar36i8eq: /tmp/tmpar36i8eq.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmplo4uqe_k: /tmp/tmplo4uqe_k.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n  std::vector<long> result;\n  for (auto val : values) {\n    try\
    \ {\n      result.push_back(std::any_cast<long>(val));\n    } catch (const std::bad_any_cast&\
    \ e) {\n      // ignore\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp8mgznk45: /tmp/tmp8mgznk45.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto it = values.begin();\
    \ it != values.end(); it++) {\n        try {\n            result.push_back(std::any_cast<long>(*it));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7knfenfz: /tmp/tmp7knfenfz.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n  std::vector<long> result;\n  for (auto value : values) {\n    if\
    \ (value.type() == typeid(long)) {\n      result.push_back(std::any_cast<long>(value));\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyaylcvqz: /tmp/tmpyaylcvqz.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // ignore non-integers\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7xdajs92: /tmp/tmp7xdajs92.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpuqrgtbuc: /tmp/tmpuqrgtbuc.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpoach_p5m: /tmp/tmpoach_p5m.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& v : values) {\n    \
    \    try {\n            result.push_back(std::any_cast<long>(v));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp_ngz4ma5: /tmp/tmp_ngz4ma5.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpoach_p5m: /tmp/tmpoach_p5m.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdb6rv_9r: /tmp/tmpdb6rv_9r.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(const std::bad_any_cast &e) {\n            // Do nothing\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzsslh_r0: /tmp/tmpzsslh_r0.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            // do nothing\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzng1jsht: /tmp/tmpzng1jsht.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpo9rc9r3e: /tmp/tmpo9rc9r3e.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpmk3v7xve: /tmp/tmpmk3v7xve.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &i:values){\n       \
    \ try{\n            result.push_back(std::any_cast<long>(i));\n        }\n   \
    \     catch(std::bad_any_cast &e){\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmprdkzq6sc: /tmp/tmprdkzq6sc.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n  std::vector<long> result;\n  for (auto it = values.begin(); it\
    \ != values.end(); ++it) {\n    if (it->type() == typeid(long)) {\n      result.push_back(std::any_cast<long>(*it));\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyck1y_20: /tmp/tmpyck1y_20.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwytebn01: /tmp/tmpwytebn01.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpoach_p5m: /tmp/tmpoach_p5m.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        if(i.type()==typeid(int)){\n\
    \            result.push_back(std::any_cast<int>(i));\n        }\n        else\
    \ if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq11_g6xj: /tmp/tmpq11_g6xj.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(const std::bad_any_cast &) {\n            // Ignore non-integers\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1tney242: /tmp/tmp1tney242.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Ignore non-integers\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0xro0oxy: /tmp/tmp0xro0oxy.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> res;\n    for(auto i : values) {\n        try\
    \ {\n            res.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmppwfdlagg: /tmp/tmppwfdlagg.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto it = values.begin();\
    \ it != values.end(); it++) {\n        if(it->type() == typeid(long)) {\n    \
    \        result.push_back(std::any_cast<long>(*it));\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpn_zs06ih: /tmp/tmpn_zs06ih.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(const std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6xar379t: /tmp/tmp6xar379t.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto it = values.begin();\
    \ it != values.end(); it++) {\n        if(it->type() == typeid(long)) {\n    \
    \        result.push_back(std::any_cast<long>(*it));\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpn_zs06ih: /tmp/tmpn_zs06ih.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& val : values) {\n  \
    \      if(val.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(val));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpl41kbhvk: /tmp/tmpl41kbhvk.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        if(i.type()==typeid(int)){\n\
    \            result.push_back(std::any_cast<int>(i));\n        }\n        else\
    \ if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast\
    \ &e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmphpe273q_: /tmp/tmphpe273q_.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast\
    \ &e) {\n            // Ignore\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp2cp1nk36: /tmp/tmp2cp1nk36.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpo9rc9r3e: /tmp/tmpo9rc9r3e.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpmk3v7xve: /tmp/tmpmk3v7xve.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& val : values) {\n  \
    \      if(val.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(val));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpl41kbhvk: /tmp/tmpl41kbhvk.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto x: values) {\n      \
    \  if(x.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(x));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmppjxvp4rj: /tmp/tmppjxvp4rj.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     }\n        catch(std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3hs1ocjk: /tmp/tmp3hs1ocjk.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast\
    \ &e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4hns25b7: /tmp/tmp4hns25b7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto it = values.begin();\
    \ it != values.end(); it++) {\n        try {\n            result.push_back(std::any_cast<long>(*it));\n\
    \        } catch(const std::bad_any_cast& e) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7knfenfz: /tmp/tmp7knfenfz.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            // Do nothing\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpu59lkq54: /tmp/tmpu59lkq54.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph361ykan: /tmp/tmph361ykan.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n  std::vector<long> result;\n  for (auto value : values) {\n    if\
    \ (value.type() == typeid(long)) {\n      result.push_back(std::any_cast<long>(value));\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyaylcvqz: /tmp/tmpyaylcvqz.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfzwgix0x: /tmp/tmpfzwgix0x.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpoach_p5m: /tmp/tmpoach_p5m.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq11_g6xj: /tmp/tmpq11_g6xj.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast\
    \ &e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4hns25b7: /tmp/tmp4hns25b7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> res;\n    for(auto i : values) {\n        try\
    \ {\n            res.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmppwfdlagg: /tmp/tmppwfdlagg.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpmk3v7xve: /tmp/tmpmk3v7xve.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> res;\n    for(auto &val: values) {\n      \
    \  try {\n            res.push_back(std::any_cast<long>(val));\n        } catch(std::bad_any_cast\
    \ &e) {\n            continue;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpann5xooc: /tmp/tmpann5xooc.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto v: values) {\n      \
    \  if(v.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(v));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpamnc7wbs: /tmp/tmpamnc7wbs.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq11_g6xj: /tmp/tmpq11_g6xj.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &i:values){\n       \
    \ try{\n            result.push_back(std::any_cast<long>(i));\n        }\n   \
    \     catch(std::bad_any_cast &e){\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmprdkzq6sc: /tmp/tmprdkzq6sc.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfzwgix0x: /tmp/tmpfzwgix0x.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            // ignore\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3q325c1e: /tmp/tmp3q325c1e.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpmk3v7xve: /tmp/tmpmk3v7xve.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx00re1sg: /tmp/tmpx00re1sg.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpoach_p5m: /tmp/tmpoach_p5m.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast\
    \ &e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmphpe273q_: /tmp/tmphpe273q_.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto x: values) {\n      \
    \  if(x.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(x));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmppjxvp4rj: /tmp/tmppjxvp4rj.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3syclld7: /tmp/tmp3syclld7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto &i:values){\n       \
    \ try{\n            result.push_back(std::any_cast<long>(i));\n        }\n   \
    \     catch(std::bad_any_cast &e){\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmprdkzq6sc: /tmp/tmprdkzq6sc.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyh56_yl8: /tmp/tmpyh56_yl8.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps48tzsl1: /tmp/tmps48tzsl1.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfzwgix0x: /tmp/tmpfzwgix0x.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        }\n\
    \        catch(const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwytebn01: /tmp/tmpwytebn01.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast\
    \ &e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4hns25b7: /tmp/tmp4hns25b7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n  std::vector<long> result;\n  for (auto value : values) {\n    try\
    \ {\n      result.push_back(std::any_cast<long>(value));\n    } catch (const std::bad_any_cast&\
    \ e) {\n      continue;\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpdavscds0: /tmp/tmpdavscds0.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto& value : values) {\n\
    \        try {\n            result.push_back(std::any_cast<long>(value));\n  \
    \      } catch(std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3syclld7: /tmp/tmp3syclld7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        if(i.type()==typeid(int)){\n\
    \            result.push_back(std::any_cast<int>(i));\n        }\n        else\
    \ if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyh56_yl8: /tmp/tmpyh56_yl8.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> res;\n    for(auto i:values){\n        if(i.type()==typeid(int)){\n\
    \            res.push_back(std::any_cast<int>(i));\n        }\n        else if(i.type()==typeid(long)){\n\
    \            res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> integers;\n    for(auto value : values) {\n\
    \        try {\n            integers.push_back(std::any_cast<long>(value));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpapp4mdnc: /tmp/tmpapp4mdnc.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto x: values) {\n      \
    \  try {\n            result.push_back(std::any_cast<long>(x));\n        } catch(std::bad_any_cast&\
    \ e) {\n            // ignore\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp5ijhj26y: /tmp/tmp5ijhj26y.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast &e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpldt96wih: /tmp/tmpldt96wih.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   if(i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmputcy809y: /tmp/tmputcy809y.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i : values) {\n     \
    \   try {\n            result.push_back(std::any_cast<long>(i));\n        } catch(std::bad_any_cast\
    \ &e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4hns25b7: /tmp/tmp4hns25b7.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108212
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       if(value.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7ss3l4l: /tmp/tmps7ss3l4l.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(const\
    \ std::bad_any_cast& e){\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplai8rsc8: /tmp/tmplai8rsc8.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyh56_yl8: /tmp/tmpyh56_yl8.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto value : values) {\n \
    \       try {\n            result.push_back(std::any_cast<long>(value));\n   \
    \     } catch(std::bad_any_cast& e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3icd4ctp: /tmp/tmp3icd4ctp.cpp:18: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108210
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        try{\n\
    \            result.push_back(std::any_cast<long>(i));\n        }\n        catch(std::bad_any_cast&\
    \ e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprse3a7x4: /tmp/tmprse3a7x4.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108211
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\nstd::vector<long> filter_integers(std::vector<std::any>\
    \ values) {\n    std::vector<long> result;\n    for(auto i:values){\n        if(i.type()==typeid(int)){\n\
    \            result.push_back(std::any_cast<int>(i));\n        }\n        else\
    \ if(i.type()==typeid(long)){\n            result.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108210

name: HumanEval_21_rescale_to_unit
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given list of numbers (of\
  \ at least two elements), apply a linear transform to that list,\n// such that the\
  \ smallest number will become 0 and the largest will become 1\nstd::vector<float>\
  \ rescale_to_unit(std::vector<float> numbers) {\n"
tests: "}\nint main() {\n    auto candidate = rescale_to_unit;\n    assert(candidate((std::vector<float>({2.0,\
  \ 49.9}))) == (std::vector<float>({0.0, 1.0})));\n    assert(candidate((std::vector<float>({100.0,\
  \ 49.9}))) == (std::vector<float>({1.0, 0.0})));\n    assert(candidate((std::vector<float>({1.0,\
  \ 2.0, 3.0, 4.0, 5.0}))) == (std::vector<float>({0.0, 0.25, 0.5, 0.75, 1.0})));\n\
  \    assert(candidate((std::vector<float>({2.0, 1.0, 5.0, 3.0, 4.0}))) == (std::vector<float>({0.25,\
  \ 0.0, 1.0, 0.5, 0.75})));\n    assert(candidate((std::vector<float>({12.0, 11.0,\
  \ 15.0, 13.0, 14.0}))) == (std::vector<float>({0.25, 0.0, 1.0, 0.5, 0.75})));\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

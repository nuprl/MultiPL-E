name: HumanEval_135_can_arrange
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function which returns\
  \ the largest index of an element which\n// is not greater than or equal to the\
  \ element immediately preceding it. If\n// no such element exists then return -1.\
  \ The given array will not contain\n// duplicate values.\n// Examples:\nlong can_arrange(std::vector<long>\
  \ arr) {\n"
tests: "}\nint main() {\n    auto candidate = can_arrange;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)3, (long)5}))) == (3));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)5}))) == (-1));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)4, (long)2, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10}))) ==\
  \ (2));\n    assert(candidate((std::vector<long>({(long)4, (long)8, (long)5, (long)7,\
  \ (long)3}))) == (4));\n    assert(candidate((std::vector<long>())) == (-1));\n\
  }\n"
completions: ["  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n  \
    \  }\n  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  for (int i = arr.size() -\
    \ 1; i > 0; i--) {\n    if (arr[i] < arr[i - 1]) {\n      return i - 1;\n    }\n\
    \  }\n  return -1;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long n = arr.size();\n\
    \  long max_index = -1;\n  for (long i = n - 1; i >= 0; i--) {\n    if (arr[i]\
    \ >= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = -1;\n  long index = -1;\n  for (long i = arr.size() - 1; i >= 0;\
    \ i--) {\n    if (arr[i] >= max) {\n      max = arr[i];\n      index = i;\n  \
    \  }\n  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max_index = -1;\n  for (long i = arr.size() - 1; i > 0; i--) {\n    if (arr[i]\
    \ <= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = arr[0];\n  long max_index = 0;\n  for (int i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n\
    \    }\n  }\n  return max_index;", "  long index = -1;\n  for (long i = arr.size()\
    \ - 1; i > 0; i--) {\n    if (arr[i - 1] >= arr[i]) {\n      index = i - 1;\n\
    \    }\n  }\n  return index;", "  long n = arr.size();\n  std::vector<long> v(n);\n\
    \  v[n-1] = -1;\n  for(long i = n-2; i >= 0; i--) {\n    if(arr[i] >= arr[i+1])\
    \ {\n      v[i] = i+1;\n    } else {\n      v[i] = v[i+1];\n    }\n  }\n  return\
    \ v[0];", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n  \
    \  }\n  }\n  return index;", "  long max = -1;\n  for (long i = arr.size() - 1;\
    \ i >= 0; i--) {\n    if (arr[i] >= max) {\n      max = arr[i];\n    } else {\n\
    \      return i;\n    }\n  }\n  return -1;", "    long n = arr.size();\n    long\
    \ max_index = -1;\n    for(long i = n-1; i >= 0; i--){\n        if(arr[i] >= arr[i-1]){\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1;\
    \ i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      return i - 1;\n    }\n\
    \    max = arr[i];\n  }\n  return -1;", "  long max = arr[0];\n  long index =\
    \ 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n  \
    \    max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  int n =\
    \ arr.size();\n  int max_index = -1;\n  for (int i = n - 1; i >= 0; i--) {\n \
    \   if (arr[i] >= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      index = i;\n\
    \      max = arr[i];\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "    long max = arr[0];\n    long index = 0;\n    for(long\
    \ i = 1; i < arr.size(); i++){\n        if(arr[i] <= max){\n            max =\
    \ arr[i];\n            index = i;\n        }\n    }\n    return index;", "  long\
    \ n = arr.size();\n  long max = arr[n-1];\n  long max_index = n-1;\n  for(long\
    \ i = n-2; i >= 0; i--){\n    if(arr[i] < max){\n      max = arr[i];\n      max_index\
    \ = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n  long index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n\
    \      return i - 1;\n    }\n    max = arr[i];\n  }\n  return -1;", "  long n\
    \ = arr.size();\n  long i = 0;\n  for (i = n - 1; i > 0; i--) {\n    if (arr[i]\
    \ < arr[i - 1]) {\n      return i - 1;\n    }\n  }\n  return -1;", "  long max\
    \ = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n  \
    \  if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n \
    \ return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long i\
    \ = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long n = arr.size();\n\
    \  long max_index = -1;\n  for (long i = n - 1; i >= 0; i--) {\n    if (arr[i]\
    \ >= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = arr[0];\n  long max_index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n\
    \    }\n  }\n  return max_index;", "  long max = arr[0];\n  long index = 0;\n\
    \  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max\
    \ = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long max = -1;\n\
    \  for (long i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i] >= max) {\n  \
    \    max = arr[i];\n    } else {\n      return i;\n    }\n  }\n  return -1;",
  "  long n = arr.size();\n  long i = n - 1;\n  while (i > 0) {\n    if (arr[i] >=\
    \ arr[i - 1]) {\n      i--;\n    } else {\n      break;\n    }\n  }\n  return\
    \ i - 1;", "  // your code here\n  long size = arr.size();\n  long max = arr[size-1];\n\
    \  long index = -1;\n  for(long i = size-2; i >= 0; i--){\n    if(arr[i] <= max){\n\
    \      index = i;\n      max = arr[i];\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1;\
    \ i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n     \
    \ index = i;\n    }\n  }\n  return index;", "  long n = arr.size();\n  long max\
    \ = arr[n-1];\n  for(long i = n-2; i >= 0; i--){\n    if(arr[i] >= max){\n   \
    \   max = arr[i];\n    }\n    else{\n      return i;\n    }\n  }\n  return -1;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long index = -1;\n  long max = arr[0];\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      index = i;\n\
    \      max = arr[i];\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] >\
    \ max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long n = arr.size();\n  long\
    \ max = arr[n-1];\n  long index = n-1;\n  for(long i = n-2; i >= 0; i--){\n  \
    \  if(arr[i] >= max){\n      max = arr[i];\n      index = i;\n    }\n  }\n  return\
    \ index;", "  long max = -1;\n  for (long i = arr.size() - 1; i >= 0; i--) {\n\
    \    if (arr[i] >= max) {\n      max = arr[i];\n    } else {\n      return i;\n\
    \    }\n  }\n  return -1;", "  long n = arr.size();\n  long index = -1;\n  for\
    \ (long i = n - 1; i > 0; i--) {\n    if (arr[i] < arr[i - 1]) {\n      index\
    \ = i - 1;\n      break;\n    }\n  }\n  return index;", "  long i = arr.size()\
    \ - 1;\n  while (i > 0) {\n    if (arr[i] < arr[i - 1]) {\n      return i - 1;\n\
    \    }\n    i--;\n  }\n  return -1;", "  if(arr.size() == 1)\n    return 0;\n\
    \  long max = arr[0];\n  long index = 0;\n  for(int i = 1; i < arr.size(); i++)\
    \ {\n    if(arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i\
    \ = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n    }\n\
    \  }\n  return max_index;", "  long max = arr[0];\n  long max_index = 0;\n  for\
    \ (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "    long max = arr[0];\n    long index = 0;\n    for(long i = 1; i < arr.size();\
    \ i++){\n        if(arr[i] <= max){\n            max = arr[i];\n            index\
    \ = i;\n        }\n    }\n    return index;", "  long n = arr.size();\n  long\
    \ max_index = -1;\n  for (long i = n - 1; i >= 0; i--) {\n    if (arr[i] >= arr[i\
    \ - 1]) {\n      max_index = i;\n    }\n  }\n  return max_index;", "  // your\
    \ code here\n  long max = arr[0];\n  long index = 0;\n  for(long i = 1; i < arr.size();\
    \ i++){\n    if(arr[i] > max){\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = -1;\n \
    \ for (long i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i] >= max) {\n   \
    \   max = arr[i];\n    } else {\n      return i;\n    }\n  }\n  return -1;", " \
    \ long max = -1;\n  for (int i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i]\
    \ >= max) {\n      max = arr[i];\n    } else {\n      return i;\n    }\n  }\n\
    \  return -1;", "  long n = arr.size();\n  long max = arr[n-1];\n  for(long i\
    \ = n-2; i >= 0; i--){\n    if(arr[i] <= max){\n      max = arr[i];\n    }\n \
    \   else{\n      return i;\n    }\n  }\n  return -1;", "  long max = -1;\n  for\
    \ (long i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i] >= max) {\n      max\
    \ = arr[i];\n    } else {\n      return i;\n    }\n  }\n  return -1;", "  long\
    \ n = arr.size();\n  long max_index = -1;\n  for (long i = n - 1; i >= 0; i--)\
    \ {\n    if (arr[i] >= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return\
    \ max_index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i\
    \ < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      index\
    \ = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long max_index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n \
    \     max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index;", "    long max = arr[0];\n    long max_index = 0;\n    for\
    \ (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max) {\n         \
    \   max = arr[i];\n            max_index = i;\n        }\n    }\n    return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i\
    \ = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <=\
    \ max) {\n      return max_index;\n    }\n    max = arr[i];\n    max_index = i;\n\
    \  }\n  return -1;", "  long n = arr.size();\n  long max_index = -1;\n  for (long\
    \ i = 0; i < n - 1; i++) {\n    if (arr[i] >= arr[i + 1]) {\n      max_index =\
    \ i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n  long max_index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n \
    \     max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = arr[0];\n  long max_index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n\
    \    }\n  }\n  return max_index;", "  long max = arr[0];\n  long index = 0;\n\
    \  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max\
    \ = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  int n = arr.size();\n\
    \  int i = n - 1;\n  while (i > 0) {\n    if (arr[i] < arr[i - 1]) {\n      return\
    \ i - 1;\n    }\n    i--;\n  }\n  return -1;", "  long n = arr.size();\n  long\
    \ max = arr[n-1];\n  long index = -1;\n  for(long i = n-2; i >= 0; i--){\n   \
    \ if(arr[i] <= max){\n      index = i;\n      max = arr[i];\n    }\n  }\n  return\
    \ index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n   \
    \ }\n  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (int i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1;\
    \ i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n    \
    \  index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n\
    \      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long i\
    \ = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  // your code here\n\
    \  long max = arr[0];\n  long index = 0;\n  for(long i = 1; i < arr.size(); i++){\n\
    \    if(arr[i] > max){\n      max = arr[i];\n      index = i;\n    }\n  }\n  return\
    \ index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n   \
    \ }\n  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] >\
    \ max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] < max) {\n      return i - 1;\n    }\n    if (arr[i] > max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n    }\n\
    \  }\n  return max_index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] >\
    \ max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i\
    \ = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] < max)\
    \ {\n      return i - 1;\n    }\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] >\
    \ max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max_index = -1;\n  for (long i = arr.size() -\
    \ 1; i > 0; i--) {\n    if (arr[i] >= arr[i - 1]) {\n      max_index = i;\n  \
    \  }\n  }\n  return max_index;", "  long n = arr.size();\n  long max = arr[n-1];\n\
    \  for(long i = n-2; i >= 0; i--){\n    if(arr[i] >= max){\n      max = arr[i];\n\
    \    }\n    else{\n      return i;\n    }\n  }\n  return -1;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long n = arr.size();\n  long max = arr[n-1];\n  for(long\
    \ i = n-2; i >= 0; i--){\n    if(arr[i] >= max){\n      max = arr[i];\n    }\n\
    \    else{\n      return i;\n    }\n  }\n  return -1;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = -1;\n  for (long i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i]\
    \ >= max) {\n      max = arr[i];\n    } else {\n      return i;\n    }\n  }\n\
    \  return -1;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i\
    \ < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index\
    \ = i;\n    }\n  }\n  return index;", "  long max = -1;\n  for (long i = arr.size()\
    \ - 1; i >= 0; i--) {\n    if (arr[i] >= max) {\n      max = arr[i];\n    } else\
    \ {\n      return i;\n    }\n  }\n  return -1;", "  long max = -1;\n  for (int\
    \ i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i] >= max) {\n      max = arr[i];\n\
    \    } else {\n      return i;\n    }\n  }\n  return -1;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long n = arr.size();\n  long index = -1;\n  for (long i = n - 1; i > 0; i--)\
    \ {\n    if (arr[i] <= arr[i - 1]) {\n      index = i - 1;\n    }\n  }\n  return\
    \ index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n  \
    \  }\n  }\n  return index;", "  long n = arr.size();\n  long max = arr[n-1];\n\
    \  long index = -1;\n  for(long i = n-2; i >= 0; i--){\n    if(arr[i] <= max){\n\
    \      index = i;\n      max = arr[i];\n    }\n  }\n  return index;", "    long\
    \ max = arr[0];\n    long index = 0;\n    for(long i = 1; i < arr.size(); i++){\n\
    \        if(arr[i] <= max){\n            max = arr[i];\n            index = i;\n\
    \        }\n    }\n    return index;", "  long max = arr[0];\n  long max_index\
    \ = 0;\n  long result = -1;\n  for (long i = 1; i < arr.size(); i++) {\n    if\
    \ (arr[i] <= max) {\n      result = max_index;\n    } else {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return result;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "  long max_index = -1;\n  long max_value = -1;\n  for (long i = arr.size() - 1;\
    \ i >= 0; i--) {\n    if (arr[i] >= max_value) {\n      max_value = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long i\
    \ = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <=\
    \ max) {\n      return max_index;\n    }\n    if (arr[i] > max) {\n      max =\
    \ arr[i];\n      max_index = i;\n    }\n  }\n  return -1;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ < max) {\n      return i - 1;\n    }\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "    long max = arr[0];\n   \
    \ long max_index = 0;\n    for (long i = 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > max) {\n            max = arr[i];\n            max_index = i;\n  \
    \      }\n    }\n    return max_index;", "  long max = arr[0];\n  long index =\
    \ 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] < max) {\n   \
    \   return i - 1;\n    }\n    if (arr[i] > max) {\n      max = arr[i];\n     \
    \ index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n\
    \      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = 0;\n  for (long i = 0; i < arr.size() - 1; i++) {\n    if (arr[i] <= arr[i\
    \ + 1]) {\n      max = i + 1;\n    }\n  }\n  return max;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "  long max_index = -1;\n  for (long i = arr.size() - 1; i > 0; i--) {\n    if (arr[i]\
    \ <= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = arr[0];\n  long max_index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] <= max) {\n      return max_index;\n    }\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return -1;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index;", "  long n = arr.size();\n  long max_index = -1;\n  for\
    \ (long i = 0; i < n - 1; i++) {\n    if (arr[i] >= arr[i + 1]) {\n      max_index\
    \ = i;\n    }\n  }\n  return max_index;", "  // your code here\n  long n = arr.size();\n\
    \  long max = arr[n-1];\n  for(long i = n-2; i >= 0; i--){\n    if(arr[i] >= max){\n\
    \      max = arr[i];\n    }\n    else{\n      return i;\n    }\n  }\n  return\
    \ -1;", "  long n = arr.size();\n  long i = n - 1;\n  while (i > 0) {\n    if\
    \ (arr[i] < arr[i - 1]) {\n      return i - 1;\n    }\n    i--;\n  }\n  return\
    \ -1;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n   \
    \ }\n  }\n  return index;", "  long max = -1;\n  for (long i = arr.size() - 1;\
    \ i >= 0; i--) {\n    if (arr[i] >= max) {\n      max = arr[i];\n    } else {\n\
    \      return i;\n    }\n  }\n  return -1;", "  long n = arr.size();\n  long max\
    \ = arr[n-1];\n  long index = -1;\n  for(long i = n-2; i >= 0; i--){\n    if(arr[i]\
    \ <= max){\n      index = i;\n      max = arr[i];\n    }\n  }\n  return index;",
  "  long max = arr[0];\n  long max_index = 0;\n  for (int i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n\
    \    }\n  }\n  return max_index;", "    long max = arr[0];\n    long index = 0;\n\
    \    for(long i = 1; i < arr.size(); i++){\n        if(arr[i] <= max){\n     \
    \       index = i;\n            max = arr[i];\n        }\n    }\n    return index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = -1;\n  for (long\
    \ i = arr.size() - 1; i >= 0; i--) {\n    if (arr[i] >= max) {\n      max = arr[i];\n\
    \    } else {\n      return i;\n    }\n  }\n  return -1;", "    if(arr.size()==1)\n\
    \        return 0;\n    for(long i=arr.size()-1;i>0;i--)\n    {\n        if(arr[i]<arr[i-1])\n\
    \            return i-1;\n    }\n    return -1;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] < max)\
    \ {\n      return i - 1;\n    }\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ n = arr.size();\n  long max_index = -1;\n  for (long i = n - 1; i >= 0; i--)\
    \ {\n    if (arr[i] >= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n  return\
    \ max_index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i\
    \ < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index\
    \ = i;\n    }\n  }\n  return index;", "  long n = arr.size();\n  long max_index\
    \ = -1;\n  for (long i = n - 1; i >= 0; i--) {\n    if (arr[i] >= arr[i - 1])\
    \ {\n      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "    long max = arr[0];\n    long index = 0;\n    for(long i = 1; i < arr.size();\
    \ i++){\n        if(arr[i] > max){\n            max = arr[i];\n            index\
    \ = i;\n        }\n    }\n    return index;", "  long max_index = -1;\n  for (long\
    \ i = arr.size() - 1; i > 0; i--) {\n    if (arr[i] <= arr[i - 1]) {\n      max_index\
    \ = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n  long index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n\
    \      return i - 1;\n    }\n    max = arr[i];\n  }\n  return -1;", "    long\
    \ max = arr[0];\n    long index = 0;\n    for(long i = 1; i < arr.size(); i++){\n\
    \        if(arr[i] <= max){\n            index = i;\n            max = arr[i];\n\
    \        }\n    }\n    return index;", "  long max = arr[0];\n  long max_index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n \
    \     max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;", " \
    \ long max = 0;\n  for (long i = 0; i < arr.size() - 1; i++) {\n    if (arr[i]\
    \ >= arr[i + 1]) {\n      if (i > max) {\n        max = i;\n      }\n    }\n \
    \ }\n  return max;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (int i = 1; i < arr.size(); i++) {\n    if (arr[i] >\
    \ max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "  long n = arr.size();\n  long max_index = -1;\n  for (long i = n - 1; i >= 0;\
    \ i--) {\n    if (arr[i] >= arr[i - 1]) {\n      max_index = i;\n    }\n  }\n\
    \  return max_index;", "  long n = arr.size();\n  long max = arr[n-1];\n  for(long\
    \ i = n-2; i >= 0; i--){\n    if(arr[i] >= max){\n      max = arr[i];\n    }\n\
    \    else{\n      return i;\n    }\n  }\n  return -1;", "  // your code here\n\
    \  long max = arr[0];\n  long index = 0;\n  for(long i = 1; i < arr.size(); i++){\n\
    \    if(arr[i] > max){\n      max = arr[i];\n      index = i;\n    }\n  }\n  return\
    \ index;", "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n  \
    \  }\n  }\n  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for\
    \ (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      return\
    \ max_index;\n    }\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index\
    \ = i;\n    }\n  }\n  return -1;", "    long max = arr[0];\n    long index = 0;\n\
    \    for(long i = 1; i < arr.size(); i++){\n        if(arr[i] <= max){\n     \
    \       max = arr[i];\n            index = i;\n        }\n    }\n    return index;",
  "  long max = arr[0];\n  long maxIndex = 0;\n  for (long i = 1; i < arr.size();\
    \ i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      maxIndex = i;\n\
    \    }\n  }\n  return maxIndex;", "  long max = arr[0];\n  long index = 0;\n \
    \ for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n      max\
    \ = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (int i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "    long max = arr[0];\n    long index = 0;\n    for(long i = 1; i < arr.size();\
    \ i++){\n        if(arr[i] <= max){\n            max = arr[i];\n            index\
    \ = i;\n        }\n    }\n    return index;", "  long max = arr[0];\n  long index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n\
    \      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "    std::vector<long>::iterator it;\n    long max = -1;\n\
    \    for(it = arr.begin(); it != arr.end(); it++) {\n        if(*it > max) {\n\
    \            max = *it;\n        }\n    }\n    return max;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  // your code here\n  long largest = arr[0];\n  long index = 0;\n  for(long i\
    \ = 1; i < arr.size(); i++){\n    if(arr[i] <= largest){\n      largest = arr[i];\n\
    \      index = i;\n    }\n  }\n  return index;", "  long max = arr[0];\n  long\
    \ max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] >\
    \ max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  for (int i = arr.size() - 1; i > 0; i--) {\n    if\
    \ (arr[i] < arr[i - 1]) {\n      return i - 1;\n    }\n  }\n  return -1;", " \
    \ long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long n = arr.size();\n  long max = arr[n-1];\n  long\
    \ max_index = n-1;\n  for(long i = n-2; i >= 0; i--){\n    if(arr[i] < max){\n\
    \      return i;\n    }\n    if(arr[i] > max){\n      max = arr[i];\n      max_index\
    \ = i;\n    }\n  }\n  return -1;", "  long max = arr[0];\n  long index = 0;\n\
    \  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max\
    \ = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long max = -1;\n\
    \  long max_index = -1;\n  for (long i = arr.size() - 1; i >= 0; i--) {\n    if\
    \ (arr[i] >= max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n \
    \ return max_index;", "  long i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z;\n  long max_index\
    \ = -1;\n  long max_value = arr[0];\n  for(i=1;i<arr.size();i++){\n    if(arr[i]<=max_value){\n\
    \      max_index = i;\n      max_value = arr[i];\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;", "  long max = arr[0];\n  long max_index = 0;\n  for (long\
    \ i = 1; i < arr.size(); i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \      max_index = i;\n    }\n  }\n  return max_index;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "    long max = arr[0];\n    long max_index = 0;\n    for (long i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] < max) {\n            return max_index;\n       \
    \ }\n        if (arr[i] > max) {\n            max = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return -1;", "  long max = arr[0];\n  long index\
    \ = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i] <= max) {\n\
    \      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "    long\
    \ max = arr[0];\n    long max_index = 0;\n    for (long i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n           \
    \ max_index = i;\n        }\n    }\n    return max_index;", "  long max = arr[0];\n\
    \  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ > max) {\n      max = arr[i];\n      max_index = i;\n    }\n  }\n  return max_index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] < max) {\n      return i - 1;\n    }\n    if (arr[i] > max)\
    \ {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n\
    \  return index;", "  long index = -1;\n  for (long i = arr.size() - 1; i > 0;\
    \ i--) {\n    if (arr[i] < arr[i - 1]) {\n      index = i - 1;\n      break;\n\
    \    }\n  }\n  return index;", "  // your code here\n  long max = arr[0];\n  long\
    \ index = 0;\n  for(long i = 1; i < arr.size(); i++){\n    if(arr[i] > max){\n\
    \      max = arr[i];\n      index = i;\n    }\n  }\n  return index;", "  long\
    \ max = arr[0];\n  long max_index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] > max) {\n      max = arr[i];\n      max_index = i;\n    }\n\
    \  }\n  return max_index;", "  long n = arr.size();\n  long max = arr[n-1];\n\
    \  for(long i = n-2; i >= 0; i--){\n    if(arr[i] >= max){\n      max = arr[i];\n\
    \    }\n    else{\n      return i;\n    }\n  }\n  return -1;", "  long max = arr[0];\n\
    \  long index = 0;\n  for (long i = 1; i < arr.size(); i++) {\n    if (arr[i]\
    \ <= max) {\n      max = arr[i];\n      index = i;\n    }\n  }\n  return index;",
  "  long max = arr[0];\n  long index = 0;\n  for (long i = 1; i < arr.size(); i++)\
    \ {\n    if (arr[i] <= max) {\n      max = arr[i];\n      index = i;\n    }\n\
    \  }\n  return index;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_155_even_odd_count
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num%2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp87v7aj9p: /tmp/tmp87v7aj9p.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int rem = num % 10;\n        if(rem % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpcpusx1bz: /tmp/tmpcpusx1bz.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even_count = 0;\n\
    \    long odd_count = 0;\n    while(num > 0) {\n        if(num % 2 == 0) {\n \
    \           even_count++;\n        } else {\n            odd_count++;\n      \
    \  }\n        num /= 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpej9d7y70: /tmp/tmpej9d7y70.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp3vz1mzhg: /tmp/tmp3vz1mzhg.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num%2) odd++;\n        else even++;\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7frlf9l5: /tmp/tmp7frlf9l5.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4dz7xd6g: /tmp/tmp4dz7xd6g.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even_count = 0;\n\
    \    long odd_count = 0;\n    while(num > 0) {\n        int digit = num % 10;\n\
    \        if(digit % 2 == 0) {\n            even_count++;\n        } else {\n \
    \           odd_count++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7rm4unf_: /tmp/tmp7rm4unf_.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num){\n        if(num % 2 == 0) even++;\n        else odd++;\n    \
    \    num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpyyu3l7cw: /tmp/tmpyyu3l7cw.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num != 0) {\n        if(num % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnowf5kp_: /tmp/tmpnowf5kp_.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4dz7xd6g: /tmp/tmp4dz7xd6g.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num){\n        int rem = num % 10;\n        if(rem % 2 == 0)\n    \
    \        even++;\n        else\n            odd++;\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpz9sy3uqc: /tmp/tmpz9sy3uqc.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num%2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp87v7aj9p: /tmp/tmp87v7aj9p.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4dz7xd6g: /tmp/tmp4dz7xd6g.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num != 0) {\n        if(num % 2 == 0)\n            even++;\n      \
    \  else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_w0ydpkz: /tmp/tmp_w0ydpkz.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0){\n        if(num %\
    \ 2 == 0){\n            even++;\n        }\n        else{\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4wzr896q: /tmp/tmp4wzr896q.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        int digit = num % 10;\n        if(digit % 2 == 0) even++;\n\
    \        else odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0q21es1_: /tmp/tmp0q21es1_.cpp:24: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num != 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgq31xhed: /tmp/tmpgq31xhed.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0){\n        int digit\
    \ = num % 10;\n        if(digit % 2 == 0){\n            even++;\n        }\n \
    \       else{\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmptcmf2qvo: /tmp/tmptcmf2qvo.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    int digit = num % 10;\n    if (digit % 2 == 0)\
    \ {\n      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n \
    \ return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpsyep7w2b: /tmp/tmpsyep7w2b.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0){\n        if(num %\
    \ 2 == 0){\n            even++;\n        }\n        else{\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4wzr896q: /tmp/tmp4wzr896q.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  // Write your code here\n\
    \  long even = 0;\n  long odd = 0;\n  while(num > 0) {\n    if(num % 2 == 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2cx5gso7: /tmp/tmp2cx5gso7.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even_count = 0;\n  long\
    \ odd_count = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even_count++;\n\
    \    } else {\n      odd_count++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpb030fkt6: /tmp/tmpb030fkt6.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num != 0) {\n        if(num % 2 == 0)\n            even++;\n      \
    \  else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_w0ydpkz: /tmp/tmp_w0ydpkz.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num) {\n    if (num % 2 == 0) {\n      even++;\n    } else {\n\
    \      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpawk2qpow: /tmp/tmpawk2qpow.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  // Write your code here\n\
    \  long even = 0;\n  long odd = 0;\n  while(num > 0) {\n    if(num % 2 == 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2cx5gso7: /tmp/tmp2cx5gso7.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num != 0) {\n        if((num % 10) % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkv_hc128: /tmp/tmpkv_hc128.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num != 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgq31xhed: /tmp/tmpgq31xhed.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num){\n        if(num%2 == 0) even++;\n        else odd++;\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpoiqajmoy: /tmp/tmpoiqajmoy.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num != 0) {\n        if(num % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnowf5kp_: /tmp/tmpnowf5kp_.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4dz7xd6g: /tmp/tmp4dz7xd6g.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num%2 == 0) even++;\n        else odd++;\n \
    \       num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1nmoxpso: /tmp/tmp1nmoxpso.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even=0,odd=0;\n  \
    \  while(num!=0){\n        if(num%2==0)\n            even++;\n        else\n \
    \           odd++;\n        num/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv_jo8rec: /tmp/tmpv_jo8rec.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even_count = 0;\n\
    \    long odd_count = 0;\n    while(num > 0) {\n        if(num % 2 == 0) {\n \
    \           even_count++;\n        } else {\n            odd_count++;\n      \
    \  }\n        num /= 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpej9d7y70: /tmp/tmpej9d7y70.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even_count = 0;\n\
    \    long odd_count = 0;\n    while(num > 0) {\n        int digit = num % 10;\n\
    \        if(digit % 2 == 0) {\n            even_count++;\n        } else {\n \
    \           odd_count++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7rm4unf_: /tmp/tmp7rm4unf_.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        int digit = num % 10;\n        if(digit % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpsff9hlxg: /tmp/tmpsff9hlxg.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if((num % 10) % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0bjd0d31: /tmp/tmp0bjd0d31.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0){\n        int digit\
    \ = num % 10;\n        if(digit % 2 == 0){\n            even++;\n        }\n \
    \       else{\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmptcmf2qvo: /tmp/tmptcmf2qvo.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    long digit = num % 10;\n    if (digit % 2 ==\
    \ 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n\
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpgb0nqknf: /tmp/tmpgb0nqknf.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num != 0) {\n        if(num % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnowf5kp_: /tmp/tmpnowf5kp_.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp3vz1mzhg: /tmp/tmp3vz1mzhg.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpptucgude: /tmp/tmpptucgude.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0)\n      even++;\n    else\n\
    \      odd++;\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmptc5n_jvl: /tmp/tmptc5n_jvl.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4dz7xd6g: /tmp/tmp4dz7xd6g.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbn5aybw3: /tmp/tmpbn5aybw3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num){\n        if(num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpugcbsm8h: /tmp/tmpugcbsm8h.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even_count = 0;\n\
    \    long odd_count = 0;\n    while(num > 0) {\n        int digit = num % 10;\n\
    \        if(digit % 2 == 0) {\n            even_count++;\n        } else {\n \
    \           odd_count++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7rm4unf_: /tmp/tmp7rm4unf_.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116172
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        int digit = num % 10;\n        if(digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4dz7xd6g: /tmp/tmp4dz7xd6g.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num) {\n        if(num % 2 == 0) even++;\n        else odd++;\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp__znkoyt: /tmp/tmp__znkoyt.cpp:23: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzrayl0g1: /tmp/tmpzrayl0g1.cpp:17: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n  long even = 0;\n  long odd\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqw_wcj5x: /tmp/tmpqw_wcj5x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgxrf_xtk: /tmp/tmpgxrf_xtk.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    std::tuple<long, long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\
    \    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjxy06wr: /tmp/tmpxjxy06wr.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116171

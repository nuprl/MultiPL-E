name: HumanEval_57_monotonic
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return True is list elements\
  \ are monotonically increasing or decreasing.\nbool monotonic(std::vector<long>\
  \ l) {\n"
tests: "}\nint main() {\n    auto candidate = monotonic;\n    assert(candidate((std::vector<long>({1,\
  \ 2, 4, 10}))) == (true));\n    assert(candidate((std::vector<long>({1, 2, 4, 20})))\
  \ == (true));\n    assert(candidate((std::vector<long>({1, 20, 4, 10}))) == (false));\n\
  \    assert(candidate((std::vector<long>({4, 1, 0, -10}))) == (true));\n    assert(candidate((std::vector<long>({4,\
  \ 1, 1, 0}))) == (true));\n    assert(candidate((std::vector<long>({1, 2, 3, 2,\
  \ 5, 60}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
  \ 60}))) == (true));\n    assert(candidate((std::vector<long>({9, 9, 9, 9}))) ==\
  \ (true));\n}\n"
completions: []
stop_tokens:
- "\n}"

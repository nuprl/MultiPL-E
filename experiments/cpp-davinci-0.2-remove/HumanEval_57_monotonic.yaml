name: HumanEval_57_monotonic
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return True is list elements\
  \ are monotonically increasing or decreasing.\nbool monotonic(std::vector<long>\
  \ l) {\n"
tests: "}\nint main() {\n    auto candidate = monotonic;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)10}))) == (true));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)20}))) == (true));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)20, (long)4, (long)10}))) == (false));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)1, (long)0, (long)-10}))) == (true));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)1, (long)1, (long)0}))) == (true));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)2, (long)5, (long)60}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)60}))) == (true));\n    assert(candidate((std::vector<long>({(long)9,\
  \ (long)9, (long)9, (long)9}))) == (true));\n}\n"
completions: ["    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "\tif (l.size()\
    \ <= 1) {\n\t\treturn true;\n\t}\n\tbool increasing = l[1] > l[0];\n\tfor (int\
    \ i = 1; i < l.size(); i++) {\n\t\tif (increasing) {\n\t\t\tif (l[i] < l[i - 1])\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (l[i] > l[i - 1])\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 0; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++)\
    \ {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 2) return\
    \ true;\n    bool increasing = l[0] <= l[1];\n    for (int i = 2; i < l.size();\
    \ i++) {\n        if (increasing) {\n            if (l[i-1] > l[i]) return false;\n\
    \        } else {\n            if (l[i-1] < l[i]) return false;\n        }\n \
    \   }\n    return true;", "    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 2) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    int n = l.size();\n    if (n <= 1) {\n        return\
    \ true;\n    }\n    if (l[0] < l[1]) {\n        for (int i = 1; i < n - 1; i++)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    } else if (l[0] > l[1]) {\n        for (int i = 1; i\
    \ < n - 1; i++) {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() == 0)\
    \ {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 0; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() == 0) return true;\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i-1]) increasing = false;\n        if (l[i] > l[i-1])\
    \ decreasing = false;\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() ==\
    \ 0) {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    int n = l.size();\n    if (n == 1) {\n        return true;\n\
    \    }\n    bool increasing = false;\n    bool decreasing = false;\n    for (int\
    \ i = 0; i < n - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            increasing\
    \ = true;\n        }\n        if (l[i] > l[i + 1]) {\n            decreasing =\
    \ true;\n        }\n    }\n    return (increasing && !decreasing) || (!increasing\
    \ && decreasing);", "  if (l.size() <= 1) {\n    return true;\n  }\n  bool increasing\
    \ = true;\n  bool decreasing = true;\n  for (int i = 1; i < l.size(); i++) {\n\
    \    if (l[i] < l[i - 1]) {\n      increasing = false;\n    }\n    if (l[i] >\
    \ l[i - 1]) {\n      decreasing = false;\n    }\n  }\n  return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "  if\
    \ (l.size() <= 1) {\n    return true;\n  }\n  bool increasing = l[0] < l[1];\n\
    \  for (int i = 1; i < l.size() - 1; i++) {\n    if (increasing) {\n      if (l[i]\
    \ > l[i + 1]) {\n        return false;\n      }\n    } else {\n      if (l[i]\
    \ < l[i + 1]) {\n        return false;\n      }\n    }\n  }\n  return true;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    int i = 0;\n    int\
    \ j = 1;\n    int k = 2;\n    while (k < l.size()) {\n        if (l[i] > l[j]\
    \ && l[j] > l[k]) {\n            i++;\n            j++;\n            k++;\n  \
    \      } else if (l[i] < l[j] && l[j] < l[k]) {\n            i++;\n          \
    \  j++;\n            k++;\n        } else {\n            return false;\n     \
    \   }\n    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "\tif (l.size() <= 2) {\n\t\treturn true;\n\t}\n\tbool increasing\
    \ = l[0] < l[1];\n\tfor (int i = 1; i < l.size() - 1; i++) {\n\t\tif (increasing)\
    \ {\n\t\t\tif (l[i] > l[i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif (l[i] < l[i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn true;", "\tif (l.size() <= 1) {\n\t\treturn true;\n\t}\n\tbool increasing\
    \ = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < l.size() - 1; i++)\
    \ {\n\t\tif (l[i] < l[i + 1]) {\n\t\t\tdecreasing = false;\n\t\t}\n\t\tif (l[i]\
    \ > l[i + 1]) {\n\t\t\tincreasing = false;\n\t\t}\n\t}\n\treturn increasing ||\
    \ decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n    int\
    \ direction = 0;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] >\
    \ l[i-1]) {\n            if (direction == -1) {\n                return false;\n\
    \            }\n            direction = 1;\n        } else if (l[i] < l[i-1])\
    \ {\n            if (direction == 1) {\n                return false;\n      \
    \      }\n            direction = -1;\n        }\n    }\n    return true;", " \
    \   if (l.size() <= 1) return true;\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) return false;\n        } else {\n            if (l[i]\
    \ < l[i + 1]) return false;\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "  int i = 0;\n\
    \  int j = 1;\n  if (l.size() == 1) {\n    return true;\n  }\n  while (i < l.size()\
    \ - 1) {\n    if (l[i] < l[j]) {\n      while (i < l.size() - 1) {\n        if\
    \ (l[i] > l[j]) {\n          return false;\n        }\n        i++;\n        j++;\n\
    \      }\n      return true;\n    }\n    if (l[i] > l[j]) {\n      while (i <\
    \ l.size() - 1) {\n        if (l[i] < l[j]) {\n          return false;\n     \
    \   }\n        i++;\n        j++;\n      }\n      return true;\n    }\n    i++;\n\
    \    j++;\n  }\n  return true;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    int i;\n    int n = l.size();\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (i = 0; i < n-1; i++) {\n    \
    \    if (l[i] < l[i+1]) {\n            decreasing = false;\n        }\n      \
    \  if (l[i] > l[i+1]) {\n            increasing = false;\n        }\n    }\n \
    \   return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 2) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 2) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "\tif (l.size() <= 2) {\n\t\treturn true;\n\t}\n\tbool increasing\
    \ = l[0] < l[1];\n\tfor (int i = 1; i < l.size() - 1; i++) {\n\t\tif (increasing)\
    \ {\n\t\t\tif (l[i] > l[i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif (l[i] < l[i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool\
    \ increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n  \
    \      if (increasing) {\n            if (l[i] > l[i + 1]) {\n               \
    \ return false;\n            }\n        } else {\n            if (l[i] < l[i +\
    \ 1]) {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;", "\tif (l.size() <= 2) {\n\t\treturn true;\n\t}\n\tint i = 0;\n\tint\
    \ j = 1;\n\tint k = 2;\n\tint n = l.size();\n\twhile (k < n) {\n\t\tif (l[i] <\
    \ l[j] && l[j] < l[k]) {\n\t\t\ti = j;\n\t\t\tj = k;\n\t\t\tk++;\n\t\t} else if\
    \ (l[i] > l[j] && l[j] > l[k]) {\n\t\t\ti = j;\n\t\t\tj = k;\n\t\t\tk++;\n\t\t\
    } else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool is_increasing = l[0] < l[1];\n\
    \    for (int i = 1; i < l.size() - 1; i++) {\n        if (is_increasing) {\n\
    \            if (l[i] > l[i + 1]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    int n = l.size();\n\
    \    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0;\
    \ i < n - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing =\
    \ false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 0; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n    \
    \    return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() < 2) {\n   \
    \     return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n\
    \            return false;\n        }\n        if (!increasing && l[i] < l[i +\
    \ 1]) {\n            return false;\n        }\n    }\n    return true;", "   \
    \ if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    bool increasing = true;\n  \
    \  bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n   \
    \     if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n   \
    \     if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n   \
    \ }\n    return increasing || decreasing;", "    bool increasing = true;\n   \
    \ bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n    \
    \    if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    \
    \    if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1])\n            decreasing = false;\n        if (l[i] > l[i + 1])\n     \
    \       increasing = false;\n    }\n    return increasing || decreasing;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0;\
    \ i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    int i = 0;\n    while (i < l.size()\
    \ - 1 && l[i] == l[i + 1]) {\n        i++;\n    }\n    if (i == l.size() - 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[i] < l[i + 1];\n   \
    \ while (i < l.size() - 1) {\n        if (increasing && l[i] > l[i + 1]) {\n \
    \           return false;\n        }\n        if (!increasing && l[i] < l[i +\
    \ 1]) {\n            return false;\n        }\n        i++;\n    }\n    return\
    \ true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "  if (l.size()\
    \ <= 2) {\n    return true;\n  }\n  int i = 0;\n  while (i < l.size() - 1 && l[i]\
    \ == l[i + 1]) {\n    i++;\n  }\n  if (i == l.size() - 1) {\n    return true;\n\
    \  }\n  bool increasing = l[i] < l[i + 1];\n  for (int j = i + 1; j < l.size()\
    \ - 1; j++) {\n    if (increasing && l[j] > l[j + 1]) {\n      return false;\n\
    \    }\n    if (!increasing && l[j] < l[j + 1]) {\n      return false;\n    }\n\
    \  }\n  return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    int n = l.size();\n    if (n <= 1) {\n        return true;\n    }\n    int\
    \ i = 0;\n    while (i < n - 1 && l[i] == l[i + 1]) {\n        i++;\n    }\n \
    \   if (i == n - 1) {\n        return true;\n    }\n    bool increasing = l[i]\
    \ < l[i + 1];\n    for (int j = i + 1; j < n - 1; j++) {\n        if (increasing)\
    \ {\n            if (l[j] > l[j + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[j] < l[j + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 2) {\n    \
    \    return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n\
    \            return false;\n        }\n        if (!increasing && l[i] < l[i +\
    \ 1]) {\n            return false;\n        }\n    }\n    return true;", "   \
    \ bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n    \
    \    return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n\
    \            if (l[i - 1] > l[i]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i - 1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] >\
    \ l[i + 1]) {\n            return false;\n        }\n        if (!increasing &&\
    \ l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    int\
    \ n = l.size();\n    if (n <= 2) {\n        return true;\n    }\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < n; i++) {\n  \
    \      if (l[i] < l[i-1]) {\n            increasing = false;\n        }\n    \
    \    if (l[i] > l[i-1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 2) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n \
    \   }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    if (l[0] < l[1]) {\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (l[i] > l[i + 1]) {\n      \
    \          return false;\n            }\n        }\n    } else if (l[0] > l[1])\
    \ {\n        for (int i = 1; i < l.size() - 1; i++) {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "  bool increasing = true;\n  bool decreasing = true;\n  for\
    \ (int i = 0; i < l.size() - 1; i++) {\n    if (l[i] < l[i + 1]) {\n      decreasing\
    \ = false;\n    }\n    if (l[i] > l[i + 1]) {\n      increasing = false;\n   \
    \ }\n  }\n  return increasing || decreasing;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n    \
    \    return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    int\
    \ i = 0;\n    while(i < l.size()-1) {\n        if(l[i] < l[i+1]) {\n         \
    \   i++;\n            break;\n        }\n        i++;\n    }\n    while(i < l.size()-1)\
    \ {\n        if(l[i] > l[i+1]) {\n            return false;\n        }\n     \
    \   i++;\n    }\n    return true;", "    if (l.size() <= 1) return true;\n   \
    \ bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n\
    \        if (increasing) {\n            if (l[i] > l[i + 1]) return false;\n \
    \       } else {\n            if (l[i] < l[i + 1]) return false;\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 2) {\n        return true;\n \
    \   }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 2) {\n        return true;\n \
    \   }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "  if (l.size() <= 1) {\n    return true;\n  }\n  bool\
    \ increasing = true;\n  bool decreasing = true;\n  for (int i = 0; i < l.size()\
    \ - 1; i++) {\n    if (l[i] < l[i + 1]) {\n      decreasing = false;\n    }\n\
    \    if (l[i] > l[i + 1]) {\n      increasing = false;\n    }\n  }\n  return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n\
    \            if (l[i-1] > l[i]) {\n                return false;\n           \
    \ }\n        } else {\n            if (l[i-1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 2; i < l.size(); i++) {\n        if (increasing && l[i-1] > l[i])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i-1] <\
    \ l[i]) {\n            return false;\n        }\n    }\n    return true;", " \
    \   if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    int i = 0;\n    while (i\
    \ < l.size() - 1) {\n        if (l[i] == l[i + 1]) {\n            i++;\n     \
    \       continue;\n        }\n        break;\n    }\n    if (i == l.size() - 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[i] < l[i + 1];\n   \
    \ for (int j = i + 1; j < l.size() - 1; j++) {\n        if (increasing) {\n  \
    \          if (l[j] > l[j + 1]) {\n                return false;\n           \
    \ }\n        } else {\n            if (l[j] < l[j + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] >\
    \ l[i + 1]) {\n            return false;\n        }\n        if (!increasing &&\
    \ l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i + 1])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0;\
    \ i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 2) return true;\n    bool increasing = l[0] < l[1];\n    for (int i = 1;\
    \ i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i+1]) return false;\n\
    \        if (!increasing && l[i] < l[i+1]) return false;\n    }\n    return true;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "  bool increasing =\
    \ true;\n  bool decreasing = true;\n  for (int i = 0; i < l.size() - 1; i++) {\n\
    \    if (l[i] < l[i + 1]) {\n      decreasing = false;\n    }\n    if (l[i] >\
    \ l[i + 1]) {\n      increasing = false;\n    }\n  }\n  return increasing || decreasing;",
  "    int n = l.size();\n    if (n <= 1) {\n        return true;\n    }\n    bool\
    \ increasing = l[0] < l[1];\n    for (int i = 1; i < n - 1; i++) {\n        if\
    \ (increasing) {\n            if (l[i] > l[i + 1]) {\n                return false;\n\
    \            }\n        } else {\n            if (l[i] < l[i + 1]) {\n       \
    \         return false;\n            }\n        }\n    }\n    return true;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0;\
    \ i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n        \
    \    if (l[i-1] > l[i]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i-1] < l[i]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n    \
    \    return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++)\
    \ {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    bool inc = true;\n   \
    \ bool dec = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i]\
    \ > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i +\
    \ 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    int c = 0;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > l[i-1]) {\n            c++;\n        } else if (l[i]\
    \ < l[i-1]) {\n            c--;\n        }\n    }\n    return c == 0 || c == -l.size()\
    \ + 1 || c == l.size() - 1;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "  if (l.size() <= 1) {\n    return true;\n  }\n  bool increasing\
    \ = l[0] < l[1];\n  for (int i = 1; i < l.size() - 1; i++) {\n    if (increasing)\
    \ {\n      if (l[i] > l[i + 1]) {\n        return false;\n      }\n    } else\
    \ {\n      if (l[i] < l[i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "  if (l.size() <= 2) {\n    return true;\n  }\n  bool increasing = l[0] < l[1];\n\
    \  for (int i = 2; i < l.size(); i++) {\n    if (increasing) {\n      if (l[i\
    \ - 1] > l[i]) {\n        return false;\n      }\n    } else {\n      if (l[i\
    \ - 1] < l[i]) {\n        return false;\n      }\n    }\n  }\n  return true;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) return true;\n\
    \    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i-1]) increasing = false;\n     \
    \   if (l[i] > l[i-1]) decreasing = false;\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    // Write your code\
    \ here\n    int n = l.size();\n    if(n==1)\n        return true;\n    int i=0;\n\
    \    while(i<n-1){\n        if(l[i]==l[i+1])\n            i++;\n        else\n\
    \            break;\n    }\n    if(i==n-1)\n        return true;\n    bool flag\
    \ = true;\n    if(l[i]>l[i+1])\n        flag = false;\n    for(int j=i+1;j<n-1;j++){\n\
    \        if(flag){\n            if(l[j]>l[j+1])\n                return false;\n\
    \        }\n        else{\n            if(l[j]<l[j+1])\n                return\
    \ false;\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) return true;\n\
    \    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i-1]) increasing = false;\n     \
    \   if (l[i] > l[i-1]) decreasing = false;\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() ==\
    \ 0) {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 2) {\n        return true;\n    }\n \
    \   int direction = l[1] - l[0];\n    for (int i = 2; i < l.size(); i++) {\n \
    \       if (direction == 0) {\n            direction = l[i] - l[i - 1];\n    \
    \        continue;\n        }\n        if (direction * (l[i] - l[i - 1]) < 0)\
    \ {\n            return false;\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "\tbool increasing\
    \ = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < l.size() - 1; i++)\
    \ {\n\t\tif (l[i] < l[i + 1]) {\n\t\t\tdecreasing = false;\n\t\t}\n\t\tif (l[i]\
    \ > l[i + 1]) {\n\t\t\tincreasing = false;\n\t\t}\n\t}\n\treturn increasing ||\
    \ decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n  \
    \  for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() == 0) {\n        return true;\n    }\n    long prev\
    \ = l[0];\n    bool increasing = true;\n    bool decreasing = true;\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < prev) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > prev) {\n            decreasing = false;\n\
    \        }\n        prev = l[i];\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) return\
    \ true;\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1]) increasing = false;\n\
    \        if (l[i] > l[i-1]) decreasing = false;\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 2) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() == 0) {\n    \
    \    return true;\n    }\n    if (l.size() == 1) {\n        return true;\n   \
    \ }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int i\
    \ = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i-1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() == 0) {\n\
    \        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "  if (l.size() <= 2) {\n    return true;\n  }\n  bool increasing\
    \ = l[0] < l[1];\n  for (int i = 1; i < l.size() - 1; i++) {\n    if (increasing)\
    \ {\n      if (l[i] > l[i + 1]) {\n        return false;\n      }\n    } else\
    \ {\n      if (l[i] < l[i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n   \
    \ bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n\
    \        if (increasing) {\n            if (l[i] > l[i + 1]) {\n             \
    \   return false;\n            }\n        } else {\n            if (l[i] < l[i\
    \ + 1]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;", "    if (l.size() <= 2) return true;\n    bool increasing =\
    \ l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) return false;\n        } else {\n      \
    \      if (l[i] < l[i + 1]) return false;\n        }\n    }\n    return true;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() == 0) {\n\
    \        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i +\
    \ 1]) {\n            return false;\n        }\n        if (!increasing && l[i]\
    \ < l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 2) {\n        return true;\n    }\n    int direction = l[1] - l[0];\n    for\
    \ (int i = 2; i < l.size(); i++) {\n        if (direction == 0) {\n          \
    \  direction = l[i] - l[i - 1];\n            continue;\n        }\n        if\
    \ (direction * (l[i] - l[i - 1]) < 0) {\n            return false;\n        }\n\
    \    }\n    return true;"]
stop_tokens:
- "\n}"

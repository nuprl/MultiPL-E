name: HumanEval_57_monotonic
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return True is list elements\
  \ are monotonically increasing or decreasing.\nbool monotonic(std::vector<long>\
  \ l) {\n"
tests: "}\nint main() {\n    auto candidate = monotonic;\n    assert(candidate((std::vector<long>({1,\
  \ 2, 4, 10}))) == (true));\n    assert(candidate((std::vector<long>({1, 2, 4, 20})))\
  \ == (true));\n    assert(candidate((std::vector<long>({1, 20, 4, 10}))) == (false));\n\
  \    assert(candidate((std::vector<long>({4, 1, 0, -10}))) == (true));\n    assert(candidate((std::vector<long>({4,\
  \ 1, 1, 0}))) == (true));\n    assert(candidate((std::vector<long>({1, 2, 3, 2,\
  \ 5, 60}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
  \ 60}))) == (true));\n    assert(candidate((std::vector<long>({9, 9, 9, 9}))) ==\
  \ (true));\n}\n"
completions: ["    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n     \
    \   return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n    \
    \    return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   int i = 0;\n    while (i < l.size() - 1) {\n        if (l[i] == l[i + 1])\
    \ {\n            i++;\n            continue;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            break;\n        }\n        if (l[i] > l[i + 1]) {\n   \
    \         break;\n        }\n    }\n    if (i == l.size() - 1) {\n        return\
    \ true;\n    }\n    int j = i + 1;\n    while (j < l.size() - 1) {\n        if\
    \ (l[j] == l[j + 1]) {\n            j++;\n            continue;\n        }\n \
    \       if (l[i] < l[i + 1]) {\n            if (l[j] < l[j + 1]) {\n         \
    \       j++;\n                continue;\n            }\n            return false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            if (l[j] > l[j + 1]) {\n\
    \                j++;\n                continue;\n            }\n            return\
    \ false;\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 2) {\n    \
    \    return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 2; i < l.size(); i++) {\n        if (increasing) {\n            if (l[i -\
    \ 1] > l[i]) {\n                return false;\n            }\n        } else {\n\
    \            if (l[i - 1] < l[i]) {\n                return false;\n         \
    \   }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n      \
    \  return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1;\
    \ i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i] >\
    \ l[i + 1]) {\n                return false;\n            }\n        } else {\n\
    \            if (l[i] < l[i + 1]) {\n                return false;\n         \
    \   }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n      \
    \  return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1;\
    \ i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i] >\
    \ l[i + 1]) {\n                return false;\n            }\n        } else {\n\
    \            if (l[i] < l[i + 1]) {\n                return false;\n         \
    \   }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n      \
    \  return true;\n    }\n    int inc = 0;\n    int dec = 0;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > l[i-1]) {\n            inc++;\n   \
    \     } else if (l[i] < l[i-1]) {\n            dec++;\n        }\n    }\n    return\
    \ inc == 0 || dec == 0;", "    if (l.size() <= 1) {\n        return true;\n  \
    \  }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1;\
    \ i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n    \
    \            return false;\n            }\n        } else {\n            if (l[i]\
    \ < l[i + 1]) {\n                return false;\n            }\n        }\n   \
    \ }\n    return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    int direction = l[1]\
    \ - l[0];\n    for (int i = 2; i < l.size(); i++) {\n        if (direction ==\
    \ 0) {\n            direction = l[i] - l[i - 1];\n            continue;\n    \
    \    }\n        if (direction * (l[i] - l[i - 1]) < 0) {\n            return false;\n\
    \        }\n    }\n    return true;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n\
    \        return true;\n    }\n    int direction = l[1] - l[0];\n    for (int i\
    \ = 2; i < l.size(); i++) {\n        if (direction == 0) {\n            direction\
    \ = l[i] - l[i - 1];\n            continue;\n        }\n        if (direction\
    \ * (l[i] - l[i - 1]) < 0) {\n            return false;\n        }\n    }\n  \
    \  return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n   \
    \ bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) return\
    \ true;\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1]) increasing = false;\n\
    \        if (l[i] > l[i-1]) decreasing = false;\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    int direction = l[1] - l[0];\n   \
    \ for (int i = 2; i < l.size(); i++) {\n        if (direction == 0) {\n      \
    \      direction = l[i] - l[i - 1];\n            continue;\n        }\n      \
    \  if (direction * (l[i] - l[i - 1]) < 0) {\n            return false;\n     \
    \   }\n    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() == 0) {\n        return true;\n \
    \   }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    int n = l.size();\n\
    \    if (n == 1) return true;\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < n; i++) {\n        if (l[i] < l[i-1]) increasing\
    \ = false;\n        if (l[i] > l[i-1]) decreasing = false;\n    }\n    return\
    \ increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 2) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 2) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n\
    \            if (l[i - 1] > l[i]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i - 1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n        \
    \    if (l[i - 1] > l[i]) {\n                return false;\n            }\n  \
    \      } else {\n            if (l[i - 1] < l[i]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    int i = 0;\n    int j = 1;\n\
    \    int n = l.size();\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    while(j < n) {\n        if(l[i] > l[j]) {\n            increasing = false;\n\
    \        }\n        if(l[i] < l[j]) {\n            decreasing = false;\n     \
    \   }\n        i++;\n        j++;\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    int\
    \ n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < n; i++) {\n  \
    \      if (l[i] < l[i-1]) {\n            increasing = false;\n        }\n    \
    \    if (l[i] > l[i-1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    int n = l.size();\n    if (n == 1)\
    \ {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < n; i++) {\n        if (l[i] < l[i-1]) {\n \
    \           increasing = false;\n        }\n        if (l[i] > l[i-1]) {\n   \
    \         decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() == 0) {\n        return true;\n    }\n    int direction = 0;\n   \
    \ for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n \
    \           if (direction == 0) {\n                direction = 1;\n          \
    \  } else if (direction == -1) {\n                return false;\n            }\n\
    \        } else if (l[i] > l[i + 1]) {\n            if (direction == 0) {\n  \
    \              direction = -1;\n            } else if (direction == 1) {\n   \
    \             return false;\n            }\n        }\n    }\n    return true;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n\
    \            if (l[i - 1] > l[i]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i - 1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] >\
    \ l[i + 1]) {\n            return false;\n        }\n        if (!increasing &&\
    \ l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing)\
    \ {\n            if (l[i-1] > l[i]) {\n                return false;\n       \
    \     }\n        } else {\n            if (l[i-1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++)\
    \ {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) return true;\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) return false;\n        } else {\n            if (l[i] < l[i + 1])\
    \ return false;\n        }\n    }\n    return true;", "    if (l.size() <= 2)\
    \ {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i-1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    bool increasing = true;\n  \
    \  bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n   \
    \     if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n   \
    \     if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n   \
    \ }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n      \
    \  return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++)\
    \ {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n     \
    \   return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "  if (l.size() <= 2) {\n    return true;\n  }\n  bool increasing\
    \ = l[0] < l[1];\n  for (int i = 1; i < l.size() - 1; i++) {\n    if (increasing)\
    \ {\n      if (l[i] > l[i + 1]) {\n        return false;\n      }\n    } else\
    \ {\n      if (l[i] < l[i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) return true;\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1])\
    \ increasing = false;\n        if (l[i] > l[i-1]) decreasing = false;\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 2) {\n    \
    \    return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 2) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 2; i < l.size(); i++) {\n        if (increasing) {\n            if (l[i -\
    \ 1] > l[i]) {\n                return false;\n            }\n        } else {\n\
    \            if (l[i - 1] < l[i]) {\n                return false;\n         \
    \   }\n        }\n    }\n    return true;", "    if (l.size() <= 2) return true;\n\
    \    bool inc = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n \
    \       if (inc) {\n            if (l[i] > l[i+1]) return false;\n        } else\
    \ {\n            if (l[i] < l[i+1]) return false;\n        }\n    }\n    return\
    \ true;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n\
    \            if (l[i - 1] > l[i]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i - 1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i +\
    \ 1]) {\n            return false;\n        }\n        if (!increasing && l[i]\
    \ < l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    int i = 0;\n    while (i\
    \ < l.size() - 1 && l[i] == l[i + 1]) {\n        i++;\n    }\n    if (i == l.size()\
    \ - 1) {\n        return true;\n    }\n    bool increasing = l[i] < l[i + 1];\n\
    \    for (int j = i + 1; j < l.size() - 1; j++) {\n        if (increasing && l[j]\
    \ > l[j + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[j] < l[j + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "  if (l.size() <= 2) {\n    return true;\n  }\n  bool increasing =\
    \ l[0] < l[1];\n  for (int i = 2; i < l.size(); i++) {\n    if (increasing) {\n\
    \      if (l[i - 1] > l[i]) {\n        return false;\n      }\n    } else {\n\
    \      if (l[i - 1] < l[i]) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;", "    bool inc = true;\n    bool dec = true;\n    for (int i = 0; i <\
    \ l.size() - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n       \
    \ }\n    }\n    return inc || dec;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n \
    \   }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++)\
    \ {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!increasing && l[i] < l[i + 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;", "  if (l.size() <= 2) {\n    return\
    \ true;\n  }\n  bool increasing = l[0] < l[1];\n  for (int i = 2; i < l.size();\
    \ i++) {\n    if (increasing) {\n      if (l[i] < l[i - 1]) {\n        return\
    \ false;\n      }\n    } else {\n      if (l[i] > l[i - 1]) {\n        return\
    \ false;\n      }\n    }\n  }\n  return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() < 2) {\n   \
    \     return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i-1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing) {\n\
    \            if (l[i - 1] > l[i]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i - 1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] >\
    \ l[i + 1]) {\n            return false;\n        }\n        if (!increasing &&\
    \ l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n     \
    \   return true;\n    }\n    int direction = l[1] - l[0];\n    for (int i = 2;\
    \ i < l.size(); i++) {\n        if (direction == 0) {\n            direction =\
    \ l[i] - l[i - 1];\n            continue;\n        }\n        if (direction *\
    \ (l[i] - l[i - 1]) < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 2; i < l.size(); i++) {\n        if (increasing)\
    \ {\n            if (l[i - 1] > l[i]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i - 1] < l[i]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 2) {\n    \
    \    return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "  bool increasing = true;\n \
    \ bool decreasing = true;\n  for (int i = 0; i < l.size() - 1; i++) {\n    if\
    \ (l[i] < l[i + 1]) {\n      decreasing = false;\n    }\n    if (l[i] > l[i +\
    \ 1]) {\n      increasing = false;\n    }\n  }\n  return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    int n = l.size();\n\
    \    if (n <= 1) {\n        return true;\n    }\n    bool increasing = l[1] >\
    \ l[0];\n    for (int i = 1; i < n; i++) {\n        if (increasing) {\n      \
    \      if (l[i] < l[i-1]) {\n                return false;\n            }\n  \
    \      } else {\n            if (l[i] > l[i-1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i + 1])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0;\
    \ i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size()\
    \ - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n\
    \        }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;", "    if (l.size() <=\
    \ 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    bool increasing = true;\n  \
    \  bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n   \
    \     if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n   \
    \     if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n   \
    \ }\n    return increasing || decreasing;", "    bool increasing = true;\n   \
    \ bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n    \
    \    if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    \
    \    if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n \
    \   }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n \
    \   }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 0; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    int direction = l[1] - l[0];\n   \
    \ for (int i = 2; i < l.size(); i++) {\n        if (direction == 0) {\n      \
    \      direction = l[i] - l[i - 1];\n            continue;\n        }\n      \
    \  if (direction > 0) {\n            if (l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n        } else {\n            if (l[i] > l[i - 1]) {\n\
    \                return false;\n            }\n        }\n    }\n    return true;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 2)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n    \
    \    return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i\
    \ < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "  if (l.size()\
    \ <= 2) {\n    return true;\n  }\n  bool increasing = l[0] < l[1];\n  for (int\
    \ i = 1; i < l.size() - 1; i++) {\n    if (increasing) {\n      if (l[i] > l[i\
    \ + 1]) {\n        return false;\n      }\n    } else {\n      if (l[i] < l[i\
    \ + 1]) {\n        return false;\n      }\n    }\n  }\n  return true;", "    int\
    \ i = 0;\n    int j = 1;\n    int n = l.size();\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    while (j < n) {\n        if (l[i] > l[j]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[j]) {\n    \
    \        decreasing = false;\n        }\n        i++;\n        j++;\n    }\n \
    \   return increasing || decreasing;", "    int inc = 0;\n    int dec = 0;\n \
    \   for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            inc++;\n        }\n        if (l[i] > l[i + 1]) {\n            dec++;\n\
    \        }\n    }\n    if (inc == l.size() - 1 || dec == l.size() - 1) {\n   \
    \     return true;\n    }\n    return false;", "    if (l.size() <= 2) {\n   \
    \     return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 2) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 2; i < l.size(); i++) {\n\
    \        if (increasing) {\n            if (l[i-1] > l[i]) {\n               \
    \ return false;\n            }\n        } else {\n            if (l[i-1] < l[i])\
    \ {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n          \
    \  decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n          \
    \  increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "\tif\
    \ (l.size() <= 1) {\n\t\treturn true;\n\t}\n\tbool increasing = true;\n\tbool\
    \ decreasing = true;\n\tfor (int i = 0; i < l.size() - 1; i++) {\n\t\tif (l[i]\
    \ < l[i + 1]) {\n\t\t\tdecreasing = false;\n\t\t}\n\t\tif (l[i] > l[i + 1]) {\n\
    \t\t\tincreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;", " \
    \   int n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < n;\
    \ i++) {\n        if (l[i] < l[i-1]) {\n            increasing = false;\n    \
    \    }\n        if (l[i] > l[i-1]) {\n            decreasing = false;\n      \
    \  }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 2) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 2; i < l.size(); i++) {\n        if (increasing) {\n            if (l[i-1]\
    \ > l[i]) {\n                return false;\n            }\n        } else {\n\
    \            if (l[i-1] < l[i]) {\n                return false;\n           \
    \ }\n        }\n    }\n    return true;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!increasing && l[i] < l[i + 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n   \
    \     return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n \
    \       if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n \
    \       if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n \
    \   }\n    return increasing || decreasing;", "    if (l.size() <= 2) {\n    \
    \    return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i-1]) {\n    \
    \        increasing = false;\n        }\n        if (l[i] > l[i-1]) {\n      \
    \      decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    int prev = l[0];\n \
    \   int i = 1;\n    while (i < l.size() && l[i] == prev) {\n        i++;\n   \
    \ }\n    if (i == l.size()) {\n        return true;\n    }\n    bool increasing\
    \ = l[i] > prev;\n    while (i < l.size()) {\n        if (increasing && l[i] <\
    \ prev) {\n            return false;\n        }\n        if (!increasing && l[i]\
    \ > prev) {\n            return false;\n        }\n        prev = l[i];\n    \
    \    i++;\n    }\n    return true;", "    if (l.size() <= 2) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 2; i < l.size();\
    \ i++) {\n        if (increasing) {\n            if (l[i-1] > l[i]) {\n      \
    \          return false;\n            }\n        } else {\n            if (l[i-1]\
    \ < l[i]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 2) {\n        return true;\n    }\n    bool inc = l[1] > l[0];\n\
    \    for (int i = 2; i < l.size(); i++) {\n        if (inc && l[i] < l[i-1]) {\n\
    \            return false;\n        }\n        if (!inc && l[i] > l[i-1]) {\n\
    \            return false;\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 2) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 0; i < l.size() - 1;\
    \ i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n  \
    \      }\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decreasing;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_150_x_or_y
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2)\
    \ {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  else if (n == 3) {\n    return y;\n  }\n\
    \  else if (n % 2 == 0) {\n    return y;\n  }\n  else if (n % 3 == 0) {\n    return\
    \ y;\n  }\n  else {\n    return x;\n  }\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpfwb2iunt: /tmp/tmpfwb2iunt.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) return x;\n    if (n == 3) return x;\n    if (n == 5) return\
    \ x;\n    if (n == 7) return x;\n    if (n == 11) return x;\n    if (n == 13)\
    \ return x;\n    if (n == 17) return x;\n    if (n == 19) return x;\n    if (n\
    \ == 23) return x;\n    if (n == 29) return x;\n    if (n == 31) return x;\n \
    \   if (n == 37) return x;\n    if (n == 41) return x;\n    if (n == 43) return\
    \ x;\n    if (n == 47) return x;\n    if (n == 53) return x;\n    if (n == 59)\
    \ return x;\n    if (n == 61) return x;\n    if (n == 67) return x;\n    if (n\
    \ == 71) return x;\n    if (n == 73) return x;\n    if (n == 79) return x;\n \
    \   if (n == 83) return x;\n    if (n == 89) return x;\n    if (n == 97) return\
    \ x;\n    if (n == 101) return x;\n    if (n == 103) return x;\n    if (n == 107)\
    \ return x;\n    if (n == 109) return x;\n    if (n == 113) return x;\n    if\
    \ (n == 127) return x;\n    if (n == 131) return x;\n    if (n == 137) return\
    \ x;\n    if (n == 139) return x;\n    if (n == 149) return x;\n    if (n == 151)\
    \ return x;\n    if (n == 157) return x;\n    if (n == 163) return x;\n    if\
    \ (n == 167) return x;\n    if (n == 173) return x;\n    if (n == 179) return\
    \ x;\n    if (n == 181) return x;\n    if (n == 191) return x;\n    if (n == 193)\
    \ return x;\n    if (n == 197) return x;\n    if (n == 199) return x;\n    if\
    \ (n ==\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnvhuv0l9.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpnvhuv0l9.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpnvhuv0l9.cpp:53:13:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |     if (n\
    \ ==\n      |        ~    ^\n      |             )\n   54 | }\n      | ~     \
    \       \n/tmp/tmpnvhuv0l9.cpp:54:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpnvhuv0l9.cpp:54:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   54 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 5) return x;\n \
    \ if (n == 7) return y;\n  if (n == 11) return x;\n  if (n == 13) return y;\n\
    \  if (n == 17) return x;\n  if (n == 19) return y;\n  if (n == 23) return x;\n\
    \  if (n == 29) return y;\n  if (n == 31) return x;\n  if (n == 37) return y;\n\
    \  if (n == 41) return x;\n  if (n == 43) return y;\n  if (n == 47) return x;\n\
    \  if (n == 53) return y;\n  if (n == 59) return x;\n  if (n == 61) return y;\n\
    \  if (n == 67) return x;\n  if (n == 71) return y;\n  if (n == 73) return x;\n\
    \  if (n == 79) return y;\n  if (n == 83) return x;\n  if (n == 89) return y;\n\
    \  if (n == 97) return x;\n  if (n == 101) return y;\n  if (n == 103) return x;\n\
    \  if (n == 107) return y;\n  if (n == 109) return x;\n  if (n == 113) return\
    \ y;\n  if (n == 127) return x;\n  if (n == 131) return y;\n  if (n == 137) return\
    \ x;\n  if (n == 139) return y;\n  if (n == 149) return x;\n  if (n == 151) return\
    \ y;\n  if (n == 157) return x;\n  if (n == 163) return y;\n  if (n == 167) return\
    \ x;\n  if (n == 173) return y;\n  if (n == 179) return x;\n  if (n == 181) return\
    \ y;\n  if (n == 191) return x;\n  if (n == 193) return y;\n  if (n == 197) return\
    \ x;\n  if (n == 199) return y;\n  if (n ==\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk7wh2h0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjk7wh2h0.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpjk7wh2h0.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmpjk7wh2h0.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmpjk7wh2h0.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n == 3)\n    return y;\n  else if (n\
    \ == 4)\n    return x;\n  else if (n == 5)\n    return y;\n  else if (n == 6)\n\
    \    return x;\n  else if (n == 7)\n    return y;\n  else if (n == 8)\n    return\
    \ x;\n  else if (n == 9)\n    return y;\n  else if (n == 10)\n    return x;\n\
    \  else if (n == 11)\n    return y;\n  else if (n == 12)\n    return x;\n  else\
    \ if (n == 13)\n    return y;\n  else if (n == 14)\n    return x;\n  else if (n\
    \ == 15)\n    return y;\n  else if (n == 16)\n    return x;\n  else if (n == 17)\n\
    \    return y;\n  else if (n == 18)\n    return x;\n  else if (n == 19)\n    return\
    \ y;\n  else if (n == 20)\n    return x;\n  else if (n == 21)\n    return y;\n\
    \  else if (n == 22)\n    return x;\n  else if (n == 23)\n    return y;\n  else\
    \ if (n == 24)\n    return x;\n  else if (n == 25)\n    return y;\n  else if (n\
    \ == 26)\n    return x;\n  else if (n == 27)\n    return y;\n  else if (n == 28)\n\
    \    return x;\n  else if (n == 29)\n    return y;\n  else if (n == 30)\n    return\
    \ x;\n  else if (n == 31)\n    return y;\n  else if (n == 32)\n    return x;\n\
    \  else if (n == 33)\n    return y;\n  else if (n == 34)\n    return x;\n  else\
    \ if (n == 35)\n    return y;\n  else if (n == 36)\n    return x;\n  else if (n\
    \ == 37)\n    return y;\n  else if (n == 38)\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbff_hcpc.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpbff_hcpc.cpp:80:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmpbff_hcpc.cpp:80:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   80 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077378
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    if (n == 2) {\n        return\
    \ x;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    long i = 3;\n\
    \    while (i * i <= n) {\n        if (n % i == 0) {\n            return y;\n\
    \        }\n        i += 2;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n == 3)\n    return y;\n  else if (n\
    \ % 2 == 0)\n    return y;\n  else if (n % 3 == 0)\n    return x;\n  else\n  \
    \  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpocpu_tg8: /tmp/tmpocpu_tg8.cpp:21: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) return y;\n  long i = 2;\n  while (i < n) {\n    if (n % i == 0)\
    \ return y;\n    i++;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2hhyizoo: /tmp/tmp2hhyizoo.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i < n; i++)\n    if (n % i ==\
    \ 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  return x_or_y(n - 1, x, y)\
    \ + x_or_y(n - 2, x, y);\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpi657cldc: /tmp/tmpi657cldc.cpp:13: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  for\
    \ (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n % 2 == 0) return y;\n\
    \  if (n % 3 == 0) return y;\n  long i = 5;\n  long w = 2;\n  while (i * i <=\
    \ n) {\n    if (n % i == 0) return y;\n    i += w;\n    w = 6 - w;\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp0_uchm2z: /tmp/tmp0_uchm2z.cpp:24: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  long i = 3;\n  while (i * i <= n) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n    i += 2;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmphg_rakgd: /tmp/tmphg_rakgd.cpp:32: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = x;\n  if (n < 2) {\n    result = y;\n  }\n  else {\n    for (long\
    \ i = 2; i < n; i++) {\n      if (n % i == 0) {\n        result = y;\n       \
    \ break;\n      }\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i *\
    \ i <= n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpu6j16xsz: /tmp/tmpu6j16xsz.cpp:24: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 5) return x;\n \
    \ if (n == 7) return y;\n  if (n == 11) return x;\n  if (n == 13) return y;\n\
    \  if (n == 17) return x;\n  if (n == 19) return y;\n  if (n == 23) return x;\n\
    \  if (n == 29) return y;\n  if (n == 31) return x;\n  if (n == 37) return y;\n\
    \  if (n == 41) return x;\n  if (n == 43) return y;\n  if (n == 47) return x;\n\
    \  if (n == 53) return y;\n  if (n == 59) return x;\n  if (n == 61) return y;\n\
    \  if (n == 67) return x;\n  if (n == 71) return y;\n  if (n == 73) return x;\n\
    \  if (n == 79) return y;\n  if (n == 83) return x;\n  if (n == 89) return y;\n\
    \  if (n == 97) return x;\n  if (n == 101) return y;\n  if (n == 103) return x;\n\
    \  if (n == 107) return y;\n  if (n == 109) return x;\n  if (n == 113) return\
    \ y;\n  if (n == 127) return x;\n  if (n == 131) return y;\n  if (n == 137) return\
    \ x;\n  if (n == 139) return y;\n  if (n == 149) return x;\n  if (n == 151) return\
    \ y;\n  if (n == 157) return x;\n  if (n == 163) return y;\n  if (n == 167) return\
    \ x;\n  if (n == 173) return y;\n  if (n == 179) return x;\n  if (n == 181) return\
    \ y;\n  if (n == 191) return x;\n  if (n == 193) return y;\n  if (n == 197) return\
    \ x;\n  if (n == 199) return y;\n  if (n ==\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk7wh2h0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjk7wh2h0.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpjk7wh2h0.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmpjk7wh2h0.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmpjk7wh2h0.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyrxiny07: /tmp/tmpyrxiny07.cpp:16: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvj9f9q90: /tmp/tmpvj9f9q90.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 5) return x;\n \
    \ if (n == 7) return y;\n  if (n == 11) return x;\n  if (n == 13) return y;\n\
    \  if (n == 17) return x;\n  if (n == 19) return y;\n  if (n == 23) return x;\n\
    \  if (n == 29) return y;\n  if (n == 31) return x;\n  if (n == 37) return y;\n\
    \  if (n == 41) return x;\n  if (n == 43) return y;\n  if (n == 47) return x;\n\
    \  if (n == 53) return y;\n  if (n == 59) return x;\n  if (n == 61) return y;\n\
    \  if (n == 67) return x;\n  if (n == 71) return y;\n  if (n == 73) return x;\n\
    \  if (n == 79) return y;\n  if (n == 83) return x;\n  if (n == 89) return y;\n\
    \  if (n == 97) return x;\n  if (n == 101) return y;\n  if (n == 103) return x;\n\
    \  if (n == 107) return y;\n  if (n == 109) return x;\n  if (n == 113) return\
    \ y;\n  if (n == 127) return x;\n  if (n == 131) return y;\n  if (n == 137) return\
    \ x;\n  if (n == 139) return y;\n  if (n == 149) return x;\n  if (n == 151) return\
    \ y;\n  if (n == 157) return x;\n  if (n == 163) return y;\n  if (n == 167) return\
    \ x;\n  if (n == 173) return y;\n  if (n == 179) return x;\n  if (n == 181) return\
    \ y;\n  if (n == 191) return x;\n  if (n == 193) return y;\n  if (n == 197) return\
    \ x;\n  if (n == 199) return y;\n  if (n ==\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk7wh2h0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjk7wh2h0.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpjk7wh2h0.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmpjk7wh2h0.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmpjk7wh2h0.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  for (long i = 5; i * i <= n; i += 6) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n    if (n % (i + 2) == 0) {\n      return y;\n    }\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6cw_i5x7: /tmp/tmp6cw_i5x7.cpp:33: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    if (n == 2) {\n        return\
    \ x;\n    }\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n \
    \           return y;\n        }\n    }\n    return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = 0;\n  if (n == 2) {\n    result = x;\n  } else {\n    result\
    \ = y;\n  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqn1t66ob: /tmp/tmpqn1t66ob.cpp:17: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n % 2 == 0) return y;\n\
    \  if (n % 3 == 0) return y;\n  long d = 5;\n  while (d * d <= n) {\n    if (n\
    \ % d == 0) return y;\n    d += 2;\n    if (n % d == 0) return y;\n    d += 4;\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpun2s3mip: /tmp/tmpun2s3mip.cpp:24: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 4) return x;\n \
    \ if (n == 5) return y;\n  if (n == 6) return x;\n  if (n == 7) return y;\n  if\
    \ (n == 8) return x;\n  if (n == 9) return y;\n  if (n == 10) return x;\n  if\
    \ (n == 11) return y;\n  if (n == 12) return x;\n  if (n == 13) return y;\n  if\
    \ (n == 14) return x;\n  if (n == 15) return y;\n  if (n == 16) return x;\n  if\
    \ (n == 17) return y;\n  if (n == 18) return x;\n  if (n == 19) return y;\n  if\
    \ (n == 20) return x;\n  if (n == 21) return y;\n  if (n == 22) return x;\n  if\
    \ (n == 23) return y;\n  if (n == 24) return x;\n  if (n == 25) return y;\n  if\
    \ (n == 26) return x;\n  if (n == 27) return y;\n  if (n == 28) return x;\n  if\
    \ (n == 29) return y;\n  if (n == 30) return x;\n  if (n == 31) return y;\n  if\
    \ (n == 32) return x;\n  if (n == 33) return y;\n  if (n == 34) return x;\n  if\
    \ (n == 35) return y;\n  if (n == 36) return x;\n  if (n == 37) return y;\n  if\
    \ (n == 38) return x;\n  if (n == 39) return y;\n  if (n == 40) return x;\n  if\
    \ (n == 41) return y;\n  if (n == 42) return x;\n  if (n == 43) return y;\n  if\
    \ (n == 44) return x;\n  if (n == 45) return y;\n  if (n == 46) return x;\n  if\
    \ (n == 47) return y;\n  if (n ==\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplabyhypp.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplabyhypp.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmplabyhypp.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmplabyhypp.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmplabyhypp.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ y;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    if (n % 3 ==\
    \ 0) {\n        return y;\n    }\n    long i = 5;\n    long w = 2;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) {\n            return y;\n        }\n\
    \        i += w;\n        w = 6 - w;\n    }\n    return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplx1l5uig: /tmp/tmplx1l5uig.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ y;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    if (n % 3 ==\
    \ 0) {\n        return y;\n    }\n    long i = 5;\n    long w = 2;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) {\n            return y;\n        }\n\
    \        i += w;\n        w = 6 - w;\n    }\n    return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplx1l5uig: /tmp/tmplx1l5uig.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2hhyizoo: /tmp/tmp2hhyizoo.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i < n; i += 2) {\n  \
    \  if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpm7ly1nqa: /tmp/tmpm7ly1nqa.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvpfzoxhy: /tmp/tmpvpfzoxhy.cpp:15: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) return y;\n    for (long i = 2; i < n; i++) {\n        if (n\
    \ % i == 0) return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n == 3)\n    return y;\n  else if (n\
    \ == 4)\n    return x;\n  else if (n == 5)\n    return y;\n  else if (n == 6)\n\
    \    return x;\n  else if (n == 7)\n    return y;\n  else if (n == 8)\n    return\
    \ x;\n  else if (n == 9)\n    return y;\n  else if (n == 10)\n    return x;\n\
    \  else if (n == 11)\n    return y;\n  else if (n == 12)\n    return x;\n  else\
    \ if (n == 13)\n    return y;\n  else if (n == 14)\n    return x;\n  else if (n\
    \ == 15)\n    return y;\n  else if (n == 16)\n    return x;\n  else if (n == 17)\n\
    \    return y;\n  else if (n == 18)\n    return x;\n  else if (n == 19)\n    return\
    \ y;\n  else if (n == 20)\n    return x;\n  else if (n == 21)\n    return y;\n\
    \  else if (n == 22)\n    return x;\n  else if (n == 23)\n    return y;\n  else\
    \ if (n == 24)\n    return x;\n  else if (n == 25)\n    return y;\n  else if (n\
    \ == 26)\n    return x;\n  else if (n == 27)\n    return y;\n  else if (n == 28)\n\
    \    return x;\n  else if (n == 29)\n    return y;\n  else if (n == 30)\n    return\
    \ x;\n  else if (n == 31)\n    return y;\n  else if (n == 32)\n    return x;\n\
    \  else if (n == 33)\n    return y;\n  else if (n == 34)\n    return x;\n  else\
    \ if (n == 35)\n    return y;\n  else if (n == 36)\n    return x;\n  else if (n\
    \ == 37)\n    return y;\n  else if (n == 38)\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbff_hcpc.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpbff_hcpc.cpp:80:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmpbff_hcpc.cpp:80:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   80 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077378
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ y;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    if (n % 3 ==\
    \ 0) {\n        return y;\n    }\n    long i = 5;\n    long w = 2;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) {\n            return y;\n        }\n\
    \        i += w;\n        w = 6 - w;\n    }\n    return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplx1l5uig: /tmp/tmplx1l5uig.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) return x;\n    if (n == 3) return y;\n    if (n % 2 == 0) return\
    \ y;\n    if (n % 3 == 0) return y;\n    long i = 5;\n    long w = 2;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) return y;\n        i += w;\n       \
    \ w = 6 - w;\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp9s_ejtwj: /tmp/tmp9s_ejtwj.cpp:24: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) return y;\n    for (long i = 2; i < n; i++) {\n        if (n\
    \ % i == 0) return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpzxsj00_y: /tmp/tmpzxsj00_y.cpp:101: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    if (n == 2) {\n        return\
    \ x;\n    }\n    long i;\n    for (i = 2; i < n; i++) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  // TODO: Implement this function\n  if(n==1)\n  {\n    return y;\n  }\n  else\n\
    \  {\n    for(int i=2;i<n;i++)\n    {\n      if(n%i==0)\n      {\n        return\
    \ y;\n      }\n    }\n    return x;\n  }\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ y;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    for (long i\
    \ = 3; i * i <= n; i += 2) {\n        if (n % i == 0) {\n            return y;\n\
    \        }\n    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpzqdp6sbu: /tmp/tmpzqdp6sbu.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpy9h0rvz5: /tmp/tmpy9h0rvz5.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  for (long i = 2; i < n; i++) {\n    if (n % i\
    \ == 0)\n      return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp04x73w8p: /tmp/tmp04x73w8p.cpp:25: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpr69nue5b: /tmp/tmpr69nue5b.cpp:16: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i*i\
    \ <= n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp4kd2be0n: /tmp/tmp4kd2be0n.cpp:24: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n % 2 == 0) {\n    return y;\n \
    \ } else {\n    for (long i = 3; i < n; i += 2) {\n      if (n % i == 0) {\n \
    \       return y;\n      }\n    }\n    return x;\n  }\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpse7fx6bz: /tmp/tmpse7fx6bz.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvpfzoxhy: /tmp/tmpvpfzoxhy.cpp:15: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i *\
    \ i <= n; i += 2)\n    if (n % i == 0) return y;\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp42t18jb7: /tmp/tmp42t18jb7.cpp:23: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i < n; i++)\n    if (n % i ==\
    \ 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  long i = 3;\n  while (i * i <= n) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n    i = i + 2;\n  }\n  return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa9l51lmo: /tmp/tmpa9l51lmo.cpp:32: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = 0;\n  if (n == 2) {\n    result = x;\n  } else {\n    result\
    \ = y;\n  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqn1t66ob: /tmp/tmpqn1t66ob.cpp:17: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  if (n % 2 == 0)\n    return y;\n  for (long i\
    \ = 3; i * i <= n; i += 2)\n    if (n % i == 0)\n      return y;\n  return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmphw5kqbnd: /tmp/tmphw5kqbnd.cpp:26: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n == 3)\n    return y;\n  else if (n\
    \ == 4)\n    return x;\n  else if (n == 5)\n    return y;\n  else if (n == 6)\n\
    \    return x;\n  else if (n == 7)\n    return y;\n  else if (n == 8)\n    return\
    \ x;\n  else if (n == 9)\n    return y;\n  else if (n == 10)\n    return x;\n\
    \  else if (n == 11)\n    return y;\n  else if (n == 12)\n    return x;\n  else\
    \ if (n == 13)\n    return y;\n  else if (n == 14)\n    return x;\n  else if (n\
    \ == 15)\n    return y;\n  else if (n == 16)\n    return x;\n  else if (n == 17)\n\
    \    return y;\n  else if (n == 18)\n    return x;\n  else if (n == 19)\n    return\
    \ y;\n  else if (n == 20)\n    return x;\n  else if (n == 21)\n    return y;\n\
    \  else if (n == 22)\n    return x;\n  else if (n == 23)\n    return y;\n  else\
    \ if (n == 24)\n    return x;\n  else if (n == 25)\n    return y;\n  else if (n\
    \ == 26)\n    return x;\n  else if (n == 27)\n    return y;\n  else if (n == 28)\n\
    \    return x;\n  else if (n == 29)\n    return y;\n  else if (n == 30)\n    return\
    \ x;\n  else if (n == 31)\n    return y;\n  else if (n == 32)\n    return x;\n\
    \  else if (n == 33)\n    return y;\n  else if (n == 34)\n    return x;\n  else\
    \ if (n == 35)\n    return y;\n  else if (n == 36)\n    return x;\n  else if (n\
    \ == 37)\n    return y;\n  else if (n == 38)\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbff_hcpc.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpbff_hcpc.cpp:80:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmpbff_hcpc.cpp:80:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   80 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077378
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = 0;\n  if (n == 2) {\n    result = x;\n  } else {\n    result\
    \ = y;\n  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqn1t66ob: /tmp/tmpqn1t66ob.cpp:17: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 5) return x;\n \
    \ if (n == 7) return y;\n  if (n == 11) return x;\n  if (n == 13) return y;\n\
    \  if (n == 17) return x;\n  if (n == 19) return y;\n  if (n == 23) return x;\n\
    \  if (n == 29) return y;\n  if (n == 31) return x;\n  if (n == 37) return y;\n\
    \  if (n == 41) return x;\n  if (n == 43) return y;\n  if (n == 47) return x;\n\
    \  if (n == 53) return y;\n  if (n == 59) return x;\n  if (n == 61) return y;\n\
    \  if (n == 67) return x;\n  if (n == 71) return y;\n  if (n == 73) return x;\n\
    \  if (n == 79) return y;\n  if (n == 83) return x;\n  if (n == 89) return y;\n\
    \  if (n == 97) return x;\n  if (n == 101) return y;\n  if (n == 103) return x;\n\
    \  if (n == 107) return y;\n  if (n == 109) return x;\n  if (n == 113) return\
    \ y;\n  if (n == 127) return x;\n  if (n == 131) return y;\n  if (n == 137) return\
    \ x;\n  if (n == 139) return y;\n  if (n == 149) return x;\n  if (n == 151) return\
    \ y;\n  if (n == 157) return x;\n  if (n == 163) return y;\n  if (n == 167) return\
    \ x;\n  if (n == 173) return y;\n  if (n == 179) return x;\n  if (n == 181) return\
    \ y;\n  if (n == 191) return x;\n  if (n == 193) return y;\n  if (n == 197) return\
    \ x;\n  if (n == 199) return y;\n  if (n ==\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk7wh2h0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjk7wh2h0.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpjk7wh2h0.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmpjk7wh2h0.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmpjk7wh2h0.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) return y;\n  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n\
    \  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) return y;\n \
    \ }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmppodk7l7k: /tmp/tmppodk7l7k.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  long i = 2;\n  while (i < n) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n    i = i + 1;\n  }\n  return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n % 2 == 0) return y;\n\
    \  if (n % 3 == 0) return y;\n  long d = 5;\n  while (d * d <= n) {\n    if (n\
    \ % d == 0) return y;\n    d += 2;\n    if (n % d == 0) return y;\n    d += 4;\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpun2s3mip: /tmp/tmpun2s3mip.cpp:24: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n <= 1) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ y;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    if (n % 3 ==\
    \ 0) {\n        return y;\n    }\n    long i = 5;\n    long w = 2;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) {\n            return y;\n        }\n\
    \        i += w;\n        w = 6 - w;\n    }\n    return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplx1l5uig: /tmp/tmplx1l5uig.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2)\
    \ {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  long i = 2;\n  while (i * i <= n) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n    i = i + 1;\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 5) return x;\n \
    \ if (n == 7) return y;\n  if (n == 11) return x;\n  if (n == 13) return y;\n\
    \  if (n == 17) return x;\n  if (n == 19) return y;\n  if (n == 23) return x;\n\
    \  if (n == 29) return y;\n  if (n == 31) return x;\n  if (n == 37) return y;\n\
    \  if (n == 41) return x;\n  if (n == 43) return y;\n  if (n == 47) return x;\n\
    \  if (n == 53) return y;\n  if (n == 59) return x;\n  if (n == 61) return y;\n\
    \  if (n == 67) return x;\n  if (n == 71) return y;\n  if (n == 73) return x;\n\
    \  if (n == 79) return y;\n  if (n == 83) return x;\n  if (n == 89) return y;\n\
    \  if (n == 97) return x;\n  if (n == 101) return y;\n  if (n == 103) return x;\n\
    \  if (n == 107) return y;\n  if (n == 109) return x;\n  if (n == 113) return\
    \ y;\n  if (n == 127) return x;\n  if (n == 131) return y;\n  if (n == 137) return\
    \ x;\n  if (n == 139) return y;\n  if (n == 149) return x;\n  if (n == 151) return\
    \ y;\n  if (n == 157) return x;\n  if (n == 163) return y;\n  if (n == 167) return\
    \ x;\n  if (n == 173) return y;\n  if (n == 179) return x;\n  if (n == 181) return\
    \ y;\n  if (n == 191) return x;\n  if (n == 193) return y;\n  if (n == 197) return\
    \ x;\n  if (n == 199) return y;\n  if (n ==\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk7wh2h0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjk7wh2h0.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpjk7wh2h0.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmpjk7wh2h0.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmpjk7wh2h0.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 5) return x;\n \
    \ if (n == 7) return y;\n  if (n == 11) return x;\n  if (n == 13) return y;\n\
    \  if (n == 17) return x;\n  if (n == 19) return y;\n  if (n == 23) return x;\n\
    \  if (n == 29) return y;\n  if (n == 31) return x;\n  if (n == 37) return y;\n\
    \  if (n == 41) return x;\n  if (n == 43) return y;\n  if (n == 47) return x;\n\
    \  if (n == 53) return y;\n  if (n == 59) return x;\n  if (n == 61) return y;\n\
    \  if (n == 67) return x;\n  if (n == 71) return y;\n  if (n == 73) return x;\n\
    \  if (n == 79) return y;\n  if (n == 83) return x;\n  if (n == 89) return y;\n\
    \  if (n == 97) return x;\n  if (n == 101) return y;\n  if (n == 103) return x;\n\
    \  if (n == 107) return y;\n  if (n == 109) return x;\n  if (n == 113) return\
    \ y;\n  if (n == 127) return x;\n  if (n == 131) return y;\n  if (n == 137) return\
    \ x;\n  if (n == 139) return y;\n  if (n == 149) return x;\n  if (n == 151) return\
    \ y;\n  if (n == 157) return x;\n  if (n == 163) return y;\n  if (n == 167) return\
    \ x;\n  if (n == 173) return y;\n  if (n == 179) return x;\n  if (n == 181) return\
    \ y;\n  if (n == 191) return x;\n  if (n == 193) return y;\n  if (n == 197) return\
    \ x;\n  if (n == 199) return y;\n  if (n ==\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk7wh2h0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjk7wh2h0.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpjk7wh2h0.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmpjk7wh2h0.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmpjk7wh2h0.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077379
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n == 4) return x;\n \
    \ if (n == 5) return y;\n  if (n == 6) return x;\n  if (n == 7) return y;\n  if\
    \ (n == 8) return x;\n  if (n == 9) return y;\n  if (n == 10) return x;\n  if\
    \ (n == 11) return y;\n  if (n == 12) return x;\n  if (n == 13) return y;\n  if\
    \ (n == 14) return x;\n  if (n == 15) return y;\n  if (n == 16) return x;\n  if\
    \ (n == 17) return y;\n  if (n == 18) return x;\n  if (n == 19) return y;\n  if\
    \ (n == 20) return x;\n  if (n == 21) return y;\n  if (n == 22) return x;\n  if\
    \ (n == 23) return y;\n  if (n == 24) return x;\n  if (n == 25) return y;\n  if\
    \ (n == 26) return x;\n  if (n == 27) return y;\n  if (n == 28) return x;\n  if\
    \ (n == 29) return y;\n  if (n == 30) return x;\n  if (n == 31) return y;\n  if\
    \ (n == 32) return x;\n  if (n == 33) return y;\n  if (n == 34) return x;\n  if\
    \ (n == 35) return y;\n  if (n == 36) return x;\n  if (n == 37) return y;\n  if\
    \ (n == 38) return x;\n  if (n == 39) return y;\n  if (n == 40) return x;\n  if\
    \ (n == 41) return y;\n  if (n == 42) return x;\n  if (n == 43) return y;\n  if\
    \ (n == 44) return x;\n  if (n == 45) return y;\n  if (n == 46) return x;\n  if\
    \ (n == 47) return y;\n  if (n ==\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplabyhypp.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplabyhypp.cpp:54:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmplabyhypp.cpp:53:11:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   53 |   if (n ==\n\
    \      |      ~    ^\n      |           )\n   54 | }\n      | ~          \n/tmp/tmplabyhypp.cpp:54:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   54 | }\n \
    \     | ^\n/tmp/tmplabyhypp.cpp:54:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   54 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpzxsj00_y: /tmp/tmpzxsj00_y.cpp:101: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ y;\n    }\n    if (n % 2 == 0) {\n        return y;\n    }\n    if (n % 3 ==\
    \ 0) {\n        return y;\n    }\n    long i = 5;\n    long w = 2;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) {\n            return y;\n        }\n\
    \        i += w;\n        w = 6 - w;\n    }\n    return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplx1l5uig: /tmp/tmplx1l5uig.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) return y;\n  if (n == 2) return x;\n  long i = 2;\n  while (i <\
    \ n) {\n    if (n % i == 0) return y;\n    i++;\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpzciq1bp3: /tmp/tmpzciq1bp3.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) return x;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp76xsb1i9: /tmp/tmp76xsb1i9.cpp:23: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    else if (n == 3) {\n       \
    \ return y;\n    }\n    else if (n % 2 == 0) {\n        return y;\n    }\n   \
    \ else if (n % 3 == 0) {\n        return y;\n    }\n    else {\n        return\
    \ x;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpwoi0bqdq: /tmp/tmpwoi0bqdq.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n == 3) {\n    return y;\n  } else\
    \ if (n == 5) {\n    return x;\n  } else if (n == 7) {\n    return y;\n  } else\
    \ if (n == 11) {\n    return x;\n  } else if (n == 13) {\n    return y;\n  } else\
    \ if (n == 17) {\n    return x;\n  } else if (n == 19) {\n    return y;\n  } else\
    \ if (n == 23) {\n    return x;\n  } else if (n == 29) {\n    return y;\n  } else\
    \ if (n == 31) {\n    return x;\n  } else if (n == 37) {\n    return y;\n  } else\
    \ if (n == 41) {\n    return x;\n  } else if (n == 43) {\n    return y;\n  } else\
    \ if (n == 47) {\n    return x;\n  } else if (n == 53) {\n    return y;\n  } else\
    \ if (n == 59) {\n    return x;\n  } else if (n == 61) {\n    return y;\n  } else\
    \ if (n == 67) {\n    return x;\n  } else if (n == 71) {\n    return y;\n  } else\
    \ if (n == 73) {\n    return x;\n  } else if (n == 79) {\n    return y;\n  } else\
    \ if (n == 83) {\n    return x;\n  } else if (n == 89) {\n    return y;\n  } else\
    \ if (n == 97) {\n    return x;\n  } else if (n == 101) {\n    return y;\n  }\
    \ else if (n == 103) {\n    return x;\n  } else if (n == 107) {\n    return y;\n\
    \  } else if (n == 109) {\n    return x;\n  } else if (n == 113) {\n    return\
    \ y;\n  } else if (n == 127) {\n    return x;\n  } else if (n == 131) {\n    return\
    \ y;\n \n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp37ud6pd2.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp37ud6pd2.cpp:73:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   73 | int main() {\n     \
    \ |            ^\n/tmp/tmp37ud6pd2.cpp:85:1: error: expected \u2018}\u2019 at\
    \ end of input\n   85 | }\n      | ^\n/tmp/tmp37ud6pd2.cpp:6:37: note: to match\
    \ this \u2018{\u2019\n    6 | long x_or_y(long n, long x, long y) {\n      | \
    \                                    ^\n/tmp/tmp37ud6pd2.cpp:85:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   85 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if(n == 1) return y;\n    if(n == 2) return x;\n    for(long i = 2; i <=\
    \ n/2; i++) {\n        if(n % i == 0) {\n            return y;\n        }\n  \
    \  }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n % 2 == 0) return y;\n\
    \  if (n % 3 == 0) return y;\n  long d = 5;\n  while (d * d <= n) {\n    if (n\
    \ % d == 0) return y;\n    d += 2;\n    if (n % d == 0) return y;\n    d += 4;\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpun2s3mip: /tmp/tmpun2s3mip.cpp:24: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpr69nue5b: /tmp/tmpr69nue5b.cpp:16: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvj9f9q90: /tmp/tmpvj9f9q90.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n == 3)\n    return y;\n  else if (n\
    \ == 4)\n    return x;\n  else if (n == 5)\n    return y;\n  else if (n == 6)\n\
    \    return x;\n  else if (n == 7)\n    return y;\n  else if (n == 8)\n    return\
    \ x;\n  else if (n == 9)\n    return y;\n  else if (n == 10)\n    return x;\n\
    \  else if (n == 11)\n    return y;\n  else if (n == 12)\n    return x;\n  else\
    \ if (n == 13)\n    return y;\n  else if (n == 14)\n    return x;\n  else if (n\
    \ == 15)\n    return y;\n  else if (n == 16)\n    return x;\n  else if (n == 17)\n\
    \    return y;\n  else if (n == 18)\n    return x;\n  else if (n == 19)\n    return\
    \ y;\n  else if (n == 20)\n    return x;\n  else if (n == 21)\n    return y;\n\
    \  else if (n == 22)\n    return x;\n  else if (n == 23)\n    return y;\n  else\
    \ if (n == 24)\n    return x;\n  else if (n == 25)\n    return y;\n  else if (n\
    \ == 26)\n    return x;\n  else if (n == 27)\n    return y;\n  else if (n == 28)\n\
    \    return x;\n  else if (n == 29)\n    return y;\n  else if (n == 30)\n    return\
    \ x;\n  else if (n == 31)\n    return y;\n  else if (n == 32)\n    return x;\n\
    \  else if (n == 33)\n    return y;\n  else if (n == 34)\n    return x;\n  else\
    \ if (n == 35)\n    return y;\n  else if (n == 36)\n    return x;\n  else if (n\
    \ == 37)\n    return y;\n  else if (n == 38)\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbff_hcpc.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpbff_hcpc.cpp:80:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmpbff_hcpc.cpp:80:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   80 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077378
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvj9f9q90: /tmp/tmpvj9f9q90.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i < n; i++)\n    if (n % i ==\
    \ 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) return y;\n    for (long i = 2; i < n; i++) {\n        if (n\
    \ % i == 0) return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n == 3) {\n    return y;\n  } else\
    \ if (n == 5) {\n    return x;\n  } else if (n == 7) {\n    return y;\n  } else\
    \ if (n == 11) {\n    return x;\n  } else if (n == 13) {\n    return y;\n  } else\
    \ if (n == 17) {\n    return x;\n  } else if (n == 19) {\n    return y;\n  } else\
    \ if (n == 23) {\n    return x;\n  } else if (n == 29) {\n    return y;\n  } else\
    \ if (n == 31) {\n    return x;\n  } else if (n == 37) {\n    return y;\n  } else\
    \ if (n == 41) {\n    return x;\n  } else if (n == 43) {\n    return y;\n  } else\
    \ if (n == 47) {\n    return x;\n  } else if (n == 53) {\n    return y;\n  } else\
    \ if (n == 59) {\n    return x;\n  } else if (n == 61) {\n    return y;\n  } else\
    \ if (n == 67) {\n    return x;\n  } else if (n == 71) {\n    return y;\n  } else\
    \ if (n == 73) {\n    return x;\n  } else if (n == 79) {\n    return y;\n  } else\
    \ if (n == 83) {\n    return x;\n  } else if (n == 89) {\n    return y;\n  } else\
    \ if (n == 97) {\n    return x;\n  } else if (n == 101) {\n    return y;\n  }\
    \ else if (n == 103) {\n    return x;\n  } else if (n == 107) {\n    return y;\n\
    \  } else if (n == 109) {\n    return x;\n  } else if (n == 113) {\n    return\
    \ y;\n  } else if (n == 127) {\n    return x;\n  } else if (n == 131) {\n    return\
    \ y;\n \n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp37ud6pd2.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp37ud6pd2.cpp:73:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   73 | int main() {\n     \
    \ |            ^\n/tmp/tmp37ud6pd2.cpp:85:1: error: expected \u2018}\u2019 at\
    \ end of input\n   85 | }\n      | ^\n/tmp/tmp37ud6pd2.cpp:6:37: note: to match\
    \ this \u2018{\u2019\n    6 | long x_or_y(long n, long x, long y) {\n      | \
    \                                    ^\n/tmp/tmp37ud6pd2.cpp:85:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   85 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    if (n == 2) {\n        return\
    \ x;\n    }\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n\
    \            return y;\n        }\n        i++;\n    }\n    return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i < n; i++)\n    if (n % i ==\
    \ 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n == 3) return y;\n  if (n % 2 == 0) return y;\n\
    \  if (n % 3 == 0) return y;\n  long d = 5;\n  while (d * d <= n) {\n    if (n\
    \ % d == 0) return y;\n    d += 2;\n    if (n % d == 0) return y;\n    d += 4;\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpun2s3mip: /tmp/tmpun2s3mip.cpp:24: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2)\
    \ {\n    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpzymyk3q5: /tmp/tmpzymyk3q5.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n == 3)\n    return y;\n  else if (n\
    \ == 5)\n    return x;\n  else if (n == 7)\n    return y;\n  else if (n == 11)\n\
    \    return x;\n  else if (n == 13)\n    return y;\n  else if (n == 17)\n    return\
    \ x;\n  else if (n == 19)\n    return y;\n  else if (n == 23)\n    return x;\n\
    \  else if (n == 29)\n    return y;\n  else if (n == 31)\n    return x;\n  else\
    \ if (n == 37)\n    return y;\n  else if (n == 41)\n    return x;\n  else if (n\
    \ == 43)\n    return y;\n  else if (n == 47)\n    return x;\n  else if (n == 53)\n\
    \    return y;\n  else if (n == 59)\n    return x;\n  else if (n == 61)\n    return\
    \ y;\n  else if (n == 67)\n    return x;\n  else if (n == 71)\n    return y;\n\
    \  else if (n == 73)\n    return x;\n  else if (n == 79)\n    return y;\n  else\
    \ if (n == 83)\n    return x;\n  else if (n == 89)\n    return y;\n  else if (n\
    \ == 97)\n    return x;\n  else if (n == 101)\n    return y;\n  else if (n ==\
    \ 103)\n    return x;\n  else if (n == 107)\n    return y;\n  else if (n == 109)\n\
    \    return x;\n  else if (n == 113)\n    return y;\n  else if (n == 127)\n  \
    \  return x;\n  else if (n == 131)\n    return y;\n  else if (n == 137)\n    return\
    \ x;\n  else if (n == 139)\n    return y;\n  else if (n == 149)\n    return x;\n\
    \  else if (n == 151)\n    return y;\n  else if (n == 157)\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_kzx86m7.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp_kzx86m7.cpp:80:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmp_kzx86m7.cpp:80:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   80 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n <= 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp8g504_au: /tmp/tmp8g504_au.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  long i = 2;\n  while (i * i <= n) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n    i++;\n  }\n  return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i <= n / 2; i++) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  long i = 2;\n  while (i < n) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n    i = i + 1;\n  }\n  return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpk2yklswq: /tmp/tmpk2yklswq.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = 0;\n  if (n == 2) {\n    result = x;\n  } else {\n    result\
    \ = y;\n  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqn1t66ob: /tmp/tmpqn1t66ob.cpp:17: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return x;\n  }\n  if (n == 2) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return x;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return x;\n    }\n  }\n  return y;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpevzm3a_y: /tmp/tmpevzm3a_y.cpp:25: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077381
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1)\n        return y;\n    if (n == 2)\n        return x;\n    for\
    \ (long i = 2; i < n; i++) {\n        if (n % i == 0)\n            return y;\n\
    \    }\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0)\n    return y;\n  else\n    return x;\n}\nint main() {\n  \
    \  auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp67bwqn55: /tmp/tmp67bwqn55.cpp:15: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660077384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2hhyizoo: /tmp/tmp2hhyizoo.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqbo_3dpk: /tmp/tmpqbo_3dpk.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6er65isu: /tmp/tmp6er65isu.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  long i = 3;\n  while (i * i <= n) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n    i += 2;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmphg_rakgd: /tmp/tmphg_rakgd.cpp:32: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \tlong result = 0;\n\tif (n == 2) {\n\t\tresult = x;\n\t}\n\telse if (n == 3)\
    \ {\n\t\tresult = y;\n\t}\n\telse if (n % 2 == 0) {\n\t\tresult = y;\n\t}\n\t\
    else if (n % 3 == 0) {\n\t\tresult = y;\n\t}\n\telse {\n\t\tresult = x;\n\t}\n\
    \treturn result;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqk0tko4o: /tmp/tmpqk0tko4o.cpp:29: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 4) {\n    return x;\n  }\n  if (n == 5) {\n    return y;\n  }\n  if (n\
    \ == 6) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n ==\
    \ 8) {\n    return x;\n  }\n  if (n == 9) {\n    return y;\n  }\n  if (n == 10)\
    \ {\n    return x;\n  }\n  if (n == 11) {\n    return y;\n  }\n  if (n == 12)\
    \ {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n == 14)\
    \ {\n    return x;\n  }\n  if (n == 15) {\n    return y;\n  }\n  if (n == 16)\
    \ {\n    return x;\n  }\n  if (n == 17) {\n    return y;\n  }\n  if (n == 18)\
    \ {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n == 20)\
    \ {\n    return x;\n  }\n  if (n == 21) {\n    return y;\n  }\n  if (n == 22)\
    \ {\n    return x;\n  }\n  if (n == 23) {\n    return y;\n  }\n  if (n == 24)\
    \ {\n    return x;\n  }\n  if (n == 25) {\n    return y;\n  }\n  if (n == 26)\
    \ {\n    return x;\n  }\n  if (n == 27) {\n    return y;\n  }\n  if (n == 28)\
    \ {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n == 30)\
    \ {\n    return x;\n  }\n  if (n == 31) {\n    return y;\n  }\n \n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmprcuit8jl: /tmp/tmprcuit8jl.cpp:101: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660077384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvzkyxevy: /tmp/tmpvzkyxevy.cpp:34: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660077379

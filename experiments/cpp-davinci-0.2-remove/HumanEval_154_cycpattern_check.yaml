name: HumanEval_154_cycpattern_check
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given 2 words. You\
  \ need to return True if the second word or any of its rotations is a substring\
  \ in the first word\nbool cycpattern_check(std::string a, std::string b) {\n"
tests: "}\nint main() {\n    auto candidate = cycpattern_check;\n    assert(candidate((\"\
  xyzw\"), (\"xyw\")) == (false));\n    assert(candidate((\"yello\"), (\"ell\")) ==\
  \ (true));\n    assert(candidate((\"whattup\"), (\"ptut\")) == (false));\n    assert(candidate((\"\
  efef\"), (\"fee\")) == (true));\n    assert(candidate((\"abab\"), (\"aabb\")) ==\
  \ (false));\n    assert(candidate((\"winemtt\"), (\"tinem\")) == (true));\n}\n"
completions: ["    int n = a.size();\n    int m = b.size();\n    if(m > n) {\n   \
    \     return false;\n    }\n    std::string temp = a + a;\n    if(temp.find(b)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(n < m)\n        return false;\n    b += b;\n    if(b.find(a) != std::string::npos)\n\
    \        return true;\n    return false;", "    if(a.size()!=b.size()) {\n   \
    \     return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.size()!=b.size())\
    \ return false;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ return true;\n    return false;", "    if(a.size()!=b.size())\n        return\
    \ false;\n    std::string temp=b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    int n = a.size();\n    int m =\
    \ b.size();\n    if(m > n) return false;\n    std::string s = a + a;\n    for(int\
    \ i = 0; i < n; i++) {\n        if(s.substr(i, m) == b) return true;\n    }\n\
    \    return false;", "    if(a.length() != b.length()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    // Write your code\
    \ here\n    if(a.size()!=b.size())\n        return false;\n    std::string temp=b+b;\n\
    \    if(temp.find(a)!=std::string::npos)\n        return true;\n    return false;",
  "    std::string bb = b + b;\n    if(bb.find(a) != std::string::npos) {\n      \
    \  return true;\n    }\n    return false;", "    if(a.size()!=b.size()) {\n  \
    \      return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    // Write your code\
    \ here\n    int n = a.length();\n    int m = b.length();\n    if(n<m)\n      \
    \  return false;\n    if(n==m)\n        return a==b;\n    std::string s = a+a;\n\
    \    for(int i=0;i<n;i++){\n        std::string temp = s.substr(i,m);\n      \
    \  if(temp==b)\n            return true;\n    }\n    return false;", "\t// Write\
    \ your code here\n\tint n = a.length();\n\tint m = b.length();\n\tif (n < m) {\n\
    \t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif (temp.find(a) != std::string::npos)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;", "\tstd::string temp = b + b;\n\t\
    if (temp.find(a) != std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;",
  "    // Write your code here\n    int n=a.length();\n    int m=b.length();\n   \
    \ if(n<m)\n        return false;\n    b+=b;\n    if(b.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "\t// Write your code here\n\tint n\
    \ = a.length();\n\tint m = b.length();\n\tif (n < m) {\n\t\treturn false;\n\t\
    }\n\tstd::string s = b + b;\n\tif (s.find(a) != std::string::npos) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "    int n = a.size();\n    int m = b.size();\n\
    \    if(n < m) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    // Write your code here\n    if(a.size() != b.size())\n\
    \        return false;\n    b += b;\n    if(b.find(a) != std::string::npos)\n\
    \        return true;\n    return false;", "    if(a.length()!=b.length()) {\n\
    \        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "\tif(a.length() != b.length())\
    \ {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif(temp.find(a) !=\
    \ std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    // Write\
    \ your code here\n    int n = a.length();\n    int m = b.length();\n    if(m >\
    \ n)\n        return false;\n    for(int i = 0; i < n; i++) {\n        int j =\
    \ 0;\n        int k = i;\n        while(j < m && k < n && a[k] == b[j]) {\n  \
    \          j++;\n            k++;\n        }\n        if(j == m)\n           \
    \ return true;\n    }\n    return false;", "    if(a.length()!=b.length()) {\n\
    \        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.length() != b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", "\t\
    if(a.size() != b.size()) return false;\n\tstd::string temp = b + b;\n\treturn\
    \ (temp.find(a) != std::string::npos);", "    int n = a.size();\n    int m = b.size();\n\
    \    if(n < m) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    // Write your code here\n    int n = a.length();\n   \
    \ int m = b.length();\n    if(m>n)\n        return false;\n    int i,j;\n    for(i=0;i<n;i++)\n\
    \    {\n        if(a[i]==b[0])\n        {\n            j=0;\n            while(j<m\
    \ && a[(i+j)%n]==b[j])\n                j++;\n            if(j==m)\n         \
    \       return true;\n        }\n    }\n    return false;", "    if(a.size() !=\
    \ b.size()) {\n        return false;\n    }\n    std::string temp = b + b;\n \
    \   if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n   \
    \ return false;", "    if(a.size() != b.size()) {\n        return false;\n   \
    \ }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.size()!=b.size())\n\
    \        return false;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    if(a.length()!=b.length())\n \
    \       return false;\n    std::string temp=b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    // Write your code here\n    int\
    \ n = a.length();\n    int m = b.length();\n    if(n < m)\n        return false;\n\
    \    b += b;\n    if(b.find(a) != std::string::npos)\n        return true;\n \
    \   return false;", "    if(a.length() != b.length()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    std::string temp =\
    \ b;\n    for(int i = 0; i < b.length(); i++) {\n        if(a.find(temp) != std::string::npos)\
    \ {\n            return true;\n        }\n        temp = temp.substr(1) + temp[0];\n\
    \    }\n    return false;", "    if(a.size() != b.size()) {\n        return false;\n\
    \    }\n    std::string bb = b + b;\n    if(bb.find(a) != std::string::npos) {\n\
    \        return true;\n    }\n    return false;", "    int n = a.size();\n   \
    \ int m = b.size();\n    if(n < m) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "  // Write your code here\n  int n = a.length();\n\
    \  int m = b.length();\n  if(m>n)\n    return false;\n  string temp = b+b;\n \
    \ if(temp.find(a)!=string::npos)\n    return true;\n  return false;", "    if(a.length()!=b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b;\n    for(int i=0;i<b.length();i++)\
    \ {\n        char ch = temp[0];\n        temp.erase(temp.begin());\n        temp.push_back(ch);\n\
    \        if(temp==a) {\n            return true;\n        }\n    }\n    return\
    \ false;", "\tif(a.length() != b.length()) {\n\t\treturn false;\n\t}\n\tstd::string\
    \ temp = b + b;\n\tif(temp.find(a) != std::string::npos) {\n\t\treturn true;\n\
    \t}\n\treturn false;", "    int n = a.size();\n    int m = b.size();\n    if(n\
    \ < m) return false;\n    std::string s = a + a;\n    for(int i = 0; i < n; i++)\
    \ {\n        std::string t = s.substr(i, m);\n        if(t == b) return true;\n\
    \    }\n    return false;", "\tint n = a.length();\n\tint m = b.length();\n\t\
    if (n < m) {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif (temp.find(a)\
    \ != std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    if(a.length()!=b.length())\
    \ {\n        return false;\n    }\n    else {\n        std::string temp = b;\n\
    \        for(int i=0;i<a.length();i++) {\n            std::rotate(temp.begin(),temp.begin()+1,temp.end());\n\
    \            if(temp==a) {\n                return true;\n            }\n    \
    \    }\n        return false;\n    }", "    if(a.size()!=b.size()) return false;\n\
    \    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos) return true;\n\
    \    return false;", "\tif(a.length()!=b.length()) {\n\t\treturn false;\n\t}\n\
    \tstd::string temp = b+b;\n\tif(temp.find(a)!=std::string::npos) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "\t// Write your code here\n\tint n = a.length();\n\
    \tint m = b.length();\n\tif (n < m) {\n\t\treturn false;\n\t}\n\tstd::string s\
    \ = b + b;\n\tif (s.find(a) != std::string::npos) {\n\t\treturn true;\n\t}\n\t\
    return false;", "    if(a.length() != b.length()) {\n        return false;\n \
    \   }\n    std::string b2 = b + b;\n    if(b2.find(a) != std::string::npos) {\n\
    \        return true;\n    }\n    return false;", "\tif(a.length() < b.length())\
    \ {\n\t\treturn false;\n\t}\n\tstd::string b2 = b + b;\n\tif(b2.find(a) != std::string::npos)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;", "    int n = a.size();\n    int\
    \ m = b.size();\n    if(n < m) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    if(a.length() != b.length()) {\n        return\
    \ false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "\tif(a.length()!=b.length())\
    \ {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif(temp.find(a)!=std::string::npos)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;", "    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    // Write your code\
    \ here\n    int n = a.length();\n    int m = b.length();\n    if(n < m)\n    \
    \    return false;\n    std::string s = b + b;\n    if(s.find(a) != std::string::npos)\n\
    \        return true;\n    return false;", "    int n = a.size();\n    int m =\
    \ b.size();\n    if(m > n) {\n        return false;\n    }\n    std::string s\
    \ = a + a;\n    for(int i = 0; i < n; i++) {\n        if(s.substr(i, m) == b)\
    \ {\n            return true;\n        }\n    }\n    return false;", "    int\
    \ n = a.size();\n    int m = b.size();\n    if(n < m) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    int n = a.size();\n\
    \    int m = b.size();\n    if(m > n) return false;\n    if(m == n) {\n      \
    \  if(a == b) return true;\n        else return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) return true;\n    else\
    \ return false;", "    // Write your code here\n    int n = a.length();\n    int\
    \ m = b.length();\n    if(n < m)\n        return false;\n    std::string s = a\
    \ + a;\n    for(int i = 0; i < n; i++) {\n        if(s.substr(i, m) == b)\n  \
    \          return true;\n    }\n    return false;", "    if(a.length() != b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   std::string temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n \
    \       return true;\n    }\n    return false;", "    if(a.size()!=b.size())\n\
    \        return false;\n    if(a.size()==0)\n        return true;\n    std::string\
    \ temp = b+b;\n    if(temp.find(a)!=std::string::npos)\n        return true;\n\
    \    return false;", "\tstd::string temp = b + b;\n\tif (temp.find(a) != std::string::npos)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;", "    if(a.length()!=b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "\t// Write your code here\n\
    \tif (a.length() < b.length()) {\n\t\treturn false;\n\t}\n\tb += b;\n\tif (b.find(a)\
    \ != std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    // Write\
    \ your code here\n    if(a.length()<b.length())\n        return false;\n    std::string\
    \ temp=b+b;\n    if(temp.find(a)!=std::string::npos)\n        return true;\n \
    \   return false;", "    if(a.length() != b.length()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    // Write your code\
    \ here\n    if(a.length()<b.length())\n        return false;\n    if(a.length()==b.length()){\n\
    \        if(a==b)\n            return true;\n        else\n            return\
    \ false;\n    }\n    int i=0;\n    int j=0;\n    while(i<a.length()){\n      \
    \  if(a[i]==b[j]){\n            i++;\n            j++;\n        }\n        else{\n\
    \            i++;\n            j=0;\n        }\n        if(j==b.length())\n  \
    \          return true;\n    }\n    return false;", "    if(a.size()!=b.size())\
    \ {\n        return false;\n    }\n    std::string temp = b;\n    for(int i=0;i<b.size();i++)\
    \ {\n        temp = temp.substr(1) + temp[0];\n        if(temp == a) {\n     \
    \       return true;\n        }\n    }\n    return false;", "    int n = a.size();\n\
    \    int m = b.size();\n    if(m > n) {\n        return false;\n    }\n    std::string\
    \ temp = a + a;\n    for(int i = 0; i < n; i++) {\n        if(temp.substr(i, m)\
    \ == b) {\n            return true;\n        }\n    }\n    return false;", " \
    \   if(a.length()!=b.length()) {\n        return false;\n    }\n    std::string\
    \ temp = b+b;\n    if(temp.find(a)!=std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    int n = a.size();\n    int m = b.size();\n  \
    \  if(n < m) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    int n = a.size();\n    int m = b.size();\n    if(m > n)\
    \ {\n        return false;\n    }\n    std::string s = a + a;\n    for(int i =\
    \ 0; i < n; i++) {\n        if(s.substr(i, m) == b) {\n            return true;\n\
    \        }\n    }\n    return false;", "    int n = a.size();\n    int m = b.size();\n\
    \    if(n < m) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    // Write your code here\n    int n = a.length();\n   \
    \ int m = b.length();\n    if(m>n)\n        return false;\n    std::string s =\
    \ a+a;\n    int i = 0;\n    int j = 0;\n    while(i<n)\n    {\n        if(s[i]==b[j])\n\
    \        {\n            i++;\n            j++;\n        }\n        else\n    \
    \    {\n            i = i-j+1;\n            j = 0;\n        }\n        if(j==m)\n\
    \            return true;\n    }\n    return false;", "\tif(a.length()!=b.length())\n\
    \t\treturn false;\n\tstd::string temp = b+b;\n\tif(temp.find(a)!=std::string::npos)\n\
    \t\treturn true;\n\treturn false;", "\tif(a.size() != b.size()) {\n\t\treturn\
    \ false;\n\t}\n\tstd::string temp = b + b;\n\tif(temp.find(a) != std::string::npos)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;", "    if(a.length()!=b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.size() != b.size())\
    \ {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   if(a.length()!=b.length()) {\n        return false;\n    }\n    std::string\
    \ temp = b+b;\n    if(temp.find(a)!=std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n < m)\n        return false;\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos)\n        return true;\n\
    \    return false;", "\t// Write your code here\n\tif (a.length() < b.length())\
    \ {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif (temp.find(a) !=\
    \ std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    if(a.size() != b.size()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.length() < b.length())\
    \ return false;\n    std::string c = b + b;\n    if(c.find(a) != std::string::npos)\
    \ return true;\n    return false;", "\t// Write your code here\n    if(a.length()<b.length())\n\
    \        return false;\n    std::string temp=b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    // Write your code here\n    if(a.length()<b.length())\n\
    \        return false;\n    int i=0,j=0;\n    while(i<a.length()){\n        if(a[i]==b[j]){\n\
    \            i++;\n            j++;\n        }\n        else{\n            i=i-j+1;\n\
    \            j=0;\n        }\n        if(j==b.length())\n            return true;\n\
    \    }\n    return false;", "    if(a.length() < b.length()) {\n        return\
    \ false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.length() < b.length())\
    \ return false;\n    std::string bb = b + b;\n    return (bb.find(a) != std::string::npos);",
  "\tif(a.length()!=b.length()) {\n\t\treturn false;\n\t}\n\tstd::string temp = b+b;\n\
    \tif(temp.find(a)!=std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;",
  "    int n = a.size();\n    int m = b.size();\n    if(m > n) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.size() != b.size())\
    \ {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   // Write your code here\n    int n=a.length();\n    int m=b.length();\n  \
    \  if(n<m)\n        return false;\n    b=b+b;\n    if(b.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    int n = a.size();\n    int m =\
    \ b.size();\n    if(m > n) {\n        return false;\n    }\n    for(int i = 0;\
    \ i < n; i++) {\n        if(a[i] == b[0]) {\n            int j = 0;\n        \
    \    while(j < m && a[(i + j) % n] == b[j]) {\n                j++;\n        \
    \    }\n            if(j == m) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;", "    int n = a.size();\n    int m = b.size();\n\
    \    if(m > n) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    if(a.length()!=b.length()) {\n        return false;\n\
    \    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos) {\n\
    \        return true;\n    }\n    return false;", "    int n = a.size();\n   \
    \ int m = b.size();\n    if(n < m) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "\tstd::string temp = b;\n\tfor (int i = 0; i < b.length();\
    \ i++) {\n\t\tstd::rotate(temp.begin(), temp.begin() + 1, temp.end());\n\t\tif\
    \ (a.find(temp) != std::string::npos) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;", "    if(a.length() != b.length()) {\n        return false;\n    }\n\
    \    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n\
    \        return true;\n    }\n    return false;", "\tint n = a.length();\n\tint\
    \ m = b.length();\n\tif (n < m) {\n\t\treturn false;\n\t}\n\tstd::string c = b\
    \ + b;\n\tif (c.find(a) != std::string::npos) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;", "    int n = a.size();\n    int m = b.size();\n    if(n < m) {\n  \
    \      return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   if(a.size() != b.size()) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    // Write your code here\n    if(a.length()<b.length())\n\
    \        return false;\n    std::string temp=b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    if(a.length()!=b.length())\n \
    \       return false;\n    std::string b2=b+b;\n    if(b2.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "\t// Write your code here\n\tint n\
    \ = a.length();\n\tint m = b.length();\n\tif (n < m) {\n\t\treturn false;\n\t\
    }\n\tstd::string s = a + a;\n\tfor (int i = 0; i < n; i++) {\n\t\tstd::string\
    \ temp = s.substr(i, m);\n\t\tif (temp == b) {\n\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;", "    int n = a.size();\n    int m = b.size();\n    if(n <\
    \ m) {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   if(a.length() != b.length()) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    if(a.length()!=b.length())\n        return false;\n\
    \    std::string temp = b + b;\n    if(temp.find(a)!=std::string::npos)\n    \
    \    return true;\n    return false;", "    if(a.length() != b.length()) return\
    \ false;\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ return true;\n    return false;", "\tif(a.size()!=b.size())\n\t\treturn false;\n\
    \tstd::string temp=b+b;\n\tif(temp.find(a)!=std::string::npos)\n\t\treturn true;\n\
    \treturn false;", "    if(a.size()!=b.size())\n        return false;\n    std::string\
    \ temp = b+b;\n    if(temp.find(a)!=std::string::npos)\n        return true;\n\
    \    return false;", "    if(a.size()!=b.size()) return false;\n    if(a.size()==0)\
    \ return true;\n    int i=0,j=0;\n    while(i<a.size() && j<b.size()) {\n    \
    \    if(a[i]==b[j]) {\n            i++;\n            j++;\n        }\n       \
    \ else {\n            i++;\n        }\n    }\n    if(j==b.size()) return true;\n\
    \    return false;", "    int n = a.size();\n    int m = b.size();\n    if(m >\
    \ n) {\n        return false;\n    }\n    std::string temp = a + a;\n    for(int\
    \ i = 0; i < n; i++) {\n        if(temp.substr(i, m) == b) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    // Write your code here\n\
    \    if(a.length()<b.length())\n        return false;\n    std::string temp =\
    \ b+b;\n    if(temp.find(a)!=std::string::npos)\n        return true;\n    return\
    \ false;", "\tif(a.size()!=b.size())\n\t\treturn false;\n\tstd::string temp =\
    \ b+b;\n\tif(temp.find(a)!=std::string::npos)\n\t\treturn true;\n\treturn false;",
  "    // Write your code here\n    if(a.size()!=b.size())\n        return false;\n\
    \    if(a.size()==0)\n        return true;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "\t// Write your code here\n\tint n\
    \ = a.length();\n\tint m = b.length();\n\tif (n < m) {\n\t\treturn false;\n\t\
    }\n\tstd::string s = b + b;\n\tif (s.find(a) != std::string::npos) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "    if(a.size()!=b.size()) return false;\n  \
    \  std::string temp=b+b;\n    if(temp.find(a)!=std::string::npos) return true;\n\
    \    return false;", "\tif(a.size() != b.size()) return false;\n\tstd::string\
    \ temp = b + b;\n\tif(temp.find(a) != std::string::npos) return true;\n\treturn\
    \ false;", "    // Write your code here\n    int n = a.length();\n    int m =\
    \ b.length();\n    if(n < m)\n        return false;\n    string temp = b + b;\n\
    \    if(temp.find(a) != string::npos)\n        return true;\n    return false;",
  "\tint n = a.length();\n\tint m = b.length();\n\tif (n < m) {\n\t\treturn false;\n\
    \t}\n\tstd::string s = b + b;\n\tif (s.find(a) != std::string::npos) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n<m) return false;\n    std::string s = a + a;\n\
    \    for(int i=0;i<n;i++){\n        std::string temp = s.substr(i,m);\n      \
    \  if(temp == b) return true;\n    }\n    return false;", "    int n = a.size();\n\
    \    int m = b.size();\n    if(n < m) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "\tif(a.length()!=b.length()) return false;\n\tstd::string\
    \ temp = b+b;\n\tif(temp.find(a)!=std::string::npos) return true;\n\treturn false;",
  "    if(a.length() != b.length()) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   if(a.size() != b.size()) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n < m)\n        return false;\n    std::string\
    \ s = a + a;\n    int i = 0;\n    int j = 0;\n    while(i < n && j < m) {\n  \
    \      if(s[i] == b[j]) {\n            i++;\n            j++;\n        }\n   \
    \     else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\
    \    if(j == m)\n        return true;\n    return false;", "    int n = a.size();\n\
    \    int m = b.size();\n    if(n < m) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    if(a.size() != b.size()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "\t// Write your code here\n\
    \tif (a.size() != b.size()) {\n\t\treturn false;\n\t}\n\tstd::string temp = b\
    \ + b;\n\tif (temp.find(a) != std::string::npos) {\n\t\treturn true;\n\t}\n\t\
    return false;", "    // Write your code here\n    int n=a.length();\n    int m=b.length();\n\
    \    if(n<m)\n        return false;\n    std::string temp=b+b;\n    if(temp.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "\tint n = a.length();\n\tint m = b.length();\n\
    \tif (n < m) {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif (temp.find(a)\
    \ != std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    if(a.size()!=b.size())\
    \ {\n        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.size()!=b.size())\
    \ {\n        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.length() != b.length())\
    \ return false;\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ return true;\n    return false;", "    if(a.length() != b.length()) {\n    \
    \    return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   int n = a.size();\n    int m = b.size();\n    if(n < m) return false;\n  \
    \  std::string s = a + a;\n    for(int i = 0; i < n; i++) {\n        std::string\
    \ temp = s.substr(i, m);\n        if(temp == b) return true;\n    }\n    return\
    \ false;", "    if(a.size() != b.size()) {\n        return false;\n    }\n   \
    \ std::string temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n   \
    \     return true;\n    }\n    return false;", "    std::string temp = b;\n  \
    \  for(int i = 0; i < b.length(); i++) {\n        temp = temp.substr(1, b.length()\
    \ - 1) + temp[0];\n        if(temp == a) {\n            return true;\n       \
    \ }\n    }\n    return false;", "    // Write your code here\n    if(a.length()\
    \ < b.length())\n        return false;\n    int i = 0, j = 0;\n    while(i < a.length()\
    \ && j < b.length()) {\n        if(a[i] == b[j]) {\n            i++;\n       \
    \     j++;\n        }\n        else {\n            i++;\n        }\n    }\n  \
    \  if(j == b.length())\n        return true;\n    return false;", "\t// Write\
    \ your code here\n\tint n = a.length();\n\tint m = b.length();\n\tif (n < m) {\n\
    \t\treturn false;\n\t}\n\tstd::string s = b + b;\n\tif (s.find(a) != std::string::npos)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;", "  int n = a.size();\n  int m =\
    \ b.size();\n  if(n < m) {\n    return false;\n  }\n  std::string temp = b + b;\n\
    \  if(temp.find(a) != std::string::npos) {\n    return true;\n  }\n  return false;",
  "    if(a.size()!=b.size()) return false;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ return true;\n    return false;", "    int n = a.size();\n    int m = b.size();\n\
    \    if(m > n) {\n        return false;\n    }\n    std::string temp = b;\n  \
    \  for(int i = 0; i < m; i++) {\n        char c = temp[0];\n        for(int j\
    \ = 0; j < m - 1; j++) {\n            temp[j] = temp[j + 1];\n        }\n    \
    \    temp[m - 1] = c;\n        if(temp == a) {\n            return true;\n   \
    \     }\n    }\n    return false;", "    if(a.length() != b.length()) {\n    \
    \    return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   if(a.length()!=b.length()) {\n        return false;\n    }\n    a = a + a;\n\
    \    if(a.find(b)!=std::string::npos) {\n        return true;\n    }\n    return\
    \ false;", "    int n = a.size();\n    int m = b.size();\n    if(n < m) return\
    \ false;\n    std::string c = b + b;\n    if(c.find(a) != std::string::npos) return\
    \ true;\n    return false;", "    if(a.size() != b.size()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    int n = a.size();\n\
    \    int m = b.size();\n    if(m > n) {\n        return false;\n    }\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    if(a.length()<b.length()) {\n        return false;\n\
    \    }\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "\tif(a.length()!=b.length())\n\
    \t\treturn false;\n\tstd::string temp=b+b;\n\tif(temp.find(a)!=std::string::npos)\n\
    \t\treturn true;\n\treturn false;", "    if(a.length() < b.length()) {\n     \
    \   return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a) !=\
    \ std::string::npos) {\n        return true;\n    }\n    return false;", "   \
    \ if(a.size()!=b.size()) return false;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ return true;\n    return false;", "    if(a.size()!=b.size()) {\n        return\
    \ false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.length() != b.length())\
    \ return false;\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ return true;\n    return false;", "    if(a.size()!=b.size()) {\n        return\
    \ false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    std::string temp =\
    \ b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(m>n)\n        return false;\n    std::string\
    \ s = a+a;\n    for(int i=0;i<n;i++){\n        if(s.substr(i,m)==b)\n        \
    \    return true;\n    }\n    return false;", "    std::string temp = a + a;\n\
    \    if(temp.find(b) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "\tif(a.length() == 0 || b.length() == 0) {\n\t\treturn false;\n\
    \t}\n\tstd::string temp = b + b;\n\tif(temp.find(a) != std::string::npos) {\n\t\
    \treturn true;\n\t}\n\treturn false;", "    int n = a.size();\n    int m = b.size();\n\
    \    if(n < m) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    return (temp.find(a) != std::string::npos);", "    if(a.size() != b.size())\
    \ {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   // Write your code here\n    int n=a.length();\n    int m=b.length();\n  \
    \  if(n<m)\n        return false;\n    std::string s=b+b;\n    if(s.find(a)!=std::string::npos)\n\
    \        return true;\n    return false;", "    if(a.size() != b.size()) return\
    \ false;\n    std::string temp = b + b;\n    if(temp.find(a) != std::string::npos)\
    \ return true;\n    return false;", "    if(a.length() < b.length()) {\n     \
    \   return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a) !=\
    \ std::string::npos) {\n        return true;\n    }\n    return false;", "   \
    \ // Write your code here\n    int n=a.length();\n    int m=b.length();\n    if(n!=m)\n\
    \    return false;\n    string s=a+a;\n    if(s.find(b)!=string::npos)\n    return\
    \ true;\n    return false;", "    // Write your code here\n    int n=a.length();\n\
    \    int m=b.length();\n    if(n<m)\n    return false;\n    a=a+a;\n    if(a.find(b)!=std::string::npos)\n\
    \    return true;\n    return false;", "    if(a.size() != b.size()) {\n     \
    \   return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a) !=\
    \ std::string::npos) {\n        return true;\n    }\n    return false;", "\t//\
    \ Write your code here\n    string temp = b;\n    for(int i=0;i<b.length();i++){\n\
    \        char c = temp[0];\n        temp.erase(temp.begin());\n        temp +=\
    \ c;\n        if(temp == a) return true;\n    }\n    return false;", "    // Write\
    \ your code here\n    int n = a.length();\n    int m = b.length();\n    if(n<m)\n\
    \        return false;\n    string temp = b + b;\n    if(temp.find(a) != string::npos)\n\
    \        return true;\n    return false;", "    if(a.length() != b.length()) {\n\
    \        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(n<m) return false;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ return true;\n    return false;", "\tint n = a.length();\n\tint m = b.length();\n\
    \tif (n < m) {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif (temp.find(a)\
    \ != std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    if(a.size()!=b.size())\
    \ return false;\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ return true;\n    return false;", "\tif(a.size()!=b.size()) return false;\n\t\
    std::string temp = b+b;\n\tif(temp.find(a)!=std::string::npos) return true;\n\t\
    return false;", "    if(a.length()!=b.length()) {\n        return false;\n   \
    \ }\n    std::string temp = b + b;\n    if(temp.find(a)!=std::string::npos) {\n\
    \        return true;\n    }\n    return false;", "    int n = a.size();\n   \
    \ int m = b.size();\n    if(n < m) {\n        return false;\n    }\n    std::string\
    \ bb = b + b;\n    if(bb.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    int n = a.size();\n    int m = b.size();\n  \
    \  if(m > n) return false;\n    std::string s = a + a;\n    for(int i = 0; i <\
    \ n; i++) {\n        std::string t = s.substr(i, m);\n        if(t == b) return\
    \ true;\n    }\n    return false;", "    std::string temp = b;\n    for(int i\
    \ = 0; i < b.length(); i++) {\n        if(a.find(temp) != std::string::npos) {\n\
    \            return true;\n        }\n        temp = temp.substr(1, temp.length()\
    \ - 1) + temp[0];\n    }\n    return false;", "\t// Write your code here\n   \
    \ int n=a.length();\n    int m=b.length();\n    if(n<m)\n        return false;\n\
    \    string temp=b+b;\n    if(temp.find(a)!=string::npos)\n        return true;\n\
    \    return false;", "\tif(a.length() != b.length()) {\n\t\treturn false;\n\t\
    }\n\tstd::string bb = b + b;\n\tif(bb.find(a) != std::string::npos) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n < m)\n        return false;\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos)\n        return true;\n\
    \    return false;", "    int n = a.size();\n    int m = b.size();\n    if(m>n)\
    \ {\n        return false;\n    }\n    std::string s = a+a;\n    for(int i=0;i<n;i++)\
    \ {\n        if(s.substr(i,m)==b) {\n            return true;\n        }\n   \
    \ }\n    return false;", "    int n = a.size();\n    int m = b.size();\n    if(n\
    \ < m) {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   int n = a.size();\n    int m = b.size();\n    if(m > n) return false;\n  \
    \  std::string s = a+a;\n    for(int i = 0; i < n; i++) {\n        if(s.substr(i,\
    \ m) == b) return true;\n    }\n    return false;", "    if(a.length()!=b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos)\
    \ {\n        return true;\n    }\n    return false;", "    if(a.length() < b.length())\
    \ {\n        return false;\n    }\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) {\n        return true;\n    }\n    return false;", " \
    \   // Write your code here\n    if(a.size()<b.size())\n        return false;\n\
    \    std::string s=b+b;\n    if(s.find(a)!=std::string::npos)\n        return\
    \ true;\n    return false;", "    if(a.size() != b.size()) return false;\n   \
    \ std::string temp = b + b;\n    if(temp.find(a) != std::string::npos) return\
    \ true;\n    return false;", "    int n = a.size();\n    int m = b.size();\n \
    \   if(n < m) {\n        return false;\n    }\n    std::string c = b + b;\n  \
    \  if(c.find(a) != std::string::npos) {\n        return true;\n    }\n    return\
    \ false;", "    if(a.length() != b.length()) return false;\n    a += a;\n    if(a.find(b)\
    \ != std::string::npos) return true;\n    return false;", "    // Write your code\
    \ here\n    if(a.length()!=b.length())\n    return false;\n    std::string temp=b+b;\n\
    \    if(temp.find(a)!=std::string::npos)\n    return true;\n    return false;",
  "    int n = a.size();\n    int m = b.size();\n    if(n < m) return false;\n   \
    \ std::string b2 = b + b;\n    if(b2.find(a) != std::string::npos) return true;\n\
    \    return false;", "    // Write your code here\n    int n = a.length();\n \
    \   int m = b.length();\n    if(m > n)\n        return false;\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos)\n        return true;\n\
    \    return false;", "\t// Write your code here\n\tif (a.length() < b.length())\
    \ {\n\t\treturn false;\n\t}\n\tstd::string temp = b + b;\n\tif (temp.find(a) !=\
    \ std::string::npos) {\n\t\treturn true;\n\t}\n\treturn false;", "    if(a.length()\
    \ < b.length()) {\n        return false;\n    }\n    std::string temp = b + b;\n\
    \    if(temp.find(a) != std::string::npos) {\n        return true;\n    }\n  \
    \  return false;", "    int len_a = a.length();\n    int len_b = b.length();\n\
    \    if(len_a < len_b) {\n        return false;\n    }\n    std::string temp =\
    \ b + b;\n    if(temp.find(a) != std::string::npos) {\n        return true;\n\
    \    }\n    return false;", "    if(a.length()!=b.length()) return false;\n  \
    \  std::string temp = b+b;\n    if(temp.find(a)!=std::string::npos) return true;\n\
    \    return false;", "    // Write your code here\n    int n = a.length();\n \
    \   int m = b.length();\n    if(n<m)\n        return false;\n    std::string s\
    \ = b + b;\n    if(s.find(a) != std::string::npos)\n        return true;\n   \
    \ return false;", "    if(a.length() != b.length()) return false;\n    std::string\
    \ temp = b + b;\n    if(temp.find(a) != std::string::npos) return true;\n    return\
    \ false;", "    // Write your code here\n    int n = a.length();\n    int m =\
    \ b.length();\n    if(m > n)\n        return false;\n    std::string temp = b\
    \ + b;\n    if(temp.find(a) != std::string::npos)\n        return true;\n    return\
    \ false;", "    // Write your code here\n    if(a.length()<b.length())\n     \
    \   return false;\n    b+=b;\n    if(b.find(a)!=std::string::npos)\n        return\
    \ true;\n    return false;", "    int n = a.size();\n    int m = b.size();\n \
    \   if(n < m) return false;\n    std::string temp = b + b;\n    if(temp.find(a)\
    \ != std::string::npos) return true;\n    return false;"]
stop_tokens:
- "\n}"

name: HumanEval_35_max_element
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element in\
  \ the list.\nlong max_element(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,\
  \ (long)-10}))) == (124));\n}\n"
completions: ["    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_elem = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_elem) {\n            max_elem = l[i];\n        }\n   \
    \ }\n    return max_elem;", "    long max = l[0];\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "  long max = 0;\n  for (int i = 0; i < l.size(); i++) {\n  \
    \  if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long\
    \ max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "  long max\
    \ = l[0];\n  for (int i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n   \
    \   max = l[i];\n    }\n  }\n  return max;", "    long max = l[0];\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "  long max = l[0];\n  for (int i = 1; i\
    \ < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n \
    \ return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "  long max = l[0];\n  for (int i = 1; i < l.size(); i++) {\n\
    \    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ 0;\n    for (auto i : l) {\n        if (i > max) {\n            max = i;\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max_elem = l[0];\n    for (int i\
    \ = 1; i < l.size(); i++) {\n        if (l[i] > max_elem) {\n            max_elem\
    \ = l[i];\n        }\n    }\n    return max_elem;", "    long m = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > m) {\n            m = l[i];\n\
    \        }\n    }\n    return m;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "  long max = l[0];\n  for (int i = 1; i <\
    \ l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "  long max = l[0];\n  for (int i = 1; i < l.size(); i++) {\n    if (l[i]\
    \ > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;", "  long max = l[0];\n \
    \ for (long i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n\
    \    }\n  }\n  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "  long max = l[0];\n  for (int i = 1; i < l.size(); i++) {\n\
    \    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    assert(l.size()\
    \ > 0);\n    long max_elem = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_elem) {\n            max_elem = l[i];\n        }\n   \
    \ }\n    return max_elem;", "    long max = l[0];\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "  long max = l[0];\n  for (int i = 1; i < l.size(); i++) {\n\
    \    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "  long max\
    \ = l[0];\n  for (int i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n   \
    \   max = l[i];\n    }\n  }\n  return max;", "    long max = 0;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "  long max = l[0];\n  for (int i = 1; i <\
    \ l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "  long max = l[0];\n  for (long i = 1; i < l.size(); i++) {\n    if\
    \ (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long max\
    \ = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "  long max = l[0];\n\
    \  for (int i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n\
    \    }\n  }\n  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "  long max = l[0];\n  for (long i = 1; i < l.size(); i++) {\n\
    \    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "  long max = l[0];\n\
    \  for (long i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n\
    \    }\n  }\n  return max;", "  long max = l[0];\n  for (int i = 1; i < l.size();\
    \ i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;",
  "    long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "  long\
    \ max = l[0];\n  for (long i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n\
    \      max = l[i];\n    }\n  }\n  return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    assert(l.size() > 0);\n  \
    \  long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "\tlong\
    \ max = l[0];\n\tfor (int i = 1; i < l.size(); i++) {\n\t\tif (l[i] > max) {\n\
    \t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "  long max = l[0];\n  for (long\
    \ i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n\
    \  }\n  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;"]
stop_tokens:
- "\n}"

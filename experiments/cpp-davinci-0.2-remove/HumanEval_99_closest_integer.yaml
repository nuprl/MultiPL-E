name: HumanEval_99_closest_integer
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ a value (string) representing a number\n// and returns the closest integer to\
  \ it. If the number is equidistant\n// from two integers, round it away from zero.\n\
  // Examples\n// Note:\n// Rounding away from zero means that if the given number\
  \ is equidistant\n// from two integers, the one you should return is the one that\
  \ is the\n// farthest from zero. For example closest_integer(\"14.5\") should\n\
  // return 15 and closest_integer(\"-14.5\") should return -15.\nlong closest_integer(std::string\
  \ value) {\n"
tests: "}\nint main() {\n    auto candidate = closest_integer;\n    assert(candidate((\"\
  10\")) == (10));\n    assert(candidate((\"14.5\")) == (15));\n    assert(candidate((\"\
  -15.5\")) == (-16));\n    assert(candidate((\"15.3\")) == (15));\n    assert(candidate((\"\
  0\")) == (0));\n}\n"
completions: ["  double num = std::stod(value);\n  if (num >= 0) {\n    return std::ceil(num);\n\
    \  } else {\n    return std::floor(num);\n  }", "  int i = 0;\n  int len = value.length();\n\
    \  int sign = 1;\n  if(value[0] == '-'){\n    sign = -1;\n    i++;\n  }\n  int\
    \ num = 0;\n  while(i < len && value[i] != '.'){\n    num = num * 10 + (value[i]\
    \ - '0');\n    i++;\n  }\n  if(i == len)\n    return num * sign;\n  i++;\n  int\
    \ dec = 0;\n  int div = 1;\n  while(i < len){\n    dec = dec * 10 + (value[i]\
    \ - '0');\n    div *= 10;\n    i++;\n  }\n  if(dec * 2 < div)\n    return num\
    \ * sign;\n  else if(dec * 2 == div)\n    return (num + 1) * sign;\n  else\n \
    \   return (num + 1) * sign;", "  double d = std::stod(value);\n  return std::lround(d);",
  "  double num = std::stod(value);\n  if (num < 0) {\n    return std::ceil(num);\n\
    \  }\n  return std::floor(num);", "  // your code here\n  double val = std::stod(value);\n\
    \  if(val >= 0){\n    return std::ceil(val);\n  }\n  else{\n    return std::floor(val);\n\
    \  }", "  double d = std::stod(value);\n  return std::round(d);", "  // your code\
    \ here\n  double num = std::stod(value);\n  double diff = num - floor(num);\n\
    \  if (diff < 0.5) {\n    return floor(num);\n  } else {\n    return ceil(num);\n\
    \  }", "  double d = std::stod(value);\n  return std::round(d);", "\tdouble d\
    \ = stod(value);\n\tlong l = (long)d;\n\tif (d - l >= 0.5)\n\t\treturn l + 1;\n\
    \telse\n\t\treturn l;", "  // your code here\n  double x = std::stod(value);\n\
    \  if(x>0)\n  {\n    return std::ceil(x);\n  }\n  else\n  {\n    return std::floor(x);\n\
    \  }", "  int i = 0;\n  int len = value.length();\n  int sign = 1;\n  if(value[0]\
    \ == '-') {\n    sign = -1;\n    i++;\n  }\n  int num = 0;\n  while(i < len &&\
    \ value[i] != '.') {\n    num = num * 10 + (value[i] - '0');\n    i++;\n  }\n\
    \  if(i == len) {\n    return num * sign;\n  }\n  i++;\n  int decimal = 0;\n \
    \ int mult = 1;\n  while(i < len) {\n    decimal = decimal * 10 + (value[i] -\
    \ '0');\n    mult *= 10;\n    i++;\n  }\n  int diff = decimal * 10 / mult;\n \
    \ if(diff >= 5) {\n    num++;\n  }\n  return num * sign;", "  // your code here\n\
    \  int i = 0;\n  int j = 0;\n  int k = 0;\n  int l = 0;\n  int m = 0;\n  int n\
    \ = 0;\n  int o = 0;\n  int p = 0;\n  int q = 0;\n  int r = 0;\n  int s = 0;\n\
    \  int t = 0;\n  int u = 0;\n  int v = 0;\n  int w = 0;\n  int x = 0;\n  int y\
    \ = 0;\n  int z = 0;\n  int aa = 0;\n  int bb = 0;\n  int cc = 0;\n  int dd =\
    \ 0;\n  int ee = 0;\n  int ff = 0;\n  int gg = 0;\n  int hh = 0;\n  int ii = 0;\n\
    \  int jj = 0;\n  int kk = 0;\n  int ll = 0;\n  int mm = 0;\n  int nn = 0;\n \
    \ int oo = 0;\n  int pp = 0;\n  int qq = 0;\n  int rr = 0;\n  int ss = 0;\n  int\
    \ tt = 0;\n  int uu = 0;\n  int vv = 0;\n  int ww = 0;\n  int xx = 0;\n  int yy\
    \ = 0;\n  int zz = 0;\n  int aaa = 0;\n  int bbb = 0;\n  int ccc = 0;\n  int ddd\
    \ = 0;\n  int eee = 0;\n  int fff = 0;\n  int ggg = 0;\n  int hhh = 0;\n  int\
    \ iii = 0;\n  int jjj = 0;\n  int kkk = 0;\n  int lll = 0;\n  int mmm = 0;\n \
    \ int nnn = 0;\n  int ooo = 0;\n  int ppp = 0;\n  int qqq = 0;\n  int rrr = 0;\n\
    \  int sss = 0;\n  int ttt = 0;\n  int uuu = 0;\n  int vvv = 0;\n  int www = 0",
  "  double d = std::stod(value);\n  return std::lround(d);", "  double num = std::stod(value);\n\
    \  return (long)round(num);", "  double num = std::stod(value);\n  double floor\
    \ = std::floor(num);\n  double ceil = std::ceil(num);\n  if (num - floor < ceil\
    \ - num) {\n    return floor;\n  } else {\n    return ceil;\n  }", "  double val\
    \ = std::stod(value);\n  if (val < 0) {\n    return (long) (val - 0.5);\n  }\n\
    \  return (long) (val + 0.5);", "  double d = std::stod(value);\n  return std::round(d);",
  "  double num = std::stod(value);\n  return std::round(num);", "    double num =\
    \ std::stod(value);\n    long int_num = (long)num;\n    if(num - int_num >= 0.5)\n\
    \        return int_num + 1;\n    else\n        return int_num;", "  double d\
    \ = std::stod(value);\n  return std::lround(d);", "  // your code here\n  double\
    \ val = std::stod(value);\n  if(val>0){\n    return std::ceil(val);\n  }\n  else{\n\
    \    return std::floor(val);\n  }", "  double d = std::stod(value);\n  return\
    \ std::lround(d);", "    int len = value.length();\n    int i = 0;\n    int flag\
    \ = 0;\n    int flag1 = 0;\n    int flag2 = 0;\n    int flag3 = 0;\n    int flag4\
    \ = 0;\n    int flag5 = 0;\n    int flag6 = 0;\n    int flag7 = 0;\n    int flag8\
    \ = 0;\n    int flag9 = 0;\n    int flag10 = 0;\n    int flag11 = 0;\n    int\
    \ flag12 = 0;\n    int flag13 = 0;\n    int flag14 = 0;\n    int flag15 = 0;\n\
    \    int flag16 = 0;\n    int flag17 = 0;\n    int flag18 = 0;\n    int flag19\
    \ = 0;\n    int flag20 = 0;\n    int flag21 = 0;\n    int flag22 = 0;\n    int\
    \ flag23 = 0;\n    int flag24 = 0;\n    int flag25 = 0;\n    int flag26 = 0;\n\
    \    int flag27 = 0;\n    int flag28 = 0;\n    int flag29 = 0;\n    int flag30\
    \ = 0;\n    int flag31 = 0;\n    int flag32 = 0;\n    int flag33 = 0;\n    int\
    \ flag34 = 0;\n    int flag35 = 0;\n    int flag36 = 0;\n    int flag37 = 0;\n\
    \    int flag38 = 0;\n    int flag39 = 0;\n    int flag40 = 0;\n    int flag41\
    \ = 0;\n    int flag42 = 0;\n    int flag43 = 0;\n    int flag44 = 0;\n    int\
    \ flag45 = 0;\n    int flag46 = 0;\n    int flag47 = 0;\n    int flag48 = 0;\n\
    \    int flag49 = 0;\n    int flag50 = 0;\n    int flag51 = 0;\n    int flag52\
    \ = 0;\n    int flag53 = 0;\n    int flag54 = 0;\n    int flag55 = 0;\n    int\
    \ flag56 = 0;\n    int flag57 = 0;\n    int flag58 = 0;\n    int flag59 = 0;\n\
    \    int flag60 = 0;\n    int flag61 = 0;\n", "  double val = std::stod(value);\n\
    \  return std::lround(val);", "  int i = 0;\n  int j = value.size() - 1;\n  int\
    \ k = 0;\n  int l = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n  int p = 0;\n\
    \  int q = 0;\n  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u = 0;\n  int v\
    \ = 0;\n  int w = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n  int aa = 0;\n\
    \  int ab = 0;\n  int ac = 0;\n  int ad = 0;\n  int ae = 0;\n  int af = 0;\n \
    \ int ag = 0;\n  int ah = 0;\n  int ai = 0;\n  int aj = 0;\n  int ak = 0;\n  int\
    \ al = 0;\n  int am = 0;\n  int an = 0;\n  int ao = 0;\n  int ap = 0;\n  int aq\
    \ = 0;\n  int ar = 0;\n  int as = 0;\n  int at = 0;\n  int au = 0;\n  int av =\
    \ 0;\n  int aw = 0;\n  int ax = 0;\n  int ay = 0;\n  int az = 0;\n  int ba = 0;\n\
    \  int bb = 0;\n  int bc = 0;\n  int bd = 0;\n  int be = 0;\n  int bf = 0;\n \
    \ int bg = 0;\n  int bh = 0;\n  int bi = 0;\n  int bj = 0;\n  int bk = 0;\n  int\
    \ bl = 0;\n  int bm = 0;\n  int bn = 0;\n  int bo = 0;\n  int bp = 0;\n  int bq\
    \ = 0;\n  int br = 0;\n  int bs = 0;\n  int bt = 0;\n  int bu = 0;\n  int bv =\
    \ 0;\n  int bw = 0;\n  int bx = 0;\n  int by = 0;\n ", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  double num = std::stod(value);\n  return std::lround(num);",
  "  double d = std::stod(value);\n  return std::lround(d);", "  int i = 0;\n  int\
    \ j = 0;\n  int k = 0;\n  int l = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n\
    \  int p = 0;\n  int q = 0;\n  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u\
    \ = 0;\n  int v = 0;\n  int w = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n\
    \  int aa = 0;\n  int ab = 0;\n  int ac = 0;\n  int ad = 0;\n  int ae = 0;\n \
    \ int af = 0;\n  int ag = 0;\n  int ah = 0;\n  int ai = 0;\n  int aj = 0;\n  int\
    \ ak = 0;\n  int al = 0;\n  int am = 0;\n  int an = 0;\n  int ao = 0;\n  int ap\
    \ = 0;\n  int aq = 0;\n  int ar = 0;\n  int as = 0;\n  int at = 0;\n  int au =\
    \ 0;\n  int av = 0;\n  int aw = 0;\n  int ax = 0;\n  int ay = 0;\n  int az = 0;\n\
    \  int ba = 0;\n  int bb = 0;\n  int bc = 0;\n  int bd = 0;\n  int be = 0;\n \
    \ int bf = 0;\n  int bg = 0;\n  int bh = 0;\n  int bi = 0;\n  int bj = 0;\n  int\
    \ bk = 0;\n  int bl = 0;\n  int bm = 0;\n  int bn = 0;\n  int bo = 0;\n  int bp\
    \ = 0;\n  int bq = 0;\n  int br = 0;\n  int bs = 0;\n  int bt = 0;\n  int bu =\
    \ 0;\n  int bv = 0;\n  int bw = 0;\n  int bx = 0;\n  int by = 0;\n  int bz = 0",
  "  double n = stod(value);\n  double n1 = floor(n);\n  double n2 = ceil(n);\n  if(n\
    \ - n1 > n2 - n)\n    return n2;\n  else\n    return n1;", "  double num = std::stod(value);\n\
    \  double floor_num = std::floor(num);\n  double ceil_num = std::ceil(num);\n\
    \  if (num - floor_num < ceil_num - num) {\n    return floor_num;\n  } else {\n\
    \    return ceil_num;\n  }", "    double val = std::stod(value);\n    return std::round(val);",
  "  double num = std::stod(value);\n  long int_num = (long)num;\n  double diff =\
    \ num - int_num;\n  if (diff >= 0.5) {\n    return int_num + 1;\n  } else {\n\
    \    return int_num;\n  }", "  double val = std::stod(value);\n  if(val > 0)\n\
    \    return std::ceil(val);\n  else\n    return std::floor(val);", "  double num\
    \ = std::stod(value);\n  return std::round(num);", "  int sign = 1;\n  if (value[0]\
    \ == '-') {\n    sign = -1;\n    value = value.substr(1);\n  }\n  int dot = value.find('.');\n\
    \  if (dot == std::string::npos) {\n    return sign * std::stol(value);\n  }\n\
    \  long integer = std::stol(value.substr(0, dot));\n  long decimal = std::stol(value.substr(dot\
    \ + 1));\n  if (decimal >= 5) {\n    return sign * (integer + 1);\n  }\n  return\
    \ sign * integer;", "  double d = std::stod(value);\n  return std::round(d);",
  "  double num = std::stod(value);\n  return std::lround(num);", "  // your code\
    \ here\n  double d = std::stod(value);\n  return std::round(d);", "  double val\
    \ = std::stod(value);\n  return std::round(val);", "  // your code here\n  double\
    \ d = std::stod(value);\n  return std::round(d);", "  // Your code here\n  double\
    \ d = std::stod(value);\n  return std::lround(d);", "  double d = std::stod(value);\n\
    \  return std::round(d);", "  double num = std::stod(value);\n  return (num >\
    \ 0) ? std::ceil(num) : std::floor(num);", "  double d = std::stod(value);\n \
    \ return std::lround(d);", "  // your code here\n  double val = std::stod(value);\n\
    \  if(val < 0)\n    return std::ceil(val);\n  else\n    return std::floor(val);",
  "  double d = std::stod(value);\n  return std::lround(d);", "  // Your code here\n\
    \  long result = 0;\n  double value_double = std::stod(value);\n  if(value_double\
    \ > 0){\n    result = std::ceil(value_double);\n  }else{\n    result = std::floor(value_double);\n\
    \  }\n  return result;", "  double num = std::stod(value);\n  return (long)std::round(num);",
  "  double num = std::stod(value);\n  long int_num = std::lround(num);\n  return\
    \ int_num;", "  double num = std::stod(value);\n  return std::round(num);", " \
    \ double val = std::stod(value);\n  return val > 0 ? std::ceil(val) : std::floor(val);",
  "  double d = std::stod(value);\n  long l = std::lround(d);\n  return l;", "  double\
    \ val = std::stod(value);\n  if (val < 0) {\n    return std::ceil(val);\n  }\n\
    \  return std::floor(val);", "  long val = std::stol(value);\n  long int_val =\
    \ (long)val;\n  long dec_val = val - int_val;\n  if (dec_val >= 0.5) {\n    return\
    \ int_val + 1;\n  } else {\n    return int_val;\n  }", "  // your code here\n\
    \  std::stringstream ss(value);\n  double d;\n  ss >> d;\n  if (d < 0)\n    return\
    \ (long) ceil(d);\n  else\n    return (long) floor(d);", "  double d = stod(value);\n\
    \  return d > 0 ? ceil(d) : floor(d);", "  double val = std::stod(value);\n  return\
    \ (val > 0) ? std::ceil(val) : std::floor(val);", "  double num = std::stod(value);\n\
    \  if (num < 0) {\n    return std::ceil(num);\n  }\n  return std::floor(num);",
  "  double d = std::stod(value);\n  return std::round(d);", "  double val = std::stod(value);\n\
    \  long int_val = std::lround(val);\n  return int_val;", "  double num = std::stod(value);\n\
    \  if (num > 0) {\n    return std::ceil(num);\n  } else {\n    return std::floor(num);\n\
    \  }", "  double num = std::stod(value);\n  long round_num = std::round(num);\n\
    \  return round_num;", "  // your code here\n  int len = value.length();\n  int\
    \ i = 0;\n  int flag = 0;\n  if(value[0] == '-')\n  {\n    flag = 1;\n    i++;\n\
    \  }\n  int j = 0;\n  int k = 0;\n  while(value[i] != '.')\n  {\n    i++;\n  \
    \  j++;\n  }\n  i++;\n  while(i < len)\n  {\n    i++;\n    k++;\n  }\n  std::string\
    \ s1 = value.substr(flag,j);\n  std::string s2 = value.substr(j+1,k);\n  int num1\
    \ = std::stoi(s1);\n  int num2 = std::stoi(s2);\n  if(num2 >= 50)\n  {\n    if(flag\
    \ == 1)\n    {\n      return -(num1+1);\n    }\n    else\n    {\n      return\
    \ num1+1;\n    }\n  }\n  else\n  {\n    if(flag == 1)\n    {\n      return -num1;\n\
    \    }\n    else\n    {\n      return num1;\n    }\n  }", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  double num = std::stod(value);\n  if(num < 0)\n\
    \    return (long)num - 1;\n  else\n    return (long)num + 1;", "    double d\
    \ = std::stod(value);\n    return std::lround(d);", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  // Your code here\n  double num = std::stod(value);\n\
    \  if(num < 0)\n    return ceil(num);\n  else\n    return floor(num);", "  double\
    \ x = std::stod(value);\n  if (x < 0) {\n    return std::ceil(x);\n  }\n  return\
    \ std::floor(x);", "  double d = std::stod(value);\n  return std::lround(d);",
  "  double val = std::stod(value);\n  return val >= 0 ? std::ceil(val) : std::floor(val);",
  "  double num = std::stod(value);\n  if(num < 0) {\n    num -= 0.5;\n  } else {\n\
    \    num += 0.5;\n  }\n  return (long)num;", "  double val = std::stod(value);\n\
    \  double diff = val - std::floor(val);\n  if (diff < 0.5) {\n    return std::floor(val);\n\
    \  } else {\n    return std::ceil(val);\n  }", "  double d = std::stod(value);\n\
    \  return std::round(d);", "    double num = std::stod(value);\n    if(num < 0)\n\
    \        return std::ceil(num);\n    else\n        return std::floor(num);", "\t\
    double d = std::stod(value);\n\treturn std::round(d);", "  int i = 0;\n  int j\
    \ = 0;\n  int k = 0;\n  int l = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n\
    \  int p = 0;\n  int q = 0;\n  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u\
    \ = 0;\n  int v = 0;\n  int w = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n\
    \  int aa = 0;\n  int ab = 0;\n  int ac = 0;\n  int ad = 0;\n  int ae = 0;\n \
    \ int af = 0;\n  int ag = 0;\n  int ah = 0;\n  int ai = 0;\n  int aj = 0;\n  int\
    \ ak = 0;\n  int al = 0;\n  int am = 0;\n  int an = 0;\n  int ao = 0;\n  int ap\
    \ = 0;\n  int aq = 0;\n  int ar = 0;\n  int as = 0;\n  int at = 0;\n  int au =\
    \ 0;\n  int av = 0;\n  int aw = 0;\n  int ax = 0;\n  int ay = 0;\n  int az = 0;\n\
    \  int ba = 0;\n  int bb = 0;\n  int bc = 0;\n  int bd = 0;\n  int be = 0;\n \
    \ int bf = 0;\n  int bg = 0;\n  int bh = 0;\n  int bi = 0;\n  int bj = 0;\n  int\
    \ bk = 0;\n  int bl = 0;\n  int bm = 0;\n  int bn = 0;\n  int bo = 0;\n  int bp\
    \ = 0;\n  int bq = 0;\n  int br = 0;\n  int bs = 0;\n  int bt = 0;\n  int bu =\
    \ 0;\n  int bv = 0;\n  int bw = 0;\n  int bx = 0;\n  int by = 0;\n  int bz = 0",
  "\tdouble val = std::stod(value);\n\treturn std::lround(val);", "  double x = std::stod(value);\n\
    \  return std::round(x);", "  double num = std::stod(value);\n  return std::round(num);",
  "  double val = std::stod(value);\n  if (val >= 0) {\n    return std::ceil(val);\n\
    \  } else {\n    return std::floor(val);\n  }", "  double val = std::stod(value);\n\
    \  return std::round(val);", "  double d = std::stod(value);\n  return std::lround(d);",
  "  double num = std::stod(value);\n  if (num < 0) {\n    return std::ceil(num);\n\
    \  }\n  return std::floor(num);", "  double num = std::stod(value);\n  if (num\
    \ - (int)num < 0.5) {\n    return (int)num;\n  } else {\n    return (int)num +\
    \ 1;\n  }", "  std::stringstream ss(value);\n  double d;\n  ss >> d;\n  return\
    \ std::lround(d);", "  int sign = 1;\n  if (value[0] == '-') {\n    sign = -1;\n\
    \    value = value.substr(1);\n  }\n  int dot_pos = value.find('.');\n  int len\
    \ = value.length();\n  int whole = std::stoi(value.substr(0, dot_pos));\n  int\
    \ decimal = std::stoi(value.substr(dot_pos + 1, len - dot_pos - 1));\n  if (decimal\
    \ >= 5) {\n    whole += 1;\n  }\n  return whole * sign;", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  int i = 0;\n  int j = 0;\n  int k = 0;\n  int l\
    \ = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n  int p = 0;\n  int q = 0;\n\
    \  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u = 0;\n  int v = 0;\n  int w\
    \ = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n  int aa = 0;\n  int ab = 0;\n\
    \  int ac = 0;\n  int ad = 0;\n  int ae = 0;\n  int af = 0;\n  int ag = 0;\n \
    \ int ah = 0;\n  int ai = 0;\n  int aj = 0;\n  int ak = 0;\n  int al = 0;\n  int\
    \ am = 0;\n  int an = 0;\n  int ao = 0;\n  int ap = 0;\n  int aq = 0;\n  int ar\
    \ = 0;\n  int as = 0;\n  int at = 0;\n  int au = 0;\n  int av = 0;\n  int aw =\
    \ 0;\n  int ax = 0;\n  int ay = 0;\n  int az = 0;\n  int ba = 0;\n  int bb = 0;\n\
    \  int bc = 0;\n  int bd = 0;\n  int be = 0;\n  int bf = 0;\n  int bg = 0;\n \
    \ int bh = 0;\n  int bi = 0;\n  int bj = 0;\n  int bk = 0;\n  int bl = 0;\n  int\
    \ bm = 0;\n  int bn = 0;\n  int bo = 0;\n  int bp = 0;\n  int bq = 0;\n  int br\
    \ = 0;\n  int bs = 0;\n  int bt = 0;\n  int bu = 0;\n  int bv = 0;\n  int bw =\
    \ 0;\n  int bx = 0;\n  int by = 0;\n  int bz = 0", "  // your code here\n  double\
    \ d = std::stod(value);\n  return std::lround(d);", "  double val = std::stod(value);\n\
    \  return std::round(val);", "  double d = std::stod(value);\n  return std::lround(d);",
  "  // your code here\n  int i = 0;\n  int j = 0;\n  int k = 0;\n  int l = 0;\n \
    \ int m = 0;\n  int n = 0;\n  int o = 0;\n  int p = 0;\n  int q = 0;\n  int r\
    \ = 0;\n  int s = 0;\n  int t = 0;\n  int u = 0;\n  int v = 0;\n  int w = 0;\n\
    \  int x = 0;\n  int y = 0;\n  int z = 0;\n  int aa = 0;\n  int bb = 0;\n  int\
    \ cc = 0;\n  int dd = 0;\n  int ee = 0;\n  int ff = 0;\n  int gg = 0;\n  int hh\
    \ = 0;\n  int ii = 0;\n  int jj = 0;\n  int kk = 0;\n  int ll = 0;\n  int mm =\
    \ 0;\n  int nn = 0;\n  int oo = 0;\n  int pp = 0;\n  int qq = 0;\n  int rr = 0;\n\
    \  int ss = 0;\n  int tt = 0;\n  int uu = 0;\n  int vv = 0;\n  int ww = 0;\n \
    \ int xx = 0;\n  int yy = 0;\n  int zz = 0;\n  int aaa = 0;\n  int bbb = 0;\n\
    \  int ccc = 0;\n  int ddd = 0;\n  int eee = 0;\n  int fff = 0;\n  int ggg = 0;\n\
    \  int hhh = 0;\n  int iii = 0;\n  int jjj = 0;\n  int kkk = 0;\n  int lll = 0;\n\
    \  int mmm = 0;\n  int nnn = 0;\n  int ooo = 0;\n  int ppp = 0;\n  int qqq = 0;\n\
    \  int rrr = 0;\n  int sss = 0;\n  int ttt = 0;\n  int uuu = 0;\n  int vvv = 0;\n\
    \  int www = 0", "  double num = std::stod(value);\n  long int_num = std::lround(num);\n\
    \  return int_num;", "  // Your code here\n  double d = std::stod(value);\n  long\
    \ l = std::lround(d);\n  return l;", "    double d = std::stod(value);\n    return\
    \ std::lround(d);", "  double d = std::stod(value);\n  long l = std::lround(d);\n\
    \  return l;", "  double num = std::stod(value);\n  return std::round(num);",
  "  double d = std::stod(value);\n  return std::lround(d);", "  double num = std::stod(value);\n\
    \  if (num < 0) {\n    return (long)num - 1;\n  }\n  return (long)num + 1;", " \
    \ double num = std::stod(value);\n  double floor = std::floor(num);\n  double\
    \ ceil = std::ceil(num);\n  if (num - floor < ceil - num) {\n    return floor;\n\
    \  } else {\n    return ceil;\n  }", "  double d = std::stod(value);\n  return\
    \ (d > 0) ? std::ceil(d) : std::floor(d);", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  int i = 0;\n  int j = value.size() - 1;\n  int\
    \ num = 0;\n  int sign = 1;\n  if (value[0] == '-') {\n    sign = -1;\n    i++;\n\
    \  }\n  while (i < j) {\n    num = num * 10 + (value[i] - '0');\n    i++;\n  }\n\
    \  if (value[i] >= '5') {\n    num++;\n  }\n  return num * sign;", "    double\
    \ val = std::stod(value);\n    if(val < 0)\n        return std::ceil(val);\n \
    \   else\n        return std::floor(val);", "\tdouble num = std::stod(value);\n\
    \tdouble intpart;\n\tdouble fractpart = modf(num, &intpart);\n\tif (fractpart\
    \ >= 0.5) {\n\t\treturn intpart + 1;\n\t}\n\treturn intpart;", "  double val =\
    \ std::stod(value);\n  if (val > 0) {\n    return std::ceil(val);\n  } else {\n\
    \    return std::floor(val);\n  }", "  double d = std::stod(value);\n  return\
    \ std::lround(d);", "  double num = std::stod(value);\n  if(num - (int)num >=\
    \ 0.5)\n    return (int)num + 1;\n  else\n    return (int)num;", "  double d =\
    \ std::stod(value);\n  return std::round(d);", "  double val = std::stod(value);\n\
    \  if (val > 0) {\n    return std::ceil(val);\n  } else {\n    return std::floor(val);\n\
    \  }", "    double val = std::stod(value);\n    if(val > 0)\n        return std::ceil(val);\n\
    \    else\n        return std::floor(val);", "  double d = std::stod(value);\n\
    \  return (long)std::ceil(d);", "  int decimal = value.find(\".\");\n  if (decimal\
    \ == -1) {\n    return std::stol(value);\n  }\n  std::string integer = value.substr(0,\
    \ decimal);\n  std::string fraction = value.substr(decimal + 1);\n  if (fraction[0]\
    \ >= '5') {\n    return std::stol(integer) + 1;\n  }\n  return std::stol(integer);",
  "  // your code here\n  int i = 0;\n  int sign = 1;\n  if(value[0] == '-')\n  {\n\
    \    sign = -1;\n    i++;\n  }\n  int integer = 0;\n  while(value[i] != '.')\n\
    \  {\n    integer = integer * 10 + (value[i] - '0');\n    i++;\n  }\n  i++;\n\
    \  int decimal = 0;\n  int j = 1;\n  while(i < value.size())\n  {\n    decimal\
    \ = decimal * 10 + (value[i] - '0');\n    i++;\n    j *= 10;\n  }\n  if(decimal\
    \ * 2 >= j)\n    integer++;\n  return sign * integer;", "  double num = std::stod(value);\n\
    \  int num1 = std::floor(num);\n  int num2 = std::ceil(num);\n  if (num - num1\
    \ == 0.5) {\n    if (num > 0) {\n      return num2;\n    } else {\n      return\
    \ num1;\n    }\n  } else if (num - num1 > 0.5) {\n    return num2;\n  } else {\n\
    \    return num1;\n  }", "  // your code here\n  double num = std::stod(value);\n\
    \  if (num < 0) {\n    num = std::ceil(num);\n  } else {\n    num = std::floor(num);\n\
    \  }\n  return num;", "  double d = std::stod(value);\n  return std::round(d);",
  "  double val = std::stod(value);\n  return std::round(val);", "  double num = std::stod(value);\n\
    \  long int_num = std::lround(num);\n  return int_num;", "  double num = std::stod(value);\n\
    \  return (long)std::round(num);", "  double d = std::stod(value);\n  return std::round(d);",
  "  double d = std::stod(value);\n  return d > 0 ? std::ceil(d) : std::floor(d);",
  "  double num = std::stod(value);\n  if (num >= 0) {\n    return std::ceil(num);\n\
    \  } else {\n    return std::floor(num);\n  }", "  // your code here\n  double\
    \ d = std::stod(value);\n  if(d < 0)\n    return std::ceil(d);\n  else\n    return\
    \ std::floor(d);", "\tdouble val = std::stod(value);\n\treturn std::round(val);",
  "  // Your code here\n  double num = std::stod(value);\n  if(num >= 0){\n    return\
    \ std::ceil(num);\n  }\n  else{\n    return std::floor(num);\n  }", "  double\
    \ num = std::stod(value);\n  double floor_num = std::floor(num);\n  double ceil_num\
    \ = std::ceil(num);\n  if (num - floor_num < ceil_num - num) {\n    return floor_num;\n\
    \  } else {\n    return ceil_num;\n  }", "  double d = std::stod(value);\n  return\
    \ d > 0 ? std::ceil(d) : std::floor(d);", "    double num = std::stod(value);\n\
    \    return std::round(num);", "  double val = std::stod(value);\n  if (val <\
    \ 0) {\n    return std::ceil(val);\n  }\n  return std::floor(val);", "  double\
    \ d = std::stod(value);\n  return std::round(d);", "  double d = std::stod(value);\n\
    \  return std::round(d);", "  // your code here\n  double d = std::stod(value);\n\
    \  if (d < 0) {\n    d -= 0.5;\n  } else {\n    d += 0.5;\n  }\n  return (long)d;",
  "\tdouble num = std::stod(value);\n\tlong int num_int = std::lround(num);\n\treturn\
    \ num_int;", "  // your code here\n  std::stringstream ss(value);\n  double d;\n\
    \  ss >> d;\n  return (long) (d + 0.5);", "  double num = std::stod(value);\n\
    \  return std::round(num);", "  std::stringstream ss;\n  ss << value;\n  long\
    \ double num;\n  ss >> num;\n  long int ans = (long int)num;\n  if(num - ans >=\
    \ 0.5)\n    ans++;\n  return ans;", "  std::stringstream ss(value);\n  double\
    \ d;\n  ss >> d;\n  return std::round(d);", "\tdouble num = std::stod(value);\n\
    \tlong int_num = std::lround(num);\n\treturn int_num;", "  double val = std::stod(value);\n\
    \  return std::round(val);", "  double d = std::stod(value);\n  return std::round(d);",
  "  long int val = std::stol(value);\n  long int val1 = std::stol(value);\n  if(val1\
    \ >= 0){\n    val1++;\n  }else{\n    val1--;\n  }\n  if(val1 - val == 0.5){\n\
    \    return val1;\n  }else{\n    return val;\n  }", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  int i = 0;\n  int j = 0;\n  int k = 0;\n  int l\
    \ = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n  int p = 0;\n  int q = 0;\n\
    \  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u = 0;\n  int v = 0;\n  int w\
    \ = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n  int aa = 0;\n  int ab = 0;\n\
    \  int ac = 0;\n  int ad = 0;\n  int ae = 0;\n  int af = 0;\n  int ag = 0;\n \
    \ int ah = 0;\n  int ai = 0;\n  int aj = 0;\n  int ak = 0;\n  int al = 0;\n  int\
    \ am = 0;\n  int an = 0;\n  int ao = 0;\n  int ap = 0;\n  int aq = 0;\n  int ar\
    \ = 0;\n  int as = 0;\n  int at = 0;\n  int au = 0;\n  int av = 0;\n  int aw =\
    \ 0;\n  int ax = 0;\n  int ay = 0;\n  int az = 0;\n  int ba = 0;\n  int bb = 0;\n\
    \  int bc = 0;\n  int bd = 0;\n  int be = 0;\n  int bf = 0;\n  int bg = 0;\n \
    \ int bh = 0;\n  int bi = 0;\n  int bj = 0;\n  int bk = 0;\n  int bl = 0;\n  int\
    \ bm = 0;\n  int bn = 0;\n  int bo = 0;\n  int bp = 0;\n  int bq = 0;\n  int br\
    \ = 0;\n  int bs = 0;\n  int bt = 0;\n  int bu = 0;\n  int bv = 0;\n  int bw =\
    \ 0;\n  int bx = 0;\n  int by = 0;\n  int bz = 0", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  int len = value.length();\n  int i = 0;\n  int\
    \ sign = 1;\n  if(value[0] == '-') {\n    sign = -1;\n    i++;\n  }\n  std::string\
    \ str = \"\";\n  for(; i < len; i++) {\n    if(value[i] == '.')\n      break;\n\
    \    str += value[i];\n  }\n  i++;\n  int num = std::stoi(str);\n  int decimal\
    \ = 0;\n  for(; i < len; i++) {\n    decimal = decimal * 10 + (value[i] - '0');\n\
    \  }\n  if(decimal >= 5)\n    num++;\n  return num * sign;", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  int sign = 1;\n  if (value[0] == '-') {\n    sign\
    \ = -1;\n    value = value.substr(1);\n  }\n  int integer = std::stoi(value);\n\
    \  double decimal = std::stod(value) - integer;\n  if (decimal < 0.5) {\n    return\
    \ integer * sign;\n  } else {\n    return (integer + 1) * sign;\n  }", "\tdouble\
    \ val = std::stod(value);\n\tlong int_val = std::stol(value);\n\tif (val - int_val\
    \ >= 0.5) {\n\t\treturn int_val + 1;\n\t}\n\treturn int_val;", "  long val = std::stol(value);\n\
    \  if(val < 0) {\n    return val - 1;\n  }\n  return val + 1;", "  // your code\
    \ here\n  int i = 0;\n  int sign = 1;\n  if(value[0] == '-'){\n    sign = -1;\n\
    \    i++;\n  }\n  int len = value.length();\n  int num = 0;\n  while(i < len &&\
    \ value[i] != '.'){\n    num = num * 10 + (value[i] - '0');\n    i++;\n  }\n \
    \ if(i == len)\n    return num * sign;\n  i++;\n  int dec = 0;\n  int j = 1;\n\
    \  while(i < len){\n    dec = dec * 10 + (value[i] - '0');\n    i++;\n    j *=\
    \ 10;\n  }\n  if(dec * 2 >= j)\n    num++;\n  return num * sign;", "  double d\
    \ = std::stod(value);\n  return std::round(d);", "\t// your code here\n\tdouble\
    \ num = std::stod(value);\n\tlong int num1 = std::lround(num);\n\treturn num1;",
  "    double d = stod(value);\n    if (d < 0) {\n        return ceil(d);\n    }\n\
    \    return floor(d);", "  double num = std::stod(value);\n  return std::round(num);",
  "  double d = std::stod(value);\n  return std::lround(d);", "  double d = std::stod(value);\n\
    \  if (d < 0) {\n    d = ceil(d - 0.5);\n  } else {\n    d = floor(d + 0.5);\n\
    \  }\n  return (long)d;", "  double number = std::stod(value);\n  if (number >\
    \ 0) {\n    return std::ceil(number);\n  } else {\n    return std::floor(number);\n\
    \  }", "  int len = value.length();\n  int i = 0;\n  int sign = 1;\n  if(value[0]\
    \ == '-') {\n    sign = -1;\n    i++;\n  }\n  double num = 0;\n  while(i < len)\
    \ {\n    if(value[i] == '.') {\n      i++;\n      continue;\n    }\n    num =\
    \ num * 10 + (value[i] - '0');\n    i++;\n  }\n  if(value[len - 1] == '5') {\n\
    \    return sign * (num + 1);\n  }\n  return sign * num;", "    double d = std::stod(value);\n\
    \    return std::round(d);", "  double num = std::stod(value);\n  double floor\
    \ = std::floor(num);\n  double ceil = std::ceil(num);\n  double diff_floor = num\
    \ - floor;\n  double diff_ceil = ceil - num;\n  if (diff_floor == diff_ceil) {\n\
    \    return (long)ceil;\n  }\n  if (diff_floor < diff_ceil) {\n    return (long)floor;\n\
    \  }\n  return (long)ceil;", "  // Your code here\n  int i = 0;\n  int j = 0;\n\
    \  int k = 0;\n  int l = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n  int p\
    \ = 0;\n  int q = 0;\n  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u = 0;\n\
    \  int v = 0;\n  int w = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n  int a\
    \ = 0;\n  int b = 0;\n  int c = 0;\n  int d = 0;\n  int e = 0;\n  int f = 0;\n\
    \  int g = 0;\n  int h = 0;\n  int ii = 0;\n  int jj = 0;\n  int kk = 0;\n  int\
    \ ll = 0;\n  int mm = 0;\n  int nn = 0;\n  int oo = 0;\n  int pp = 0;\n  int qq\
    \ = 0;\n  int rr = 0;\n  int ss = 0;\n  int tt = 0;\n  int uu = 0;\n  int vv =\
    \ 0;\n  int ww = 0;\n  int xx = 0;\n  int yy = 0;\n  int zz = 0;\n  int aa = 0;\n\
    \  int bb = 0;\n  int cc = 0;\n  int dd = 0;\n  int ee = 0;\n  int ff = 0;\n \
    \ int gg = 0;\n  int hh = 0;\n  int iii = 0;\n  int jjj = 0;\n  int kkk = 0;\n\
    \  int lll = 0;\n  int mmm = 0;\n  int nnn = 0;\n  int ooo = 0;\n  int ppp = 0;\n\
    \  int qqq = 0;\n  int rrr = 0;\n  int sss = 0;\n  int ttt = 0;\n  int uuu = 0;\n\
    \  int vvv = 0;\n  int www = 0;\n  int xxx = 0", "  double num = std::stod(value);\n\
    \  if (num > 0) {\n    return std::ceil(num);\n  } else {\n    return std::floor(num);\n\
    \  }", "\tdouble num = stod(value);\n\tlong int_num = (long)num;\n\tif (num -\
    \ int_num >= 0.5) {\n\t\treturn int_num + 1;\n\t}\n\telse {\n\t\treturn int_num;\n\
    \t}", "  double val = std::stod(value);\n  return std::lround(val);", "  double\
    \ d = std::stod(value);\n  return std::round(d);", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  double d = std::stod(value);\n  if (d > 0) {\n\
    \    return std::ceil(d);\n  } else {\n    return std::floor(d);\n  }", "  int\
    \ i = 0;\n  int len = value.length();\n  int num = 0;\n  int sign = 1;\n  if(value[0]\
    \ == '-'){\n    sign = -1;\n    i = 1;\n  }\n  while(i < len){\n    if(value[i]\
    \ == '.'){\n      break;\n    }\n    num = num * 10 + (value[i] - '0');\n    i++;\n\
    \  }\n  i++;\n  int decimal = 0;\n  int j = 1;\n  while(i < len){\n    decimal\
    \ = decimal * 10 + (value[i] - '0');\n    i++;\n    j *= 10;\n  }\n  if(decimal\
    \ * 2 >= j){\n    num += 1;\n  }\n  return num * sign;", "  double d = std::stod(value);\n\
    \  return std::round(d);", "  double d = std::stod(value);\n  return std::round(d);",
  "  double d = std::stod(value);\n  return std::lround(d);", "  double d = std::stod(value);\n\
    \  if (d > 0) {\n    return std::ceil(d);\n  } else {\n    return std::floor(d);\n\
    \  }", "  double num = std::stod(value);\n  if (num < 0) {\n    num = std::ceil(num);\n\
    \  } else {\n    num = std::floor(num);\n  }\n  return num;", "  // your code\
    \ here\n  double d = std::stod(value);\n  return std::round(d);", "  double d\
    \ = std::stod(value);\n  return std::lround(d);", "  double d = std::stod(value);\n\
    \  return std::lround(d);", "  double d = std::stod(value);\n  return std::round(d);",
  "  double d = std::stod(value);\n  return std::round(d);", "  double val = std::stod(value);\n\
    \  return std::lround(val);", "  double val = stod(value);\n  if(val < 0)\n  \
    \  return ceil(val);\n  else\n    return floor(val);", "  double num = std::stod(value);\n\
    \  return std::round(num);", "  double number = std::stod(value);\n  return std::round(number);",
  "  double num = std::stod(value);\n  return std::round(num);", "  double val = std::stod(value);\n\
    \  if (val < 0) {\n    return std::ceil(val);\n  }\n  return std::floor(val);",
  "  std::stringstream ss(value);\n  double d;\n  ss >> d;\n  return std::round(d);",
  "  double val = std::stod(value);\n  long int_val = std::lround(val);\n  return\
    \ int_val;", "  // your code here\n  int i;\n  double d = std::stod(value);\n\
    \  if(d < 0)\n  {\n    d = d - 0.5;\n    i = d;\n  }\n  else\n  {\n    d = d +\
    \ 0.5;\n    i = d;\n  }\n  return i;", "  double d = std::stod(value);\n  return\
    \ std::lround(d);", "  // your code here\n  double d = std::stod(value);\n  return\
    \ (long)std::round(d);", "  // your code here\n  double d = std::stod(value);\n\
    \  if(d>0)\n    return std::ceil(d);\n  else\n    return std::floor(d);", "  //\
    \ your code here\n  double val = std::stod(value);\n  if (val < 0) {\n    return\
    \ (long)std::ceil(val);\n  }\n  return (long)std::floor(val);", "\tdouble num\
    \ = std::stod(value);\n\tlong int_num = std::stol(value);\n\tif (num - int_num\
    \ >= 0.5) {\n\t\treturn int_num + 1;\n\t}\n\telse {\n\t\treturn int_num;\n\t}",
  "  std::stringstream ss(value);\n  double d;\n  ss >> d;\n  return round(d);", " \
    \ double d = std::stod(value);\n  return (d > 0) ? std::ceil(d) : std::floor(d);",
  "  double d = std::stod(value);\n  long l = std::lround(d);\n  return l;", "  double\
    \ d = std::stod(value);\n  return std::lround(d);", "  double val = std::stod(value);\n\
    \  double floor_val = std::floor(val);\n  double ceil_val = std::ceil(val);\n\
    \  if (val - floor_val < ceil_val - val) {\n    return floor_val;\n  } else {\n\
    \    return ceil_val;\n  }"]
stop_tokens:
- "\n}"
